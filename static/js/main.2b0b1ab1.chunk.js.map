{"version":3,"sources":["solvers/edges/solveWhiteCross.js","solvers/corners/solveWhiteCorners.js","solvers/edges/solveMiddleEdges.js","solvers/edges/solveYellowCross.js","solvers/edges/alignYellowCross.js","solvers/corners/solveYellowCorners.js","solvers/corners/alignYellowCorners.js","solvers/middles/white.js","solvers/middles/yellow.js","solvers/middles/blue.js","solvers/middles/green.js","solvers/middles/orange.js","solvers/edges/solveFrontEdgeSegments.js","solvers/edges/solveBackEdgeSegments.js","solvers/edges/solveMiddleEdgeSegements.js","components/Navbar/Navbar.js","components/Speeds/Speeds.js","components/MoveInput.js","components/SolverInfo/SolverInfo.js","components/ColorPickerInfo/ColorPickerInfo.js","components/Controls.js","cubeFunctions/algorithms.js","cubeFunctions/cube.js","components/SolverUI/SolverUI.js","components/ColorPicker/ColorButton.js","components/ColorPicker/ColorPicker.js","components/MobileView/MobileView.js","components/MenuOptions/MenuOptions.js","components/MenuOptionsOther/MenuOptionsOther.js","components/View.js","components/ColorPicker/SideColorPicker.js","components/SideSolverUI/SideSolverUI.js","components/SideSolverUI/SideSolverControls.js","components/ColorPicker/SideColorPickerController.js","components/MainSideMenu/MainSideMenuButton.js","components/MainSideMenu/MainSideMenu.js","components/SideView/SideView.js","components/MenuWrapper/MenuWrapper.js","solvers/solveMiddleLogic.js","solvers/solveMiddles.js","solvers/solveEdgeLogic.js","solvers/solveEdges.js","solvers/solver.js","App.js","serviceWorker.js","index.js"],"names":["inMiddle","coord","maxCoord","minCoord","module","exports","rubiksObject","cubeDimension","moveStringToArray","edges","moveString","cube","space","solvedEdges","solveState","fourEdgeSections","splitEdges","edgeSegments","length","segmentsPerSection","temp","i","push","sectionSpliter","pieceOne","pieceTwo","pieceThree","pieceFour","includes","emptyCount","whiteSide","cubeX","cubeY","cubeZ","j","moveArray","moveSet","corners","solvedCorners","dim","moveFromMiddle212","moveFromMiddle210","moveFromMiddle010","edgeOne","edgeTwo","edgeThree","edgeFour","blueSide","greenSide","recipe","cubeIndex","cubeAtIndex","skip","counter","solveMoves","solveAlgo","obj","moveLog","currentFunc","solveCount","move","depth","side","current","solved","index","currentSide","row","Math","floor","column","x","y","z","middle","isOddCube","console","log","checkSide","max","moves","min","join","oddCube","extractFromFront","moveFromMiddleToBack","flipPieceOnBack","solveFromBackToFront","yellowSide","displace","solve","replace","flip","cubeSize","centerEdge","firstEdge","secondEdge","thirdEdge","flipFirstCenterEdge","flipSecondCenterEdge","flipThirdCenterEdge","swapLastTwoCenterEdges","flipLastCenterEdge","solveUp","solveDown","solveUp2","solveDown2","solveUp3","solveDown3","Navbar","props","navCubes","Dropdown","Item","key","href","className","style","color","title","DropdownButton","aria-label","id","onClick","changeSettings","state","showMoveInput","type","checked","data-toggle","showHints","float","height","trigger","close","zIndex","width","backgroundColor","margin","transform","fontSize","marginBottom","marginTop","textAlign","paddingTop","paddingBottom","target","value","position","top","left","Speeds","isDisabled","defaultValue","speed","step","onChange","onSliderChange","MoveInput","handle","defaultPosition","grid","scale","onStart","handleStart","onDrag","handleDrag","onStop","handleStop","placeholder","onKeyDown","e","algorithm","document","getElementById","stopPropagation","borderRadius","border","SolverInfo","window","innerWidth","innerHeight","solvedSetLength","prevSetLength","ColorPickerInfo","colorPicked","centerButtons","singleButtons","multiButtons","singleCols","multiCols","namesToColors","face","bgc","Controls","size","marginRight","generatedButtons","center","forEach","element","onMouseDown","rotateOneFace","clockwise","name","data","onMouseEnter","mouseEnter","onMouseLeave","mouseLeave","single","colors","lengthBtns","lengthBtns1","multi","algorithms","worksFor","generateSolved","_x","_y","_z","half","tempArr","middles","tempMiddles","tempEdges","k","side0","side1","side2","side3","side4","side5","edgeType","middleType","tempCount","tempType","generateBlank","generateButtonData","numLayers","centerLayer","ceil","faces","buttons","baseNameSingle","baseNameMulti","toLowerCase","generateMoveHints","image","cD","groups","geometry","THREE","material","map","transparent","opacity","tempGroup","tempGroupOther","tempPlane","tempPlaneOther","translateX","translateZ","translateY","rotateZ","PI","rotateX","add","visible","rotateY","rotatePoint","c1","c2","direction","p1","p2","rotation","theta","cos","sin","rotatePieces","rotate","tempCubes","setState","centerPoint","cubes","turnDirection","start","cubeDepth","isMulti","newPoint","round","reload","rotatePoint2","rotateFace","cubeFace","object","degrees","tempFace","SolverUI","nextProps","autoRewind","solvedSetIndex","targetSolveIndex","rewindOne","autoPlay","playOne","querySelector","this","autoScroll","scrollIntoView","solverSet","prevSet","defaultMessage","jumperButtons","preSetTarget","setTarget","solvedSet","el","marginLeft","algorithmSet","algo","activeAlgo","algoStart","previousMove","nextMove","pauseSolver","parseInt","autoTarget","prevSetNew","slice","moveSetNew","forwardMoves","autoJump","backwardMoves","reverse","algoSet","generated","set","split","solveable","optionClick","display","activeMenu","hoverData","isValidConfig","currentFunct","Row","Col","mobile","paddingLeft","paddingRight","maxWidth","stopSolve","classList","remove","leave","Component","React","memo","ColorPicker","capitalized","charAt","toUpperCase","unselected","nativeEvent","stopImmediatePropagation","changeColor","isMobile","li","cpErrors","error","listStyle","lineHeight","overflowX","overflowY","setColorPickedCube","padding","endColorPicker","beginSolve","ColorButton","Mobile","nextState","solveTime","otherOptionClick","beginScramble","beginColorPicker","solveOnce","xs","filter","baseOptions","View","pointerEvents","bottom","minWidth","SideColorPicker","find","SideSolverControls","SideColorPickerController","MainSideMenuButton","MainSideMenu","algs","SideView","activeMenuBottom","activeMenuExit","solverLeaveButton","algoLeaveButton","cpLeaveButton","confirmLeavePopup","confirmLeavePopupCp","Menu","solveMiddleLogic","cubeDimensions","rubiksObjectAtIndex","faceColor","whiteSolver","yellowSolver","blueSolver","orangeSolver","greenSolver","solveMiddles","numberOfMiddles","trim","rubiksIndex","indexOf","solveEdgeLogic","edgeLength","section","frontEdges","backEdges","middleEdges","solveEdges","CONSTANTS","solver","solveWhiteCross","solveWhiteCorners","solveMiddleEdges","solveYellowCross","alignYellowCross","alignYellowCorners","solveYellowCorners","App","blackObject","rotationSpeed","end","cameraX","cameraY","cameraZ","angle","currentSpeed","facePosX","facePosY","facePosZ","faceSide","mouseFace","mouseDown","mousePos","undoIndex","blockMoveLog","previousPiece","showControls","showGuideArrows","activeDragsInput","deltaPositionInput","controlledPositionInput","activeDragsControls","deltaPositionControls","controlledPositionControls","isVisible","showSolveController","generateAllMoves","isLocal","sliderSpeed","keyBinds","rewindSolve","undo","redo","keyHandling","changeSpeed","_speed","_rotationSpeed","_name","bypass","changeFaceColor","pos","tempObj","tempCube","reloadTurnedPieces","checkColors","success","rubiks","newGenerated","otherChecked","pieceIndex","piece","rubik","validPiece","sort","validEdgePlacement","validMiddlePlacement","checkValidMatch","checkValidMatchMiddle","checkOccurences","a1","a2","failedColors","count","amount","invalidMiddleConfig","invalidEdgeConfig","rubiksLength","whiteCount","blueCount","redCount","yellowCount","orangeCount","greenCount","duplicateFace","duplicateColors","matchedCount","validAmount","res","tempColors","tempInvalidMatch","invalidAmounts","solveData","generateAllSolveMoves","tempObject","undefined","backwardsMove","substring","err","vals","rotateCubeFace","tempMove","moveName","checkMoveEquivalence","reset","generateMove","maxDepth","randFace","random","randTurn","randIsMulti","randDepth","convertDataToMove","toString","concat","blank","newMoveSet","tempMoveSet","tempPrev","lastEl","popped","pop","rewindAllSolve","lastElArray","poppedArray","handleDragInput","ui","deltaX","deltaY","onStartInput","onStopInput","handleDragControls","onStartControls","onStopControls","convertMoveToData","mouseOver","str","tempArray","parseMoveArray","shifted","shift","tempDirection","tempDepth","tempIsMulti","menuSetState","tempState","moveData","beforeObject","currentIndex","previousIndex","indexOccurence","splitSet","splice","dataMove","moveSetLength","windowResized","resized","event","_piece","blue","red","yellow","manualPiece","newValidPiece","convertToBlueWhiteEdge","newManualPiece","alignQuadrant","convertToBlueMiddle","dragMove","invertMove","_move","inverted","settingToChange","newVals","removeEventListener","checkLocal","parts","location","checkID","substr","previous","pieceFace","calculated","turn","dif","calculateTurnAtFace","coord1","compare1","coord2","compare2","piece1","piece2","dir1","dir2","abs","menu","innerHTML","getSizeFromUrl","previousPieceIndex","ignoreChange","scene","camera","renderer","antialias","alpha","raycaster","mouse","cubeGeometry","loader","load","moveHintImage","tanFOV","tan","fov","windowHeight","calculateTurn","algorithmFunc","ontouchend","controls","enabled","addEventListener","clientX","clientY","setFromCamera","intersects","intersectObjects","children","point","tempPos","intersected","faceIndex","bind","saveState","faceInteresected","tempIndex","touches","aspect","atan","updateProjectionMatrix","lookAt","setSize","render","setClearColor","domElement","body","appendChild","anisotropy","capabilities","getMaxAnisotropy","cubeMaterials","OrbitControls","enableDamping","dampingFactor","enableZoom","autoRotate","minDistance","maxDistance","enablePan","keys","LEFT","UP","RIGHT","BOTTOM","group","animate","requestAnimationFrame","hFace","hDir","hDepth","hMulti","tempVal","tempRubiks","a","performance","now","b","toFixed","update","background","backgroundRepeat","disableHover","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","routing","path","component","ReactDOM","URL","process","origin","fetch","response","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b0b1ab1.chunk.js","sourcesContent":["function inMiddle(coord,maxCoord,minCoord){\n  return coord>minCoord&&coord<maxCoord;\n}\n\nfunction sectionSpliter(edges){\n  let splitEdges = [];\n  let edgeSegments = edges.length/3;\n  const edgeSections = 4;\n  let segmentsPerSection = edgeSegments/edgeSections;\n\n  let temp = [];\n  for(let i = 0; i < edgeSegments;i++){\n    temp.push(edges[i]);\n    if(temp.length===segmentsPerSection){\n      splitEdges.push(temp);\n      temp=[];\n    }\n  }\n\n  return splitEdges;\n}\n\nfunction solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray,edges){\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let space = \"\";\n    let solvedEdges = 0;\n\n    let dim = cubeDimension;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n\n    if(dim === 2) {return {solveState : 2};}\n\n    let fourEdgeSections = sectionSpliter(edges);\n\n    let pieceOne = fourEdgeSections[0][0];\n    let pieceTwo = fourEdgeSections[3][0];\n    let pieceThree = fourEdgeSections[1][0];\n    let pieceFour = fourEdgeSections[2][0];\n\n    for(let i = 0; i < cube.length; i++){\n      if(moveString.length) space = \" \";\n      if(cube[i].includes(\"white\")){\n\n        let emptyCount = 0;\n        let whiteSide = -1;\n        let cubeX = cube[i][6];\n        let cubeY = cube[i][7];\n        let cubeZ = cube[i][8];\n        \n\n        for(let j = 0; j < 6; j++){\n          if (cube[i][j] === \"black\") emptyCount++;\n          else {\n            if(cube[i][j] === \"white\") whiteSide = j;\n          }\n        }\n\n        // If edge piece\n        if(emptyCount === 4) {\n          if(i===pieceOne && solvedEdges === 0 ){\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===maxCoord)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01U' 01R' 01F'\";\n            \n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? moveString+= space + \"01F'\" : moveString+= space + \"01R 01U\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? moveString+= space + \"01F2\" : moveString+= space + \"01D 01R 01F'\";\n\n            else if(cubeX===minCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? moveString+= space + \"01F\" : moveString+= space + \"01L' 01U'\";\n\n            //If piece one is in y section 1\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01L 01F\" : moveString+= space + \"01U'\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01R' 01F'\" : moveString+= space + \"01U\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01D' 01F2\" : moveString+= space + \"01R 01F'\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01D 01F2\" : moveString+= space + \"01L' 01F\";\n            \n\n            //If piece one is in y section 2\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01U2\" : moveString+= space + \"01B 01L 01U'\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01R2 01F'\" : moveString+= space + \"01R' 01U\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01B2 01U2\" : moveString+= space + \"01B' 01L 01U'\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01B' 01U2\" : moveString+= space + \"01L 01U'\";\n            \n          }\n          if(i===pieceTwo && solvedEdges === 1){\n            \n            if(cubeX===minCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01L' 01R 01U' 01R'\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? moveString+= space + \"01D' 01F' 01D 01F\" : moveString+= space + \"01D' 01L'\";\n            \n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? moveString+= space + \"01R 01F2 01R' 01F2\" : moveString+= space + \"01R 01F 01U 01F'\";\n            \n\n            //If piece two is in y section 1\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01L\" : moveString+= space + \"01F 01U' 01F'\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F2 01R' 01F2\" : moveString+= space + \"01U 01F' 01U'\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01F' 01D' 01F\" : moveString+= space + \"01F2 01R 01F2\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01F' 01D 01F\" : moveString+= space + \"01L'\";\n            \n\n            //If piece two is in y section 2\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01F 01U2 01F'\" : moveString+= space + \"01U' 01L 01U\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01B2 01L2\" : moveString+= space + \"01R' 01F 01U 01F'\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01F' 01D2 01F\" : moveString+= space + \"01D 01L'\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01L2\" : moveString+= space + \"01B' 01U' 01L 01U\";\n            \n          }\n          if(i===pieceThree && solvedEdges === 2){\n  \n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? moveString+= space + \"01D 01F 01D' 01F'\" : moveString+= space + \"01D 01R\";\n            \n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01R 01F' 01U 01F\";\n            \n            \n            //If piece three is in y section 1\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F2 01L 01F2\" : moveString+= space + \"01F' 01U' 01F\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01R'\" : moveString+= space + \"01F' 01U 01F\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01F 01D' 01F'\" : moveString+= space + \"01R\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01F 01D 01F'\" : moveString+= space + \"01F2 01L' 01F2\";\n            \n\n            //If piece three is in y section 2\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01F' 01U2 01F\" : moveString+= space + \"01U 01R' 01U'\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01R2\" : moveString+= space + \"01R' 01F' 01U 01F\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01F 01D2 01F'\" : moveString+= space + \"01D' 01L\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01B2 01R2\" : moveString+= space + \"01B' 01U 01R' 01U'\";\n            \n          }\n          if(i===pieceFour && solvedEdges === 3){\n  \n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01D 01F' 01R 01F\";\n            \n            //If piece four is in y section 1\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F 01L 01F'\" : moveString+= space + \"01F2 01U' 01F2\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F' 01R' 01F\" : moveString+= space + \"01F2 01U 01F2\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01D'\" : moveString+= space + \"01F' 01R 01F\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01D\" : moveString+= space + \"01F 01L' 01F'\";\n            \n\n            //If piece four is in y section 2\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01F2 01U2 01F2\" : moveString+= space + \"01B 01L' 01D 01L\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01F' 01R2 01F\" : moveString+= space + \"01R 01D' 01R'\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01D2\" : moveString+= space + \"01D' 01F' 01R 01F\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01F 01L2 01F'\" : moveString+= space + \"01L' 01D 01L\";\n            \n          }\n        }\n      }\n    }\n    \n    const moveArray = moveStringToArray(moveString);\n\n    if(solvedEdges < 4){\n        return {moveSet : moveArray};\n    } else{\n        return {solveState : 2}\n    }\n}\n\nmodule.exports = solveWhiteCross;","  // Solves white (front) corners\n  function solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray,corners){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let solvedCorners = 0;\n\n    let dim = cubeDimension;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let pieceOne = corners[0]\n    let pieceTwo = corners[1]\n    let pieceThree = corners[2]\n    let pieceFour = corners[3]\n\n    for(let i = 0; i < cube.length; i++){\n      let whiteSide = -1;\n      let cubeX = cube[i][6];\n      let cubeY = cube[i][7];\n      let cubeZ = cube[i][8];\n\n      for(let j = 0; j < 6; j++){\n        if(cube[i][j] === \"white\") whiteSide = j;\n      }\n\n      if(i===pieceOne && solvedCorners === 0 ){\n        //Front\n        if(cubeX===minCoord && cubeY===minCoord && cubeZ===maxCoord){\n          if(whiteSide===0){solvedCorners++}\n          else if(whiteSide===1) moveString=\"01L' 01B 01L 01B' 01L' 01B 01L\";\n          else moveString=\"01L' 01B' 01L 01B2 01U 01B' 01U'\";\n        }\n        else if(cubeX===maxCoord && cubeY===minCoord && cubeZ===maxCoord) moveString=\"01R 01L' 01B 01L 01R'\"\n        else if(cubeX===maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01R' 01B' 01R 01U 01B' 01U'\";\n        else if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01D' 01U 01B 01U' 01D\"\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01U 01B 01U'\"\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01L' 01B 01L\"\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01L' 01B2 01L\"\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01U 01B' 01U'\"\n      }\n\n      if(i===pieceTwo && solvedCorners === 1 ){\n        if(cubeX===maxCoord && cubeY===minCoord && cubeZ===maxCoord){\n          if(whiteSide === 0){solvedCorners++}\n          else if(whiteSide===1) moveString =\"01R 01B' 01R' 01B 01R 01B' 01R'\";\n          else moveString =\"01U' 01B 01U 01B' 01U' 01B 01U\";\n        }\n        else if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01U' 01D 01B 01D' 01U\";\n        else if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01L 01R 01B2 01R' 01L'\";\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01R 01B' 01R'\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01B 01R 01B' 01R'\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01B2 01R 01B' 01R'\";\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01R 01B2 01R'\";\n      }\n      \n      if(i===pieceThree && solvedCorners === 2 ){\n        if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord){\n          if(whiteSide === 0){solvedCorners++}\n          else if(whiteSide === 4) moveString =\"01D' 01B 01D 01B' 01D' 01B 01D\";\n          else moveString =\"01L 01B' 01L' 01B 01L 01B' 01L'\";\n        }\n        else if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01R' 01L 01B' 01L' 01R\";\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01D' 01B 01D\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01D' 01B2 01D\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01B' 01D' 01B' 01D\";\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01D' 01B' 01D\";\n      }\n      if(i===pieceFour && solvedCorners === 3 ){ \n        if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord){\n          if(whiteSide === 0){solvedCorners++}\n          else if(whiteSide === 2) moveString =\"01D 01B' 01D' 01B 01D 01B' 01D'\";\n          else moveString =\"01R' 01B 01R 01B' 01R' 01B 01R\";\n        }\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) {moveString=\" 01R' 01B2 01R\";}\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) {moveString=\"01D 01B' 01D'\";}\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) {moveString=\"01B 01D 01B' 01D'\";}\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) {moveString=\"01R' 01B 01R\";}\n      }\n\n\n    }\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(solvedCorners < 4){\n        return {moveSet : moveArray};\n    }\n    else{\n      if(dim === 2){\n        return {solveState : 6};\n      }\n      else{\n        return {solveState : 3};\n      }\n    }\n  }\n\n  module.exports = solveWhiteCorners;","function inMiddle(coord,maxCoord,minCoord){\n  return coord>minCoord&&coord<maxCoord;\n}\n\nfunction sectionSpliter(edges){\n  let splitEdges = [];\n  let edgeSegments = edges.length/3;\n  const edgeSections = 4;\n  let segmentsPerSection = edgeSegments/edgeSections;\n\n  let temp = [];\n  for(let i = edgeSegments*2; i < edgeSegments*3;i++){\n    temp.push(edges[i]);\n    if(temp.length===segmentsPerSection){\n      splitEdges.push(temp);\n      temp=[];\n    }\n  }\n\n  return splitEdges;\n}\n\nfunction solveMiddleEdges(rubiksObject,moveStringToArray,edges,dim){\n  let moveString = \"\";\n  let cube = rubiksObject;\n  let space = \"\";\n  let solvedEdges = 0;\n  let moveFromMiddle012 = \"01B 01U 01B' 01U' 01B' 01L' 01B 01L\";\n  let moveFromMiddle212 = \"01B 01R 01B' 01R' 01B' 01U' 01B 01U\";\n  let moveFromMiddle210 = \"01B 01D 01B' 01D' 01B' 01R' 01B 01R\";\n  let moveFromMiddle010 = \"01B 01L 01B' 01L' 01B' 01D' 01B 01D\";\n\n  let minCoord = 0;\n  let maxCoord = dim-1;\n\n  let fourEdgeSections = sectionSpliter(edges);\n\n  let edgeOne = fourEdgeSections[0][0];\n  let edgeTwo = fourEdgeSections[1][0];\n  let edgeThree = fourEdgeSections[3][0];\n  let edgeFour = fourEdgeSections[2][0];\n\n\n  // console.log(\"\\n\\n\",fourEdgeSections);\n  for(let i = 0; i < cube.length; i++){\n    if(moveString.length) space = \" \";\n    //if(cube[i].includes(\"green\") || cube[i].includes(\"blue\")){\n      //let emptyCount = 0;\n      let blueSide = -1;\n      let greenSide = -1;\n      let cubeX = cube[i][6];\n      let cubeY = cube[i][7];\n      let cubeZ = cube[i][8];\n\n      for(let j = 0; j < 6; j++){\n        if (cube[i][j] === \"black\");\n        else {\n          if(cube[i][j] === \"blue\") blueSide = j;\n          else if(cube[i][j] === \"green\") greenSide = j;\n        }\n      }\n\n      // //if(emptyCount === 4){\n      //   console.log(\"Cube:\",cube[i]);\n      //   console.log(\"i:\",i);\n      //   console.log(\"Solved Edges:\",solvedEdges);\n        if(i===edgeOne && solvedEdges === 0){\n          //Front\n          if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord)\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle012;\n          \n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord) moveString+= space + moveFromMiddle212;\n          else if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle010;\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) {\n            blueSide === 3 ? moveString+= space + moveFromMiddle012 : moveString+= space + \"01B2 01L' 01B' 01L 01B 01U 01B 01U'\";\n          }\n          else if(inMiddle(cubeX,maxCoord,minCoord)&& cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B\";\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B2\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B'\";\n        }\n        if(i===edgeTwo && solvedEdges === 1){\n          //Front\n          if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord){\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle212;\n          }\n          else if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle010;\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) {\n            blueSide === 1 ? moveString+= space + moveFromMiddle212 : moveString+= space + \"01B2 01U' 01B' 01U 01B 01R 01B 01R'\";\n          }\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B2\";\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B'\";\n        }\n        if(i===edgeThree && solvedEdges === 2){\n          //Front\n          if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord){\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle010;\n          }\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord){\n            greenSide === 5 ? moveString+= space + moveFromMiddle010 : moveString+= space + \"01B2 01D' 01B' 01D 01B 01L 01B 01L'\";\n          }\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B2\";\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B'\";\n        }\n        if(i===edgeFour && solvedEdges === 3){\n          //Front\n          if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord){\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle210;\n          }\n          //Back\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)){\n            greenSide === 3 ? moveString+= space + moveFromMiddle210 : moveString+= space + \"01B2 01R' 01B' 01R 01B 01D 01B 01D'\";\n          }\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B\";\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B2\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B'\"; \n        }\n      //}\n    //}\n  }\n\n  const moveArray = moveStringToArray(moveString);\n\n  if(solvedEdges < 4 ) return {moveSet : moveArray};\n  else return {solveState : 4};\n}\n\nmodule.exports = solveMiddleEdges;","function sectionSpliter(edges){\n  let splitEdges = [];\n  let edgeSegments = edges.length/3;\n  const edgeSections = 4;\n  let segmentsPerSection = edgeSegments/edgeSections;\n\n  let temp = [];\n  for(let i = edgeSegments; i < edgeSegments*2;i++){\n    temp.push(edges[i]);\n    if(temp.length===segmentsPerSection){\n      splitEdges.push(temp);\n      temp=[];\n    }\n  }\n\n  return splitEdges;\n}\n\nfunction inMiddle(coord,maxCoord,minCoord){\n  return coord>minCoord&&coord<maxCoord;\n}\n\nfunction solveYellowCross(rubiksObject,moveStringToArray,edges,dim){\n\n    if(dim === 2) {return {solveState : 5};}\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let recipe = \"01U 01R 01B 01R' 01B' 01U'\";\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let fourEdgeSections = sectionSpliter(edges);\n    //console.log(edges);\n    let cubeIndex = [fourEdgeSections[0][0],fourEdgeSections[3][0],fourEdgeSections[1][0],fourEdgeSections[2][0]];\n    //console.log(cubeIndex);\n    let cubeAtIndex = [];\n\n    for(let i = 0; i < 4; i++){\n      if(inMiddle(cube[cubeIndex[i]][6],maxCoord,minCoord) && \n         cube[cubeIndex[i]][7] === maxCoord &&\n         cube[cubeIndex[i]][8] === maxCoord) cubeAtIndex[0] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === minCoord && \n        cube[cubeIndex[i]][7] === maxCoord &&\n        inMiddle(cube[cubeIndex[i]][8],maxCoord,minCoord)) cubeAtIndex[1] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === maxCoord && \n        cube[cubeIndex[i]][7] === maxCoord &&\n        inMiddle(cube[cubeIndex[i]][8],maxCoord,minCoord)) cubeAtIndex[2] = cube[cubeIndex[i]][3];\n      else if (inMiddle(cube[cubeIndex[i]][6],maxCoord,minCoord) && \n        cube[cubeIndex[i]][7] === maxCoord &&\n        cube[cubeIndex[i]][8] === minCoord) cubeAtIndex[3] = cube[cubeIndex[i]][3];\n    }\n\n    let skip = false;\n\n    if(dim===4){\n      let counter = 0;\n      for(let i = 0; i < 4; i++){\n        if(cube[cubeIndex[i]][3] === \"yellow\") counter++;\n      }\n      if(counter%2){\n        //console.log(\"fix implemented\");\n        skip=true;\n        moveString=\"02r 01B2 02r' 01B2 02r 01B2 02r 01B2 02l' 01B2 02r 01B2 02r' 01B2 01D2 02r2 01D2 04r'\";\n      };\n    }\n\n    if(!skip){\n      if(cube[cubeIndex[0]][3] === \"yellow\" &&\n        cube[cubeIndex[1]][3] === \"yellow\" &&\n        cube[cubeIndex[2]][3] === \"yellow\" &&\n        cube[cubeIndex[3]][3] === \"yellow\" \n        ); \n\n      //Line\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = \"01B \" + recipe; }\n      else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = recipe;}\n\n      //L-Shape\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = \"01B2 \" + recipe + \" \" + recipe;}\n      else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = recipe + \" \" + recipe;}\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[1] === \"yellow\" ) {moveString = \"01B \" + recipe + \" \" + recipe;}\n      else if (cubeAtIndex[2] === \"yellow\" && cubeAtIndex[3] ) {moveString = \"01B' \" + recipe + \" \" + recipe;}\n\n      else {moveString = recipe;}\n    }\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray}; \n    else return {solveState:5};\n  }\n\n  module.exports = solveYellowCross;","function sectionSpliter(edges){\n    let splitEdges = [];\n    let edgeSegments = edges.length/3;\n    const edgeSections = 4;\n    let segmentsPerSection = edgeSegments/edgeSections;\n  \n    let temp = [];\n    for(let i = edgeSegments; i < edgeSegments*2;i++){\n      temp.push(edges[i]);\n      if(temp.length===segmentsPerSection){\n        splitEdges.push(temp);\n        temp=[];\n      }\n    }\n  \n    return splitEdges;\n}\n\nfunction inMiddle(coord,maxCoord,minCoord){\n    return coord>minCoord&&coord<maxCoord;\n}\n\nfunction alignYellowCross(rubiksObject,moveStringToArray,edges,dim){\n\n    if(dim === 2) {return {solveState : 6};}\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let fourEdgeSections = sectionSpliter(edges);\n    let cubeIndex = [fourEdgeSections[0][0],fourEdgeSections[3][0],fourEdgeSections[1][0],fourEdgeSections[2][0]];\n\n    if(inMiddle(cube[cubeIndex[0]][6],maxCoord,minCoord) && cube[cubeIndex[0]][7] === maxCoord && cube[cubeIndex[0]][8] === maxCoord){\n        //Check if other pieces are in place\n        if(cube[cubeIndex[1]][6] === minCoord && inMiddle(cube[cubeIndex[1]][8],maxCoord,minCoord)&&\n            cube[cubeIndex[2]][6] === maxCoord && inMiddle(cube[cubeIndex[2]][8],maxCoord,minCoord));\n\n        else if(cube[cubeIndex[1]][6] === maxCoord && inMiddle(cube[cubeIndex[2]][8],maxCoord,minCoord) &&\n        inMiddle(cube[cubeIndex[3]][6],maxCoord,minCoord) && cube[cubeIndex[3]][8] === minCoord) moveString = \"01D 01B 01D' 01B 01D 01B2 01D' 01B2 01L 01B 01L' 01B 01L 01B2 01L' 01B\";\n\n        else if(cube[cubeIndex[3]][6] === maxCoord && inMiddle(cube[cubeIndex[3]][8],maxCoord,minCoord)) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\n\n        else if(cube[cubeIndex[3]][6] === minCoord && inMiddle(cube[cubeIndex[3]][8],maxCoord,minCoord)) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\n\n\n        //Make moves\n    }\n    else if(cube[cubeIndex[0]][6] === maxCoord && cube[cubeIndex[0]][7] === maxCoord && inMiddle(cube[cubeIndex[0]][8],maxCoord,minCoord)){\n        moveString = \"01B\";\n    }\n    else moveString = \"01B'\"\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray};\n    else return{solveState:6};\n}\n\nmodule.exports = alignYellowCross;","function solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves,corners){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let solveAlgo = \"01U' 01F' 01U 01F 01U' 01F' 01U 01F\";\n    let dim = cubeDimension;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let pieceOne = corners[4];\n    let pieceTwo = corners[5];\n    let pieceThree = corners[6];\n    let pieceFour = corners[7];\n\n    let moveArray;\n\n    if(cube[pieceOne][3] === \"yellow\" &&\n       cube[pieceTwo][3] === \"yellow\" &&\n       cube[pieceThree][3] === \"yellow\" &&\n       cube[pieceFour][3] === \"yellow\"){\n      if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord);\n      else moveString = \"01B\";\n    }\n\n    else if(cube[pieceOne][3]!== \"yellow\"){\n      //console.log(cube[pieceOne]);\n      moveString = solveAlgo;\n    }\n\n    else if(cube[pieceTwo][3]!== \"yellow\"){\n      if(cube[pieceTwo][6] === minCoord && cube[pieceTwo][8] === maxCoord) {\n        //console.log(cube[pieceTwo]);\n        moveString = solveAlgo;\n      }\n      else {\n        moveString = \"01B\";\n      }\n    }\n    else if(cube[pieceFour][3]!== \"yellow\"){\n      if(cube[pieceFour][6] === minCoord && cube[pieceFour][8] === maxCoord) {\n        //console.log(cube[pieceFour]);\n        moveString = solveAlgo;\n      }\n      else{\n        moveString = \"01B\";\n      }\n    }\n    else if(cube[pieceThree][3]!== \"yellow\"){\n      if(cube[pieceThree][6] === minCoord && cube[pieceThree][8] === maxCoord) {\n        //console.log(cube[pieceThree]);\n        moveString = solveAlgo;\n      }\n      else {\n        moveString = \"01B\";\n      }\n    }\n\n    moveArray = moveStringToArray(moveString);\n\n    if(moveString.length){\n      return {moveSet:moveArray};\n    }\n    else{\n      //check for anomoly\n      if(dim === 2) {\n\n        if(cube[pieceOne][6]===minCoord && cube[pieceOne][8]===maxCoord) {\n          if(cube[pieceTwo][6]===maxCoord && cube[pieceTwo][8]===maxCoord){\n            if(cube[pieceThree][6]===minCoord && cube[pieceThree][8]===minCoord){\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n              if(solveMoves.length){\n                obj.solveMoves = \"\";\n                return obj;\n              }\n              return obj;\n            }\n            else {\n              moveString = \"01R 01D' 01R' 01F' 01R' 01F 01D\";\n              moveArray = moveStringToArray(moveString);\n              return {moveSet:moveArray};\n            }\n          }\n        }\n        else {\n          moveString = \"01B\";\n          moveArray = moveStringToArray(moveString);\n          return {moveSet:moveArray};\n        }\n      }\n      else if(dim>3){\n        if(cube[pieceOne][6]===minCoord && cube[pieceOne][8]===maxCoord) {\n          if(cube[pieceTwo][6]===maxCoord && cube[pieceTwo][8]===maxCoord){\n            if(cube[pieceThree][6]===minCoord && cube[pieceThree][8]===minCoord){\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n              if(solveMoves.length){\n                obj.solveMoves = \"\";\n                return obj;\n              }\n              return obj;\n            }\n            else {\n              moveString = \"02R2 01B2 02R2 01B2 02B2 02R2 02B2\";\n              moveArray = moveStringToArray(moveString);\n              return {moveSet:moveArray,solveState:4};\n            }\n          }\n        }\n      }\n      else {\n        let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n        if(solveMoves.length){\n          obj.solveMoves = \"\";\n          return obj;\n        }\n        \n        return obj;\n      }\n    }\n  }\n  module.exports = solveYellowCorners;\n","function alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray,corners){\n    let moveString = \"\";\n    let cube = rubiksObject;\n\n    let dim = cubeDimension;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let pieceOne = corners[4];\n    let pieceTwo = corners[5];\n    let pieceThree = corners[6];\n    let pieceFour = corners[7];\n\n    let solveCount = 0;\n\n    \n    if(cube[pieceOne][6]===cube[pieceOne][9] && cube[pieceOne][7]===cube[pieceOne][10] && cube[pieceOne][8]===cube[pieceOne][11]) solveCount++;\n    if(cube[pieceTwo][6]===cube[pieceTwo][9] && cube[pieceTwo][7]===cube[pieceTwo][10] && cube[pieceTwo][8]===cube[pieceTwo][11]) solveCount++;\n    if(cube[pieceThree][6]===cube[pieceThree][9] && cube[pieceThree][7]===cube[pieceThree][10] && cube[pieceThree][8]===cube[pieceThree][11]) solveCount++;\n    if(cube[pieceFour][6]===cube[pieceFour][9] && cube[pieceFour][7]===cube[pieceFour][10] && cube[pieceFour][8]===cube[pieceFour][11]) solveCount++;\n    \n\n    if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord &&\n       cube[pieceTwo][6] === maxCoord && cube[pieceTwo][8] === maxCoord);\n\n   else if(solveCount === 2 && dim > 3) {\n      //console.log(\"another parity encountered brother\");\n      moveString = \"02D2 01B2 02D2 02b2 02D2 02b2\";\n      const moveArray = moveStringToArray(moveString);\n      if(moveString.length) return {moveSet : moveArray,solveState:5};\n   }\n\n    else if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord) moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\n    else if(cube[pieceTwo][6] === maxCoord && cube[pieceTwo][8] === maxCoord) moveString = \"01B 01R 01B' 01L' 01B 01R' 01B' 01L\";\n    else if(cube[pieceThree][6] === minCoord && cube[pieceThree][8] === minCoord) moveString = \"01B 01L 01B' 01R' 01B 01L' 01B' 01R\";\n    else if(cube[pieceFour][6] === maxCoord && cube[pieceFour][8] === minCoord) moveString = \"01B 01D 01B' 01U' 01B 01D' 01B' 01U\";\n\n    else moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray};\n    else return {solveState:7};\n  }\n\n  module.exports = alignYellowCorners;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      white.js\n *      Started: Friday, December 13, 2019\n *      Finished: Saturday, December 14, 2019\n *      Note: Redo this function so it works similarly to other solvers (no row or columns)\n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveWhiteMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let row = Math.floor(index/(dim-2));\n    let column = index%(dim-2);\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    // console.log(`Currently on side: ${currentSide}`);\n    // console.log(`Current position: ${JSON.stringify(current)}`);\n    // console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n    if(solved.x===1){\n        if(dim-solved.z === 2){\n            if(currentSide===\"F\"){\n                moveString=\"01F\";\n            }\n            else if(currentSide!==\"D\"&&currentSide!==\"U\"){\n                if(current.z!==dim-2){\n                    moveString= \"01\" + currentSide;\n                }\n                else{\n                    moveString= move(\"\",dim-current.z,\"U\");\n                }\n            }\n            else {\n                if(current.x!==solved.x){\n                    moveString = \"01\" + currentSide;\n                }\n                else{\n                    moveString = \"02L\";\n                }\n            }\n        }\n        else{\n            if(currentSide===\"F\"){\n                moveString = move(\"\",current.z+1,\"D'\");\n            }\n            else if(currentSide===\"B\"){\n                if(current.z<=solved.z){\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n                else moveString = \"01B\";\n            }\n            else if(currentSide===\"L\"){\n                if(current.y!==dim-2){\n                    moveString= \"01L\";\n                }\n                else if(current.z!==solved.z){\n                    moveString= \"01L\";\n                }\n                else {\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n            }\n            else moveString = move(\"\",current.y+1,\"F'\");\n        }\n    }\n    else{\n        if(row===0){\n            if(currentSide===\"F\"){\n                if(current.z < solved.z && current.x >=solved.x){\n                    moveString = move(\"\",dim-current.x,\"R\");\n                }\n                else{\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n            }\n            else if(currentSide===\"B\"){\n                if(current.x === solved.x && current.z!== solved.z){\n                    moveString = move(\"\",column+2,\"L2\");\n                }\n                else {\n                    moveString = \"01B\"\n                };\n            }\n            else{\n                if(current.y===dim-2){\n                    if(current.z !== dim-1){\n                        moveString = move(\"\",row+2,\"B\")\n                    }\n                    else{\n                        if(current.x !== solved.x){\n                            moveString = \"01U\";\n                        }\n                        else {\n                            moveString = move(\"\",column+2,\"L\");\n                        };\n                    }\n                }\n                else{\n                    moveString = \"01\" + currentSide;\n                }\n            }\n        }\n        else{\n            if(currentSide===\"F\"){\n                if(current.z<solved.z){\n                    moveString = move(\"\",dim-current.z,\"U\");\n                }\n                else {\n                    moveString = move(\"\",dim-current.z,\"U\");\n                    moveString += move(\" \",dim-current.x,\"F'\");\n                    moveString += move(\" \",dim-current.z,\"U'\");\n                }\n                \n            }\n            else if(currentSide===\"B\"){\n                if(current.z===solved.z){\n                    if(solved.x===current.x){\n                        moveString = move(\"\",dim-current.z,\"U\");\n                        moveString += move(\" \",current.x+1,\"B\");\n                        moveString += move(\" \",dim-current.z,\"U'\");\n                    }\n                    else {\n                        moveString = move(\"\",dim-current.z,\"U\");\n                        moveString += \" 01R\";\n                        moveString += move(\" \",dim-current.z,\"U'\");\n                    }\n                }\n                else moveString = \"01B\";\n            }\n            else{\n                if(currentSide!==\"U\"){\n                    //console.log(\"Moving to top\")\n                    moveString += move(\" \",current.y+1,\"F\");\n                }\n                else{\n                    if(current.x!==solved.x || current.y!==solved.z){\n                        moveString = \"01U\";\n                    }\n                    else{\n                        moveString = \"01U'\";\n                        moveString += move(\" \",dim-solved.z,\"U'\");\n                        moveString += move(\" \",current.x+1,\"F\");\n                        moveString += move(\" \",dim-solved.z,\"U\");\n                    }\n                }\n            }\n        }\n    }\n    return moveString;\n}\n\nmodule.exports = solveWhiteMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      yellow.js\n *      Started: Saturday, December 14, 2019\n *      Finished: Saturday, December 21, 2019\n *  \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveYellowMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    // console.log(`Currently on side: ${currentSide}`);\n    // console.log(`Current position: ${JSON.stringify(current)}`);\n    // console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n    \n    //let opposite = \"01L'\";\n\n    // This can be written smarter. Has a small flaw with extracting pieces from the back\n    if(currentSide===\"B\"){\n        // moveString += move(\" \",current.z+1,\"D'\");\n\n        // if(current.z!==solved.z){\n        //     if(current.z === middle){\n        //         moveString += \" 01R\";\n        //     }\n        //     else moveString += \" 01R2\";\n        // }\n\n        // else {\n        //     if(current.x===current.z){\n        //         moveString += \" 01L'\";\n        //         opposite = \"01L\";\n        //     }\n        //     else if(((current.x>= middle &&current.z>=middle))  ||\n        //         (current.x< middle &&current.z<middle) ||\n        //         (current.x> middle &&current.z<middle))\n        //         moveString += \" 01L\";\n        //     else{\n        //         moveString += \" 01L'\";\n        //         opposite = \"01L\";\n        //     }\n\n        //     moveString += move(\" \",dim-current.x,\"F\");\n        //     moveString += \" \" + opposite;\n            \n        // }\n        // moveString += move(\" \",current.z+1,\"D\");\n        moveString += move(\" \",current.z+1,\"D'\");\n\n        moveString += (dim%2&&current.z===middle)? \" 01R\" : \" 01R2\";\n\n        moveString += move(\" \",current.z+1,\"D\");\n\n        moveString += (dim%2&&current.z===middle)? \" 01R\" : \"\";\n\n        moveString += move(\" \",current.x+1,\"F\")\n\n        moveString += (dim%2&&current.z===middle)? \" 01R'\" : \"\";\n\n        moveString += move(\" \",current.z+1,\"D'\");\n\n        moveString += (dim%2&&current.z===middle)? \" 01R'\" : \" 01R2\";\n\n        moveString += move(\" \",current.z+1,\"D\");\n    }\n    else{\n        if(currentSide!==\"R\"){\n            moveString= move(\"\",current.y+1,\"F\");\n        }\n        else {\n            if(current.y!==dim-(solved.x+1)||current.z!==solved.z){\n                moveString = \"01R\";\n            }\n            else {\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += move(\" \",current.z+1,\"D'\");\n                if((current.y>= middle&&current.z>=middle) ||\n                   (current.y< middle&&current.z<middle))\n                    moveString += \" 01L\"\n                else\n                    moveString += \" 01L'\"\n\n                moveString += move(\" \",current.y+1,\"F\");\n                \n                if((current.y>= middle&&current.z>=middle) ||\n                   (current.y< middle&&current.z<middle))\n                    moveString += \" 01L'\"\n                else\n                    moveString += \" 01L\"\n\n                moveString += move(\" \",current.z+1,\"D\");\n            }\n        }\n    }\n\n    return moveString\n}\n\nmodule.exports = solveYellowMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      blue.js\n * \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveBlueMiddle = (current,solved,dim) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let isOddCube = dim%2;\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    \n    if(isOddCube && solved.x===middle && solved.y===middle){\n        switch(currentSide){\n            case \"L\":\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += \" 01L\"; \n                moveString += move(\" \",current.y+1,\"F\");\n                moveString += \" 01L'\"; \n                moveString += move(\" \",current.y+1,\"F\");\n                break;\n            case \"D\":\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += \" 01L\"; \n                moveString += move(\" \",current.y+1,\"F2\");\n                moveString += \" 01L'\"; \n                moveString += move(\" \",current.y+1,\"F\");\n                break;\n            case \"R\":\n                moveString = move(\"\",current.y+1,\"F\");\n                moveString += \" 01R\"; \n                moveString += move(\" \",current.y+1,\"F'\");\n                moveString += \" 01R'\"; \n                moveString += move(\" \",current.y+1,\"F'\");\n                break;\n            default:\n                console.log(\"Shouldn't be checking middle if already in solved location.\");\n        }\n    }\n\n    else if(currentSide===\"U\"){\n        moveString = move(\"\",current.y+1,\"F\");//1\n        moveString += move(\" \",current.x+1,\"U2\");//2\n        if( isOddCube && current.y===middle) moveString+= \" 01L'\";//2.1\n        moveString += move(\" \",current.y+1,\"F'\");//3\n        if( isOddCube && current.y===middle) moveString+= \" 01L\";//3.1\n        moveString += move(\" \",current.x+1,\"U2\");//4\n    }\n\n    else if(currentSide===\"R\"){\n        if((dim-current.z)===(solved.x+1) && current.y===solved.y){\n            moveString = move(\"\",solved.x+1,\"U2\");//6\n            if(isOddCube && solved.y===middle) moveString += \" 01L'\";//6.1\n            moveString += move(\" \",solved.y+1,\"F\");//7\n            if(isOddCube && solved.y===middle) moveString += \" 01L\";//7.1\n            moveString += move(\" \",solved.x+1,\"U2\");//8\n            moveString += move(\" \",solved.y+1,\"F'\");//9\n            \n        } else {\n            moveString = \"01R'\"//5\n        }\n    }\n\n    else if(currentSide===\"L\"){\n        if(current.z===solved.x && current.y===solved.y){\n            moveString = move(\"\",current.z+1,\"D2\");//6\n            if(isOddCube && solved.y===middle) moveString += \" 01R\";//6.1\n            moveString += move(\" \",solved.y+1,\"F'\");//7\n            if(isOddCube && solved.y===middle) moveString += \" 01R'\";//7.1\n            moveString += move(\" \",current.z+1,\"D2\");//8\n            moveString += move(\" \",solved.y+1,\"F\");//9\n            \n        } else {\n            moveString = \"01L\"//5\n        }\n    }\n\n    else {\n        if(current.y!==solved.y){\n            moveString = \"01D\";\n        }\n        else{\n            moveString = move(\"\",solved.y+1,\"F'\");\n            moveString += \" 01R\";\n            moveString += move(\" \",solved.y+1,\"F\");\n        }\n    }\n\n    return moveString;\n}\n\nmodule.exports = solveBlueMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      green.js\n *      Started: Saturday February 8, 2020\n *      Finished:Saturday February 8, 2020\n *      \n */\n\nfunction move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction checkSide(current,dim){\n    let currentSide = \"F\";\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    return currentSide;\n}\n\nlet solveGreenMiddle = (current,solved,dim,index) => {\n\n    const currentSide = checkSide(current,dim);\n    const middle = Math.floor(dim/2);\n    const max = dim-2;\n    const min = 1;\n    // let isOddCube = dim%2;\n    const moves = [];\n\n    // Temp 4x4 solver\n    if(dim===4){\n        if(currentSide === \"D\"){\n            if(index===16){\n                moves.push(\"01D\");\n            }\n\n            else if(index===17){\n                moves.push(move(current.y+1,\"F'\"));\n                moves.push(\"01R2\");\n                moves.push(move(current.y+1,\"F\"));\n            }\n            else if(index===18){\n                moves.push(move(dim-1,\"F'\"));\n                moves.push(\"01R'\");\n                moves.push(move(dim-1,\"F\"));\n            }\n        }\n\n        if(currentSide === \"R\"){\n            if(index===16){\n                moves.push(move(current.y+1,\"F\"));\n                moves.push(\"01D2\");\n                moves.push(move(current.y+1,\"F'\"));\n            }\n            else if(index===17){\n                if(current.y===2 && current.z===2){\n                    moves.push(\"01D\");\n                    moves.push(move(dim-1,\"F\"));\n                    moves.push(\"01D'\");\n                    moves.push(move(dim-1, \"F'\"));\n                    \n                }\n                else{\n                    moves.push(\"01R\")\n                }\n            }\n            \n            else if(index===18){\n                if(current.y===2 && current.z===1){\n                    moves.push(\"01R\");\n                    moves.push(move(dim-1,\"F'\"));\n                    moves.push(\"01R'\");\n                    moves.push(move(dim-1,\"F\"));\n                }\n                else{\n                    moves.push(\"01R\");\n                }\n            }\n            else if(index===19){\n                if(current.y===1 && current.z===2){\n                    moves.push(\"03F'\");\n                    moves.push(\"01R'\");\n                    moves.push(\"03F\");\n                    moves.push(\"01R\");\n                    moves.push(\"03F'\");\n                    moves.push(\"01R\");\n                    moves.push(\"03F\");\n                }\n                else{\n                    moves.push(\"01R\");\n                }\n            }\n        }\n    }\n\n    else if(dim===5){\n        // console.log(`--------------Index: ${index}--------------`);\n        // console.log(current);\n        // console.log(solved);\n\n        switch(currentSide){\n            case \"D\":\n                if(solved.y===min){\n                    if(solved.x===min) moves.push(\"01D\");\n                    else if(solved.x===middle){\n                        if(current.x<middle){\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01D\");\n                        }\n                        else if(current.x>middle){\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01D'\");\n                        }\n                        else{\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01R'\");\n                            moves.push(move(current.y+1,\"F\"));\n                        }\n                    }\n                    else{\n                        moves.push(move(current.y+1,\"F\"));\n                        moves.push(\"01D\");\n                        moves.push(move(current.y+1,\"F'\"));\n                        moves.push(\"01D'\");\n                    }\n                }\n                else if(solved.y===middle){\n                    if(solved.x===min){\n                        if(current.y===middle){\n                            moves.push(move(min+1,\"F\"));\n                            moves.push(\"01D2\");\n                            moves.push(move(min+1,\"F'\"));\n                        }\n                        else{\n                            moves.push(move(min+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(min+1,\"F'\")); \n                        }\n                    }\n                    else{\n                        moves.push(move(current.y+1,\"F'\"));\n                        moves.push(\"01R\");\n                        moves.push(move(current.y+1,\"F\"));\n                    }\n                }\n                else{\n                    if(solved.x===min){\n                        moves.push(move(current.y+1,\"F'\"));\n                        moves.push(\"01R\");\n                        moves.push(move(current.y+1,\"F\"));\n                    }\n                }\n                break;\n            case \"R\":\n                if(solved.y===min){\n                    if(solved.x===min){\n                        moves.push(move(current.y+1,\"F\"));\n                        moves.push(\"01D2\");\n                        moves.push(move(current.y+1,\"F'\"));\n                    }\n                    else if(solved.x===middle){\n                        if(current.z===max){\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(current.y+1,\"F'\"));\n                        }\n                        else moves.push(\"01R\");\n                    }\n                    else{\n                        if(current.y===max&&current.z===max){\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(current.y+1,\"F'\"));\n                        }\n                        else moves.push(\"01R\");\n                    }\n                }\n                else if(solved.y===middle){\n                    if(solved.x===min){\n                        if(current.y===max){\n                            moves.push(move(middle+1,\"F'\"));\n                            moves.push(\"01R\");\n                            moves.push(move(middle+1,\"F\"));\n                        }\n                        else moves.push(\"01R'\");\n                    }\n                    else{\n                        if(current.z===min){\n                            moves.push(move(min+1,\"F\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(min+1,\"F'\"));\n                            moves.push(\"01R\");\n                            moves.push(move(min+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(min+1,\"F'\"));\n                        }\n                        else moves.push(\"01R'\");\n                    }\n                }\n                else{\n                    if(solved.x===min){\n                        if(current.z===min&&current.y===min){\n                            moves.push(move(max+1,\"F'\"));\n                            moves.push(\"01R'\");\n                            moves.push(move(max+1,\"F\"));\n                        }\n                        else{\n                            moves.push(\"01R\");\n                        }\n                    }\n                    else if(solved.x===middle){\n                        if(current.y===max){\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01R'\");\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01R'\");\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01R\");\n                            moves.push(move(current.y+1,\"F\"));\n                        }\n                        else{\n                            moves.push(\"01R\");\n                        }\n                    }\n                    else{\n                        if(current.y===max&&current.z===min){\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D2\");\n                            moves.push(move(current.y+1,\"F'\"));\n                        }\n                        else{\n                            moves.push(\"01R\");\n                        }\n                    }\n                }\n                break;\n            default:\n                console.log(\"Woops something broke. Only red and green should be unsolved.\");\n                return \"error\";\n        }\n    }\n\n    return moves.join(\" \");\n}\n\nmodule.exports = solveGreenMiddle;\n\n","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      orange.js\n *      Started: \n * \n *    \n */\n\nfunction move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveOrangeMiddle = (current,solved,dim) => {\n    \n    let middle = Math.floor(dim/2);\n    let oddCube = dim%2;\n    let max = dim-2;\n    let moves = [];\n    let currentSide = \"F\";\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.z === 0) currentSide = \"D\";\n\n    // 4x4 Solver for Orange\n    if(dim===4){\n        //console.log(\"4x4 orange middle solver here\");\n        switch(currentSide){\n            case 'L':\n                if(solved.x === 0 && solved.y === 1 && solved.z === 2){\n                    moves.push(\"01L\");\n                }\n                else if(solved.x === 0 && solved.y === 1 && solved.z === 1){\n                    moves.push(move(current.y+1,\"F'\"));\n                    moves.push(\" 01D2\");\n                    moves.push(move(current.y+1,\"F\"));\n                }\n                else if(solved.x === 0 && solved.y === 2 && solved.z === 2){\n                    moves.push(move(current.y+1,\"F'\"));\n                    moves.push(\" 01D2\");\n                    moves.push(move(current.y+1,\"F\"));\n                }\n                break;\n            case 'D':\n                if(solved.x === 0 && solved.y === 1 && solved.z === 2){\n                    moves.push(move(current.y+1,\"F\"));\n                    moves.push(\" 01L2\");\n                    moves.push(move(current.y+1,\"F'\"));\n                }\n                else if(solved.x === 0 && solved.y === 1 && solved.z === 1){\n                    if(current.x===2 && current.y===2){\n                        moves.push(\"01L\",\"02F'\",\"01D'\",\"02F\");\n                    }\n                    else{\n                        moves.push(\"01D\");\n                    }\n                }\n                else if(solved.x === 0 && solved.y === 2 && solved.z === 2){\n                    if(current.y===1 && current.x===1){\n                        moves.push(\"03F'\",\"01D'\",\"03F\");\n                    }\n                    else{\n                        moves.push(\"01D\");\n                    }\n                }\n                else {\n                    if(current.y===1 && current.x===2){\n                        moves.push(\"03F'\",\"01D'\",\"03F\",\"01D\",\"03F'\",\"01D\",\"03F\");\n                    }\n                    else{\n                        moves.push(\"01D\");\n                    }\n                }\n                break;\n            case 'R':\n                if(solved.x === 0 && solved.y === 1 && solved.z === 2){\n                    moves.push(move(current.y+1,\"F2\"));\n                    moves.push(\"01L2\");\n                    moves.push(move(current.y+1,\"F2\"));\n                }\n                else {\n                    moves.push(move(current.y+1,\"F\"));\n                    moves.push(\"01D2\");\n                    moves.push(move(current.y+1,\"F'\"));\n                }\n                break;\n            default:\n                console.log(\"Something broke\");\n        }\n    }\n\n    // 5x5 Solver for Orange\n    else if(dim===5){\n        // First row\n        switch(currentSide){\n            case \"L\":\n                // piece 1\n                if(solved.x === 0 && solved.y === 1 && solved.z === max){\n                    moves.push(\"01L\");\n                }\n                //row 1 solved location\n                else if(solved.y === 1){\n                    moves.push(move(current.y+1,\"F'\"));\n                    middle && oddCube? \n                        moves.push(\"01D'\",move(current.y+1,\"F\")):\n                        moves.push(\"01D2\",move(current.y+1,\"F\"));\n                }\n                //row 2 solved location\n                else if(solved.y === middle){\n                    moves.push(move(current.y+1,\"F'\"));\n                    moves.push(\"01D'\");\n                    moves.push(move(current.y+1,\"F\"));\n                }\n                //row 3 solved location\n                else if(solved.y === max){\n                    if(solved.z === max){\n                        moves.push(move(current.y+1,\"F'\"));\n                        moves.push(\"01D\");\n                        moves.push(move(current.y+1,\"F\"));\n                    }\n                }\n                break;\n\n            case \"D\":\n                if(solved.x === 0 && solved.y === 1 && solved.z === max){\n                    moves.push(move(current.y+1,\"F\"),\"01L2\",move(current.y+1,\"F'\"));\n                }\n                // row 1\n                else if(solved.y === 1){\n                    if(current.x<max||current.y===1){\n                        moves.push(\"01D\");\n                    }\n                    else{\n                        moves.push(\"01L\",move(current.y+1,\"F\"),\"01L'\",move(current.y+1,\"F'\"));\n                    }\n                }\n                // row 2 (rework)\n                else if(solved.y === middle){\n                    // first piece row 2\n                    if(solved.z === 3){\n                        if(current.y !== 1){\n                            moves.push(move(\"01D\"));\n                        }\n                        else{\n                            moves.push(move(middle+1,\"F'\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(middle+1,\"F\"));\n                        }\n                    }\n                    // last piece row 2\n                    else if(solved.z === 1){\n                        if(current.y !== max){\n                            moves.push(move(\"01D\"));\n                        }\n                        else{\n                            moves.push(move(middle+1,\"F'\"));\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(middle+1,\"F\"));\n                        }\n                    }\n                }\n                // row 3\n                else if(solved.y === max){\n                    // piece 1\n                    if(solved.z === max){\n                        if(current.x === 1 && current.y === 1){\n                            moves.push(move(max+1,\"F'\"));\n                            moves.push(\"01D'\");\n                            moves.push(move(max+1,\"F\"));\n                        }\n                        else{\n                            moves.push(\"01D\");\n                        }\n                    }\n                    // piece 2\n                    else if(solved.z === middle){\n                        if(current.x === max){\n                            moves.push(move(max+1,\"F2\"));\n                            moves.push(\"01R'\");\n                            moves.push(move(max+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(max+1,\"F\"));\n                        }\n                        else {\n                            moves.push(\"01D'\");\n                        }\n                    }\n                    else if(solved.z === 1){\n                        if(current.x === 1 && current.y === max){\n                            //04F' 05R' 04F 05R 04F'\n                            moves.push(move(max+1,\"F\"));\n                            moves.push(\"01L'\");\n                            moves.push(move(max+1,\"F'\"));\n                            moves.push(\"01L\");\n                            moves.push(\"01D2\");\n                            moves.push(move(max+1,\"F'\"));\n                            moves.push(\"01D2\");\n                            moves.push(move(max+1,\"F\"));\n                        }\n                        else{\n                            moves.push(\"01D\");\n                        }\n                    }\n                }\n                break;\n            case \"R\":\n                if(solved.x === 0 && solved.y === 1 && solved.z === max){\n                    moves.push(move(current.y+1,\"F2\"),\"01L2\",move(current.y+1,\"F2\"));\n                }\n                // row 1\n                else if(solved.y === 1){\n                    if(current.z!==max||current.y===1){\n                        moves.push(\"01R\");\n                    }\n                    else{\n                        moves.push(\"01L\",move(current.y+1,\"F2\"),\"01L'\",move(current.y+1,\"F2\"))\n                    }\n                }\n                // row 2 (rework)\n                else if(solved.y === middle){\n                    moves.push(move(current.y+1,\"F\"));\n                    moves.push(\"01D\");\n                    moves.push(move(current.y+1,\"F'\"));\n                }\n                // row 3\n                else if(solved.y === max){\n                    // piece 1\n                    if(solved.z === max){\n                        if(current.y===1&&current.z===1){\n                            moves.push(move(max+1,\"F2\"));\n                            moves.push(\"01R'\");\n                            moves.push(move(max+1,\"F2\"));\n                        }\n                        else{\n                            moves.push(\"01R\");\n                        }\n                    }\n                    // piece 2\n                    else if(solved.z === middle){\n                        moves.push(move(current.y+1,\"F\"));\n                        moves.push(\"01D\");\n                        moves.push(move(current.y+1,\"F'\"));\n                    }\n                    else if(solved.z === 1){\n                        moves.push(move(current.y+1,\"F\"));\n                        moves.push(\"01D2\");\n                        moves.push(move(current.y+1,\"F'\"));\n                    }\n                }\n                break;\n            default:\n                console.log(\"Something broke\");\n                return \"error\";\n        }\n\n    }\n\n    else {\n        //console.log(\"6x6 and greater orange middle solver here\");\n    }\n\n    return moves.join(\" \");\n\n}\n\nmodule.exports = solveOrangeMiddle;","function move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction extractFromFront(current,maxCoord,minCoord){\n    if(current.z===maxCoord){\n        return `${move(\"\",current.x+1,\"L'\")} 01B' 01R 01B ${move(\"\",current.x+1,\"L\")} 01R'`\n    }\n    else if(current.x===maxCoord){\n        return `${move(\"\",current.z+1,\"D\")} 01B' 01D 01B ${move(\"\",current.z+1,\"D'\")} 01D'`\n    }\n    else if(current.z===minCoord){\n        return `${move(\"\",current.x+1,\"L\")} 01B' 01L 01B ${move(\"\",current.x+1,\"L'\")} 01L'`\n    }\n    else if(current.x===minCoord){\n        return `${move(\"\",current.z+1,\"D'\")} 01B' 01U 01B ${move(\"\",current.z+1,\"D\")} 01U'`\n    }\n}\n\nfunction moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide){\n    if(current.x===maxCoord && current.z===maxCoord){// Top Right\n        if(whiteSide===1){\n            return `01U' 01B 01U`\n        }\n        else{\n            return `01R 01B 01R'`\n        }\n    }\n    if(current.x===minCoord && current.z===maxCoord){// Top Left\n        if(whiteSide===1){\n            return `01U 01B 01U'`\n        }\n        else {\n            return `01L' 01B 01L`\n        }\n    }\n    if(current.x===maxCoord && current.z===minCoord){// Bottom Right\n        if(whiteSide===5){\n            return `01D 01B 01D'`\n        }\n        else {\n            return `01R' 01B 01R`\n        }\n    }\n    if(current.x===minCoord && current.z===minCoord){// Bottom Left\n        if(whiteSide===1){\n            return `01D' 01B 01U`\n        }\n        else {\n            return `01L 01B 01L'`\n        }\n    }\n}\n\nfunction flipPieceOnBack(current,maxCoord,minCoord){\n    if(current.z===maxCoord){//top\n        return `01U 01R 01B2 01R' 01U' 01B'`\n    }\n    else if(current.x===maxCoord){//right\n        return `01R 01D 01B2 01D' 01R' 01B'`\n    }\n    else if(current.z===minCoord){//down\n        return `01D 01L 01B2 01L' 01D' 01B'`\n    }\n    else if(current.x===minCoord){//left\n        return `01L 01U 01B2 01U' 01L' 01B'`\n    }\n}\n\nfunction solveFromBackToFront(current,solved,maxCoord,minCoord){\n    if(current.z===maxCoord&&solved.z===maxCoord){\n        return `${move(\"\",current.x+1,\"L\")} 01F 01R' 01F' ${move(\"\",current.x+1,\"L'\")} 01F 01R 01F'`\n    }\n    else if(current.x===maxCoord && solved.x===maxCoord){\n        return `${move(\"\",current.z+1,\"D'\")} 01F 01D' 01F' ${move(\"\",current.z+1,\"D\")} 01F 01D 01F'`\n    }\n    else if(current.z===minCoord && solved.z===minCoord){\n        return `${move(\"\",current.x+1,\"L'\")} 01F 01L' 01F' ${move(\"\",current.x+1,\"L\")} 01F 01L 01F'`\n    }\n    else if(current.x===minCoord && solved.x===minCoord){\n        return `${move(\"\",current.z+1,\"D\")} 01F 01U' 01F' ${move(\"\",current.z+1,\"D'\")} 01F 01U 01F'`\n    }\n    else return ``\n}\n\n\n\nlet solveFrontEdgeSegments = (current,solved,dim,whiteSide) => {\n    const BACK=3;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n    let moveString = \"\";\n    // let solvedPosition = \"top\";\n\n    // if(solved.x===maxCoord) {solvedPosition = \"right\";}\n    // else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\n    // else if(solved.x===minCoord) {solvedPosition = \"left\";}\n    \n    if(current.y===minCoord){\n        moveString = extractFromFront(current,maxCoord,minCoord);\n    }\n    else if(current.y>minCoord&&current.y<maxCoord){\n        moveString = moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide);\n    }\n    else if(current.y===maxCoord && whiteSide===BACK){\n        moveString = flipPieceOnBack(current,maxCoord,minCoord);\n    }\n    else if(current.z===solved.z&&current.x===solved.x){\n        moveString = solveFromBackToFront(current,solved,maxCoord,minCoord);\n    }\n    else {\n        moveString = `01B`;\n    }\n        \n    \n\n    return moveString;\n}\n\nmodule.exports = solveFrontEdgeSegments;","function move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveBackEdgeSegments = (current,solved,dim,yellowSide) => {\n    const UP=1,RIGHT=2,LEFT=4,DOWN=5;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n    let moveString = \"\";\n    // let solvedPosition = \"top\";\n    // let inMiddleSection = current.y > minCoord && current.y < maxCoord;\n\n    // if(solved.x===maxCoord) {solvedPosition = \"right\";}\n    // else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\n    // else if(solved.x===minCoord) {solvedPosition = \"left\";}\n\n    // Solves top back edge\n    if(solved.z===maxCoord){\n        // top right middle edge\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\n            // if yellow side is on the right face (red center)\n            if(yellowSide===RIGHT){//a.1\n                //console.log(\"solve it\");\n                moveString = `01L' 01B 01L ${move(\"\",current.y+1,\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",current.y+1,\"F\")}`;\n            }\n            // if yellow side is on the upward face (blue center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `01R 01B 01R' 01B' 01U' 01B 01U`;\n            }\n        }\n        // top back edge (wrong position)\n        else if(current.z===solved.z && current.y===solved.y){ // b\n            //console.log(\"remove it\");\n            moveString = `01L' 01B 01L ${move(\"\",dim-(current.x),\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",dim-(current.x),\"F\")}`;\n        }\n        // back edge that isn't top\n        else if(current.y===maxCoord && !(current.z===maxCoord)){ // c\n            moveString = `01U' 01B 01U`;\n        }\n        // middle edge that isn't top right (just places piece on back edges)\n        else if(current.y!==maxCoord){ // d\n            if(current.z===maxCoord && current.x===minCoord){\n                moveString = `01L' 01B' 01L 01B`\n            }\n            else if(current.z===minCoord && current.x===minCoord){\n                moveString = `01L 01B' 01L' 01B`\n            }\n            else if(current.z===minCoord && current.x===maxCoord){\n                moveString = `01R' 01B 01R 01B'`\n            }\n        }\n    }\n    // Solves right back edge\n    else if(solved.x===maxCoord){\n        if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\n            // if yellow side is on the down face (green center)\n            if(yellowSide===DOWN){//a.1\n                //console.log(\"solve it\");\n\n                // 01U' 01B 01U (02F' c.y+1) 01U' 01B 01U 01B2 (02F c.y+1) // converted\n                moveString = `01U' 01B 01U ${move(\"\",current.y+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.y+1,\"F\")} 01R' 01B2 01R`;\n            }\n            // if yellow side is on the right face (red center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `01D 01B 01D' 01B' 01R' 01B 01R2 01B' 01R'`;\n            }\n        }\n\n        // b // change coords + small mod to algo\n        else if(current.x===solved.x && current.y===solved.y){ // b\n            //console.log(\"remove it\");\n            moveString = `01U' 01B 01U ${move(\"\",current.z+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.z+1,\"F\")} 01R' 01B2 01R`;\n        }\n\n\n        // c // hard code those instead of generalizing\n        else if(current.y===maxCoord){\n            if(current.z===minCoord){\n                moveString = `01R' 01B 01R2 01B' 01R'`;\n            } else if(current.x===minCoord){\n                moveString = `01R' 01B2 01R2 01B2 01R'`;\n            }\n        }\n\n        // d // change coords\n        else if(current.y!==maxCoord){\n            if(current.x===maxCoord && current.z===maxCoord){\n                moveString = `01B 01R 01B 01R' 01B2`\n            }\n            else if(current.x===minCoord && current.z===maxCoord){\n                moveString = `01L' 01B' 01L 01B`\n            }\n            else if(current.x===minCoord && current.z===minCoord){\n                moveString = `01D' 01B 01D 01B'`\n            }\n        }\n    }\n    // Solves bottom back edge\n    else if(solved.z===minCoord){\n        if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\n            // if yellow side is on the left face (orange center)\n            if(yellowSide===LEFT){//a.1\n                //console.log(\"solve it\");\n                moveString = `01R' 01B 01R ${move(\"\",current.y+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.y+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\n            }\n            // if yellow side is on the down face (green center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `01L 01B 01L' 01B' 01D' 01B 01D2 01B' 01D' 01B' 01R' 01B' 01R 01B2`;\n            }\n        }\n\n        // b // change coords + small mod to algo\n        else if(current.z===solved.z && current.y===solved.y){ // b\n            //console.log(\"remove it\");\n            moveString = `01R' 01B 01R ${move(\"\",current.x+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.x+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\n        }\n\n        else if(current.y===maxCoord){ // c\n            moveString = `01D' 01B 01D2 01B' 01D'`;\n        }\n        else if(current.y<maxCoord){\n            moveString = `01D 01R 01U 01B 01U' 01R' 01D'`;\n        }\n        // permutations of the original algo should work\n    }\n    else if(solved.x===minCoord){\n        const displace = `01R 01B' 01R' 01B 01U 01B 01U' 01B'`;\n        const solve = `01D' 01B 01D ${move(\"\",current.y+1,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",current.y+1,\"F\")} 01L 01R' 01B2 01R 01L'`;\n        const replace = `01B 01U 01B' 01U' 01B' 01R 01B 01R'`\n        const flip = `01R 01B 01R' 01B' 01U' 01B 01U2 01B' 01U' 01B' 01L' 01B' 01L 01B2`\n\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\n            // if yellow side is on the left face (orange center)\n            if(yellowSide===RIGHT){//a.1\n                //console.log(\"solve it\");\n                moveString = `${displace} ${solve} ${replace}`;\n            }\n            // if yellow side is on the down face (green center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `${flip}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===maxCoord && current.x===minCoord){ //a\n            if(yellowSide===UP){//a.1\n                //console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f'\")}`;\n            }\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f\")} ${flip} ${move(\"\",dim-1,\"f'\")}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\n            if(yellowSide===LEFT){//a.1\n                // console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f2\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f2\")}`;\n            }\n            else {//a.2\n                // console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f2\")} ${flip} ${move(\"\",dim-1,\"f2\")}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\n            if(yellowSide===DOWN){//a.1\n                // console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f'\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f\")}`;\n            }\n            else {//a.2\n                // console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f'\")} ${flip} ${move(\"\",dim-1,\"f\")}`;\n            }\n        }\n\n        else if(current.x===solved.x && current.y===solved.y){ // b\n            // console.log(\"remove it\");\n            moveString = `${displace} 01D' 01B 01D ${move(\"\",dim-current.z,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",dim-current.z,\"F\")} 01L 01R' 01B2 01L' 01R 01L 01D 01R 01B 01R' 01D' 01L'`;\n        }\n    }\n\n\n    return moveString;\n}\n\nmodule.exports = solveBackEdgeSegments;","function move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveMiddleEdgeSegments = (current,solved,cubeSize) => {\n    const maxCoord = cubeSize-1;\n    const minCoord = 0;\n    const centerEdge = Math.floor(cubeSize/2);\n\n    let moves = [];\n\n    // where blue and orange meet\n    let firstEdge = (solved.x===minCoord && solved.z===maxCoord);\n    // where blue and red meet\n    let secondEdge = (solved.x===maxCoord && solved.z===maxCoord);\n    // where green and red meet\n    let thirdEdge = (solved.x===maxCoord && solved.z===minCoord);\n\n    // flip edge segment in place\n    let flip = [\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\"];\n    let flip2 = [\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\"];\n    let flip3 = [\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\"];\n\n    const flipFirstCenterEdge = [\n        move(centerEdge+1,\"B'\"),\n        \"01R\",\"01B\",\"01R'\",\"01U\",\"01R'\",\"01U'\",\"01R\",\n        move(centerEdge+1,\"B\"),\n    ];\n\n    const flipSecondCenterEdge = [\n        move(centerEdge+1,\"B'\"),\n        \"01D\",\"01B\",\"01D'\",\"01R\",\"01D'\",\"01R'\",\"01D\",\n        move(centerEdge+1,\"B\"),\n    ];\n\n    const flipThirdCenterEdge = [\n        move(centerEdge+1,\"B'\"),\n        \"01L\",\"01B\",\"01L'\",\"01D\",\"01L'\",\"01D'\",\"01L\",\n        move(centerEdge+1,\"B\"),\n    ];\n\n    const swapLastTwoCenterEdges = [\n        move(centerEdge,\"b2\"),\"01L2\",\"01D2\",\n        move(centerEdge,\"b2\"),\"01D2\",\"01L2\",\n        move(centerEdge,\"b2\"),\"01D2\"\n    ];\n\n    const flipLastCenterEdge = [\n        move(centerEdge,\"f\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\n        move(centerEdge,\"f'\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\n        move(centerEdge,\"b'\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\n        move(centerEdge,\"f'\"),\"01L2\",move(cubeSize,\"f'\"),move(centerEdge,\"f'\"),\n        \"01L2\",move(centerEdge,\"f'\"),\"01L2\",move(centerEdge+1,\"F\"),\n        \"01L'\",\"01B\",\"01D\"\n    ];\n\n    // solves piece diagonally to solved location\n    let solveUp = depth => {\n        return [\"01F\",move(depth,\"F\"),\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\",\"01F'\",move(depth,\"F'\")];\n    }\n    let solveDown = depth => {\n        return [move(depth,\"B'\"),\"01B'\",\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\",move(depth,\"B\"),\"01B\"];\n    }\n    let solveUp2 = depth => {\n        return [\"01F\",move(depth,\"F\"),\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\",\"01F'\",move(depth,\"F'\")];\n    }\n    let solveDown2 = depth => {\n        return [move(depth,\"B'\"),\"01B'\",\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\",move(depth,\"B\"),\"01B\"];\n    }\n    let solveUp3 = depth => {\n        return [\"01F\",move(depth,\"F\"),\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\",\"01F'\",move(depth,\"F'\")];\n    }\n    let solveDown3 = depth => {\n        return [move(depth,\"B'\"),\"01B'\",\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\",move(depth,\"B\"),\"01B\"];\n    }\n\n    let solveLastEdge = depth => {\n        return [\n            move(depth,\"B'\"),\"01D2\",move(depth,\"F\") ,\"01L2\",\n            move(depth,\"F'\"),\"01L2\",move(depth,\"B2\"),\"01D2\",\n            move(depth,\"B\") ,\"01D2\",move(depth,\"B'\"),\"01D2\",\"01L2\",\n            move(depth,\"B2\"),\"01L2\"\n        ];\n    }\n\n    if(cubeSize>4&&cubeSize%2&&current.y===centerEdge) {\n        if(firstEdge){\n            if(current.x===minCoord&&current.z===minCoord){\n                moves=[move(centerEdge+1,\"F'\"),\"01D2\",move(centerEdge+1,\"F\")];\n            }\n            else if(current.x===maxCoord&&current.z===minCoord){\n                moves=[\"01D2\"];\n            }\n            else if(current.x===maxCoord&&current.z===maxCoord){\n                moves=[move(centerEdge+1,\"F\"),\"01R2\",move(centerEdge+1,\"F'\")];\n            }\n            else moves=flipFirstCenterEdge;\n        }\n        else if(secondEdge){\n            if(current.x===minCoord&&current.z===minCoord){\n                moves=[\"01D2\"];\n            }\n            else if(current.x===maxCoord&&current.z===minCoord){\n                moves=[move(centerEdge+1,\"F\"),\"01D2\",move(centerEdge+1,\"F'\")];\n            }\n            else moves=flipSecondCenterEdge;\n        }\n        else if(thirdEdge){\n            if(current.x===maxCoord&&current.z===minCoord){\n                moves=flipThirdCenterEdge;\n            }\n            else {\n                moves=swapLastTwoCenterEdges;\n            }\n        }\n        else{\n            moves=flipLastCenterEdge;\n        }\n    }\n    else {\n        if(firstEdge){\n            if(current.x===minCoord&&current.z===maxCoord){\n                if(current.y>=centerEdge){\n                    moves=solveDown(cubeSize-current.y);\n                }\n                else{\n                    moves=solveUp(current.y+1);\n                }\n            }\n            else if(current.x===maxCoord&&current.z===maxCoord){\n                if(current.y===solved.y){\n                    moves=flip;\n                }\n                else{\n                    if(current.y>=centerEdge){\n                        moves=solveUp(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveDown(current.y+1);\n                    }\n                }\n            }\n            else if(current.x===minCoord&&current.z===minCoord){\n                moves.push(\"01D2\",\"01R2\");\n            }\n            else {\n                moves.push(\"01R2\");\n            }\n        }\n        else if(secondEdge){\n            if(current.x===maxCoord&&current.z===maxCoord){\n                if(current.y>=centerEdge){\n                        moves=solveDown2(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveUp2(current.y+1);\n                    }\n            }\n            else if(current.x===maxCoord&&current.z===minCoord){\n                if(current.y===solved.y){\n                    moves=flip2;\n                }\n                else{\n                    if(current.y>=centerEdge){\n                        moves=solveUp2(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveDown2(current.y+1);\n                    }\n                }\n            }\n            else {\n                moves.push(\"01D2\");\n            }\n        }\n        else if(thirdEdge){\n            if(current.x===maxCoord&&current.z===minCoord){\n                if(current.y===(maxCoord-1)){\n                        moves=solveDown3(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveUp3(current.y+1);\n                    }\n            }\n            else if(current.x===minCoord&&current.z===minCoord){\n                if(current.y===solved.y){\n                    moves=flip3;\n                }\n                else{\n                    if(current.y===(maxCoord-1)){\n                        moves=solveUp3(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveDown3(current.y+1);\n                    }\n                }\n            }\n        }\n        else {\n            moves=solveLastEdge(current.y+1);\n        }\n    }\n\n    return moves.join(\" \");\n}\n\nmodule.exports = solveMiddleEdgeSegments;","import React from \"react\";\nimport \"./Nav.css\";\nimport {DropdownButton,Dropdown} from 'react-bootstrap'\nimport 'react-dropdown/style.css'\nimport Popup from \"reactjs-popup\";\n\nconst Navbar = props => {\n  const navCubes = [];\n  for (let i = 2; i<=10;i++){\n    navCubes.push(\n      <Dropdown.Item key={i} href={`/id=${i}` }>{i} X {i}</Dropdown.Item>\n    )\n  }\n  return (\n  <nav className=\"navbar navbar-dark fixed-top\">\n    <ul className=\"nav nav-justified mr-auto\">\n      <li className=\"nav-item nav-fix-for-edge\">\n        <p className=\"navbar-brand\" style={{color:\"lightgray\"}}><b>{props.title}</b></p>\n\n          {/*Open model here. Show bunch of settings. Pass changeSettings down to component to apply changes*/}\n          <div className=\"settingsDropDown\">\n          <DropdownButton className=\"settings\" aria-label=\"settings\" id=\"settings\" title={<i className='fa fa-cog'></i>}>\n          <ul>\n\n            <li className=\"settingsDropDownItem\" onClick={() => props.changeSettings('displayMoveInput')}>\n              \n              \n              <div className=\"checkbox-inline\">\n                {props.state.showMoveInput ? \n                <input type=\"checkbox\" checked={true} data-toggle=\"toggle\" onClick={() => props.changeSettings('displayMoveInput')}></input>\n                 : \n                 <input type=\"checkbox\" checked={false} data-toggle=\"toggle\" onClick={() => props.changeSettings('displayMoveInput')}></input>\n                 }\n              </div>\n              Move Input\n              \n            </li>\n\n            <li className=\"settingsDropDownItem\" onClick={() => props.changeSettings('displayHints')}>\n              \n              \n              <div className=\"checkbox-inline\">\n                \n                {props.state.showHints? \n                <input type=\"checkbox\" checked={true} data-toggle=\"toggle\" onClick={() => props.changeSettings('displayHints')}></input>\n                 : \n                 <input type=\"checkbox\" checked={false} data-toggle=\"toggle\" onClick={() => props.changeSettings('displayHints')}></input>\n                 }\n              </div>\n              Move Hints\n              \n            </li>\n            \n          </ul>\n\n        </DropdownButton>\n        </div>\n        <div className=\"cubesDropdown\">\n          <DropdownButton title=\"Cubes\" className=\"cubes\">\n            {navCubes}\n          </DropdownButton>\n        </div>\n      </li>\n    </ul>\n    <div style={{float:\"right\",height:\"100%\"}} >\n      <Popup trigger={<button id=\"infoBtn\">Info</button>}>\n        {close => (\n          <div style={{zIndex:\"100\",width:\"100%\",height:\"100%\"}}>\n            <div className=\"shadeBackground\" style={{backgroundColor:\"black\",zIndex:\"101\"}} onClick={close}></div>\n            <div style={{zIndex:\"102\",width:\"max-content\",margin:\"auto\",transform:\"translateX(-50%)\"}} className=\"popupDiv\">\n              <b style={{fontSize: \"2rem\"}}>Instructions</b>\n              <button className=\"close\" id=\"closeBtn\" onClick={close}>\n                &times;\n              </button>\n              <hr style={{backgroundColor:\"#007bff\",marginBottom:\"0\"}}></hr>\n              <div style={{backgroundColor:\"black\",marginTop:\"0\",color:\"#00C000\",fontSize:\"1rem\",textAlign:\"left\"}}>\n                <div style={{paddingTop: \"1rem\"}}>&gt; Click and drag anywhere not on the cube to rotate.</div>\n                <hr style={{backgroundColor:\"lightgray\"}}></hr>\n                <div>&gt; 1. Click and drag anywhere on the cube to make a move or</div>\n                <div>&gt; 2. Use buttons(Moves) or keyboard to make turns: <br></br>\n                  <div style={{width:\"100%\",textAlign:\"center\"}}>\n                  <b style={{color: \"white\",backgroundColor:\"black\"}}> F, </b><b style={{color: \"white\",backgroundColor:\"black\"}}>f,</b>\n                  <b style={{color: \"blue\",backgroundColor:\"black\"}}> U, </b><b style={{color: \"blue\",backgroundColor:\"black\"}}>u,</b>\n                  <b style={{color: \"red\",backgroundColor:\"black\"}}> R, </b><b style={{color: \"red\",backgroundColor:\"black\"}}>r,</b>\n                  <b style={{color: \"yellow\",backgroundColor:\"black\"}}> B, </b><b style={{color: \"yellow\",backgroundColor:\"black\"}}>b,</b>\n                  <b style={{color: \"orange\",backgroundColor:\"black\"}}> L, </b><b style={{color: \"orange\",backgroundColor:\"black\"}}>l,</b>\n                  <b style={{color: \"green\",backgroundColor:\"black\"}}> D, </b><b style={{color: \"green\",backgroundColor:\"black\"}}>d </b> \n                  <p style={{width:\"100%\",textAlign:\"center\"}}>(lower case is clockwise, upper case is counterclockwise)</p>\n                  </div>\n                </div>\n                <hr style={{backgroundColor:\"lightgray\"}}></hr>\n                <div style={{marginBottom: \"0\",paddingBottom:\"1rem\"}}>&gt; Author: Sasha Peters, <a target=\"#\" href=\"https://www.github.com/merpig\">github</a>, <a target=\"#\" href=\"https://www.github.com/merpig/RubiksProgram\">Project Repo</a></div>\n                <hr style={{backgroundColor:\"lightgrey\"}}></hr>\n                  <div style={{color: \"white\",backgroundColor:\"black\",textAlign:\"center\"}}>\n                  site design / cube © 2020 RubiksProgram\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Popup> {\" \"}\n      <button id=\"fullscreenBtn\" value=\"true\">Fullscreen</button>\n    </div>\n  </nav>)\n};\n\nexport default Navbar;\n","import 'rc-slider/assets/index.css';\nimport './Speeds.css';\nimport React from 'react';\nimport Slider from 'rc-slider'\n\nconst style = { width: \"20%\", position: \"fixed\", top: \"85px\", left: \"10px\",fontSize:\"1rem\"};\n\nconst Speeds = props => (\n\n    <div className=\"sliderDiv\" style = {style}>\n\n        {props.isDisabled ?\n        <Slider \n            defaultValue={40} \n            value={props.speed}\n            min={props.speed} max={props.speed} \n            step={10}\n        />\n        :\n        <Slider \n            defaultValue={40} \n            value={props.speed}\n            min={0} max={70} \n            step={10}\n            onChange={props.onSliderChange}\n        />}\n\n    </div>\n);\n\n\n\nexport default Speeds;","import React from \"react\";\nimport Draggable from 'react-draggable';\n\nconst MoveInput = (props) => {\n    const instructTurn = (e) => {\n        if(e.key==='Enter'){\n            props.algorithm(document.getElementById('moveInput').value,'Custom');\n        }\n        e.stopPropagation();\n    };\n\n    return (\n        <div style={{position: \"absolute\", zIndex: \"99\"}}>\n            <Draggable\n                handle=\".handle\"\n                defaultPosition={{x:/*window.innerWidth-220*/0 , y: 150}}\n                position={null}\n                grid={[50, 50]}\n                scale={1}\n                onStart={props.handleStart}\n                onDrag={props.handleDrag}\n                onStop={props.handleStop}>\n                <div>\n                    <div className=\"handle\" style={{color:\"grey\"}}>Drag from here</div>\n                    <div>\n                        <input placeholder=\"type moves here\" id=\"moveInput\" onKeyDown={instructTurn} style={{borderRadius: \"4px\", margin: \"1px\",border: \"1.5px solid #007bff\",width:\"200px\"}}></input>\n                        <button id=\"moveSubmit\" onClick={() => props.algorithm(document.getElementById('moveInput').value,'Custom')}>Enter</button>\n                    </div>\n                </div>\n            </Draggable>\n        </div>\n    );\n};\n\nexport default MoveInput;","import React from 'react';\nimport \"./SolverInfo.css\"\n\nconst SolverInfo = (props) => (\n    <div className={(window.innerWidth > 760&&window.innerHeight>580)?\"sideSolverInfo\":\"solverInfo\"}>\n        <div className=\"setLengthWrapper\">\n            Total Moves: <div className=\"setLength\">{props.solvedSetLength}</div>\n        </div>\n        <div className=\"setLengthWrapper\">\n            Current Move: <div className=\"setLength\">{props.prevSetLength}</div>\n        </div>\n    </div>\n)\n\nexport default SolverInfo;","import React from 'react';\nimport \"./ColorPickerInfo.css\"\n\nconst ColorPickerInfo = (props) => (\n    <div className={(window.innerWidth > 760&&window.innerHeight>580)?\"sideSolverInfo\":\"solverInfo\"}>\n        <div className=\"setLengthWrapper\">\n            Current Color: <div className=\"setLength\" style={{backgroundColor:props.colorPicked}}></div>\n        </div>\n    </div>\n)\n\nexport default ColorPickerInfo;","import React from 'react';\nimport \"./Controls.css\";\n\n\nlet centerButtons=[];\nlet singleButtons=[];\nlet multiButtons=[];\nlet singleCols=[];\nlet multiCols=[];\nlet key=0;\n\nfunction namesToColors(face){\n    switch(face){\n        case 'F':\n            return {\n                bgc: 'white',\n                color: 'black',\n            }\n        case 'U':\n            return {\n                bgc: 'blue',\n                color: 'white',\n            }\n        case 'R':\n            return {\n                bgc: 'red',\n                color: 'white',\n            }\n        case 'B':\n            return {\n                bgc: 'yellow',\n                color: 'black',\n            }\n        case 'L':\n            return {\n                bgc: 'orange',\n                color: 'black',\n            }\n        case 'D':\n            return {\n                bgc: 'green',\n                color: 'white',\n            }\n        default:\n    }\n\n}\n\n//generate data for buttons and pass down to props. Better than trying to do in here\nconst Controls = props => {\n    centerButtons=[];\n    singleButtons=[];\n    multiButtons=[];\n    singleCols=[];\n    multiCols=[];\n\n    return (\n        <div id=\"controlsDiv\">\n            {\n                props.size%2 ? \n                <div className=\"centerMoves\" style={{marginRight: \"5px\"}}>\n                    <div className='centerLayerColumns'>\n                    {\n                        props.generatedButtons.center.forEach(element => {\n                            centerButtons.push(\n                                <div className=\"moveBtn\" \n                                        key={key} \n                                        onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\n                                        onMouseEnter={(e)=>props.mouseEnter(element.clockwise.name,element.clockwise.data,e)}\n                                        onMouseLeave={()=>props.mouseLeave()}\n                                        >\n                                        \n                                    {element.clockwise.name}\n                                </div>\n                            );\n                            key+=1\n                            centerButtons.push(\n                                <div className=\"moveBtn\" \n                                        key={key} \n                                        onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\n                                        onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                        onMouseLeave={()=>props.mouseLeave()}\n                                        >\n                                    {element.counter.name}\n                                </div>\n                            );\n                            key+=1\n                        })\n                    }\n                    {centerButtons}\n                    </div>\n                </div> : \"\"\n            }\n            <div className=\"singleLayerMoves\" style={{marginRight: \"5px\"}}>\n                {\n                    props.generatedButtons.single.forEach(element => {\n                        let colors = namesToColors(element.counter.face);\n                        if(element.counter.face === 'F') singleButtons.push([],[]);\n                        let lengthBtns = singleButtons.length-2;\n                        let lengthBtns1 = singleButtons.length-1;\n                        singleButtons[lengthBtns].push(\n                            <div className=\"moveBtn\" \n                                    key={key} \n                                    onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                    onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                    onMouseLeave={()=>props.mouseLeave()}\n                                    >\n                                {element.counter.name}\n                            </div>\n                        )\n                        key+=1;\n                        singleButtons[lengthBtns1].push(\n                            <div className=\"moveBtn\" \n                                key={key} \n                                onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                onMouseLeave={()=>props.mouseLeave()}\n                                >\n                                {element.clockwise.name}\n                            </div>\n                        )\n                        key+=1;\n                    })\n\n                }\n                {\n                    singleButtons.forEach(element =>{\n                        key+=1;\n                        singleCols.push(\n                            <div key={key} className='singleLayerColumns'>\n                                {element}\n                            </div>\n                        )\n                    })\n                }\n                {\n                    singleCols\n                }\n            </div>\n            <div className=\"multiLayerMoves\">\n            {\n                    props.generatedButtons.multi.forEach(element => {\n                        let colors = namesToColors(element.counter.face);\n                        if(element.counter.face === 'F') multiButtons.push([],[]);\n                        let lengthBtns = multiButtons.length-2;\n                        let lengthBtns1 = multiButtons.length-1;\n                        multiButtons[lengthBtns].push(\n                            <div className=\"moveBtn\" \n                                key={key} \n                                onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                onMouseLeave={()=>props.mouseLeave()}\n                                >\n                                {element.counter.name}\n                            </div>\n                        )\n                        key+=1;\n                        multiButtons[lengthBtns1].push(\n                            <div className=\"moveBtn\" \n                                key={key} \n                                onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                onMouseLeave={()=>props.mouseLeave()}\n                                >\n                                {element.clockwise.name}\n                            </div>\n                        )\n                        key+=1;\n                    })\n\n                }\n                {\n                    multiButtons.forEach(element =>{\n                        key+=1;\n                        multiCols.push(\n                            <div key={key} className='multiLayerColumns'>\n                                {element}\n                            </div>\n                        )\n                    })\n                }\n                {\n                    multiCols\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Controls;","let algorithms = [\n    {\n        name : \"None Selected\",\n        worksFor: [2,3,4,5,6]\n    },\n    {\n        name : \"Cross\",\n        moves: \"01R 01R 01L' 01D 01F 01F 01R' 01D' 01R' 01L 01U' 01D 01R 01D 01B 01B 01R' 01U 01D 01D\",\n        worksFor: [3,4]\n    },\n    {\n        name : \"Cube x2\",\n        moves: \"01F 01L 01F 01U' 01R 01U 01F 01F 01L 01L 01U' 01L' 01B 01D' 01B' 01L 01L 01U\",\n        worksFor: [2,3,4]\n    },\n    {\n        name : \"Cube x2\",\n        moves: \"02f 02f 02r 02r 02u' 02f' 04d 02b' 02u 02u 02b 02u' 02r' 03R 03R 02b 02b 03R 03R 03f 03f 03L 03L 03B 03B\",\n        worksFor: [6]\n    },\n    {\n        name : \"Cube x3\",\n        moves: \"01U' 01L' 01U' 01F' 01R 01R 01B' 01R 01F 01U 01B 01B 01U 01B' 01L 01U' 01F 01U 01R 01F'\",\n        worksFor: [3]\n    },\n    {\n        name : \"Cube x4\",\n        moves: \"01B' 02R 02R 02L 02L 01U 01U 02R 02R 02L 02L 01B 01F 01F 01R 01U' 01R 01U 01R 01R 01U 01R 01R 01F' 01U 01F' 01U 02U 01L 02L 01U' 02U' 01F 01F 02F 02F 01D 02D 01R' 02R' 01U 02U 01F 02F 01D 01D 02D 02D 01R 01R 02R 02R\",\n        worksFor: [4]\n    },\n    {\n        name : \"Cube x5\",\n        moves: \"01F 01U' 01B 01L 01U' 01F 01F 01U 01U 01F 01U 01F' 01U 01U 01D' 01B 01D 01L 01L 01B 01B 01U 02f 02u' 02b 02l 02u' 02f 02f 02u 02u 02f 02u 02f' 02u 02u 02d' 02b 02d 02l 02l 02b 02b 02u\",\n        worksFor: [5]\n    },\n    {\n        name : \"Six Spots\",\n        moves : \"01U 01D' 01R 01L' 01F 01B' 01U 01D'\",\n        worksFor: [3,4]\n    },\n    {\n        name : \"CheckerBoard\",\n        moves : \"01U 01U 01D 01D 01R 01R 01L 01L 01F 01F 01B 01B\",\n        worksFor: [3]\n    },\n    {\n        name : \"Checkerboard1\",\n        moves : \"01U' 01R 01R 01L 01L 01F 01F 01B 01B 01U' 01R 01L 01F 01B' 01U 01F 01F 01D 01D 01R 01R 01L 01L 01F 01F 01U 01U 01F 01F 01U' 01F 01F\",\n        worksFor: [3]\n    },\n    {\n        name: \"Checkerboard2\",\n        moves : \"01B 01D 01F' 01B' 01D 01L 01L 01U 01L 01U' 01B 01D' 01R 01B 01R 01D' 01R 01L' 01F 01U 01U 01D\",\n        worksFor: [3]\n    },\n    {\n        name: \"Anaconda\",\n        moves : \"01L 01U 01B' 01U' 01R 01L' 01B 01R' 01F 01B' 01D 01R 01D' 01F'\",\n        worksFor: [3]\n    },\n    {\n        name: \"Python\",\n        moves : \"01F 01F 01R' 01B' 01U 01R' 01L 01F' 01L 01F' 01B 01D' 01R 01B 01L 01L\",\n        worksFor: [3]\n    },\n    {\n        name: \"Rings\",\n        moves: \"02R 03R 04R 05R 02B' 03B' 04B' 01L 01L 02F 02B 01L 01L 02B' 02D' 03D' 04D' 05D' 02F' 01L 01L 02F 02B 01L 01L 02B' 02D 02D 03D 03D 04D 04D 05D 05D 03R 04R 01U' 03R' 04R' 02D' 03D' 04D' 05D' 03R 04R 01U 02R' 03R' 04R' 05R' 03F' 04F' 03R' 04R' 03F 04F 02F 03F 04F 05F 02L 02L 03L 03L 04L 04L 02F 02F 03R 03R 04R 04R 02B 02B 03B 03B 04B 04B 02L 02L\",\n        worksFor: [6]\n    },\n    {\n        name: \"Test f depth:2 multi turn\",\n        moves: \"02f 02f'\",\n        worksFor: []\n    },\n    {\n        name: \"Test u depth:2 multi turn\",\n        moves: \"02u 02u'\",\n        worksFor: []\n    },\n    {\n        name: \"Test r depth:2 multi turn\",\n        moves: \"02r 02r'\",\n        worksFor: []\n    },\n    {\n        name: \"Test b depth:2 multi turn\",\n        moves: \"02b 02b'\",\n        worksFor: []\n    },\n    {\n        name: \"Test d depth:2 multi turn\",\n        moves: \"02d 02d'\",\n        worksFor: []\n    },\n    {\n        name: \"Test l depth:2 multi turn\",\n        moves: \"02l 02l'\",\n        worksFor: []\n    },\n]\n\nexport default algorithms;","import * as THREE from \"three\";\n\n// Functions to generate/manipulate cube\nconst cube = {\n    // Generates the inital solved state of rubiksObject\n    generateSolved : function (_x,_y,_z){\n        const size = _z;\n        const half = Math.floor(size/2);\n        const tempArr = [];\n        const middles = [];\n        const edges = [];\n        const corners = [];\n        const tempMiddles = [\n          [], // white\n          [], // yellow\n          [], // blue\n          [], // green\n          [], // orange\n          []  // red\n        ];\n        const tempEdges = [\n          [[],[],[],[]], // white edges\n          [[],[],[],[]], // middle edges\n          [[],[],[],[]]\n        ]\n    \n        for(let j = 0; j < _y; j++){      // Move back along the y-axis\n          for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\n            for(let i = 0; i < _x; i++){  // Traverse across the x-axis\n              let side0 = \"black\";\n              let side1 = \"black\";\n              let side2 = \"black\";\n              let side3 = \"black\";\n              let side4 = \"black\";\n              let side5 = \"black\";\n              let edgeType = null;\n              let middleType = null;\n              if(i===_x-1) side2 = \"red\";\n              else if (i===0) side4 =\"orange\";\n              if(j===_y-1) side3 = \"yellow\";\n              else if (j===0) side0 =\"white\";\n              if(k===_z-1) side1 = \"blue\";\n              else if (k===0) side5 =\"green\";\n              let tempCount = 0;\n              if(j===0 || j === _y-1) tempCount++;\n              if(k===0 || k === _z-1) tempCount++;\n              if(i===0 || i === _x-1) tempCount ++;\n              let tempType = \"none\";\n    \n              if(tempCount===1) {\n                tempType = \"middle\";\n                if(size%2){\n                  if((j===half&&k===half)||\n                     (j===half&&i===half)||\n                     (i===half&&k===half)){\n                    middleType=\"center\"\n                  }\n                }\n                if(j===0) {tempMiddles[0].push(tempArr.length);middleType=tempMiddles[0].length+1}\n                if(j===_y-1) {tempMiddles[1].push(tempArr.length);middleType=tempMiddles[1].length+1}\n                if(k===_z-1) {tempMiddles[2].push(tempArr.length);middleType=tempMiddles[2].length+1}\n                if(i===0) {tempMiddles[3].push(tempArr.length);middleType=tempMiddles[3].length+1}\n                if(k===0) {tempMiddles[4].push(tempArr.length);middleType=tempMiddles[4].length+1}\n                if(i===_x-1) {tempMiddles[5].push(tempArr.length);middleType=tempMiddles[5].length+1}\n              }\n    \n              else if(tempCount===2) {\n                // do stuff in here to populate edges\n                tempType = \"edge\";\n                if(j === 0){\n                  if(k===_z-1){\n                    if(tempEdges[0][0].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][0].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][0].length+1);\n                    }\n                    tempEdges[0][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(tempEdges[0][1].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][1].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][1].length+1);\n                    }\n                    tempEdges[0][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(tempEdges[0][2].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][2].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][2].length+1);\n                    }\n                    tempEdges[0][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(tempEdges[0][3].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][3].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][3].length+1);\n                    }\n                    tempEdges[0][3].push(tempArr.length);\n                  }\n                } else if(j === _y-1){\n                  if(k===_z-1){\n                    if(tempEdges[1][0].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][0].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][0].length+1);\n                    }\n                    tempEdges[1][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(tempEdges[1][1].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][1].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][1].length+1);\n                    }\n                    tempEdges[1][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(tempEdges[1][2].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][2].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][2].length+1);\n                    }\n                    tempEdges[1][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(tempEdges[1][3].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][3].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][3].length+1);\n                    }\n                    tempEdges[1][3].push(tempArr.length);\n                  }\n                } else {\n                  if(k===_z-1 && i===0){\n                    if(tempEdges[2][0].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][0].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[2][0].length+1);\n                    }\n                    tempEdges[2][0].push(tempArr.length);\n                  }\n                  else if(k===_z-1 && i===_x-1){\n                    if(tempEdges[2][1].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][1].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                      edgeType=\"secondHalf\"+(tempEdges[2][1].length+1);\n                    }\n                    tempEdges[2][1].push(tempArr.length);\n                  }\n                  else if(k===0 && i===_x-1){\n                    if(tempEdges[2][2].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][2].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                      edgeType=\"secondHalf\"+(tempEdges[2][2].length+1);\n                    }\n                    tempEdges[2][2].push(tempArr.length);\n                  }\n                  else if(k===0 && i===0){\n                    if(tempEdges[2][3].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][3].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                      edgeType=\"secondHalf\"+(tempEdges[2][3].length+1);\n                    }\n                    tempEdges[2][3].push(tempArr.length);\n                  }\n                }\n              }\n              else if(tempCount===3) {\n                tempType = \"corner\";\n                corners.push(tempArr.length);\n              }\n    \n              tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\n                            i,j,k, // Current position x,y,z\n                            i,j,k, // Solved position x,y,z\n                            tempType,\n                            edgeType,\n                            middleType\n                          ]);\n            }\n          }\n        }\n        \n        for(let i = 0; i < 6; i++){\n          for(let j = 0; j < (_x-2)*(_x-2); j++){\n            middles.push(tempMiddles[i][j]);\n          }\n        }\n\n        for(let i = 0; i < 3; i++){\n          for(let j = 0; j < 4; j++){\n            edges.push(...tempEdges[i][j]);\n          }\n        }\n        //console.log(tempArr);\n        return {tempArr,middles,edges,corners};\n    },\n\n    generateBlank : function (_x,_y,_z){\n      const size = _x;\n      const half = Math.floor(size/2);\n      const tempArr = [];\n      // const middles = [];\n      // const edges = [];\n      const corners = [];\n      const tempMiddles = [\n        [], // white\n        [], // yellow\n        [], // blue\n        [], // green\n        [], // orange\n        []  // red\n      ];\n      const tempEdges = [\n        [[],[],[],[]], // white edges\n        [[],[],[],[]], // middle edges\n        [[],[],[],[]]\n      ]\n  \n      for(let j = 0; j < _y; j++){      // Move back along the y-axis\n        for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\n          for(let i = 0; i < _x; i++){  // Traverse across the x-axis\n            let side0 = \"black\";\n            let side1 = \"black\";\n            let side2 = \"black\";\n            let side3 = \"black\";\n            let side4 = \"black\";\n            let side5 = \"black\";\n            let edgeType = null;\n            let middleType = null;\n              // if(i===_x-1) side2 = \"white\";\n              // else if (i===0) side4 =\"white\";\n              // if(j===_y-1) side3 = \"white\";\n              // else if (j===0) side0 =\"white\";\n              // if(k===_z-1) side1 = \"white\";\n              // else if (k===0) side5 =\"white\";\n              if(i===_x-1) side2 = \"red\";\n              else if (i===0) side4 =\"orange\";\n              if(j===_y-1) side3 = \"yellow\";\n              else if (j===0) side0 =\"white\";\n              if(k===_z-1) side1 = \"blue\";\n              else if (k===0) side5 =\"green\";\n              let tempCount = 0;\n              if(j===0 || j === _y-1) tempCount++;\n              if(k===0 || k === _z-1) tempCount++;\n              if(i===0 || i === _x-1) tempCount ++;\n              let tempType = \"none\";\n    \n              if(tempCount===1) {\n                tempType = \"middle\";\n                if(size%2){\n                  if((j===half&&k===half)||\n                     (j===half&&i===half)||\n                     (i===half&&k===half)){\n                    middleType=\"center\"\n                  }\n                }\n                if(j===0) {tempMiddles[0].push(tempArr.length);middleType=tempMiddles[0].length+1}\n                if(j===_y-1) {tempMiddles[1].push(tempArr.length);middleType=tempMiddles[1].length+1}\n                if(k===_z-1) {tempMiddles[2].push(tempArr.length);middleType=tempMiddles[2].length+1}\n                if(i===0) {tempMiddles[3].push(tempArr.length);middleType=tempMiddles[3].length+1}\n                if(k===0) {tempMiddles[4].push(tempArr.length);middleType=tempMiddles[4].length+1}\n                if(i===_x-1) {tempMiddles[5].push(tempArr.length);middleType=tempMiddles[5].length+1}\n              }\n    \n              else if(tempCount===2) {\n                // do stuff in here to populate edges\n                tempType = \"edge\";\n                if(j === 0){\n                  if(k===_z-1){\n                    if(tempEdges[0][0].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][0].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][0].length+1);\n                    }\n                    tempEdges[0][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(tempEdges[0][1].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][1].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][1].length+1);\n                    }\n                    tempEdges[0][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(tempEdges[0][2].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][2].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][2].length+1);\n                    }\n                    tempEdges[0][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(tempEdges[0][3].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[0][3].length+1);\n                    }\n                    else if(_x%2&&tempEdges[0][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[0][3].length+1);\n                    }\n                    tempEdges[0][3].push(tempArr.length);\n                  }\n                } else if(j === _y-1){\n                  if(k===_z-1){\n                    if(tempEdges[1][0].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][0].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][0].length+1);\n                    }\n                    tempEdges[1][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(tempEdges[1][1].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][1].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][1].length+1);\n                    }\n                    tempEdges[1][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(tempEdges[1][2].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][2].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][2].length+1);\n                    }\n                    tempEdges[1][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(tempEdges[1][3].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[1][3].length+1);\n                    }\n                    else if(_x%2&&tempEdges[1][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[1][3].length+1);\n                    }\n                    tempEdges[1][3].push(tempArr.length);\n                  }\n                } else {\n                  if(k===_z-1 && i===0){\n                    if(tempEdges[2][0].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][0].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                        edgeType=\"secondHalf\"+(tempEdges[2][0].length+1);\n                    }\n                    tempEdges[2][0].push(tempArr.length);\n                  }\n                  else if(k===_z-1 && i===_x-1){\n                    if(tempEdges[2][1].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][1].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                      edgeType=\"secondHalf\"+(tempEdges[2][1].length+1);\n                    }\n                    tempEdges[2][1].push(tempArr.length);\n                  }\n                  else if(k===0 && i===_x-1){\n                    if(tempEdges[2][2].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][2].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                      edgeType=\"secondHalf\"+(tempEdges[2][2].length+1);\n                    }\n                    tempEdges[2][2].push(tempArr.length);\n                  }\n                  else if(k===0 && i===0){\n                    if(tempEdges[2][3].length+1<Math.floor(_x/2)){\n                      edgeType=\"firstHalf\"+(tempEdges[2][3].length+1);\n                    }\n                    else if(_x%2&&tempEdges[2][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    else{\n                      edgeType=\"secondHalf\"+(tempEdges[2][3].length+1);\n                    }\n                    tempEdges[2][3].push(tempArr.length);\n                  }\n                }\n              }\n              else if(tempCount===3) {\n                tempType = \"corner\";\n                corners.push(tempArr.length);\n              }\n  \n            tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\n                          i,j,k, // Current position x,y,z\n                          i,j,k, // solved position x,y,z\n                          tempType,\n                          edgeType,\n                          middleType\n                        ]);\n          }\n        }\n      }\n      //console.log(tempArr);\n      return tempArr;\n    },\n\n    generateButtonData : function(size){\n        let numLayers = Math.floor(size/2);\n        let centerLayer = Math.ceil(size/2);\n        const faces = ['F','U','R','B','L','D'];\n        const buttons = {\n          center : [], // Center rotations\n          single : [], // Single layer\n          multi : []  // Multi layer\n        };\n\n        if(size%2)\n          buttons.center.push(\n            {clockwise: {name:\"C1\",data:[0,-1,centerLayer,false]},\n             counter: {name:\"C1'\",data:[0,0,centerLayer,false]}},\n            {clockwise: {name:\"C2\",data:[1,-1,centerLayer,false]},\n            counter: {name:\"C2'\",data:[1,0,centerLayer,false]}},\n            {clockwise: {name:\"C3\",data:[2,-1,centerLayer,false]},\n            counter: {name:\"C3'\",data:[2,0,centerLayer,false]}}\n          )\n\n        for (let i = 0; i < numLayers; i++){\n          for(let j = 0; j < faces.length; j++){\n            let baseNameSingle = ((i<10? \"0\" : \"\") + (i+1) + faces[j]);\n            let baseNameMulti = ((i<10? \"0\" : \"\") + (i+1) + faces[j].toLowerCase());\n\n            buttons.single.push({\n              clockwise: {face:faces[j], name:baseNameSingle, data:[j,-1,i+1,false]},\n              counter: {face:faces[j], name:baseNameSingle+\"'\",data:[j,0,i+1,false]}\n            });\n            if(i>0){\n              buttons.multi.push({\n                clockwise: {face:faces[j],name:baseNameMulti, data:[j,-1,i+1,true]},\n                counter: {face:faces[j],name:baseNameMulti+\"'\",data:[j,0,i+1,true]}\n              });\n            }\n          }\n        }\n\n        return buttons;\n    },\n\n    generateMoveHints : function(image,cD){\n      const groups = [[],[],[],[],[],[]];\n      const geometry = new THREE.PlaneGeometry(1,1);\n      const material = new THREE.MeshBasicMaterial( {\n        map:image,\n        transparent: true,\n        color: 'black',\n        opacity:'.8',\n        side: THREE.DoubleSide\n      });\n\n      for(let k = 0; k < cD; k++){\n        let tempGroup = new THREE.Group();\n        let tempGroupOther = new THREE.Group();\n        for(let i = 0; i < 4; i++){\n          for(let j = 0; j<cD;j++){\n            let tempPlane = new THREE.Mesh( geometry, material );\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\n            if(i===0){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ((cD-1)+.51);\n              tempPlane.translateY((cD-1)-j);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ((cD-1)+.51);\n              tempPlaneOther.translateY((cD-1)-j);\n              tempPlaneOther.rotateZ(Math.PI);\n            }\n            else if(i===1){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY((cD-1)+.51);\n              tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY((cD-1)+.51);\n              tempPlaneOther.rotateX(Math.PI/2);\n            }\n            else if(i===2){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ(-.51);\n              tempPlane.translateY((cD-1)-j);\n              tempPlane.rotateX(Math.PI);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ(-.51);\n              tempPlaneOther.translateY((cD-1)-j);\n            }\n            else if(i===3){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY(-.51);\n              tempPlane.rotateX(-Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY(-.51);\n              tempPlaneOther.rotateX(-Math.PI/2);\n            }\n            tempGroup.add(tempPlane)\n            tempGroupOther.add(tempPlaneOther)\n          }\n        }\n        tempGroup.visible = false;\n        tempGroupOther.visible = false;\n        groups[2].push(tempGroup);\n        groups[5].push(tempGroupOther);\n      }\n  \n      // generate side 0 and 3 move hints\n      for(let k = 0; k < cD; k++){\n        let tempGroup = new THREE.Group();\n        let tempGroupOther = new THREE.Group();\n        for(let i = 0; i < 4; i++){\n          for(let j = 0; j<cD;j++){\n            let tempPlane = new THREE.Mesh( geometry, material );\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\n            if(i===0){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ((cD-1)+.51);\n              tempPlane.translateY(k);\n              tempPlane.rotateZ(-Math.PI/2);\n              \n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ((cD-1)+.51);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateX(Math.PI);\n              tempPlaneOther.rotateZ(Math.PI/2);\n            }\n            else if(i===1){\n              tempPlane.translateX((cD-1)+.51);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY(k);\n              tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)+.51);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateX(Math.PI/2);\n              tempPlaneOther.rotateY(Math.PI/2);\n            }\n            else if(i===2){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ(-.51);\n              tempPlane.translateY(k);\n              tempPlane.rotateX(Math.PI);\n              tempPlane.rotateZ(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ(-.51);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateZ(-Math.PI/2);\n            }\n            else if(i===3){\n              tempPlane.translateX(-.51);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY(k);\n              tempPlane.rotateX(-Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(-Math.PI/2);\n  \n              tempPlaneOther.translateX(-.51);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateX(-Math.PI/2);\n              tempPlaneOther.rotateY(Math.PI/2);\n              //tempPlaneOther.rotateZ(Math.PI);\n            }\n            tempGroup.add(tempPlane)\n            tempGroupOther.add(tempPlaneOther)\n          }\n        }\n        tempGroup.visible = false;\n        tempGroupOther.visible = false;\n        \n        groups[0].push(tempGroup);     //Clockwise for white, counter for yellow\n        groups[3].push(tempGroupOther);//Counter for white, clockwise for yellow\n      }\n  \n      // generate side 1 and 5 move hints\n      for(let k = 0; k < cD; k++){\n        let tempGroup = new THREE.Group();\n        let tempGroupOther = new THREE.Group();\n        for(let i = 0; i < 4; i++){\n          for(let j = 0; j<cD;j++){\n            let tempPlane = new THREE.Mesh( geometry, material );\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\n            if(i===0){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY((cD-1)+.51);\n              tempPlane.rotateZ(-Math.PI/2);\n              tempPlane.rotateY(Math.PI/2);\n              \n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY((cD-1)+.51);\n              tempPlaneOther.rotateX(Math.PI);\n              tempPlaneOther.rotateZ(Math.PI/2);\n              tempPlaneOther.rotateY(Math.PI/2);\n            }\n            else if(i===1){\n              tempPlane.translateX((cD-1)+.51);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY((cD-1)-j);\n              //tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)+.51);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY((cD-1)-j);\n              //tempPlaneOther.rotateX(Math.PI);\n              tempPlaneOther.rotateY(Math.PI/2);\n            }\n            else if(i===2){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY(-.51);\n              tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY(-.51);\n              tempPlaneOther.rotateX(Math.PI/2);\n              tempPlaneOther.rotateZ(-Math.PI/2);\n            }\n            else if(i===3){\n              tempPlane.translateX(-.51);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY((cD-1)-j);\n              tempPlane.rotateX(Math.PI);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(-Math.PI/2);\n  \n              tempPlaneOther.translateX(-.51);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY((cD-1)-j);\n              tempPlaneOther.rotateX(-Math.PI);\n              tempPlaneOther.rotateY(Math.PI/2);\n              //tempPlaneOther.rotateZ(Math.PI);\n            }\n            tempGroup.add(tempPlane)\n            tempGroupOther.add(tempPlaneOther)\n          }\n        }\n        tempGroup.visible = false;\n        tempGroupOther.visible = false;\n        \n        groups[1].push(tempGroup);     //Clockwise for white, counter for yellow\n        groups[4].push(tempGroupOther);//Counter for white, clockwise for yellow\n      }\n      return groups;\n    },\n\n    // For visual cube\n    rotatePoint : function (c1,c2,direction,p1,p2,rotation){\n        let theta = rotation*Math.PI/180;\n        if(direction < 0) theta*=-1; \n        return { p1 : (Math.cos(theta) * (p1-c1) - Math.sin(theta) * (p2-c2) + c1),\n                 p2 : (Math.sin(theta) * (p1-c1) + Math.cos(theta) * (p2-c2) + c2)}\n    },\n\n    // rotate pieces attached to face (visual cube)\n    /**\n     * \n     * Possible Optimization!\n     * \n     * Instead of turning each piece individually,\n     * group the pieces to be turned and then turn the group.\n     * - Pros\n     *    - Less Code\n     *    - Easier on the renderer\n     * \n     * - Cons\n     *    - Not sure where to attempt implementation\n     * \n     * Development Stage: Trial\n     * \n     * - Resources\n     *    - https://jsfiddle.net/of1vfhzz/1/\n     *    - https://stackoverflow.com/questions/37779104/how-can-i-rotate-around-the-center-of-a-group-in-three-js\n     */\n    rotatePieces : function (rotate,tempCubes,state,setState){\n\n      // state variables asigned for shorter names\n      let centerPoint = state.cubeDimension/2-.5;\n      let cubes = state.cubes;\n      let turnDirection = state.turnDirection;\n      let speed = state.speed;\n      let start = state.start;\n      let face = state.face;\n      let cubeDepth = state.cubeDepth;\n      let isMulti = state.isMulti;\n\n      \n      //Rotate white center piece Face\n      if(face === 0){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n\n          //implement isMulti for all of these comparisons\n          if((isMulti || cubes[i].position.y > cubeDepth-2) && cubes[i].position.y < cubeDepth){\n            \n            // Turn piece based on rotation direction\n            turnDirection<0 ? cubes[i].rotation.y += .1745*speed/10 : cubes[i].rotation.y -= .1745*speed/10;\n\n            // Calculate circular movement\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.z,speed);\n\n            // corrects rounding errors\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            \n            // set new locations for face 0\n            cubes[i].position.x = newPoint.p1;\n            cubes[i].position.z = newPoint.p2;\n          }\n        }     \n      }\n      // blue\n      if(face === 1){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || cubes[i].position.z < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.z > state.cubeDimension - 1 - cubeDepth){\n            turnDirection<0 ? cubes[i].rotation.z -= .1745*speed/10 : cubes[i].rotation.z += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.y,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            cubes[i].position.x = newPoint.p1;\n            cubes[i].position.y = newPoint.p2;\n          }\n        }\n      }\n      // red\n      if(face === 2){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.x < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.x > state.cubeDimension - 1 - cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.y = newPoint.p1;\n            tempCubes[i].position.z = newPoint.p2;\n          }\n        }\n      }\n      // yellow\n      if(face === 3){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.y < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.y > state.cubeDimension - 1 - cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.y += .1745*speed/10 : tempCubes[i].rotation.y -= .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.z,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.x = newPoint.p1;\n            tempCubes[i].position.z = newPoint.p2;\n          }\n        }\n      }\n      // orange\n      if(face === 4){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.x > cubeDepth-2) && cubes[i].position.x < cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);              \n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.y = newPoint.p1;\n            tempCubes[i].position.z = newPoint.p2;\n          }\n        }\n      }\n      // green\n      if(face === 5){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.z > cubeDepth-2) && cubes[i].position.z < cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.z -= .1745*speed/10 : tempCubes[i].rotation.z += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.y,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.x = newPoint.p1;\n            tempCubes[i].position.y = newPoint.p2;\n          }\n        }\n      } \n\n      return {start : start+speed,reload : true};\n    },\n    \n    // For memory cube\n    rotatePoint2 : function (c1,c2,direction,p1,p2){\n        let theta = Math.PI/2;\n        if(direction < 0) theta*=-1; \n        return { p1 : (- Math.sin(theta) * (p2-c2) + c1),\n                 p2 :   (Math.sin(theta) * (p1-c1) + c2)}\n    },\n\n    // Memory cube rotation (only rotates by 90 degrees at a time)\n    rotateFace : function (cubeFace,direction,cubeDepth,isMulti,cD,object){\n      let cubeDimension = cD;\n      let centerPoint = cD/2-.5;\n      let rubiksObject = [...object];\n      let degrees = 90;\n  \n      if(direction < 0)  degrees *=-1;\n  \n      // Side 0 (white center piece)\n      if (cubeFace === 0){ \n          for(let i = 0; i < rubiksObject.length; i++){\n  \n              // white side is y===0.\n              if ((isMulti || rubiksObject[i][7] > cubeDepth-2) &&\n                  rubiksObject[i][7] < cubeDepth){\n  \n                  // Rotate rubiksObject pieces to new location generated by rotatePoint2\n                  let newPoint = cube.rotatePoint2(centerPoint,\n                                                   centerPoint,\n                                                   degrees,\n                                                   rubiksObject[i][6],\n                                                   rubiksObject[i][8]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n  \n                  // Unfortunately chunky\n                  // Swaps colors around on the face to match rotations\n                  if(direction === 0){\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  }\n              }\n          }\n      }\n  \n      // Side 1 (blue center piece)\n      if (cubeFace === 1){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][8] < cubeDimension+1-cubeDepth) &&\n                  rubiksObject[i][8]>cubeDimension-1-cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,\n                                                   centerPoint,\n                                                   degrees,\n                                                   rubiksObject[i][6],\n                                                   rubiksObject[i][7]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][7] = newPoint.p2;\n                  if(direction === 0){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  }\n              }\n          }\n      }\n      // Side 2 (red center piece)\n      if (cubeFace === 2){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][6] < cubeDimension+1-cubeDepth) &&\n                  rubiksObject[i][6]>cubeDimension-1-cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,\n                                                   centerPoint,\n                                                   degrees,\n                                                   rubiksObject[i][7],\n                                                   rubiksObject[i][8]);\n                  rubiksObject[i][7] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n                  if(direction === 0){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][1];\n                      rubiksObject[i][1] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][5];\n                      rubiksObject[i][5] = tempFace;\n                  }\n              }\n          }\n      }\n      // Side 3 (yellow center piece)\n      if (cubeFace === 3){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][7] < cubeDimension+1-cubeDepth) && rubiksObject[i][7]>cubeDimension-1-cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][8]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n                  if(direction === -1){\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  }\n              }\n          }\n      }\n      // Side 4 (orange center piece)\n      if (cubeFace === 4){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][6] > cubeDepth-2) && rubiksObject[i][6] < cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][7],rubiksObject[i][8]);\n                  rubiksObject[i][7] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n                  if(direction === -1){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][5];\n                      rubiksObject[i][5] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][1];\n                      rubiksObject[i][1] = tempFace;\n                  }\n              }\n          } \n      }\n      // Side 5 (green center piece)\n      if (cubeFace === 5){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][8] > cubeDepth-2) && rubiksObject[i][8] < cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][7]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][7] = newPoint.p2;\n                  if(direction === -1){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  }\n              }\n          } \n      }\n  \n      //add the move updates to state\n      // setState({rubiksObject : rubiksObject}, () =>{\n      // });\n      return rubiksObject;\n    }\n}\n\nexport default cube;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React,{Component} from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport \"./SolverUI.css\";\nimport algorithms from \"../../cubeFunctions/algorithms\";\nimport cube from '../../cubeFunctions/cube';\n\nclass SolverUI extends Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    \n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoRewind:false});\n            }\n            nextProps.rewindOne();\n        }\n        else if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoRewind:false});\n        }\n\n        if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoPlay:false});\n            }\n            nextProps.playOne(nextProps);\n        }\n        else if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoPlay:false});\n        }\n    }\n\n    componentDidUpdate() {\n        if(document.querySelector(\".nextSolveIndex\")&&this.props.state.autoScroll) {\n            document.querySelector(\".nextSolveIndex\").scrollIntoView(true);\n            this.props.setState({autoScroll:false});\n        }\n    }\n\n    render(){\n        \n        let solverSet = [];\n        let prevSet = this.props.state.prevSet;\n        let moveSet = this.props.state.moveSet;\n        let defaultMessage = this.props.state.currentFunc===\"Solving\"?\"Already solved\":\"None Selected\";\n        let jumperButtons = [<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={0} className=\"solveMoveDiv jumper\" key={-1}>Top</div>];\n        !this.props.state.solvedSet.length?\n        solverSet.push(defaultMessage):\n        this.props.state.solvedSet.forEach((el,i)=>el===this.props.state.solvedSet[i+1]?\n            <></>:\n            el===\"stop'\"? \n            (solverSet.push(<div key={i} style={{width:\"100%\"}}><hr key={i} style={{border:\"1px solid lightblue\",marginLeft:\"5px\"}}></hr>{jumperButtons.length===1?\"Edges: \":\"3x3: \"}</div>),jumperButtons.push(\n                jumperButtons.length===1?<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>Edge</div>:\n                <div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>3x3</div>\n            )):\n            el===this.props.state.solvedSet[i-1]?\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i-1} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i-1} \n                        className=\"solveMoveDiv\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\")}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i} className=\"solveMoveDiv\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\")}</div>)\n        )\n        \n        let algorithmSet = [];\n        \n        algorithms.forEach(algo=>algo.worksFor.includes(this.props.state.cubeDimension)?\n            algorithmSet.push(<button id={algo.name} key={algo.name} className={this.props.state.activeAlgo===algo.name?\n                \"algoButton algoActive\":\"algoButton\"} onClick={(e)=>algoStart(e,this.props)}>{algo.name}</button>)\n                :\"\")\n\n        let previousMove = \n            <div className=\"previousMove\">\n                {prevSet.length-1>=0?\n                    prevSet[prevSet.length-1]===\"stop'\"?\n                        prevSet[prevSet.length-2]?\n                            prevSet[prevSet.length-2]===prevSet[prevSet.length-3]?\n                                prevSet[prevSet.length-2].replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+2\n                            :\n                                prevSet[prevSet.length-2].replace(\"01\",\"\").replace(\"0\",\"\")\n                        :\n                            \"-\"\n                    :\n                        prevSet[prevSet.length-1]===prevSet[prevSet.length-2]?\n                            prevSet[prevSet.length-1].replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+2\n                        :\n                            prevSet[prevSet.length-1].replace(\"01\",\"\").replace(\"0\",\"\")\n                :\n                    \"-\"}\n            </div>\n\n        let nextMove = \n            <div className=\"nextMove\">\n                {moveSet[0]&&typeof(moveSet[0][0])==='string'&&moveSet[0]!==\"'\"?\n                    moveSet[0]===\"stop'\"?\n                        moveSet[1]?\n                            moveSet[1]===moveSet[2]?\n                                moveSet[1].replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+2\n                            :\n                                moveSet[1].replace(\"01\",\"\").replace(\"0\",\"\")\n                        :\n                            \"-\"\n                    :\n                        moveSet[0]===moveSet[1]?\n                            moveSet[0].replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+2\n                        :\n                            moveSet[0].replace(\"01\",\"\").replace(\"0\",\"\")\n                :\n                    \"-\"\n                }\n            </div>;\n\n\n\n        function stay(){\n            document.querySelector(\".warningPopupSolver\").style.display=\"none\";\n        }\n\n        function leave(e,props){\n            e.stopPropagation();\n            props.stopSolve();\n\n            if( document.querySelector(\".activeMenu\")){\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n            }\n\n            if(document.querySelector(\"#solverChangeData\").data){\n                let data = document.querySelector(\"#solverChangeData\").data.split(\",\");\n                if(data[0]===\"ColorPicker\"){\n                    props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                    document.querySelector(\"#solverChangeData\").data=\"\";\n                    return;\n                }\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n                props.setState({activeMenu:data[0],currentFunct:data[1],isValidConfig:false});\n                document.querySelector(\"#solverChangeData\").data=\"\";\n                \n            }\n            else{\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n            }\n        }\n\n        function fastforward(props){\n            if(!props.state.moveSet.length) return;\n            props.state.moveSet.length===1 ? \n                props.playOne(props):\n                props.setState({\n                    autoPlay:true,\n                    autoRewind:false,\n                    targetSolveIndex:props.state.solvedSet.length});\n        }\n\n        function fastrewind(props){\n            props.setState({autoPlay:false,autoRewind:true,targetSolveIndex:0});\n        }\n\n        function pauseSolver(props){\n            props.setState({autoPlay:false,autoRewind:false});\n        }\n\n        function preSetTarget(e,props,setTarget){\n            props.setState({autoScroll:true});\n            setTarget(e,props);\n        }\n\n        //add small fix for jumping to double moves\n        function setTarget(e,props){\n            e.stopPropagation();\n            if(props.state.autoPlay||props.state.autoRewind){\n\n            }\n            else if(parseInt(e.target.id)-props.state.solvedSetIndex===1){\n                props.setState({targetSolveIndex:parseInt(e.target.id)});\n                props.playOne(props);\n            }\n            else if(props.state.solvedSetIndex<=parseInt(e.target.id)){\n                props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\n                let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\n                let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\n                let forwardMoves = props.state.solvedSet.slice(props.state.solvedSetIndex,parseInt(e.target.id));\n\n                props.setState({\n                    solvedSetIndex:parseInt(e.target.id),\n                    prevSet:prevSetNew,\n                    moveSet:moveSetNew,\n                    rubiksObject:props.autoJump(props.state,forwardMoves)})\n            }\n            else if(props.state.solvedSetIndex>parseInt(e.target.id)) {\n                props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\n                let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\n                let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\n                let backwardMoves= props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSetIndex)\n                    .map(move=>move.length===4?move.slice(0,3):(move+\"'\"));\n\n                props.setState({\n                    solvedSetIndex:parseInt(e.target.id),\n                    prevSet:prevSetNew,\n                    moveSet:moveSetNew,\n                    rubiksObject:props.autoJump(props.state,backwardMoves.reverse())})\n            }\n        }\n\n        function algoStart(e,props){\n            let cD = props.state.cubeDimension;\n            let algo = null;\n            try{algo = e.target.id}catch{algo = e};\n            let algoSet = [];\n            let generated = cube.generateSolved(cD,cD,cD);\n            algorithms.forEach(set=>{\n                if(set.moves&&set.name===algo&&set.worksFor.includes(cD)) algoSet.push(...set.moves.split(\" \"));\n            });\n            props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[]});\n        }\n\n        function optionClick(e,props){\n            switch(props.state.currentFunc){\n                case \"Solving\":\n                    document.querySelector(\".warningPopupSolver\").style.display=\"block\";\n                    break;\n                case \"Algorithms\":\n                    //this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [], moveSet : [],targetSolveIndex:-1,solvedSet:[]});\n                    props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n                    break;\n                default:\n                    props.setState({activeMenu:\"\",currentFunct:\"None\"});\n            }\n\n        }\n\n        return(<div className=\"solverUIWrapper\">\n            <Row style={{width:\"100%\",height:\"100%\",margin:0}}>\n                <Col id={(!this.props.mobile&&this.props.state.currentFunc===\"Algorithms\")?\"centerControls2\":\"\"} style={{paddingLeft:\"0px\"}}> \n                    {!this.props.mobile?<>\n                    <div className=\"solverMoves\">\n                        \n                        {solverSet}\n                        \n                    </div></>:<>\n                    {this.props.state.currentFunc===\"Algorithms\"?<><Row style={{paddingLeft:\"15px\"}}>\n                        {/* <label htmlFor=\"patterns\" style={{color:\"lightgrey\"}}>Choose a Pattern:</label> */}\n\n                        <select style={{color:\"lightgrey\",backgroundColor:\"#343a40\"}} id=\"patterns\" onChange={(e) => algoStart(e.target.value.replace(\" \",\"\"),this.props)}>\n                        {algorithms.map(algo=>algo.worksFor.includes(this.props.state.cubeDimension)?\n                            <option className=\"mobileAlgo\" id={algo.name.replace(\" \",\"\")} value={algo.name} key={algo.name}>{algo.name}</option>\n                                :\"\")}\n                        </select>\n                    </Row>\n                    <Row style={{paddingLeft:\"15px\"}}>\n                        <div className=\"algoMoves\">\n                            \n                            {solverSet}\n                            \n                        </div>\n                        \n                    </Row></>:<>\n                    <div className=\"solverMovesMobile\">\n                            \n                            {solverSet}\n                            \n                        </div>\n                    </>\n                    }</>\n                    }\n                </Col>\n                <Col id={(!this.props.mobile&&this.props.state.currentFunc===\"Algorithms\")?\"centerControls\":\"\"} style={{paddingRight:0,paddingLeft:0,maxWidth:\"300px\"}}>\n                    \n                    <div className=\"solverInterface\">\n                        <div className=\"warningPopupSolver\">\n                            <div id=\"solverChangeData\" data=\"\"></div>\n                            <div className=\"solverMessage\">Are you sure you want to leave Solver? Progress will not be saved.</div>\n                            <button onClick={stay} className=\"solverLeaveStay\">Stay</button><button onClick={(e)=>leave(e,this.props)} className=\"solverLeaveStay\">Leave</button>\n                        </div>\n                        <div className=\"solverButtonDiv rewindOne\">\n                            <button \n                                className={`solverButton`}\n                                onClick={() => this.props.rewindOne(this.props)}> \n                            Previous {previousMove}\n                            </button>\n                        </div>\n                        <div className=\"solverButtonDiv playOne\">\n                            <button \n                                className={`solverButton`}\n                                onClick={() => this.props.playOne(this.props)}> \n                            Next {nextMove}\n                            </button>\n                        </div>\n                        <div className=\"solverButtonDiv rewindAll\">\n                            {this.props.state.autoRewind?\n                            <button \n                                className={`solverButton`}\n                                onClick={() => pauseSolver(this.props)}> \n                            <div style={{width:\"100%\"}}>Pause</div> Solver\n                            </button>\n                            :\n                            <button \n                                className={`solverButton`}\n                                onClick={() => fastrewind(this.props)}> \n                            <div style={{width:\"100%\"}}>Auto</div> Rewind\n                            </button>\n                            }\n                        </div>\n                        <div className=\"solverButtonDiv fastforward\">\n                           {this.props.state.autoPlay?\n                            <button \n                                className={`solverButton`}\n                                onClick={() => pauseSolver(this.props)}> \n                            <div style={{width:\"100%\"}}>Pause</div> Solver\n                            </button>\n                            :\n                            <button \n                                className={`solverButton`}\n                                onClick={() => fastforward(this.props)}> \n                            <div style={{width:\"100%\"}}>Auto</div> Forward\n                            </button>\n                            } \n                        </div>\n                        \n                        \n                    </div>\n                    <div className=\"exitDiv\" style={{width:\"100%\",height:\"25%\"}}>\n                        {/* <button id=\"blankExit\"></button> */}\n                    {this.props.state.currentFunc===\"Solving\"?<>\n                        <button id=\"Solver\" data=\"Solving\" onClick={(e)=>optionClick(e,this.props)} className=\"exitButton\">Exit</button></>:\n                        <button id=\"Algorithms\" data=\"Algorithms\" onClick={(e)=>optionClick(e,this.props)} className=\"exitButton\">Exit</button>}\n                    </div>\n\n                </Col>\n                \n            </Row>\n        </div>\n    )}\n}\n\nexport default React.memo(SolverUI);","import React from \"react\";\nimport \"./ColorPicker.css\";\n\nconst ColorPicker = (props) => {\n\n    let colors = {\n        'white':[255,255,255],\n        'blue':[0,0,255],\n        'red':[255,0,0],\n        'yellow':[255,255,0],\n        'orange':[255,165,0],\n        'green':[0,255,0]\n    }\n\n    const capitalized = props.color.charAt(0).toUpperCase() + props.color.slice(1);\n    const unselected = props.color===props.colorPicked?\"\":props.color;\n    \n    return(\n        <div \n            onClick={e=>{e.stopPropagation();e.nativeEvent.stopImmediatePropagation();}}\n            className={`${props.side?\"bottomColorButtonDiv\":\"colorButtonDiv\"} ${props.index%2?\"leftCp\":\"rightCp\"}`}>\n        <button\n            className={`colorPicker ${unselected}`}\n            style={{\n                backgroundColor:unselected?`rgba(0,0,255,.10)`:`rgba(${colors[props.color]},.5)`,\n                color:props.color\n            }} \n            onClick={(e)=>{e.stopPropagation();e.nativeEvent.stopImmediatePropagation();props.changeColor(props.color);}}>\n                {props.isMobile?capitalized:`${props.index}. ${capitalized}`}\n        </button>\n        </div>\n    );\n\n}\n\nexport default ColorPicker;","import React from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport ColorButton from \"./ColorButton\";\nimport \"./ColorPicker.css\";\n\nconst ColorPicker = (props) => {\n    const colors = [\"white\",\"blue\",\"red\",\"yellow\",\"orange\",\"green\"];\n    const li = [];\n    props.cpErrors.forEach(function(error,i){\n        li.push(<p key={i} style={{color:\"red\",fontSize:\".8rem\",textAlign:\"left\",listStyle:\"none\",margin:\"2px\",lineHeight: \"15px\"}}>\n            {\"- \"+error}\n        </p>);\n    });\n    function leave(){\n        //console.log(document.querySelector(\"#cpChangeData\").data)\n        props.endColorPicker();\n\n        if( document.querySelector(\".activeMenu\")){\n            document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n        }\n\n        if(document.querySelector(\"#cpChangeData\").data){\n            let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\n            if(data[0]===\"Solver\") {\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                document.querySelector(\"#cpChangeData\").data=\"\";\n                return;\n            }\n            document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n            document.querySelector(\"#cpChangeData\").data=\"\";\n\n            props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>props.beginSolve());\n        }\n        else{\n            props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n        }\n    }\n    function stay(){\n        document.querySelector(\".warningPopup\").style.display=\"none\";\n    }\n\n    function optionClick(e){\n        document.querySelector(\".warningPopup\").style.display=\"block\";\n    }\n\n    return (\n        <Row className=\"cp-container\" style={{height:\"98%\",width:\"100%\", overflowX:\"hidden!important\",overflowY:\"hidden!important\",margin:\"0px\"}}>\n            <Col>\n                <div className=\"cpInfo\">\n                    {\n                        props.isValidConfig?\n                        <div className=\"solveCpDiv\"><button className=\"solveCp\" onClick={()=>props.setColorPickedCube()}>\n                            <strong style={{color:'green',fontSize:'1rem'}}>Solve</strong>\n                        </button></div>:\n                        []\n                    }\n                    <div style={{fontSize:\".5rem\"}}>\n                        \n                            {li}\n                    </div>\n                </div>\n            </Col>\n            <Col style={{padding:\"0px\"}}>\n                <div className=\"colorButtonContainer\">\n                    <div className=\"warningPopup\">\n                        <div id=\"cpChangeData\" data=\"\"></div>\n                        <div className=\"cpMessage\">Are you sure you want to leave Color Picker?</div>\n                        <button onClick={stay} className=\"cpLeaveStay\">Stay</button><button onClick={leave} className=\"cpLeaveStay\">Leave</button>\n                    </div>\n                    {colors.map((color,i)=><ColorButton\n                        index={i+1} \n                        key={color}\n                        color={color}\n                        colorPicked={props.colorPicked}\n                        changeColor={props.changeColor}\n                        isMobile={props.isMobile}\n                    />)}\n                    <div className=\"colorButtonDiv\" style={{paddingBottom:\"0px\",width:\"100%\"}}>\n                        <button id=\"ColorPicker\" data=\"Color Picker\" onClick={optionClick} className=\"colorPicker activeMenu colorPickerExit\">Exit</button>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n        );\n\n};\n\nexport default ColorPicker;","import React, {Component} from \"react\";\nimport \"../MenuWrapper/MenuWrapper.css\";\nimport \"./MobileView.css\"\nimport Controls from \"../Controls\";\nimport SolverUI from \"../SolverUI/SolverUI\";\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\nimport {Row, Col, Button} from \"react-bootstrap\";\n\nconst optionLimitCP = 5;\nconst optionLimitSOLVER = 5;\n\nclass Mobile extends Component {\n\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        \n\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\n\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\n\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\n\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\n\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\n           this.props.cpErrors===nextProps.cpErrors&&\n           this.props.state.solveTime===nextProps.state.solveTime&&\n           this.props.state.playOne===nextProps.state.playOne&&\n           !this.props.state.autoPlay) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\n\n        return true;\n    }\n\n    render(){\n        function otherOptionClick(e,props){\n            switch(e.target.id){\n                case 'Reset':\n                    props.setState({activeMenu:\"\",currentFunc:\"Reset\"});\n                    break;\n                case 'Scramble':\n                    if(props.state.currentFunc===\"None\"){\n                        props.beginScramble();\n                    }\n                    break;\n                default:\n                    props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\n            }\n        }\n\n        function optionClick(e,props){\n            if(props.state.currentFunc===\"None\") {\n                if(e.target.id===\"ColorPicker\"){\n                    \n                    props.setState({activeMenu:e.target.id,isValidConfig:true});\n                    props.beginColorPicker();\n                }\n                else if(e.target.id===\"Solver\"){\n                    props.setState({activeMenu:e.target.id});\n                    props.beginSolve();\n                }\n                else if(e.target.id===\"Algorithms\"){\n                    //props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n                    props.setState({activeMenu:e.target.id,currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[]});\n                }\n            }\n        }\n\n        return (\n        <div className=\"menuWrapper\">\n            {(this.props.state.currentFunc === \"None\"||this.props.state.currentFunc === \"Drag Turn\"||this.props.state.currentFunc === \"Undo\"||this.props.state.currentFunc === \"Redo\"||this.props.state.currentFunc === \"Scrambling\")&&this.props.state.activeMenu!==\"Moves\"?\n                <Row style={{width:\"100%\", height:\"100%\", margin: 0}}>\n                    <Col xs={6} style={{paddingRight:\"7.5px\"}}>\n                        {this.props.state.cubeDimension<=optionLimitCP?\n                            <><button className=\"mobileButton\" id=\"ColorPicker\" data=\"Color Picker\" onClick={(e)=>optionClick(e,this.props)} key={1}>Color Picker</button> \n                            <button className=\"mobileButton\" id=\"Solver\" data=\"Solving\" onClick={(e)=>optionClick(e,this.props)} key={2}>Solver</button></>\n                            :<>\n                            <button className=\"blankButton\" key={1}></button>\n                            <button className=\"blankButton\" key={2}></button></>\n                        } \n                        <button className=\"mobileButton\" id=\"Algorithms\" data=\"Algorithms\" onClick={(e)=>optionClick(e,this.props)} key={3}>Patterns</button> \n                    </Col>\n                    <Col xs={6} style={{paddingLeft:\"7.5px\"}}>\n                        {this.props.state.cubeDimension<1?\n                            <button className=\"mobileButton\" onClick={()=>otherOptionClick} key={0}>Moves</button>:\n                            <button className=\"blankButton\" key={0}></button>\n                        }    \n                        <button className=\"mobileButton\" id=\"Scramble\" onClick={(e)=>otherOptionClick(e,this.props)} key={2}>Scramble</button>\n                        <button className=\"mobileButton\" id=\"Reset\" onClick={(e)=>otherOptionClick(e,this.props)}  key={3}>Reset</button>\n                    </Col>\n                </Row>\n            :\n                this.props.state.currentFunc === \"Color Picker\"?\n                <ColorPicker {...this.props} isMobile={true}></ColorPicker>:\n                this.props.state.currentFunc === \"Solving\"?\n                <SolverUI {...this.props} mobile={true}/>:\n                this.props.state.currentFunc === \"Algorithms\"?\n                <><SolverUI {...this.props} mobile={true}/></>\n                :\n                this.props.state.activeMenu===\"Moves\"?\n                    <Row style={{height: \"100%\"}}>\n                        <Col xs={2}>\n                            <div id=\"infoBtn\" style={{fontSize:\"2rem\",padding:0,display:\"inline\"}} onClick={()=>{this.props.setState({activeMenu:\"\"})}}>←</div>\n                        </Col>\n                        <Col xs={10}>\n                            <Controls {...this.props}/>\n                        </Col>\n                    </Row>\n                :<></>\n            }\n            \n        </div>)\n    }\n}\n\nexport default Mobile;","import React from \"react\";\nimport \"./MenuOptions.css\"\nimport algorithms from \"../../cubeFunctions/algorithms\";\nimport cube from '../../cubeFunctions/cube';\n\nconst optionLimitCP = 5;\nconst optionLimitSOLVER = 5;\n\nconst MenuOptions = props => {\n        let algorithmSet = \n            algorithms\n                .filter(algo=>algo.worksFor.includes(props.state.cubeDimension))\n                .map(algo=>\n                    <button \n                        id={algo.name} \n                        key={algo.name}\n                        className={\n                            props.state.activeAlgo===algo.name?\n                                \"algoButton algoActive\":\"algoButton\"\n                        }\n                        onClick={(e)=>algoStart(e,props)}>\n                        {algo.name}\n                    </button>\n                    );\n                \n        // algorithms.forEach(algo=>algo.worksFor.includes(props.state.cubeDimension)?\n        //     algorithmSet.push(<button id={algo.name} key={algo.name} className={props.state.activeAlgo===algo.name?\n        //         \"algoButton algoActive\":\"algoButton\"} onClick={(e)=>algoStart(e,props)}>{algo.name}</button>)\n        //         :\"\")\n\n        const baseOptions = <>\n           {props.state.cubeDimension<=optionLimitCP?<button id=\"ColorPicker\" key=\"Color Picker\" data=\"Color Picker\" onClick={optionClick} className=\"leftButton\">Color Picker</button>:<button className=\"leftButton invis\"></button>}\n           {props.state.cubeDimension<=optionLimitSOLVER?<button id=\"Solver\" key=\"Soler\" data=\"Solving\" onClick={optionClick} className=\"leftButton\">Solver</button>:<button className=\"leftButton invis\"></button>}\n           {algorithmSet.length?<button id=\"Algorithms\" key=\"Algorithms\" data=\"None\" onClick={optionClick} className=\"leftButton\">Algorithms</button>:<button className=\"leftButton invis\"></button>}\n        </>\n\n        \n\n        function algoStart(e,props){\n            if(props.state.autoPlay||props.state.autoRewind||props.state.playOne) return;\n            let cD = props.state.cubeDimension;\n            let algo = e.target.id;\n            let algoSet = [];\n            let generated = cube.generateSolved(cD,cD,cD);\n            algorithms.forEach(e=>{\n                if(e.moves&&e.name===algo&&e.worksFor.includes(cD)) algoSet.push(...e.moves.split(\" \"));\n            })\n            //console.log(algoSet);\n            props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[],autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,});\n        }\n\n        function optionClick(e){\n            if(props.state.currentFunc===\"None\") {\n                if(e.target.id===\"ColorPicker\"){\n                    \n                    props.setState({activeMenu:e.target.id,isValidConfig:true});\n                    props.beginColorPicker();\n                }\n                else if(e.target.id===\"Solver\"){\n                    props.setState({activeMenu:e.target.id},props.beginSolve());\n                    \n                }\n                else if(e.target.id===\"Algorithms\"){\n                    //props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n                    props.setState({activeMenu:e.target.id,currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[],activeAlgo:\"\"});\n                }\n                else props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\n            }\n        }\n        return (\n        <div className=\"menuOptionsWrapper\">\n            {props.state.currentFunc===\"Solving\"?[]:\n            props.state.currentFunc===\"Color Picker\"?<><div style={{paddingTop:\"45%\"}}></div>\n            <button id=\"ColorPicker\" data=\"Color Picker\" key=\"Color Picker\" onClick={optionClick} className=\"cpButton activeMenu\">Exit</button></>:\n            props.state.currentFunc===\"Algorithms\"?\n            <div className=\"algoList\">\n                {algorithmSet}  \n            </div>:baseOptions}\n        </div>)\n\n}\n\nexport default React.memo(MenuOptions);","import React from \"react\";\nimport \"../MenuOptions/MenuOptions.css\"\n\nconst MenuOptionsOther = props => {\n\n    const baseOptions = <>\n        {/* <button id=\"Moves\" key=\"Moves\" data=\"None\" onClick={otherOptionClick} className=\"rightButton\">Moves</button> */}\n        <button className=\"rightButton invis\" key=\"Blank\"></button>\n        <button id=\"Scramble\" key=\"Scramble\" onClick={otherOptionClick} className=\"rightButton scramble\">\n            Scramble\n        </button>\n        <button id=\"Reset\" key=\"Reset\" onClick={otherOptionClick} className=\"rightButton reset\">\n            Reset\n        </button>\n    </>\n\n    function otherOptionClick(e){\n        switch(e.target.id){\n            case 'Reset':\n                props.setState({activeMenu:\"\",currentFunc:\"Reset\"});\n                break;\n            case 'Scramble':\n                if(props.state.currentFunc===\"None\"){\n                    props.beginScramble();\n                }\n                break;\n            default:\n                props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\n        }\n    }\n\n    return (\n        <div className=\"menuOptionsWrapper\" style={{float:\"right\"}}>\n            {props.state.currentFunc===\"Solving\"||props.state.currentFunc===\"Color Picker\"||props.state.currentFunc===\"Algorithms\"?<><div style={{paddingTop:\"45%\"}}></div>\n                </>:baseOptions}\n        </div>\n    )\n\n}\n\nexport default React.memo(MenuOptionsOther);","import React,{Component} from \"react\";\nimport \"./MenuWrapper/MenuWrapper.css\";\nimport {Row, Col} from \"react-bootstrap\";\nimport MenuOptions from \"./MenuOptions/MenuOptions\";\nimport MenuOptionsOther from \"./MenuOptionsOther/MenuOptionsOther\";\nimport Controls from \"./Controls\";\nimport ColorPicker from \"./ColorPicker/ColorPicker\";\nimport SolverUI from \"./SolverUI/SolverUI\";\n\n\nclass View extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        \n\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\n\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\n\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\n\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\n\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\n           this.props.cpErrors===nextProps.cpErrors&&\n           this.props.state.solveTime===nextProps.state.solveTime&&\n           this.props.state.playOne===nextProps.state.playOne&&\n           !this.props.state.autoPlay) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\n\n        return true;\n    }\n    render(){\n        //const props = this.props;\n        let activeMenu;\n        let currentFunc = this.props.state.currentFunc;\n        switch(this.props.state.activeMenu){\n            case 'Moves':\n                activeMenu = <Controls {...this.props}/>\n                break;\n            case 'ColorPicker':\n                activeMenu = <ColorPicker {...this.props}/>\n                break;\n            case 'Solver':\n                activeMenu=<SolverUI {...this.props}/>\n                break;\n            case 'Algorithms':\n                activeMenu=<SolverUI {...this.props}/>\n                break;\n            default:\n                activeMenu=\"\";\n        }\n\n        \n        //console.log(\"hi\")\n        return (\n        <div className=\"menuWrapper\" style={{pointerEvents: \"none\"}}>\n            <Row style={{height: \"100%\",margin:\"0px\"}}>\n                 {(this.props.state.activeMenu===\"ColorPicker\"||this.props.state.activeMenu===\"Solver\")?\n                []:\n                [<Col key=\"MenuOptions\" style={{paddingLeft:\"0px\"}}>\n                    <MenuOptions {...this.props}/>\n                </Col>,\n                <Col key=\"MenuOptionsPadding\" style={{padding:0, color:\"black\",opacity:0}} xs={.5}>\n                    .    \n                </Col>]}\n                <Col \n                    id=\"menuBox\" \n                    style={{position:\"relative\",bottom:\"0\",height:\"100%\"}} \n                    xs={\n                        this.props.state.currentFunc===\"Color Picker\"||this.props.state.activeMenu===\"Solver\"?\n                        12:this.props.state.currentFunc===\"None\"||this.props.state.currentFunc===\"Scrambling\"||this.props.state.currentFunc===\"Reset\"?4:8}>\n                    {activeMenu}  \n                </Col>\n                {(this.props.state.activeMenu===\"ColorPicker\"||this.props.state.activeMenu===\"Solver\"||this.props.state.activeMenu===\"Algorithms\")?\n                []:\n                [<Col key=\"MenuOptionsOther\" style={{padding:0, color:\"black\",opacity:0}} xs={.5}>\n                    .    \n                </Col>,\n                <Col key=\"MenuOptionsOtherPadding\" style={{paddingLeft:\"0px\",minWidth: \"150px\",paddingRight:\"0px\"}}>\n                    <MenuOptionsOther {...this.props}/>\n                </Col>]}\n            </Row>\n            \n        </div>)\n    }\n}\n\nexport default React.memo(View);","import React from \"react\";\nimport \"./ColorPicker.css\";\nimport \"../SideView/SideView.css\"\n\nconst SideColorPicker = (props) => {\n    const li = [];\n    props.cpErrors.forEach(function(error,i){\n        li.push(<p key={i} style={{color:\"red\",fontSize:\".8rem\",textAlign:\"left\",listStyle:\"none\",margin:\"2px\",lineHeight: \"15px\"}}>\n            {\"- \"+error}\n        </p>);\n    });\n    \n\n    return (\n        <div className=\"sideMenuBox0\">\n          <div className=\"sideMenuBox1\">\n            <div className=\"cpInfo\" style={{width:\"100%\"}}>\n                    {\n                        props.isValidConfig?\n                        <div className=\"solveCpDiv\"><button className=\"solveCp\" onClick={()=>props.setColorPickedCube()}>\n                            <strong style={{color:'green',fontSize:'1rem'}}>Solve</strong>\n                        </button></div>:\n                        []\n                    }\n                    <div style={{fontSize:\".5rem\"}}>\n                        \n                            {li}\n                    </div>\n                </div>   \n            </div>  \n        </div>\n        \n              \n    );\n};\n\nexport default SideColorPicker;","import \"../SideView/SideView.css\";\nimport React,{Component} from \"react\";\nimport \"./SideSolverUI.css\";\nimport \"../SolverUI/SolverUI.css\";\nimport algorithms from \"../../cubeFunctions/algorithms\";\nimport cube from '../../cubeFunctions/cube';\n\nclass SolverUI extends Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    \n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoRewind:false});\n            }\n            nextProps.rewindOne();\n        }\n        else if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoRewind:false});\n        }\n\n        if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoPlay:false});\n            }\n            nextProps.playOne(nextProps);\n        }\n        else if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoPlay:false});\n        }\n    }\n\n    componentDidUpdate() {\n        if(document.querySelector(\".nextSolveIndex\")&&this.props.state.autoScroll) {\n            document.querySelector(\".nextSolveIndex\").scrollIntoView(true);\n            this.props.setState({autoScroll:false});\n        }\n    }\n\n    render(){\n        \n        let solverSet = [];\n        let defaultMessage = this.props.state.currentFunc===\"Solving\"?\"Already solved\":\"None Selected\";\n        let jumperButtons = [<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={0} className=\"solveMoveDiv jumper\" key={-1}>Top</div>];\n        !this.props.state.solvedSet.length?\n        solverSet.push(defaultMessage):\n        this.props.state.solvedSet.forEach((el,i)=>el===this.props.state.solvedSet[i+1]?\n            <></>:\n            el===\"stop'\"? \n            (solverSet.push(<div key={i} style={{width:\"100%\"}}><hr key={i} style={{border:\"1px solid lightblue\",marginLeft:\"5px\"}}></hr>{jumperButtons.length===1?\"Edges: \":\"3x3: \"}</div>),jumperButtons.push(\n                jumperButtons.length===1?<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>Edge</div>:\n                <div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>3x3</div>\n            )):\n            el===this.props.state.solvedSet[i-1]?\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i-1} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i-1} \n                        className=\"solveMoveDiv\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\").replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\")}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i} className=\"solveMoveDiv\" \n                        key={i}>{el.replace(\"01\",\"\").replace(\"0\",\"\")}</div>)\n        )\n        \n        let algorithmSet = \n            algorithms\n                .filter(algo=>algo.worksFor.includes(this.props.state.cubeDimension))\n                .map(algo=>\n                    <button \n                        id={algo.name} \n                        key={algo.name}\n                        className={\n                            this.props.state.activeAlgo===algo.name?\n                                \"algoButton algoActive\":\"algoButton\"\n                        }\n                        onClick={(e)=>algoStart(e,this.props)}>\n                        {algo.name}\n                    </button>\n                    );\n\n        function preSetTarget(e,props,setTarget){\n            props.setState({autoScroll:true});\n            setTarget(e,props);\n        }\n\n        //add small fix for jumping to double moves\n        function setTarget(e,props){\n            e.stopPropagation();\n            if(props.state.autoPlay||props.state.autoRewind){\n\n            }\n            else if(parseInt(e.target.id)-props.state.solvedSetIndex===1){\n                props.setState({targetSolveIndex:parseInt(e.target.id)});\n                props.playOne(props);\n            }\n            else if(props.state.solvedSetIndex<=parseInt(e.target.id)){\n                props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\n                let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\n                let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\n                let forwardMoves = props.state.solvedSet.slice(props.state.solvedSetIndex,parseInt(e.target.id));\n\n                props.setState({\n                    solvedSetIndex:parseInt(e.target.id),\n                    prevSet:prevSetNew,\n                    moveSet:moveSetNew,\n                    rubiksObject:props.autoJump(props.state,forwardMoves)})\n            }\n            else if(props.state.solvedSetIndex>parseInt(e.target.id)) {\n                props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\n                let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\n                let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\n                let backwardMoves= props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSetIndex)\n                    .map(move=>move.length===4?move.slice(0,3):(move+\"'\"));\n\n                props.setState({\n                    solvedSetIndex:parseInt(e.target.id),\n                    prevSet:prevSetNew,\n                    moveSet:moveSetNew,\n                    rubiksObject:props.autoJump(props.state,backwardMoves.reverse())})\n            }\n        }\n\n        function algoStart(e,props){\n            let cD = props.state.cubeDimension;\n            let algo = null;\n            try{algo = e.target.id}catch{algo = e};\n            let algoSet = [];\n            let generated = cube.generateSolved(cD,cD,cD);\n            algoSet = algorithms.find(set=>set.name===algo&&set.worksFor.includes(cD)).moves.split(\" \");\n            \n            props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[]});\n        }\n\n        return(<div className=\"sideMenu\">\n                    <div className=\"sideMenuBox0\">\n                        {this.props.state.currentFunc===\"Solving\"?\n                        <div className=\"sideMovesBox\">\n                            \n                            {solverSet}\n                            \n                        </div>:\n                        [\n                        <div className=\"sideMenuBox1\" key=\"sideMenuBox1\">\n                            <div className=\"algoList\" style={{minWidth:\"30vw\"}}>\n                                {algorithmSet}  \n                            </div>\n                        </div>,\n                        <div className=\"sideMenuBox2\" key=\"sideMenuBox2\">\n                            <div className=\"sideMovesBox\">\n                            \n                                {solverSet}\n                                \n                            </div>\n                        </div>\n                        ]\n                        }\n                    </div>\n                </div>);\n    }\n}\n\nexport default React.memo(SolverUI);","import \"../SideView/SideView.css\";\nimport React, { Component } from \"react\";\nimport \"./SideSolverUI.css\";\nimport \"../SolverUI/SolverUI.css\";\n\nclass SideSolverControls extends Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.state.autoRewind === true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if (nextProps.state.moveSet[0] === \"stop'\") {\n                nextProps.setState({ autoRewind: false });\n            }\n            nextProps.rewindOne();\n        }\n        else if (nextProps.state.autoRewind === true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex) {\n            //console.log(\"ending rewind\");\n            nextProps.setState({ autoRewind: false });\n        }\n\n        if (nextProps.state.autoPlay === true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if (nextProps.state.moveSet[0] === \"stop'\") {\n                nextProps.setState({ autoPlay: false });\n            }\n            nextProps.playOne(nextProps);\n        }\n        else if (nextProps.state.autoPlay === true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"ending rewind\");\n            nextProps.setState({ autoPlay: false });\n        }\n    }\n\n    componentDidUpdate() {\n        if (document.querySelector(\".nextSolveIndex\") && this.props.state.autoScroll) {\n            document.querySelector(\".nextSolveIndex\").scrollIntoView(true);\n            this.props.setState({ autoScroll: false });\n        }\n    }\n\n    render() {\n        let prevSet = this.props.state.prevSet;\n        let moveSet = this.props.state.moveSet;\n\n        let previousMove =\n            <div className=\"previousMove\">\n                {prevSet.length - 1 >= 0 ?\n                    prevSet[prevSet.length - 1] === \"stop'\" ?\n                        prevSet[prevSet.length - 2] ?\n                            prevSet[prevSet.length - 2] === prevSet[prevSet.length - 3] ?\n                                prevSet[prevSet.length - 2].replace(\"01\", \"\").replace(\"0\", \"\").replace(\"'\", \"\") + 2\n                                :\n                                prevSet[prevSet.length - 2].replace(\"01\", \"\").replace(\"0\", \"\")\n                            :\n                            \"-\"\n                        :\n                        prevSet[prevSet.length - 1] === prevSet[prevSet.length - 2] ?\n                            prevSet[prevSet.length - 1].replace(\"01\", \"\").replace(\"0\", \"\").replace(\"'\", \"\") + 2\n                            :\n                            prevSet[prevSet.length - 1].replace(\"01\", \"\").replace(\"0\", \"\")\n                    :\n                    \"-\"}\n            </div>\n\n        let nextMove =\n            <div className=\"nextMove\">\n                {moveSet[0] && typeof (moveSet[0][0]) === 'string' && moveSet[0] !== \"'\" ?\n                    moveSet[0] === \"stop'\" ?\n                        moveSet[1] ?\n                            moveSet[1] === moveSet[2] ?\n                                moveSet[1].replace(\"01\", \"\").replace(\"0\", \"\").replace(\"'\", \"\") + 2\n                                :\n                                moveSet[1].replace(\"01\", \"\").replace(\"0\", \"\")\n                            :\n                            \"-\"\n                        :\n                        moveSet[0] === moveSet[1] ?\n                            moveSet[0].replace(\"01\", \"\").replace(\"0\", \"\").replace(\"'\", \"\") + 2\n                            :\n                            moveSet[0].replace(\"01\", \"\").replace(\"0\", \"\")\n                    :\n                    \"-\"\n                }\n            </div>;\n\n\n        function fastforward(props) {\n            if (!props.state.moveSet.length) return;\n            props.state.moveSet.length === 1 ?\n                props.playOne(props) :\n                props.setState({\n                    autoPlay: true,\n                    autoRewind: false,\n                    targetSolveIndex: props.state.solvedSet.length\n                });\n        }\n\n        function fastrewind(props) {\n            props.setState({ autoPlay: false, autoRewind: true, targetSolveIndex: 0 });\n        }\n\n        function pauseSolver(props) {\n            props.setState({ autoPlay: false, autoRewind: false });\n        }\n\n\n        return <div className=\"controllerBox\" style={{ width: `30vw` }}>\n            <div className=\"buttonWrapper\">\n\n            <div className=\"solverButtonDiv rewindOne\">\n                <button\n                    className={`solverButton`}\n                    onClick={() => this.props.rewindOne(this.props)}>\n                    Previous {previousMove}\n                </button>\n            </div>\n            <div className=\"solverButtonDiv playOne\">\n                <button\n                    className={`solverButton`}\n                    onClick={() => this.props.playOne(this.props)}>\n                    Next {nextMove}\n                </button>\n            </div>\n            <div className=\"solverButtonDiv rewindAll\">\n                {this.props.state.autoRewind ?\n                    <button\n                        className={`solverButton`}\n                        onClick={() => pauseSolver(this.props)}>\n                        <div style={{ width: \"100%\" }}>Pause</div> Solver\n                    </button>\n                    :\n                    <button\n                        className={`solverButton`}\n                        onClick={() => fastrewind(this.props)}>\n                        <div style={{ width: \"100%\" }}>Auto</div> Rewind\n                    </button>\n                }\n            </div>\n            <div className=\"solverButtonDiv fastforward\">\n                {this.props.state.autoPlay ?\n                    <button\n                        className={`solverButton`}\n                        onClick={() => pauseSolver(this.props)}>\n                        <div style={{ width: \"100%\" }}>Pause</div> Solver\n                    </button>\n                    :\n                    <button\n                        className={`solverButton`}\n                        onClick={() => fastforward(this.props)}>\n                        <div style={{ width: \"100%\" }}>Auto</div> Forward\n                    </button>\n                }\n            </div>\n                \n            </div>\n\n        </div>\n    }\n}\n\nexport default React.memo(SideSolverControls);","import React from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport ColorButton from \"./ColorButton\";\nimport \"./ColorPicker.css\";\n\nconst SideColorPickerController = (props) => {\n    const colors = [\"white\",\"blue\",\"red\",\"yellow\",\"orange\",\"green\"];\n    const li = [];\n    props.cpErrors.forEach(function(error,i){\n        li.push(<p key={i} style={{color:\"red\",fontSize:\".8rem\",textAlign:\"left\",listStyle:\"none\",margin:\"2px\",lineHeight: \"15px\"}}>\n            {\"- \"+error}\n        </p>);\n    });\n    function leave(){\n        //console.log(document.querySelector(\"#cpChangeData\").data)\n        props.endColorPicker();\n\n        if( document.querySelector(\".activeMenu\")){\n            document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n        }\n\n        if(document.querySelector(\"#cpChangeData\").data){\n            let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\n            if(data[0]===\"Solver\") {\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                document.querySelector(\"#cpChangeData\").data=\"\";\n                return;\n            }\n            document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n            document.querySelector(\"#cpChangeData\").data=\"\";\n\n            props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>props.beginSolve());\n        }\n        else{\n            props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n        }\n    }\n    function stay(){\n        document.querySelector(\".warningPopup\").style.display=\"none\";\n    }\n\n    function optionClick(e){\n        document.querySelector(\".warningPopup\").style.display=\"block\";\n    }\n\n    return (\n        <div className=\"controllerBox\" style={{ width: `30vw` }}>\n            <div className=\"colorButtonContainer\">\n                {colors.map((color,i)=><ColorButton\n                    index={i+1} \n                    key={color}\n                    height={1/3*100}\n                    color={color}\n                    side={true}\n                    colorPicked={props.colorPicked}\n                    changeColor={props.changeColor}\n                    isMobile={props.isMobile}\n                />)}\n            </div>\n        </div>\n    )     \n\n};\n\nexport default SideColorPickerController;","import React from \"react\";\nimport \"./MainSideMenu.css\";\nimport \"../SideView/SideView.css\";\n\nconst MainSideMenuButton = props => {\n    return (\n        <div className=\"mainSideMenuButton\" style={{height:`${1/6*100}%`}}>\n            <button className=\"sideMenuButton\" onClick={props.onClick}>\n                {props.name}\n            </button>\n        </div>\n    )\n}\n\nexport default MainSideMenuButton;","import React from \"react\";\nimport \"./MainSideMenu.css\";\nimport \"../SideView/SideView.css\";\nimport algs from \"../../cubeFunctions/algorithms\"\nimport MainSideMenuButton from \"./MainSideMenuButton\";\n\nconst MainSideMenu = props => {\n\n    let algorithmSet = algs.filter(algo=>algo.worksFor.includes(props.state.cubeDimension));\n\n    function colorPicker(){\n        props.setState({activeMenu:\"ColorPicker\",isValidConfig:true});\n        props.beginColorPicker();\n    }\n\n    function solver(){\n        props.setState({activeMenu:\"Solver\"},props.beginSolve());\n    }\n\n    function scramble(){\n        if(props.state.currentFunc===\"None\"){\n            props.beginScramble();\n        }\n    }\n\n    function reset(){\n        props.setState({activeMenu:\"\",currentFunc:\"Reset\"})\n    }\n\n    function algorithms(){\n        props.setState({activeMenu:\"Algorithms\",currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[]});\n    }\n    \n    return (\n        <div className=\"sideMenuBox0 sideLimit\">\n            {props.state.cubeDimension<6?<MainSideMenuButton \n                name=\"Color Picker\"\n                onClick={colorPicker}\n            />:[]}\n            {props.state.cubeDimension<6?\n            <MainSideMenuButton \n                name=\"Solver\"\n                onClick={solver}\n            />:[]}  \n            {algorithmSet.length>0?<MainSideMenuButton \n                name=\"Algorithms\"\n                onClick={algorithms}\n            />:[]}\n            {/* <MainSideMenuButton\n                name=\"Moves\" \n            /> */}\n            <MainSideMenuButton \n                name=\"Scramble\"\n                onClick={scramble}\n            />\n            <MainSideMenuButton \n                name=\"Reset\"\n                onClick={reset}\n            />\n        </div>\n    )\n}\n\nexport default MainSideMenu;","import React,{Component} from \"react\";\nimport Controls from \"../Controls\";\nimport ColorPicker from \"../ColorPicker/SideColorPicker\";\nimport SideSolverUI from \"../SideSolverUI/SideSolverUI\";\nimport SideSolverControls from \"../SideSolverUI/SideSolverControls\";\nimport SideColorPickerController from \"../ColorPicker/SideColorPickerController\";\nimport MainSideMenu from \"../MainSideMenu/MainSideMenu\";\nimport \"./SideView.css\";\n\n\nclass SideView extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        \n\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\n\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\n\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\n\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\n\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\n           this.props.cpErrors===nextProps.cpErrors&&\n           this.props.state.solveTime===nextProps.state.solveTime&&\n           this.props.state.playOne===nextProps.state.playOne&&\n           !this.props.state.autoPlay) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\n\n        return true;\n    }\n    render(){\n        let activeMenu;\n        let activeMenuBottom;\n        let activeMenuExit;\n\n\n        let exitConfirm = () =>{\n            document.querySelector(\".warningPopupSolver\").style.display=\"block\";\n        }\n\n        let exitCpConfirm = () => {\n            document.querySelector(\".warningPopup\").style.display=\"block\";\n        }\n\n        let exitAlgo = () => {\n            this.props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n        }\n\n        function stay() {\n            document.querySelector(\".warningPopupSolver\").style.display = \"none\";\n        }\n\n        function stayCp(){\n            document.querySelector(\".warningPopup\").style.display = \"none\";\n        }\n\n        function leave(e, props) {\n            document.querySelector(\".warningPopupSolver\").style.display = \"none\";\n            e.stopPropagation();\n            props.stopSolve();\n\n            if (document.querySelector(\".activeMenu\")) {\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n            }\n\n            if (document.querySelector(\"#solverChangeData\").data) {\n                let data = document.querySelector(\"#solverChangeData\").data.split(\",\");\n                if (data[0] === \"ColorPicker\") {\n                    props.setState({ activeMenu: \"\", currentFunct: \"None\", isValidConfig: false });\n                    document.querySelector(\"#solverChangeData\").data = \"\";\n                    return;\n                }\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n                props.setState({ activeMenu: data[0], currentFunct: data[1], isValidConfig: false });\n                document.querySelector(\"#solverChangeData\").data = \"\";\n\n            }\n            else {\n                props.setState({ activeMenu: \"\", currentFunct: \"None\", isValidConfig: false });\n            }\n        }\n\n        \n\n        let  leaveCp = () => {\n            document.querySelector(\".warningPopup\").style.display = \"none\";\n            this.props.endColorPicker();\n\n            if( document.querySelector(\".activeMenu\")){\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n            }\n\n            if(document.querySelector(\"#cpChangeData\").data){\n                let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\n                if(data[0]===\"Solver\") {\n                    this.props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                    document.querySelector(\"#cpChangeData\").data=\"\";\n                    return;\n                }\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n                document.querySelector(\"#cpChangeData\").data=\"\";\n\n                this.props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>this.props.beginSolve());\n            }\n            else{\n                this.props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n            }\n        }\n\n        let solverLeaveButton = \n            <button \n                id=\"Solver\" \n                data=\"Solving\" \n                onClick={exitConfirm} \n                className=\"exitButton\">Exit</button>\n\n        let algoLeaveButton =\n            <button \n                id=\"Algorithms\" \n                data=\"Algorithms\" \n                onClick={exitAlgo} \n                className=\"exitButton\">Exit</button>\n        \n        let cpLeaveButton =\n            <button \n                id=\"ColorPicker\" \n                data=\"Color Picker\" \n                onClick={exitCpConfirm} \n                className=\"exitButton\">Exit</button>\n\n        let confirmLeavePopup =\n            <div id=\"controlsPopup\" className=\"warningPopupSolver\">\n                <div id=\"solverChangeData\" data=\"\"></div>\n                <div className=\"solverMessage\">Are you sure you want to leave Solver? Progress will not be saved.</div>\n                <button onClick={stay} className=\"solverLeaveStay\">Stay</button><button onClick={(e) => leave(e, this.props)} className=\"solverLeaveStay\">Leave</button>\n            </div>\n        \n        let confirmLeavePopupCp=\n            <div className=\"warningPopup\" style={{position:\"relative\", margin:\"auto\", width:\"30vw\"}}>\n                <div id=\"cpChangeData\" data=\"\"></div>\n                <div className=\"cpMessage\">Are you sure you want to leave Color Picker?</div>\n                <button onClick={stayCp} className=\"cpLeaveStay\">Stay</button><button onClick={leaveCp} className=\"cpLeaveStay\">Leave</button>\n            </div>\n\n        switch(this.props.state.activeMenu){\n            case 'Moves':\n                activeMenu = <Controls {...this.props}/>\n                break;\n            case 'ColorPicker':\n                activeMenu = <ColorPicker {...this.props}/>\n                activeMenuBottom = <SideColorPickerController {...this.props} />\n                activeMenuExit = cpLeaveButton;\n                break;\n            case 'Solver':\n                activeMenu=<SideSolverUI {...this.props}/>\n                activeMenuBottom=<SideSolverControls {...this.props}/>\n                activeMenuExit=solverLeaveButton;\n                break;\n            case 'Algorithms':\n                activeMenu=<SideSolverUI {...this.props}/>\n                activeMenuBottom=<SideSolverControls {...this.props}/>\n                activeMenuExit=algoLeaveButton;\n                break;\n            default:\n                activeMenu=<MainSideMenu {...this.props}/>;\n                activeMenuBottom=\"\";\n        }\n\n        \n        //console.log(\"hi\")\n        return (\n        [<div className=\"sideMenuWrapper\" key=\"sideMenuWrapper\" style={{pointerEvents: \"none\"}}>\n            {activeMenu}\n        </div>,\n        <div className=\"bottomMenuWrapper\" key=\"bottomMenuWrapper\" style={{pointerEvents: \"none\"}}>\n            {confirmLeavePopupCp}\n            {confirmLeavePopup}\n            {activeMenuBottom}\n            <div className=\"bottomExitDiv\">\n                {activeMenuExit}\n            </div>\n            \n        </div>])\n    }\n}\n\nexport default React.memo(SideView);","import React,{Component} from \"react\";\nimport MobileView from \"../MobileView/MobileView\";\nimport View from \"../View\";\nimport SideView from \"../SideView/SideView\";\nclass Menu extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        //if(this.props.state.currentFunc===nextProps.state.activeMenu) return false;\n        return true;\n    }\n    render(){\n        const props = this.props;\n        return (window.innerWidth > 760&&window.innerHeight>580)? \n            <SideView {...props}/> \n                : window.innerWidth > 600?\n            <View {...props}/>:\n            <MobileView {...props}/>;  \n    } \n}\n\nexport default React.memo(Menu);","/* \n * \n *      Sasha Peters\n *      Created working function: Saturday, December 14, 2019\n *      \n */\n\nimport whiteSolver from \"./middles/white\"\nimport yellowSolver from \"./middles/yellow\"\nimport blueSolver from \"./middles/blue\"\nimport greenSolver from \"./middles/green\"\nimport orangeSolver from \"./middles/orange\"\n\nfunction solveMiddleLogic(cubeDimensions,rubiksObjectAtIndex,index){\n    \n    let dim = cubeDimensions;\n    let faceColor = Math.floor((index)/((dim-2)*(dim-2)));\n\n    // Coordinates organized\n    let current = {\n        x:rubiksObjectAtIndex[6],\n        y:rubiksObjectAtIndex[7],\n        z:rubiksObjectAtIndex[8]\n    };\n    let solved = {\n        x:rubiksObjectAtIndex[9],\n        y:rubiksObjectAtIndex[10],\n        z:rubiksObjectAtIndex[11]\n    };\n\n    function solve(faceColor){\n        switch(faceColor){\n            case 0:\n                // Solved for all sizes\n                return whiteSolver(current,solved,dim,index);\n            case 1:\n                // Solved for all sizes\n                return yellowSolver(current,solved,dim,index);\n            case 2:\n                // Solved for all sizes\n                return blueSolver(current,solved,dim);\n            case 3:\n                // In Progress. Solved for 4x4\n                return orangeSolver(current,solved,dim);\n            case 4:\n                // In Progress. Solved for 4x4\n                return greenSolver(current,solved,dim,index);\n            default:\n                console.log(\"Should never reach here\");\n        }\n    }\n\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\n        \n    }\n\n    else{\n        return solve(faceColor);\n    }\n\n    return \"\";\n}\n\nexport default solveMiddleLogic;","import solveMiddleLogic from './solveMiddleLogic';\n\nfunction solveMiddles(cube,dim,moveStringToArray,index,middles){\n\n    // End function if 2x2\n    if(dim===2) return {solveState : 1};\n\n    const numberOfMiddles= ((dim-2)*(dim-2))*5;\n    const obj = {};\n    let moveString = \"\";\n\n    // Position middles for 3x3\n    if(dim===3){\n      if(cube[4][7] === 0 && cube[10][8] === 2){\n      }\n      else{\n        if(cube[4][8]===2){ //U\n          cube[12][6]===0 ? moveString+=\"02R'\" : moveString+=\"02U'\";\n        }\n        else if(cube[4][6]===0){//L\n          cube[10][8]===2 ? moveString+=\"02U'\" : moveString+=\"02R'\";\n        }\n        else if(cube[4][6]===2){//R\n          cube[10][8]===2 ? moveString+=\"02U\" : moveString+=\"02R'\";\n        }\n        else if(cube[4][8]===0){//D\n          cube[12][6]===0 ? moveString+=\"02R\" : moveString+=\"02U'\";\n        }\n        else if(cube[4][7]===2){//B\n          cube[10][8]===2 ? moveString+=\"02U2\" : moveString+=\"02F'\";\n        }\n        else moveString+=\"02B'\"//F\n      }\n\n      const moveArray = moveStringToArray(moveString);\n      moveString.trim().length ? obj.moveSet = moveArray : obj.solveState = 1;\n    }\n\n    // Solve logic for 4x4 and greater\n    else{\n      \n      if(index<numberOfMiddles){ \n        moveString = solveMiddleLogic(dim,cube[middles[index]],index);\n        const moveArray = moveStringToArray(moveString);\n        moveString.trim().length ? obj.moveSet = moveArray : obj.rubiksIndex = index+1;\n      }\n\n      else{\n        if(dim<50){\n          obj.solveState = .1; obj.rubiksIndex = 0; obj.currentFunc = \"Solving\"; obj.moveSet = ['stop'];\n          // obj.solveState = -1; obj.rubiksIndex = 0; obj.currentFunc = \"None\";\n        } else {\n          // obj.solveState = .1; obj.rubiksIndex = 0; obj.currentFunc = \"Solving\"; obj.moveSet = ['stop'];\n          obj.solveState = -1; obj.rubiksIndex = 0; obj.currentFunc = \"None\";\n        }\n      }\n    }\n\n    return obj;\n}\n\nexport default solveMiddles;","import frontEdges from \"./edges/solveFrontEdgeSegments\";\nimport backEdges from \"./edges/solveBackEdgeSegments\";\nimport middleEdges from \"./edges/solveMiddleEdgeSegements\";\n\nfunction side(rubiksObject,color){\n    return rubiksObject.indexOf(color);\n}\n\nfunction solveEdgeLogic(cubeDimensions,rubiksObjectAtIndex,index,cube,edges){\n\n    const dim = cubeDimensions;\n    const edgesPerSection = 4;\n    const edgeLength = dim-2\n    const section = Math.floor(index/(edgeLength*edgesPerSection));\n    const whiteSide = side(rubiksObjectAtIndex,'white');\n    const yellowSide = side(rubiksObjectAtIndex,'yellow');\n    const blueSide = side(rubiksObjectAtIndex,'blue');\n    const greenSide = side(rubiksObjectAtIndex,'green');\n\n    let moveString = \"\";\n\n    // Coordinates organized\n    let current = {\n        x:rubiksObjectAtIndex[6],\n        y:rubiksObjectAtIndex[7],\n        z:rubiksObjectAtIndex[8]\n    };\n    let solved = {\n        x:rubiksObjectAtIndex[9],\n        y:rubiksObjectAtIndex[10],\n        z:rubiksObjectAtIndex[11]\n    };\n\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\n        //console.log(rubiksObjectAtIndex);\n        if( (whiteSide === 0  && section === 0)||\n            (yellowSide === 3 && section === 1)||\n            (blueSide === 1   && section === 2)||\n            (greenSide === 5  && section === 2)){\n            //console.log(\"SOLVED\");\n            return \"\";\n        }      \n    }\n    switch(section){\n        case 0: \n            // Finished for now\n            moveString = frontEdges(current,solved,dim,whiteSide);\n            break;\n        case 1:\n            // Finished for now\n            moveString = backEdges(current,solved,dim,yellowSide);\n            break;\n        case 2:\n            // Not started\n            moveString = middleEdges(current,solved,dim);\n            break;\n        default:\n            console.log(\"Should never reach here\");\n    }\n\n    return moveString;\n}\n\nexport default solveEdgeLogic;","import solveEdgeLogic from './solveEdgeLogic';\n\nfunction solveEdges(cube,dim,moveStringToArray,edges,index){\n    const numCubeEdges = 12;\n    const innerEdgeLength = dim-2;\n    const numEdges = innerEdgeLength * numCubeEdges;\n    let moveString = \"\";\n    const obj = {};\n\n    if (index < numEdges){\n        moveString += ((moveString.length) ? \" \":\"\") + solveEdgeLogic(dim,cube[edges[index]],index,cube,edges,);\n        moveString.trim().length ? obj.moveSet = moveStringToArray(moveString) : obj.rubiksIndex = index+1;\n    }\n\n    else {\n        obj.solveState = 1;\n        obj.rubiksIndex = 0;\n        obj.currentFunc = \"Solving\";\n        obj.moveSet = ['stop'];\n    }\n\n    return obj;\n}\n\nexport default solveEdges;","import solveWhiteCross from \"./edges/solveWhiteCross\"\nimport solveWhiteCorners from \"./corners/solveWhiteCorners\"\nimport solveMiddleEdges from \"./edges/solveMiddleEdges\"\nimport solveYellowCross from \"./edges/solveYellowCross\"\nimport alignYellowCross from \"./edges/alignYellowCross\"\nimport solveYellowCorners from \"./corners/solveYellowCorners\"\nimport alignYellowCorners from \"./corners/alignYellowCorners\"\nimport solveMiddles from \"./solveMiddles\"\nimport solveEdges from \"./solveEdges\"\n\nconst CONSTANTS = {\n    SOLVE_MIDDLES: 0,\n    SOLVE_EDGES: 0.1,\n    SOLVE_WHITE_CROSS: 1,\n    SOLVE_WHITE_CORNERS: 2,\n    SOLVE_MIDDLE_EDGES: 3,\n    SOLVE_YELLOW_CROSS: 4,\n    ALIGN_YELLOW_CROSS: 5,\n    ALIGN_YELLOW_CORNERS: 6,\n    SOLVE_YELLOW_CORNERS: 7\n}\n\nfunction solver(solveState,rubiksObject,cubeDimension,moveStringToArray,solveMoves,rubiksIndex,middles,edges,corners){\n    switch(solveState){\n        case CONSTANTS.SOLVE_MIDDLES:\n            return solveMiddles(rubiksObject,cubeDimension,moveStringToArray,rubiksIndex,middles);\n        case CONSTANTS.SOLVE_EDGES:\n            return solveEdges(rubiksObject,cubeDimension,moveStringToArray,edges,rubiksIndex);\n        case CONSTANTS.SOLVE_WHITE_CROSS:\n            return solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray,edges);\n        case CONSTANTS.SOLVE_WHITE_CORNERS:\n            return solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray,corners);\n        case CONSTANTS.SOLVE_MIDDLE_EDGES:\n            return solveMiddleEdges(rubiksObject,moveStringToArray,edges,cubeDimension);\n        case CONSTANTS.SOLVE_YELLOW_CROSS:\n            return solveYellowCross(rubiksObject,moveStringToArray,edges,cubeDimension);\n        case CONSTANTS.ALIGN_YELLOW_CROSS:\n            return alignYellowCross(rubiksObject,moveStringToArray,edges,cubeDimension);\n        case CONSTANTS.ALIGN_YELLOW_CORNERS:\n            return alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray,corners);\n        case CONSTANTS.SOLVE_YELLOW_CORNERS:\n            return solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves,corners);\n        default:\n            console.log(\"invalid solve state\");\n    }\n}\n\nexport default solver;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Speeds from \"./components/Speeds/Speeds\";\nimport MoveInput from \"./components/MoveInput\";\nimport SolverInfo from \"./components/SolverInfo/SolverInfo\";\nimport ColorPickerInfo from \"./components/ColorPickerInfo/ColorPickerInfo\";\nimport Menu from \"./components/MenuWrapper/MenuWrapper\";\n\nimport * as THREE from \"three\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport cube from './cubeFunctions/cube';\nimport solver from './solvers/solver';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\n\n// TODO:\n/*\n * 1. Start moving functions to other files: STARTED\n * \n * 2. UI Rework: Started\n * \n * 3. Continue working on solvers.\n * \n * 4. ISSUES:\n *  - Fix issue is yellow solver\n */\n\n\nclass App extends Component {\n  state = {\n    cubes : [],           // Contains visual cube\n    rubiksObject : [],    // Contains memory cube\n    blackObject: [],\n    speed : 7.5,          // Control individual piece rotation speed (don't change)\n    rotationSpeed : 350,  // Controls visual rotation speed\n    start : 7.5,          // Start value for a rotation or set of rotations\n    end : 0,              // End value for a roation or set of rotations\n    turnDirection : 0,    // Dictates whether the rotation is clockwise or counterclockwise\n    face : 0,             // The face being turned\n    cameraX : 5,          // Camera position x\n    cameraY : -5,         // Camera position y\n    cameraZ : 2,          // Camera position z\n    currentFunc : \"None\", // Variable used to display current function\n    moveLog : \"\",         // Keeps a log of all moves\n    moveSet : [],         // Algorithms queue moves through this variable\n    prevSet : [],\n    angle : 3.9,          // Camera angle\n    cubeDimension : null, // Cube dimensions. Ex: 3 => 3x3x3 cube\n    cubeDepth : 1,        // Used to determine rotation depth on cubes greater than 3\n    currentSpeed:\"Medium\",// Displays which speed is selected\n    moves : 0,            // Used by scramble functions\n    reload : false,       // Lets animate know when to reload the cube (after every move)\n    solveState : -1,      // Dictates progression of solve function\n    solveMoves : \"\",      // Keeps track of moves used during solve\n    solvedSet: [],\n    solvedSetIndex: 0,\n    facePosX : null,\n    facePosY : null,\n    facePosZ : null,\n    faceSide : null,\n    colorPicked: 'white',\n    mouseFace : null,\n    mouseDown : false,\n    mousePos : null,\n    undoIndex : 0,        // Index to keep track of where undo/redo is\n    blockMoveLog : false, // Blocks adding move when undoing/redoing a move\n    previousPiece : null, // Keeps track of hovered face to not redraw\n    rubiksIndex : 0,      // Index to keep track of middles while solving\n    middles : [],         // Contains all middle segments\n    corners : [],         // Contains all corner segments         \n    // showStats: false,     // Setting for stats\n    showMoveInput: false,  // Setting for custom move input\n    showControls: false,   // Setting for move controls\n    showHints: true,\n    showGuideArrows: true,\n    activeDragsInput: 0,  // Keeps track of draggable input\n    deltaPositionInput: {\n      x: 100, y: 100\n    },\n    controlledPositionInput: {\n      x: 0, y: 0\n    },\n    activeDragsControls: 0,// Keeps track of draggable buttons\n    deltaPositionControls: {\n      x: 100, y: 100\n    },\n    controlledPositionControls: {\n      x: 0, y: 0\n    },\n    isMulti : false,\n    isVisible : false,\n    isValidConfig : true,\n    hoverData : [],\n    showSolveController : false,\n    autoPlay : false,\n    autoRewind: false,\n    autoTarget: false,\n    playOne : false,\n    generateAllMoves: false,\n    isLocal : null,\n    cpErrors : [],\n    activeMenu : \"\",\n    solveTime:0,\n    targetSolveIndex: -1,\n    activeAlgo:\"none\",\n    sliderSpeed:40\n  };\n\n  // Bind keys to functions\n  keyBinds = key => {\n    switch (key){\n\n      case 'R':\n        this.rotateOneFace(key+\"'\",[2,0,1]);\n        break;\n      case 'r':\n        this.rotateOneFace(key.toUpperCase(),[2,-1,1]);\n        break;\n\n      case 'L':\n        this.rotateOneFace(key+\"'\",[4,0,1]);\n        break;\n      case 'l':\n        this.rotateOneFace(key.toUpperCase(),[4,-1,1]);\n        break;\n\n      case 'F':\n        this.rotateOneFace(key+\"'\",[0,0,1]);\n        break;\n      case 'f':\n        this.rotateOneFace(key.toUpperCase(),[0,-1,1]);\n        break;\n\n      case 'U':\n        this.rotateOneFace(key+\"'\",[1,0,1]);\n        break;\n      case 'u':\n        this.rotateOneFace(key.toUpperCase(),[1,-1,1]);\n        break;\n\n      case 'D':\n        this.rotateOneFace(key+\"'\",[5,0,1]);\n        break;\n      case 'd':\n        this.rotateOneFace(key.toUpperCase(),[5,-1,1]);\n        break;\n\n      case 'B':\n        this.rotateOneFace(key+\"'\",[3,0,1]);\n        break;\n      case 'b':\n        this.rotateOneFace(key.toUpperCase(),[3,-1,1]);\n        break;\n\n      case '1':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('white');\n        }\n        break;\n      case '2':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('blue');\n        }\n        break;\n      case '3':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('red');\n        }\n        break;\n      case '4':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('yellow');\n        }\n        break;\n      case '5':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('orange');\n        }\n        break;\n      case '6':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('green');\n        }\n        break;\n      case 'ArrowLeft':\n        if(this.state.currentFunc==='Solving'||this.state.currentFunc==='Algorithms'){\n          this.rewindSolve();\n        }\n        else if(this.state.currentFunc==='None'){\n          this.undo();\n        }\n        break;\n      case 'ArrowRight':\n        if(this.state.currentFunc==='Solving'||this.state.currentFunc==='Algorithms'){\n          if(!this.state.moveSet.length) return;\n          if((this.state.moveSet[0]===this.state.moveSet[1]||this.state.moveSet[1]===\"stop'\")&&!this.state.autoPlay){\n            this.setState({\n                  autoPlay:true,\n                  autoRewind:false,\n                  targetSolveIndex:this.state.solvedSetIndex+2});\n          }\n          else{\n              if(this.state.playOne===true) return;\n              if(this.state.moveSet[0]&&typeof(this.state.moveSet[0][0])==='string'&&this.state.moveSet[0]!==\"'\"){\n                this.setState({playOne:true,prevSet:[...this.state.prevSet,this.state.moveSet[0]]});\n              }\n          }\n        }\n        else if(this.state.currentFunc==='None'){\n          this.redo();\n        }\n        break;\n      default:\n    }\n  }\n\n  // Handles key press event\n  keyHandling = e => {\n    this.keyBinds(e.key);\n  }\n\n  onMouseDown( event ) {\n    if(!this.state.mouseDown){\n      if(this.state.currentFunc===\"Color Picker\"&&this.state.previousPiece){\n        let toFace = [2,4,3,0,1,5];\n        this.changeFaceColor({x:this.state.facePosX,y:this.state.facePosY,z:this.state.facePosZ},toFace[this.state.faceSide],this.state.colorPicked)\n      }\n      this.setState({mouseDown : true});  \n    }\n  }\n\n  onMouseUp( event ) {\n    this.setState({mouseDown : false});  \n  }\n\n  onSliderChange = (value) => {\n    this.setState({sliderSpeed:value})\n    switch(value){\n      case 0:\n        this.changeSpeed(1.5,1050,\"Slowest\");\n        break;\n      case 10:\n        this.changeSpeed(3,750,\"Slower\")\n        break;\n      case 20:\n        this.changeSpeed(5,500,\"Slow\")\n        break;\n      case 30:\n        this.changeSpeed(7.5,350,\"Medium\")\n        break;\n      case 40:\n        this.changeSpeed(10,250,\"Fast\")\n        break;\n      case 50:\n        this.changeSpeed(15,175,\"Faster\")\n        break;\n      case 60:\n        this.changeSpeed(30,100,\"Fastest\")\n        break;\n      case 70:\n        this.changeSpeed(90,20,\"Zoomin\")\n        break;\n      default:\n        console.log(\"unexpected behavior\");\n    }\n  }\n\n  // Functions to change speed\n  changeSpeed = (_speed,_rotationSpeed,_name,bypass) => {\n    this.state.currentFunc!==\"None\"&&!bypass ?\n      this.setState({moveSet:[[_speed,_rotationSpeed,_name],...this.state.moveSet]}):\n      this.setState({currentSpeed: _name,speed: _speed, start: _speed, end: 0, rotationSpeed: _rotationSpeed});\n  }\n\n  changeColor = (color) => {\n    this.setState({colorPicked:color});\n  }\n\n  changeFaceColor = (pos,side,color) => {\n    let tempObj = [...this.state.rubiksObject]\n    for(let i = 0; i < tempObj.length; i++){\n      let tempCube = [...tempObj[i]];\n      if(tempCube[6]===pos.x && tempCube[7]===pos.y && tempCube[8]===pos.z){\n        tempCube[side]=color;\n        tempObj[i] = [...tempCube];\n        i = tempObj.length;\n      }  \n    }\n    this.setState({rubiksObject:[...tempObj]},()=>{\n      this.reloadTurnedPieces('cp');\n      let obj = this.checkColors();\n      if(obj.error) this.setState({isValidConfig:false,cpErrors:[...obj.error]});\n      else if(obj.success) this.setState({isValidConfig:true,cpErrors:[]});\n    });\n  }\n\n  convertToBlueMiddle(_piece){\n    const piece = [..._piece];\n    const dim = this.state.cubeDimension;\n    const max = dim-1;\n    const white=0,blue=dim-1,red=dim-1,yellow=dim-1,orange=0,green=0;\n\n    if(piece[7]===white) {\n      return {\n        colors:[\n          piece[5], // color on bottom(face 5) is now on front(index 0)\n          piece[0], // color on front(0) is now on top(1)\n          piece[2], // color on right(2) is still on right(2)\n          piece[1], // color on top(1) is now on back(3)\n          piece[4], // color on left(4) is now on left(4)\n          piece[3]  // color on back(3) is now on bottom(5)\n        ].join(\"\"),\n        position:[\n          piece[6],\n          piece[8],\n          max // becomes top\n        ]\n      }\n    }\n\n    if(piece[8]===blue) {\n      return {\n        colors:[\n          piece[0], // piece on front(0) is now on front(0)\n          piece[1], // piece on top(1) is still on top(1)\n          piece[2], // piece on right(2) is now on right(2)\n          piece[3], // piece on back(3) is now on back(3)\n          piece[4], // piece on left(4) is now on left(4)\n          piece[5] // piece on bottom(5) is still on bottom(5)\n        ].join(\"\"),\n        position:[\n          piece[6], // stays same\n          piece[7],  // stays same\n          max // becomes top\n        ]\n      }\n    }\n\n    if(piece[6]===red) {\n      return {\n        colors:[\n          piece[0], // piece on front(index 0) remains the same\n          piece[2], // piece on right(2) is still on top(1)\n          piece[5], // piece on bottom(5) is now on right(2)\n          piece[3], // piece on back(3) remains the same\n          piece[1], // piece on top(1) is now on left(4)\n          piece[4]  // piece on left(4) is still on bottom(5)\n        ].join(\"\"),\n        position:[\n          piece[8], \n          piece[7],  \n          max // becomes top\n        ]\n      }\n    }\n\n    if(piece[7]===yellow) {\n      return {\n        colors:[\n          piece[1], // piece on front(0) is now on bottom(5)\n          piece[3], // piece on top(1) is still on front(0)\n          piece[2], // piece on right(2) is now on right(2)\n          piece[5], // piece on back(3) is now on top(1)\n          piece[4], // piece on left(4) is now on left(4)\n          piece[0] // piece on bottom(5) is still on back(3)\n        ].join(\"\"),\n        position:[\n          piece[6], // inverse y becomes x\n          max-piece[8],  // y becomes 0\n          max // becomes top\n        ]\n      }\n    }\n\n    if(piece[6]===orange) {\n      return {\n        colors:[\n          piece[0], // piece on front(0) is now on front(0)\n          piece[4], // piece on top(1) is still on right(2)\n          piece[1], // piece on right(2) is now on bottom(5)\n          piece[3], // piece on back(3) is now on back(3)\n          piece[5], // piece on left(4) is now on top(1)\n          piece[2] // piece on bottom(5) is still on left(4)\n        ].join(\"\"),\n        position:[\n          piece[8], // inverse y becomes x\n          piece[7],  // y becomes 0\n          max // becomes top\n        ]\n      }\n    }\n\n    if(piece[8]===green) {\n      return {\n        colors:[\n          piece[0], // piece on front(0) is now on front(0)\n          piece[5], // piece on top(1) is still on bottom(5)\n          piece[4], // piece on right(2) is now on left(4)\n          piece[3], // piece on back(3) is now on back(3)\n          piece[2], // piece on left(4) is now on right(2)\n          piece[1] // piece on bottom(5) is still on top(1)\n        ].join(\"\"),\n        position:[\n          max-piece[6], // inverse y becomes x\n          piece[7],  // y becomes 0\n          max // becomes top\n        ]\n      }\n    }\n\n  }\n\n  convertToBlueWhiteEdge(_piece){\n    const piece = [..._piece];\n    const dim = this.state.cubeDimension;\n    const max = dim-1;\n    const white=0,blue=dim-1,red=dim-1,yellow=dim-1,orange=0,green=0;\n\n    // colors according to the solved cube\n    if(piece[7]===white&&piece[8]===blue) {\n      return {\n        colors:[\n          piece[0], // piece on front(0) is now on front(0)\n          piece[1], // piece on top(1) is still on top(1)\n          piece[2], // piece on right(2) is now on right(2)\n          piece[3], // piece on back(3) is now on back(3)\n          piece[4], // piece on left(4) is now on left(4)\n          piece[5] // piece on bottom(5) is still on bottom(5)\n        ].join(\"\"),\n        position:[\n          piece[6], // inverse y becomes x\n          0,  // y becomes 0\n          max // becomes top\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===orange&&piece[8]===blue) {\n      return {\n        colors:[\n          piece[4], // piece on left(4) is now on front(0)\n          piece[1], // piece on top(1) is still on top(1)\n          piece[0], // piece on front(0) is now on right(2)\n          piece[2], // piece on right(2) is now on back(3)\n          piece[3], // piece on back(3) is now on left(4)\n          piece[5] // piece on bottom(5) is still on bottom(5)\n        ].join(\"\"),\n        position:[\n          max-piece[7], // inverse y becomes x\n          0,  // y becomes 0\n          max // becomes top\n        ].join(\"\")\n      }\n    }\n\n    if(piece[7]===yellow&&piece[8]===blue){\n      return {\n        colors:[\n          piece[3], // piece on back(3) is now on front(0)\n          piece[1], // piece on top(1) is still on top(1)\n          piece[4], // piece on left(4) is now on right(2)\n          piece[0], // piece on front(0) is now on back(3)\n          piece[2], // piece on right(2) is now on left(4)\n          piece[5] // piece on bottom(5) is still on bottom(5)\n        ].join(\"\"),\n        position:[\n          dim-(piece[6]+1), // inverse x becomes x\n          0,  // y becomes 0\n          max // becomes top\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===red&&piece[8]===blue){\n      return {\n        colors:[\n          piece[2], // piece on right(2) is now on front(0)\n          piece[1], // piece on top(1) is still on top(1)\n          piece[3], // piece on back(3) is now on right(2)\n          piece[4], // piece on left(4) is now on back(3)\n          piece[0], // piece on front(0) is now on left(4)\n          piece[5] // piece on bottom(5) is still on bottom(5)\n        ].join(\"\"),\n        position:[\n          piece[7], // inverse y becomes x\n          0,  // y becomes 0\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===orange&&piece[7]===white){\n      return {\n        colors:[\n          piece[0], // piece on front(0) is still on front(0)\n          piece[4], // piece on left(4) is now on top(1)\n          piece[1], // piece on top(1) is now on right(2)\n          piece[3], // piece on back(3) is still on back(3)\n          piece[5], // piece on bottom(5) is now on left(4)\n          piece[2] // piece on right(2) is now on bottom(5)\n        ].join(\"\"),\n        position:[\n          piece[8], // z becomes x\n          0,  // y 0\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===red&&piece[7]===white){\n      return {\n        colors:[\n          piece[0], // piece on front(0) is still on front(0)\n          piece[2], // piece on right(2) is now on top(1)\n          piece[5], // piece on bottom(5) is now on right(2)\n          piece[3], // piece on back(3) is still on back(3)\n          piece[1], // piece on top(1) is now on left(4)\n          piece[4] // piece on left(4) is now on bottom(5)\n        ].join(\"\"),\n        position:[\n          max-piece[8], // inverse z becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===orange&&piece[7]===yellow){\n      return {\n        colors:[\n          piece[4], // piece on left(4) is now on front(0)\n          piece[3], // piece on back(3) is now on top(1)\n          \"black\",\n          \"black\",\n          \"black\",\n          \"black\",\n        ].join(\"\"),\n        position:[\n          piece[8], // z becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===red&&piece[7]===yellow){\n      return {\n        colors:[\n          piece[2], // piece on right(2) is now on front(0)\n          piece[3], // piece on back(1) is still on top(1)\n          \"black\",\n          \"black\",\n          \"black\",\n          \"black\",\n        ].join(\"\"),\n        position:[\n          max-piece[8], // inverse z becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[7]===white&&piece[8]===green){\n      return {\n        colors:[\n          piece[0], // piece on front(0) is still on front(0)\n          piece[5], // piece on bottom(5) is now on top(1)\n          \"black\",\n          \"black\",\n          \"black\",\n          \"black\",\n        ].join(\"\"),\n        position:[\n          max-piece[6], // inverse x becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===orange&&piece[8]===green){\n      return {\n        colors:[\n          piece[4], // piece on left(4) is now on front(0)\n          piece[5], // piece on bottom(5) is now on top(1)\n          \"black\",\n          \"black\",\n          \"black\",\n          \"black\",\n        ].join(\"\"),\n        position:[\n          piece[7], // y becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[7]===yellow&&piece[8]===green){\n      return {\n        colors:[\n          piece[3], // piece on back(3) is now on front(0)\n          piece[5], // piece on bottom(5) is now on top(1)\n          \"black\",\n          \"black\",\n          \"black\",\n          \"black\",\n        ].join(\"\"),\n        position:[\n          piece[6], // x becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n\n    if(piece[6]===red&&piece[8]===green){\n      return {\n        colors:[\n          piece[2], // piece on right(2) is now on front(0)\n          piece[5], // piece on bottom(5) is now on top(1)\n          \"black\",\n          \"black\",\n          \"black\",\n          \"black\",\n        ].join(\"\"),\n        position:[\n          max-piece[7], // inverse y becomes x\n          0,  // y remains the same\n          max // becomes tops\n        ].join(\"\")\n      }\n    }\n    \n    console.log(\"failed to register piece\",piece);\n    return null;\n  }\n\n  checkValidMatch(validPiece,manualPiece){\n    let max = this.state.cubeDimension-1;\n    let newValidPiece = this.convertToBlueWhiteEdge([...validPiece]);\n    let newManualPiece = this.convertToBlueWhiteEdge([...manualPiece]); \n    if((newValidPiece.colors===newManualPiece.colors&&newValidPiece.position===newManualPiece.position)||validPiece.includes(\"center\")){\n      return true;\n    }\n    else if(newValidPiece.colors!==newManualPiece.colors&&parseInt(newValidPiece.position[0])===max-parseInt(newManualPiece.position[0])){\n      //console.log(\"valid\");\n      //console.log(newValidPiece,newManualPiece)\n      return true;\n    }\n    else return false;\n  }\n\n  checkValidMatchMiddle(validPiece,manualPiece){\n    let newValidPiece = this.alignQuadrant(this.convertToBlueMiddle(validPiece));\n    let newManualPiece = this.alignQuadrant(this.convertToBlueMiddle(manualPiece));\n\n    if(newValidPiece.colors===newManualPiece.colors&&newValidPiece.position===newManualPiece.position){\n      return true;\n    }\n    \n    return false;\n  }\n\n  alignQuadrant(_piece){\n    let pos = _piece.position;\n    let piece = {colors:_piece.colors}\n    const dim = this.state.cubeDimension;\n    const max = dim-1;\n    const X = 0, Y = 1, Z = 2;\n\n    if(pos[X] < Math.floor(dim/2) && pos[Y] >= Math.floor(dim/2)){\n      piece.position = [ (max - pos[Y]), pos[X], pos[Z] ].join(\"\");\n    }\n    else if(pos[X] >= Math.floor(dim/2) && pos[Y] >= Math.ceil(dim/2)){\n      piece.position = [ (max - pos[X]), max - pos[Y], pos[Z] ].join(\"\");\n    }\n    else if(pos[X] >= Math.ceil(dim/2) && pos[Y] < Math.ceil(dim/2)){\n      piece.position = [ pos[Y], (max-pos[X]), pos[Z]].join(\"\");\n    }\n    else piece.position=pos.join(\"\");\n\n    return piece;\n  }\n\n  setColorPickedCube = () => {\n    let rubiks = [...this.state.rubiksObject];\n    let generated = cube.generateSolved(this.state.cubeDimension,this.state.cubeDimension,this.state.cubeDimension);\n    let newGenerated = [];\n    let checked = [];\n    let otherChecked = [];\n\n    generated.tempArr.forEach(([...piece],pieceIndex) =>{\n      newGenerated.push([]);\n      rubiks.forEach(([...rubik],i) => {\n        let validPiece = 0;\n        piece.slice(0,6).sort().forEach((face,index) =>{\n          if(rubik.slice(0,6).sort()[index]===face) {validPiece++;}\n        }); \n        if(validPiece===6&&!checked.includes(pieceIndex)&&!otherChecked.includes(i)){\n          let validEdgePlacement = false;\n          let validMiddlePlacement = false;\n          if(piece.includes(\"edge\")){\n            validEdgePlacement = this.checkValidMatch(piece,rubik);\n            // A center edge cannot match with a non center edge\n            if((piece[13]===\"center\"&&rubik[13]!==\"center\")||\n              (rubik[13]===\"center\"&&piece[13]!==\"center\")){\n              validEdgePlacement = false;\n            }\n            else if (piece[13]===\"center\"&&rubik[13]===\"center\"){\n              validEdgePlacement = true;\n            }\n          }\n          else if(piece.includes(\"middle\")){\n            validMiddlePlacement = this.checkValidMatchMiddle(piece,rubik);\n          }\n          else{\n            validEdgePlacement = true;\n            validMiddlePlacement = true;\n          }\n          if(validEdgePlacement||validMiddlePlacement){\n            checked.push(pieceIndex);\n            otherChecked.push(i);\n            newGenerated[pieceIndex]=[\n              ...rubik.slice(0,9),\n              ...piece.slice(9,15)\n            ];\n          }\n        }\n      }) \n    });\n\n    this.setState({rubiksObject:newGenerated,currentFunc : \"None\",activeMenu:\"\"},()=>{\n      this.reloadTurnedPieces('check');\n      this.setState({activeMenu:'Solver'});\n      this.beginSolve();\n    });\n  }\n\n  checkOccurences = (a1, a2) => {\n    let success = true;\n    let amount = 0;\n    let failedColors = [];\n    for(var i = 0; i < a1.length; i++) {\n      var count = 0;\n      for(var z = 0; z < a2.length; z++) {\n        if (a2[z] === a1[i]) count++;\n      }\n      if(count>1) {\n        success = false;\n        if(!failedColors.includes(a1[i])) failedColors.push(a1[i])\n      }\n\n    }\n    return {success,failedColors,amount}\n  }\n\n  checkColors = () => {\n    let rubiksLength = this.state.rubiksObject.length;\n\n    let whiteCount = 0,blueCount = 0,redCount = 0,yellowCount = 0,orangeCount = 0,greenCount = 0;\n    let duplicateFace = false;\n    let duplicateColors = [];\n    let matchedCount = 0;\n    let obj = {error:[]};\n    let validAmount = this.state.cubeDimension*this.state.cubeDimension;\n    let rubiks = [...this.state.rubiksObject];\n    let generated = cube.generateSolved(this.state.cubeDimension,this.state.cubeDimension,this.state.cubeDimension);\n    let newGenerated = [];\n    let invalidMiddleConfig;\n    let invalidEdgeConfig;\n    for(let i = 0; i < rubiks.length; i++){\n      let rubik = [...rubiks[i]];\n      const colors = ['white','blue','red','yellow','orange','green'];\n      if(rubik.includes('white')) whiteCount+=1;\n      if(rubik.includes('blue')) blueCount+=1;\n      if(rubik.includes('red')) redCount+=1;\n      if(rubik.includes('yellow')) yellowCount+=1;\n      if(rubik.includes('orange')) orangeCount+=1;\n      if(rubik.includes('green')) greenCount+=1;\n\n      let res = this.checkOccurences(colors,rubik);\n      if(!res.success){\n        duplicateFace = true;\n        let tempColors = []\n        res.failedColors.forEach(color => {\n          if(!tempColors.includes(color)) {\n            tempColors.push(color);\n          }\n        })\n        duplicateColors=tempColors;\n      }\n    }\n\n    let checked = [];\n    let otherChecked = [];\n    //For each cube piece in the generated solved cube, find the matching\n    //manually inputted piece and overwrite the solved position from the unsolved\n    //piece with the solved piece's solved position to a new generated cube. For \n    //edge pieces, an extra check was needed to ensure first half segments weren't\n    //getting assigned or assigning to second half segments(becomes unsolvable).\n    generated.tempArr.forEach(([...piece],pieceIndex) =>{\n      newGenerated.push([]);\n      let tempInvalidMatch = [];\n      rubiks.forEach(([...rubik],i) => {\n        let validPiece = 0;\n        piece.slice(0,6).sort().forEach((face,index) =>{\n          if(rubik.slice(0,6).sort()[index]===face) {validPiece++;}\n        });\n        if(validPiece===6&&!checked.includes(pieceIndex)&&!otherChecked.includes(i)){\n          let validEdgePlacement = false;\n          let validMiddlePlacement = false;\n          if(piece.includes(\"edge\")){\n            validEdgePlacement = this.checkValidMatch(piece,rubik);\n            // A center edge cannot match with a non center edge\n            if((piece[13]===\"center\"&&rubik[13]!==\"center\")||\n              (rubik[13]===\"center\"&&piece[13]!==\"center\")){\n                validEdgePlacement = false;\n            }\n            else if (piece[13]===\"center\"&&rubik[13]===\"center\"){\n              validEdgePlacement = true;\n            }\n          }\n          else if(piece.includes(\"middle\")){\n            validMiddlePlacement = this.checkValidMatchMiddle(piece,rubik);\n            if(!validMiddlePlacement) tempInvalidMatch.push([piece,rubik]);\n          }\n          else{\n            validEdgePlacement = true;\n            validMiddlePlacement = true;\n          }\n          if(validEdgePlacement||validMiddlePlacement){\n            matchedCount++;\n            checked.push(pieceIndex);\n            otherChecked.push(i);\n            newGenerated[pieceIndex]=[\n              ...rubik.slice(0,9),\n              ...piece.slice(9,15)\n            ];\n          }\n        }\n      })\n      if(newGenerated[pieceIndex].length===0)\n        if(piece[12]===\"edge\")\n          invalidEdgeConfig=\"Invalid edge configuration.\";\n        else if(piece[12]===\"middle\"){\n          invalidMiddleConfig = \"Invalid middle configuration.\";\n          console.log(\"Invalid middle configuration.\");\n          console.log(tempInvalidMatch);\n        }\n    });\n\n\n    \n    let invalidAmounts = [];\n    if(whiteCount!==validAmount){\n      invalidAmounts.push(\"white\");\n    }\n    if(blueCount!==validAmount){\n      invalidAmounts.push(\"blue\");\n    }\n    if(redCount!==validAmount){\n      invalidAmounts.push(\"red\");\n    }\n    if(yellowCount!==validAmount){\n      invalidAmounts.push(\"yellow\");\n    }\n    if(orangeCount!==validAmount){\n      invalidAmounts.push(\"orange\");\n    }\n    if(greenCount!==validAmount){\n      invalidAmounts.push(\"green\");\n    }\n    if(invalidAmounts.length){\n      invalidAmounts=invalidAmounts.join(', ');\n      obj.error.push(`Invalid ${invalidAmounts} sticker count.`);\n    }\n\n    if(duplicateFace){\n      duplicateColors=duplicateColors.join(', ');\n      obj.error.push(`More than one occurence of ${duplicateColors} found on a piece.`);\n    }\n\n    if(matchedCount!==rubiksLength&&this.state.cubeDimension<4){\n      obj.error.push(`[${matchedCount-1}] out of [${rubiksLength-1}] matched. Missing [${(rubiksLength-1)-(matchedCount-1)}]`);\n    }\n\n    if(invalidEdgeConfig){\n      obj.error.push(invalidEdgeConfig);\n    }\n    if(invalidMiddleConfig){\n      obj.error.push(invalidMiddleConfig);\n    }\n\n    if(!obj.error.length){\n      const solveData = {...this.generateAllSolveMoves(this.state,newGenerated)};\n      if(solveData.solveable===false){\n        //console.log(newGenerated);\n        obj.error.push(`This configuration of the cube is not solveable,\n        please check that you've entered all pieces correctly.`);\n      }\n      else{\n        if(solveData.tempObject){\n          //console.log(solveData.tempObject);\n          for(let i = 0; i<solveData.tempObject.length; i++){\n            if((solveData.tempObject[i].slice(0,6).sort().join(\"\")!==generated.tempArr[i].slice(0,6).sort().join(\"\"))&&solveData.tempObject[i][12]===\"corner\"){\n              // console.log(solveData.tempObject[i].slice(0,6).sort().join(\"\"),generated.tempArr[i].slice(0,6).sort().join(\"\"));\n              // obj.error.push(`Invalid corner alignment`);\n              // break;\n            }\n          }\n          if(!obj.error.length) obj.error = undefined;\n        }\n        else{\n          obj.error = undefined;\n        }\n      }\n    }\n\n    if(!obj.error) {obj.success = true;obj.newGenerated = newGenerated}\n    return obj;\n  }\n\n  // Allows the user to undo a move\n  undo = () => {\n    let undoIndex = this.state.undoIndex;\n    let moveString = this.state.moveLog;\n    const moveArray = this.moveStringToArray(moveString);\n    if(moveString === \"\") return;\n\n    else if(this.state.currentFunc !== \"None\") return;\n\n    else if(moveArray.length-1-undoIndex >= 0)\n      this.setState({blockMoveLog : true,\n                     currentFunc : \"Undo\",\n                     moveSet : [moveArray[moveArray.length-1-undoIndex]],\n                     undoIndex : undoIndex + 1});\n  }\n\n  // Allows the user to redo a move\n  redo = () => {\n    if(this.state.currentFunc !== \"None\") return;\n    let undoIndex = this.state.undoIndex;\n    let moveString = this.state.moveLog;\n    if(moveString === \"\") return;\n    \n    const moveArray = this.moveStringToArray(moveString);\n    \n    let backwardsMove = moveArray[moveArray.length-undoIndex];\n    try{\n      backwardsMove.includes(\"'\") ? backwardsMove = backwardsMove.substring(0,3) : backwardsMove += \"'\";\n    }catch(err){\n      return;\n    }\n\n    if(undoIndex > 0)\n      this.setState({blockMoveLog : true,\n                     currentFunc : \"Redo\",\n                     moveSet : [backwardsMove],\n                     undoIndex : undoIndex - 1});\n  }\n\n  // Control when single buttons can be clicked\n  rotateOneFace = (e,vals) => {\n    if (vals.length < 4) vals.push(false);\n\n    if(this.state.currentFunc === \"None\") {\n\n      let cD = this.state.cubeDimension;\n      let rubiksObject = this.state.rubiksObject;\n      let blockMoveLog = this.state.blockMoveLog;\n      let moveLog = this.state.moveLog;\n      let solveMoves = this.state.solveMoves;\n      let solveState = this.state.solveState;\n      let end = this.state.end;\n      let obj = this.rotateCubeFace(vals[0],vals[1],vals[2],vals[3],blockMoveLog,moveLog,solveMoves,end,solveState);\n\n      obj.currentFunc = e;\n      obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\n\n      this.setState(obj);\n    }\n  }\n\n  // Changes values in state to trigger face rotation\n  rotateCubeFace = (face,direction,cubeDepth,isMulti,blockMoveLog,moveLog,solveMoves,end,solveState) => {\n    let obj = {};\n    if(!blockMoveLog){\n      \n      let tempMove = \"\";\n      cubeDepth<10 ? tempMove+=\"0\"+cubeDepth : tempMove += cubeDepth;\n      if(face === 0) !isMulti ? tempMove += \"F\" : tempMove += \"f\";\n      else if(face === 1) !isMulti ? tempMove += \"U\" : tempMove += \"u\";\n      else if(face === 2) !isMulti ? tempMove += \"R\" : tempMove += \"r\";\n      else if(face === 3) !isMulti ? tempMove += \"B\" : tempMove += \"b\";\n      else if(face === 4) !isMulti ? tempMove += \"L\" : tempMove += \"l\";\n      else if(face === 5) !isMulti ? tempMove += \"D\" : tempMove += \"d\";\n      if(direction === -1) tempMove += \"'\";\n\n      moveLog&&moveLog.length > 0 ?\n        obj.moveLog = (moveLog + \" \" + tempMove) :\n        obj.moveLog = (tempMove);\n      \n      // Keeps tracks of solver's moves\n      if(solveState > -1) \n        obj.solveMoves = (solveMoves.length ? solveMoves + \" \" + tempMove : solveMoves + tempMove);\n    }\n\n    // Faces on opposite side of cube rotate backwards\n    if(face>2 && direction === -1) direction = 0;\n\n    else if (face>2 && direction === 0) direction = -1;\n\n    obj.blockMoveLog = false;\n    obj.face = face; // used\n    obj.turnDirection = direction; // used\n    obj.end = end + 90; \n    obj.cubeDepth = cubeDepth; // used\n    obj.isMulti = isMulti; // used\n    \n\n    return obj;\n  }\n\n  // Takes prebuilt algorithms and converts to moves\n  // allow for C,c\n  // **************************\n  // If during solve or algorithm state and the drag move is the same as the\n  // next move then allow the move to be queued as playOne\n\n  // Small bug, account for double turns\n  algorithm = (moveString,moveName) => {\n    if(this.state.currentFunc === \"Solving\"||this.state.currentFunc === \"Algorithms\"){\n      if(this.state.moveSet[0]){\n        if(this.checkMoveEquivalence(moveString,this.state.moveSet[0])){\n          this.playOne(this);\n        }\n      }\n      return;\n    }\n    if(this.state.currentFunc !== \"None\") return;\n    const moveArray = this.moveStringToArray(moveString);\n    this.setState({currentFunc : moveName, moveSet : moveArray});\n  }\n\n  // Compares dragged move with the next move in algorithm or solver\n  checkMoveEquivalence(dragMove,nextMove){\n    // Check both ways a move can be made, on a 3x3 02U is the same as 02D\n    if(dragMove===nextMove||this.invertMove(dragMove)===nextMove){\n      return true;\n    }\n    return false;\n  }\n\n  // converts a move into it's equivalent other move, \n  // ex: (on a 3x3) 03F === 01B'\n  // invertMove(\"03F\") => \"01B'\"\n  invertMove(_move){\n    const move =_move.split('');\n    let inverted = '';\n    let depth;\n    if(move[0]==='0'){\n      depth = this.state.cubeDimension - parseInt(move[1]) + 1;\n    }\n    else{\n      depth = this.state.cubeDimension - parseInt(move[0]+move[1]) + 1;\n    }\n\n    if(depth<10){\n      inverted+=`0${depth}`\n    }\n    else{\n      inverted+=`${depth}`\n    }\n\n    switch(move[2]){\n      case 'F':\n        inverted+='B';\n        break;\n      case 'f':\n        inverted+='b';\n        break;\n      case 'U':\n        inverted+='D';\n        break;\n      case 'u':\n        inverted+='d';\n        break;\n      case 'R':\n        inverted+='L';\n        break;\n      case 'r':\n        inverted+='l';\n        break;\n      case 'B':\n        inverted+='F';\n        break;\n      case 'b':\n        inverted+='f';\n        break;\n      case 'L':\n        inverted+='R';\n        break;\n      case 'l':\n        inverted+='r';\n        break;\n      case 'D':\n        inverted+='U';\n        break;\n      case 'd':\n        inverted+='u';\n        break;\n      default:\n    }\n\n    if(move.length<4) inverted+=\"'\";\n    \n    return inverted;\n    \n  }\n\n  // Resets the cube and the move log\n  reset = () => {\n    let cD = this.state.cubeDimension;\n    let generated = cube.generateSolved(cD,cD,cD);\n    let rubiksObject = generated.tempArr;\n    this.setState({rubiksObject,moveSet: [],moveLog: \"\",currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [],cpErrors:[],activeMenu:\"none\"},()=>{\n      this.reloadTurnedPieces('all');\n    });\n  }\n\n  // Generates a random move\n  generateMove = () => {\n    let maxDepth = Math.ceil((this.state.cubeDimension/2));\n    let randFace = Math.floor((Math.random() * 6));\n    let randTurn = Math.floor((Math.random() * 2)-1);\n    let randIsMulti = Math.floor((Math.random() * 2));\n    let randDepth = 1;\n    let cD = this.state.cubeDimension;\n\n    if(randFace>2&&cD%2) maxDepth-=1;\n\n    if(cD>2) \n      randDepth = Math.floor((Math.random() * maxDepth)) + 1;\n\n    if(randDepth===1) randIsMulti = 0;\n\n    if(randDepth === Math.ceil(cD/2) && cD%2)\n      randIsMulti=0;\n\n    return this.convertDataToMove([randFace, randTurn,randDepth,randIsMulti]);\n  }\n\n  convertDataToMove = (data) => {\n    let move = \"\";\n    let face = ['F','U','R','B','L','D']\n    move+=data[2].toString().length<2?\"0\".concat(data[2]):data[2];\n    move+=(data[3]?face[data[0]].toLowerCase():face[data[0]])\n    data[1]===-1?move+=\"\":move+=\"'\"\n    return move;\n  }\n\n  // Changes state active function to begin scrambling\n  beginScramble = () => {\n    \n    if(this.state.currentFunc === \"None\") {\n      let moveSet = [];\n      while (moveSet.length<25){\n        let temp = this.generateMove();\n        if(moveSet[moveSet.length-1]&&\n           moveSet[moveSet.length-1].slice(0,3)===temp.slice(0,3)&&\n           moveSet[moveSet.length-1].length!==temp.length);\n        else if(moveSet[moveSet.length-2]&&\n                moveSet[moveSet.length-1]&&\n                moveSet[moveSet.length-2]===temp&&\n                moveSet[moveSet.length-1]===temp);\n        else moveSet.push(temp);\n      }\n      this.setState({currentFunc : \"Scrambling\",moveSet});\n    }\n  }\n\n  // Starts the solve process\n  beginSolve = () => {\n    if(this.state.currentFunc !== \"None\") return;\n    this.setState({currentFunc : \"Solving\",solveState : 0,autoPlay : false, playOne : false, solveOnce : true});\n  }\n\n  stopSolve = () => {\n    this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [], moveSet : [],targetSolveIndex:-1,solvedSet:[]});\n  }\n\n  beginColorPicker = () => {\n    let cD = this.state.cubeDimension;\n    if(this.state.currentFunc !== \"None\") return;\n    const blank = [...cube.generateBlank(cD,cD,cD)];\n    this.setState({currentFunc : \"Color Picker\",rubiksObject: [...blank]},()=>{\n      this.reloadTurnedPieces('cp');\n    });\n  }\n\n  endColorPicker = () => {\n    this.reset();\n    this.setState({currentFunc : \"None\",cpErrors:[]});\n  }\n\n  playOne = props => {\n    if(!props.state.moveSet.length) return;\n    if((props.state.moveSet[0]===props.state.moveSet[1]||props.state.moveSet[1]===\"stop'\")&&!props.state.autoPlay){\n        props.setState({\n            autoPlay:true,\n            autoRewind:false,\n            targetSolveIndex:props.state.solvedSetIndex+2});\n    }\n    else{\n        if(props.state.playOne===true) return;\n        if(props.state.moveSet[0]&&typeof(props.state.moveSet[0][0])==='string'&&props.state.moveSet[0]!==\"'\"){\n            props.setState({playOne:true,prevSet:[...props.state.prevSet,props.state.moveSet[0]]});\n        }\n    }\n  }\n\n  rewindSolve = () => {\n    if(this.state.playOne) return;\n    if((this.state.prevSet[this.state.prevSet.length-1]===this.state.prevSet[this.state.prevSet.length-2]||this.state.prevSet[this.state.prevSet.length-1]===\"stop'\")&&!this.state.autoRewind){\n      this.setState({\n        autoPlay:false,autoRewind:true,targetSolveIndex:this.state.solvedSetIndex-2\n      });\n      return;\n    }\n    let newMoveSet = [];\n    let tempMoveSet = [...this.state.moveSet];\n    let tempPrev = [...this.state.prevSet];\n    let lastEl = tempPrev[tempPrev.length-1];\n    let popped = tempPrev.pop();\n    if(!popped) {\n      this.setState({autoRewind:false});\n      return;\n    }\n    popped[popped.length-1]===\"'\" ? popped=popped.slice(0,3) : popped+=\"'\";\n    newMoveSet.push(popped,lastEl,...tempMoveSet);\n    this.setState({\n      playOne:true,\n      prevSet:tempPrev,\n      moveSet:newMoveSet,\n      solvedSetIndex:this.state.solvedSetIndex-2\n    })\n  }\n\n  rewindAllSolve = () => {\n    if(this.state.playOne) return;\n    let newMoveSet = [];\n    let tempMoveSet = this.state.moveSet;\n    let tempPrev = this.state.prevSet;\n    let lastElArray = [];\n    let poppedArray = [];\n    for(let i = 0; i < tempMoveSet.length; i++){\n      let lastEl = tempPrev[tempPrev.length-1];\n      let popped = tempPrev.pop();\n      if(!popped) return;\n      popped[popped.length-1]===\"'\" ? popped=popped.slice(0,3) : popped+=\"'\";\n      poppedArray.push(popped);\n      lastElArray.push(lastEl);\n    }\n    \n    newMoveSet.push(...poppedArray,...lastElArray,...tempMoveSet);\n    this.setState({\n      playOne:true,\n      prevSet:tempPrev,\n      moveSet:newMoveSet\n    })\n  }\n\n  handleDragInput = (e, ui) => {\n    const {x, y} = this.state.deltaPositionInput;\n    this.setState({\n      deltaPositionInput: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n  };\n\n  onStartInput = () => {\n    this.setState({activeDragsInput: this.state.activeDragsInput+1});\n  };\n\n  onStopInput = () => {\n    this.setState({activeDragsInput: this.state.activeDragsInput-1});\n  };\n\n  handleDragControls = (e, ui) => {\n    const {x, y} = this.state.deltaPositionControls;\n    this.setState({\n      deltaPositionControls: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n  };\n\n  onStartControls = () => {\n    this.setState({activeDragsControls: this.state.activeDragsControls+1});\n  };\n\n  onStopControls = () => {\n    this.setState({activeDragsControls: this.state.activeDragsControls-1});\n  };\n\n  convertMoveToData = (move) => {\n    if(move.length < 2) return false;\n    let data = [];\n    let face = ['F','U','R','B','L','D']\n    data.push(face.indexOf(move[2].toUpperCase()));\n    move.length < 4 ? data.push(-1) : data.push(0);\n    move[0]==='0' ? data.push(parseInt(move[1])) : data.push(parseInt(move.substring(0, 2)))\n    move[2].toUpperCase() === move[2] ? data.push(false) : data.push(true);\n    return data;\n  }\n\n  mouseOver = (name,data,e) => {\n    if(this.state.showHints)\n      this.setState({\n        isVisible: true,\n        hoverData: data\n      });\n  }\n\n  mouseLeave = () => {\n    this.setState({\n      isVisible: false,\n      hoverData: []\n    });\n  }\n\n  // Converts move string to move array\n  // handle move short hand characters. ex: fx => 01Fx 02Fx; x = \"\" or \"'\" or \"2\"\n  moveStringToArray = str => {\n    let tempArray = str.split(\" \");\n    let moveArray = [];\n\n    // Run through split string and create duplicates where needed\n    // Handle other short hands\n    for(let i = 0; i < tempArray.length;i++){\n      if(tempArray[i].length === 4 && tempArray[i].slice(3,4)===\"2\") {\n        let tempMove = tempArray[i].slice(0,3);\n        moveArray.push(tempMove);\n        moveArray.push(tempMove);\n      }\n      else {\n        moveArray.push(tempArray[i]);\n      }\n    }\n    return moveArray;\n  }\n\n  // Generalized move function. Takes in array of moves and parse the moves\n  parseMoveArray = (moveArray) =>{\n    //if(typeof moveArray === 'string') moveArray = [moveArray];\n    let shifted = moveArray.shift();\n\n    let tempFace = 0;\n    let tempDirection = -1;\n    let tempDepth = 1;\n    let tempIsMulti = false;\n\n    if(shifted){\n      if(shifted.length === 4) tempDirection=0;\n      tempDepth = parseInt(shifted.slice(0,2));\n\n      if(shifted.slice(2,3) === shifted.slice(2,3).toLowerCase()){\n        tempIsMulti = true;\n      }\n\n      if(shifted.slice(2,3).toUpperCase() === \"U\") tempFace = 1;\n      else if(shifted.slice(2,3).toUpperCase() === \"F\") tempFace = 0;\n      else if(shifted.slice(2,3).toUpperCase() === \"B\") tempFace = 3;\n      else if(shifted.slice(2,3).toUpperCase() === \"R\") tempFace = 2;\n      else if(shifted.slice(2,3).toUpperCase() === \"L\") tempFace = 4;\n      else if(shifted.slice(2,3).toUpperCase() === \"D\") tempFace = 5;\n\n      return [tempFace,tempDirection,tempDepth,tempIsMulti];\n    }\n  }\n\n  /* Each piece that's rotated has it's rotation disrupted on other planes.\n   *\n   * This function solves that issue by setting all piece rotation back to zero\n   * and then placing colors to look as though the piece were still rotated.\n   * \n   * Some optimizations have been added. Undersides and insides of some pieces\n   * appear white instead of black initially but does not disrupt the rest of\n   * the cube. Likely won't be changed since that optimization greatly improves\n   * run time.\n   */\n  reloadTurnedPieces = (pos) => {\n    let cubes = [...this.state.cubes];\n    \n    for(let i = 0; i<this.state.rubiksObject.length;i++){\n      \n      let tempCube = {...cubes[i]};\n      let rotation = tempCube.rotation;\n\n\n      if(pos === tempCube.position){\n        tempCube.opacity=1;\n        cubes[i] = tempCube;\n      }\n\n      else if((rotation.x !== 0 || rotation.y !== 0 ||rotation.z !== 0) || \n           (pos==='all'||pos==='cp'||pos==='check')){\n        if(pos==='all'||pos==='cp') {\n          tempCube.position.x=this.state.rubiksObject[i][9];\n          tempCube.position.y=this.state.rubiksObject[i][10];\n          tempCube.position.z=this.state.rubiksObject[i][11];\n        }\n        if(pos==='check') {\n          tempCube.position.x=this.state.rubiksObject[i][6];\n          tempCube.position.y=this.state.rubiksObject[i][7];\n          tempCube.position.z=this.state.rubiksObject[i][8];\n        }\n        tempCube.material[0].color = new THREE.Color(this.state.rubiksObject[i][2]);\n        tempCube.material[1].color = new THREE.Color(this.state.rubiksObject[i][4]);\n        tempCube.material[2].color = new THREE.Color(this.state.rubiksObject[i][3]);\n        tempCube.material[3].color = new THREE.Color(this.state.rubiksObject[i][0]);\n        tempCube.material[4].color = new THREE.Color(this.state.rubiksObject[i][1]);\n        tempCube.material[5].color = new THREE.Color(this.state.rubiksObject[i][5]);\n        \n        tempCube.rotation.x = 0; tempCube.rotation.y = 0; tempCube.rotation.z = 0;\n        cubes[i] = tempCube;\n        \n      }\n    }\n\n    this.setState({cubes,reload : false});\n  }\n\n  // Changes the settings by passing setting to change and new val for the setting\n  changeSettings (settingToChange,newVals) {\n    switch(settingToChange){\n      // case 'displayStats':\n      //   this.state.showStats ? document.body.children[9].style.display = \"none\" : document.body.children[9].style.display = \"\";\n      //   this.setState({showStats : !this.state.showStats});\n      //   break;\n      case 'displayMoveInput':\n        this.setState({showMoveInput:!this.state.showMoveInput});\n        break;\n      case 'displayControls':\n        this.setState({showControls:!this.state.showControls});\n        break;\n      case 'displayHints':\n        this.setState({showHints:!this.state.showHints});\n        break;\n      default:\n        console.log(\"Invalid Setting\");\n    }\n  }\n  \n  // Remove event listener on compenent unmount\t\n  componentWillUnmount() {    \n    window.removeEventListener(\"keydown\", this.keyHandling);\n  }\n\n  // Gets the url to be parsed\n  getSizeFromUrl(checkLocal) {\n    let limit = 75;\n    let cD;\n    \n    let parts = window.location.href.split('/');\n    let checkID = parts[parts.length-1][0]+parts[parts.length-1][1]+parts[parts.length-1][2];\n\n    if(checkLocal){\n      if(parts[2].substr(0,9)==='localhost'){\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n\n    if(checkID === 'id='){\n      cD = parseInt(parts[parts.length-1].substr(3));\n    }\n\n    if (cD <= limit && cD >= 1) return cD; else return 3;\n  }\n\n  calculateTurn(current,previous,piece,pieceFace,cD){\n\n    let calculated = null;\n    let depth = null;\n    let turn = null;\n\n    // difference in initial mouse down location and current mouse down\n    const dif = { \n      x: (previous.x-current.x), \n      y: (previous.y-current.y), \n      z: (previous.z-current.z)\n    }\n\n    if(current.x===previous.x && current.y === previous.y && current.z===previous.z){\n      return null;\n    }\n\n    function calculateTurnAtFace(coord1,compare1,coord2,compare2,piece1,piece2,dir1,dir2){\n      if(Math.abs(coord1)>=Math.abs(coord2)&&(Math.abs(coord1)>.05)) \n        return {calculated : compare1?dir1:(dir1+\"'\"),depth : piece2}\n        \n      if(Math.abs(coord2)>Math.abs(coord1)&&(Math.abs(coord2)>.05)) {\n        return {calculated : compare2?dir2:(dir2+\"'\"),depth : piece1}\n      }\n      return {calculated:null,depth:null};\n    }\n\n    //determines the move based on mouse difference from click to new position\n    switch(pieceFace){\n      case 0:\n        turn = calculateTurnAtFace(dif.z,dif.z<0,dif.x,dif.x>=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 1:\n        turn = calculateTurnAtFace(dif.x,dif.x<=0,dif.y,dif.y<0,cD-piece.x,piece.y+1,\"F\",\"R\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 2:\n        turn = calculateTurnAtFace(dif.z,dif.z>0,dif.y,dif.y>0,cD-piece.z,piece.y+1,\"F\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 3:\n        turn = calculateTurnAtFace(dif.z,dif.z>0,dif.x,dif.x<=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 4:\n        turn = calculateTurnAtFace(dif.z,dif.z<0,dif.y,dif.y<0,cD-piece.z,piece.y+1,\"F\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 5:\n        turn = calculateTurnAtFace(dif.x,dif.x>=0,dif.y,dif.y>0,cD-piece.x,piece.y+1,\"F\",\"R\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      default:\n    }\n\n    //console.log(\"{ turn: \" + calculated + \" } , { depth: \" + depth + \" }\");\n    return ((depth<10? \"0\" : \"\") + depth+calculated);\n  }\n\n  // Proto function for feature to be built later\n  calculateTheta(){\n\n  }\n\n  menuSetState = (obj) =>{\n    //console.log(obj);\n    this.setState(obj,()=>{\n      if(obj.activeAlgo){\n        this.reloadTurnedPieces('all');\n      }\n    });\n  }\n\n  autoJump = (state,moves) =>{\n\n    let tempState = {...state};\n    tempState.moveSet = moves;\n    \n    while(tempState.moveSet.length){\n        //console.log(tempState.rubiksObject);\n        let cD = tempState.cubeDimension;\n        let blockMoveLog = tempState.blockMoveLog;\n        let moveLog = tempState.moveLog;\n        let solveMoves = tempState.solveMoves;\n        let rubiksObject = tempState.rubiksObject;\n        let end = tempState.end;\n        let solveState = tempState.solveState;\n        let moveData = \n          this.parseMoveArray(tempState.moveSet); // generates data for next move\n        let obj = \n          this.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n        obj.rubiksObject = \n          cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\n        tempState = {...tempState,...obj};\n    }\n    return [...tempState.rubiksObject];\n  }\n\n  generateAllSolveMoves = (state,rubiksObject) =>{\n    let beforeObject = rubiksObject.map(e=>[...e]);\n    //console.log(beforeObject);\n    let tempState = {...state}, solvedSet = \"\";\n    let currentIndex = null;\n    let previousIndex = null;\n    let indexOccurence = 0;\n    let error = false;\n    let counter = 0;\n    if(tempState.currentFunc === 'Color Picker'){\n      tempState.solveState = 0;\n      tempState.currentFunc = \"Solving\";\n      tempState.rubiksObject = rubiksObject.map(e=>[...e]);\n    }\n    while(tempState.currentFunc===\"Solving\"){\n      \n      if(!tempState.moveSet || !tempState.moveSet.length) {\n        //console.log(tempState.rubiksIndex);\n        currentIndex=tempState.rubiksIndex;\n        if(currentIndex===previousIndex) indexOccurence = indexOccurence+1;\n        else indexOccurence = 0;\n        let moves;\n        moves = solver(tempState.solveState,tempState.rubiksObject,tempState.cubeDimension,this.moveStringToArray,\n          tempState.solveMoves,tempState.rubiksIndex,tempState.middles,tempState.edges,tempState.corners);\n        if (!moves) moves = {};\n        if(moves.moveSet && moves.moveSet[0]==='stop'){\n          if(this.state.currentFunc===\"Solving\"){\n            moves.solveMoves = tempState.solveMoves + ` ${moves.moveSet[0]}`;\n            moves.moveSet.pop();\n          }\n          else moves.moveSet.pop();\n        }\n        \n        if(moves.moveSet){\n          let temp = [];\n          for(let i = 0; i<moves.moveSet.length; i++){\n            \n            if(moves.moveSet[i]===''||moves.moveSet[i]===' '||moves.moveSet[i][0]===\"N\"||moves.moveSet[i]===\"'\");\n            else temp.push(moves.moveSet[i]);\n          }\n          moves.moveSet = temp;\n        }\n        if((indexOccurence>10 && tempState.solveState<1)||counter>10000||(moves.moveSet&&moves.moveSet[0]==='error')) {\n\n          console.log(indexOccurence,currentIndex,previousIndex,tempState.rubiksIndex);\n          console.log(moves);\n          error = true;\n          //console.log(JSON.stringify({beforeObject}));\n          moves.currentFunc=\"None\";\n        }\n        if(moves.currentFunc && moves.currentFunc===\"None\") solvedSet = tempState.solveMoves;\n        counter++;\n        tempState = {...tempState,...moves};\n        previousIndex=currentIndex;\n      }\n      else{\n        let cD = tempState.cubeDimension;\n        let blockMoveLog = tempState.blockMoveLog;\n        let moveLog = tempState.moveLog;\n        let solveMoves = tempState.solveMoves;\n        let rubiksObject = tempState.rubiksObject;\n        let end = tempState.end;\n        let solveState = tempState.solveState;\n        let moveData = this.parseMoveArray(tempState.moveSet); // generates data for next move\n        let obj = this.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n        obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\n        tempState = {...tempState,...obj};\n      }\n    }\n    let splitSet = solvedSet.split(\" \");\n    if(splitSet[0][0]===\"N\"||splitSet[0][0]===\"'\") splitSet.shift();\n    let moveSet = []\n    splitSet.forEach(e => e[e.length-1]===\"'\"? moveSet.push(e.replace(\"'\",\"\")):moveSet.push(e+\"'\"));\n\n    //console.log(moveSet);\n    for(let i = 0; i<moveSet.length; i++){\n      if(moveSet[i]===''||moveSet[i]===' '||moveSet[i][0]===\"N\"||moveSet[i]===\"'\"||moveSet[i]===undefined){\n        //console.log(\"removed invalid move\");\n        moveSet.splice(i,1);\n      }\n    }\n\n    let maxDepth = Math.floor(tempState.cubeDimension/2);\n    moveSet = moveSet.map(move=>{\n      if(move===\"stop'\") return move;\n      //console.log(move);\n      let dataMove = this.convertMoveToData(move);\n      if(parseInt(dataMove[2])>maxDepth&&!dataMove[3]){\n        //console.log(\"Found over reaching move: [ \" + move + \" ]\");\n        dataMove[2]=(tempState.cubeDimension-dataMove[2])+1\n        if(parseInt(dataMove[0])===0) dataMove[0] = 3;\n        else if(parseInt(dataMove[0])===1) dataMove[0] = 5;\n        else if(parseInt(dataMove[0])===2) dataMove[0] = 4;\n        else if(parseInt(dataMove[0])===3) dataMove[0] = 0;\n        else if(parseInt(dataMove[0])===4) dataMove[0] = 2;\n        else if(parseInt(dataMove[0])===5) dataMove[0] = 1;\n        dataMove[1]===0?dataMove[1]=-1:dataMove[1]=0;\n\n        //console.log(\"Converted to: [ \" + this.convertDataToMove(dataMove) + \" ]\");\n        return this.convertDataToMove(dataMove);\n      }\n      return this.convertDataToMove(dataMove);\n    })\n    \n    //console.log(moveSet.length);\n\n\n    let moveSetLength = 0;\n    while(moveSet.length!==moveSetLength){\n      moveSetLength = moveSet.length;\n      for(let i = 0; i < moveSet.length-2; i++){\n        \n        if(moveSet[i].substring(0,3)===moveSet[i+1].substring(0,3) && moveSet[i].length!==moveSet[i+1].length){\n          moveSet.splice(i,2);\n        }\n      }\n\n      for(let i = 0; i < moveSet.length-2; i++){\n        if(moveSet[i]===moveSet[i+1] && moveSet[i]===moveSet[i+2]){\n          if(moveSet[i].length===3){moveSet[i]+=\"'\"}\n          else{moveSet[i]=moveSet[i].substring(0,3)}\n          moveSet.splice(i+1,2);\n        }\n      }\n      //console.log(moveSet.length);\n    }\n\n    \n\n    if(moveSet[0]===\"stop'\"&&moveSet[1]===\"stop'\"&&moveSet.length===2) moveSet = [];\n  \n    if(error) {\n      //alert(\"Sorry for the inconvenience. This error is caused by an infinite loop issue with the solver and has been stopped to prevent freezing the application. The current move set has still been pushed and is playable for debugging purposes. Maybe you can figure out the issue before I can ;)\");\n      return {moveSet:[...moveSet],rubiksObject : beforeObject,solveable:false,solvedSet:[...moveSet],solvedSetIndex:0};\n    }\n    return {moveSet:[...moveSet],rubiksObject : beforeObject,solveable:true,solvedSet:[...moveSet],solvedSetIndex:0,tempObject:tempState.rubiksObject};\n  }\n\n  animateRotation(tempCubes){\n    cube.rotatePieces(cube.rotatePoint,tempCubes);\n  }\n\n  windowResized = () => {\n    this.setState({resized:true});\n  }\n\n  menuToggle(el){\n    let menu = document.querySelector(\".menuWrapper\")||document.querySelector(\".menuWrapperOptions\");\n\n    menu.style.display===\"none\"?menu.style.display=\"inline\":menu.style.display=\"none\";\n\n    console.log(el.target.innerHTML);\n    \n    (el.target.innerHTML===\"˅\")?\n      el.target.innerHTML=\"˄\":el.target.innerHTML=\"˅\";\n  }\n\n  // Initialization and animation functions\n  componentDidMount() {\n\n    // Initial set up variables\n    let cD = this.getSizeFromUrl();\n    let generated = cube.generateSolved(cD,cD,cD);\n    let rubiksObject = generated.tempArr;\n    let tempCubes = [];\n    \n    let previousPiece = null;\n    let previousPieceIndex = null;\n    let ignoreChange = false;\n\n    // === THREE.JS VARIABLES ===\n    let scene = new THREE.Scene();\n    let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, .1, 1000 );\n    let renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    let raycaster = new THREE.Raycaster();\n    let mouse = new THREE.Vector2();\n    let cubeGeometry = new THREE.BoxGeometry(  );\n    let loader = new THREE.TextureLoader().load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQW92XE-j1aJzRMI9kvvMZIf2VikZzzdEI87zl4rWgHMJBNJ9iw7A&s');\n    let moveHintImage = new THREE.TextureLoader().load('https://cdn2.iconfinder.com/data/icons/communication-language/100/Up_Arrow-01-512.png');\n    let tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\n    let windowHeight = window.innerHeight;\n\n    const groups = cube.generateMoveHints(moveHintImage,cD);\n\n    let calculateTurn = this.calculateTurn;\n    let algorithmFunc = this.algorithm;\n\n    function onWindowResize(resized) {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      \n      // adjust the FOV\n      camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( window.innerHeight / windowHeight ) );\n      \n      camera.updateProjectionMatrix();\n      camera.lookAt( scene.position );\n\n      renderer.setSize( window.innerWidth, window.innerHeight-10 );\n      renderer.render( scene, camera );\n      resized();\n    }\n\n    function ontouchstart( event ){\n      controls.enabled = true;\n      ignoreChange = false;\n      mouse.x = ( event.touches[0].clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.touches[0].clientY / window.innerHeight ) * 2 + 1;\n\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // Calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      // Check if anything is intersected\n      if(intersects.length){\n        ignoreChange = true;\n        controls.saveState();\n        controls.enabled = false;\n        let faceInteresected = intersects[0].faceIndex;\n        let tempIndex = -1;\n        for(let i = 0; i < 6; i++){\n          if(faceInteresected===i*2 || faceInteresected=== i*2+1) {\n            tempIndex = i;\n            //this.setState({mouseFace : i});\n            break;\n          }\n        }\n        if(this.state.currentFunc===\"Color Picker\"){\n          let toFace = [2,4,3,0,1,5];\n          this.changeFaceColor({x:intersects[0].object.position.x,y:intersects[0].object.position.y,z:intersects[0].object.position.z},toFace[tempIndex],this.state.colorPicked)\n        }\n        if(intersects[0].object.material[tempIndex] && tempIndex > -1){\n          if(intersects[0].object.material[tempIndex].color){\n            previousPiece = intersects[0];\n            previousPieceIndex = tempIndex;\n            intersects[0].object.material[tempIndex].opacity=.8;\n          }\n        }\n      }\n      else{\n        controls.enabled = true;\n        previousPiece = null;\n        previousPieceIndex = null;\n      }\n    }\n\n    function onmousedown( event ){\n      controls.enabled = true;\n      ignoreChange = false;\n\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // Calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      // Check if anything is intersected\n      if(intersects.length){\n        ignoreChange = true;\n        controls.saveState();\n        controls.enabled = false;\n        let faceInteresected = intersects[0].faceIndex;\n        let tempIndex = -1;\n        for(let i = 0; i < 6; i++){\n          if(faceInteresected===i*2 || faceInteresected=== i*2+1) {\n            tempIndex = i;\n            //this.setState({mouseFace : i});\n            break;\n          }\n        }\n        if(this.state.currentFunc===\"Color Picker\"){\n          let toFace = [2,4,3,0,1,5];\n          this.changeFaceColor({x:intersects[0].object.position.x,y:intersects[0].object.position.y,z:intersects[0].object.position.z},toFace[tempIndex],this.state.colorPicked)\n        }\n        if(intersects[0].object.material[tempIndex] && tempIndex > -1){\n          if(intersects[0].object.material[tempIndex].color){\n            previousPiece = intersects[0];\n            previousPieceIndex = tempIndex;\n            intersects[0].object.material[tempIndex].opacity=.8;\n          }\n        }\n      }\n      else{\n        controls.enabled = true;\n        previousPiece = null;\n        previousPieceIndex = null;\n      }\n    }\n\n    function ontouchmove( event ){\n      \n      if(previousPiece) controls.enabled = false;\n      mouse.x = ( event.touches[0].clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.touches[0].clientY / window.innerHeight ) * 2 + 1;\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      if(previousPiece){\n        if(intersects.length){\n          let current = intersects[0].point;\n          let toFace = [2,4,3,0,1,5];\n          let tempPrev = {...previousPiece.point};\n          let tempPos = {...previousPiece.object.position};\n          let intersected = Math.floor(previousPiece.faceIndex/2);\n          let calculated = calculateTurn(current,tempPrev,tempPos,toFace[intersected],cD);\n          //console.log(calculated);\n          if(calculated!==null&&!calculated.includes(\"null\")){\n            //console.log(\"Drag turn\");\n            algorithmFunc(calculated,\"Drag Turn\");\n            previousPiece.object.material[previousPieceIndex].opacity=1;\n            previousPiece = null;\n            previousPieceIndex = null;\n          }\n        }\n      }\n    }\n\n    function onMouseMove( event ) {\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      if(previousPiece){\n        if(intersects.length){\n          let current = intersects[0].point;\n          let toFace = [2,4,3,0,1,5];\n          let tempPrev = {...previousPiece.point};\n          let tempPos = {...previousPiece.object.position};\n          let intersected = Math.floor(previousPiece.faceIndex/2);\n          let calculated = calculateTurn(current,tempPrev,tempPos,toFace[intersected],cD);\n          //console.log(calculated);\n          if(calculated!==null&&!calculated.includes(\"null\")){\n\n            // if(this.state.currentFunc===\"Solving\"){\n            //   console.log(\"attempted move during solve state\");\n            // }\n\n            algorithmFunc(calculated,\"Drag Turn\");\n            previousPiece.object.material[previousPieceIndex].opacity=1;\n            previousPiece = null;\n            previousPieceIndex = null;\n          }\n        }\n      }\n    }\n\n    function ontouchend( event ){\n      if(previousPiece) previousPiece.object.material[previousPieceIndex].opacity=1;\n      if(ignoreChange) controls.reset();\n      ignoreChange = false;\n      previousPiece = null;\n      controls.enabled = true;\n    }\n\n    // Bind event listeners to window\n    window.addEventListener(\"keydown\", this.keyHandling, false);\n    window.addEventListener(\"mousemove\", onMouseMove.bind(this), false );\n    window.addEventListener(\"mousedown\", onmousedown.bind(this), false );\n    window.addEventListener(\"touchstart\", ontouchstart.bind(this), false);\n    window.addEventListener(\"touchmove\", ontouchmove.bind(this), false);\n    window.addEventListener(\"touchend\", ontouchend, false);\n    window.addEventListener(\"mouseup\", ontouchend, false );\n    window.addEventListener(\"resize\", () => onWindowResize(this.windowResized), false );\n    \n    // Set background color and size\n    renderer.setClearColor(new THREE.Color(\"black\"),0);\n    renderer.domElement.className = \"canvas\";\n    renderer.setSize( window.innerWidth, window.innerHeight);\n    document.body.children[5].appendChild( renderer.domElement );\n\n    // stats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\n    // document.body.appendChild( stats.dom);\n    // document.body.children[9].style.display = \"none\"\n\n    // Prevents bluring\n    loader.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    moveHintImage.anisotropy = renderer.capabilities.getMaxAnisotropy();\n\n    // generate cubes with face colors based off memory cube\n    for(let i = 0; i < rubiksObject.length; i++){\n\n      // Store x,y,z of memory cube in easier to read variables\n      let cubeX = rubiksObject[i][6];\n      let cubeY = rubiksObject[i][7];\n      let cubeZ = rubiksObject[i][8];\n\n      // Map textures to each face to look nice and then color over\n      const cubeMaterials = [\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][2], side: THREE.FrontSide}),\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][4], side: THREE.FrontSide}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][3], side: THREE.FrontSide}),\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1,}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][1], side: THREE.FrontSide}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][5], side: THREE.FrontSide}), \n      ];\n    \n      // Add the new cube to temp cubes\n      tempCubes[i] = new THREE.Mesh(cubeGeometry, cubeMaterials);\n      //group.add( tempCubes[i] );\n      // position piece based off memory cube\n      tempCubes[i].translateX(cubeX);\n      tempCubes[i].translateY(cubeY);\n      tempCubes[i].translateZ(cubeZ); \n    }\n\n    // Translate cube so center of cube is 0,0,0\n    scene.translateX(.5-cD/2);\n    scene.translateY(.5-cD/2);\n    scene.translateZ(.5-cD/2);\n\n    // Allows for drag to rotate camera\n    let controls = new OrbitControls( camera , renderer.domElement);\n    controls.enabled = true;\n    controls.enableDamping = true;   //damping \n    controls.dampingFactor = 0.15;   //damping inertia\n    controls.enableZoom = true;      //Zooming\n    controls.autoRotate = false;     //Enable auto rotation\n    controls.minDistance = (2+cD);\n    controls.maxDistance = (2+cD)+20;\n    controls.enablePan = false;\n    controls.keys = {\n      LEFT: null, //left arrow\n      UP: null, // up arrow\n      RIGHT: null, // right arrow\n      BOTTOM: null // down arrow\n    };\n\n    controls.addEventListener(\"change\", (e) => {\n      if (renderer) renderer.render(scene, camera);\n    });\n\n    groups.forEach(group => scene.add(...group));\n\n    // add cubes to state and then render\n    this.setState({\n      cubes : tempCubes,\n      cubeDimension : cD,\n      cameraZ : -(2+cD),\n      cameraX : (2+cD),\n      cameraY : -(2+cD),\n      rubiksObject,\n      middles: generated.middles,\n      edges: generated.edges,\n      corners: generated.corners,\n      currentFunc: 'Reset',\n      generatedButtons: cube.generateButtonData(this.getSizeFromUrl())\n    }, () => {\n      //let cubeGroup = new THREE.Group();\n      // Callback required to wait for setState to finish\n      for(let i = 0; i < rubiksObject.length; i++){\n        // Logic to only render outer pieces since inside pieces aren't ever used\n        if((this.state.cubes[i].position.x === 0 || this.state.cubes[i].position.x === this.state.cubeDimension-1) ||\n            (this.state.cubes[i].position.y === 0 || this.state.cubes[i].position.y === this.state.cubeDimension-1)||\n            (this.state.cubes[i].position.z === 0 || this.state.cubes[i].position.z === this.state.cubeDimension-1)){\n          scene.add( this.state.cubes[i] );\n        } \n      }\n\n      //scene.add( cubeGroup);\n\n      camera.position.z = this.state.cameraZ;// * Math.sin( this.state.angle );\n      camera.position.y = this.state.cameraY;\n      camera.position.x = this.state.cameraX;// * Math.cos( this.state.angle );\n\n      renderer.render( scene, camera );\n      animate();\n    });\n\n    // Function runs continuously to animate cube\n    let animate = () => {\n\n      // clear visible move hints\n      for(let i = 0; i < groups.length;i++){\n        groups[i].forEach(group => group.visible = false)\n      }\n\n      // stats.begin();\n      requestAnimationFrame( animate );\n\n      // Mouse stuff here\n      // Consider moving into another function to unclutter animate\n      // Very expensive operation\n      if(this.state.currentFunc === \"Color Picker\" || this.state.currentFunc === \"None\"|| this.state.currentFunc === \"Solving\"|| this.state.currentFunc === \"Algorithms\") {\n\n        //check here that data isn't the same as previous so not running this every time\n        // Data on move button triggers visual move hints\n        if(this.state.isVisible){\n          let [hFace,hDir,hDepth,hMulti] = this.state.hoverData;\n          if(hFace<3){\n            if(hDir === -1){\n              if(!hMulti){\n                groups[hFace][hDepth-1].visible=true;\n              }\n              else\n                for(let i = 0; i <= hDepth-1; i++){\n                  groups[hFace][i].visible=true;\n                }\n            }\n            else {\n              if(!hMulti){\n                groups[hFace+3][hDepth-1].visible=true;\n              }\n              else\n              for(let i = 0; i <= hDepth-1; i++){\n                groups[hFace+3][i].visible=true;\n              }\n            }\n          }\n          else{\n            if(hFace===3) hFace=0;\n            if(hFace===4) hFace=2;\n            if(hFace===5) hFace=1;\n\n            if(hDir === -1){\n              if(!hMulti){\n                groups[hFace+3][(groups[hFace+3].length-1)-(hDepth-1)].visible=true;\n              }\n              else\n                for(let i = groups[hFace+3].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\n                  groups[hFace+3][i].visible=true;\n                }\n            }\n            else {\n              if(!hMulti){\n                groups[hFace][(groups[hFace].length-1)-(hDepth-1)].visible=true;\n              }\n              else\n                for(let i = groups[hFace].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\n                  groups[hFace][i].visible=true;\n                }\n            }\n          }\n        }\n\n        // let previousPiece = this.state.previousPiece;\n\n        // // Projects mouse onto scene to find intersected objects\n        // raycaster.setFromCamera( mouse, camera );\n\n        // // calculate objects intersecting the picking ray\n        // let intersects = raycaster.intersectObjects( scene.children );\n        // // \n      }\n      \n      // Animate queued rotation\n      if(this.state.start<=this.state.end){\n        this.setState(cube.rotatePieces(cube.rotatePoint,tempCubes,this.state));\n      }\n\n      // Handles move queueing based on function\n      else {\n        if(this.state.reload) this.reloadTurnedPieces(this.state.face);\n        if(this.state.currentFunc !== \"None\"){\n\n          // Doesn't work with !==\n          if(this.state.currentFunc === \"Undo\" ||\n             this.state.currentFunc === \"Redo\"){}\n\n          // Keeps undo/redo updated with other moves\n          // find the error in this logic\n          else {\n            let moveLog = this.state.moveLog;\n            let index = this.state.undoIndex;\n\n            if(index > 0){\n              let moveArray = this.moveStringToArray(moveLog);\n\n              if(this.state.currentFunc[0]==='0' || this.state.currentFunc[0]==='1' ||\n                 this.state.currentFunc[1]==='1' || this.state.currentFunc[1]==='2' || this.state.currentFunc[1]==='3'){\n                let tempVal = moveArray[moveArray.length-1];\n                for(let i = 0; i <= index; i++){\n                  moveArray.pop();\n                }\n                moveArray.push(tempVal);\n              }\n\n              else{\n                for(let i = 0; i < index; i++){\n                  moveArray.pop();\n                }\n              }\n\n              moveLog = moveArray.join(\" \");\n              this.setState({undoIndex:0,moveLog});\n            }\n          }\n\n          // Moves based on active function\n          if (this.state.currentFunc===\"Scrambling\"){\n            if(this.state.moveSet&&this.state.moveSet.length){\n              let cD = this.state.cubeDimension;\n              let tempRubiks = this.state.rubiksObject;\n              let blockMoveLog = this.state.blockMoveLog;\n              let moveLog = this.state.moveLog;\n              let solveMoves = this.state.solveMoves;\n              let solveState = this.state.solveState;\n              let end = this.state.end;\n\n\n              if(typeof(this.state.moveSet[0][0])==='number') {\n                //console.log(\"changing speed\");\n                let moveSet=this.state.moveSet;\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                this.setState({moveSet});\n              }\n              else{\n                let moveData = this.parseMoveArray(this.state.moveSet);\n\n\n                if(moveData){\n                  let obj = this.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n      \n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\n\n                  this.setState(obj);\n                }\n              }\n            }\n            else{\n              this.setState({currentFunc : \"None\",moves : 0});\n            }\n\n            // let randFace = Math.floor((Math.random() * 6));\n            // let randTurn = Math.floor((Math.random() * 2)-1);\n            // let randIsMulti = Math.floor((Math.random() * 2));\n            // this.state.moves < 25 ?\n            //   this.scramble(randFace,randTurn,randIsMulti) :\n            //   this.setState({currentFunc : \"None\",moves : 0});\n          }\n          else if (this.state.currentFunc===\"Solving\"||this.state.currentFunc===\"Algorithms\"){\n            \n            // Place holder for full solve testing\n            if(this.state.autoTarget && !this.state.autoPlay && !this.state.autoRewind) {\n              this.setState({autoTarget:false},()=>this.reloadTurnedPieces('check'))\n            }\n\n            else if(this.state.solveOnce){\n              this.setState({solveOnce:false},()=>{\n                let a = performance.now();\n                this.setState(this.generateAllSolveMoves(this.state,this.state.rubiksObject));\n                let b = performance.now();\n                //console.log('It took ' + ((b - a)/1000).toFixed(3) + ' seconds to solve.');\n                this.setState({solveTime:((b - a)/1000).toFixed(3)})\n              });\n\n            }\n            // If there are no moves queued, check to see if more moves can be queued\n            else if(!this.state.moveSet.length){\n            }\n            // If playone or autoplay is true, progress accordingly\n            else if(this.state.playOne){\n              let cD = this.state.cubeDimension;\n              let tempRubiks = this.state.rubiksObject;\n              let blockMoveLog = this.state.blockMoveLog;\n              let moveLog = this.state.moveLog;\n              let solveMoves = this.state.solveMoves;\n              let moveSet = this.state.moveSet;\n              let end = this.state.end;\n              let solveState = this.state.solveState;\n              let obj = {};\n\n              if(typeof(moveSet[0][0])==='number') {\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                obj.moveSet=moveSet;\n              }\n              else{\n\n                // generates data for next move\n                let moveData = this.parseMoveArray(moveSet);\n\n                // takes next move data and queues changes to be made to state\n                \n                if(moveData){\n                  obj = this.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n                }\n\n                // Turn off play one so only runs once\n                if(this.state.playOne) obj.playOne = false;\n\n                // hides move the hint during the move\n                this.mouseLeave();\n                \n                // store the object here\n                if(moveData){\n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\n                  obj.solvedSetIndex = this.state.solvedSetIndex+1;\n                }\n\n                //console.log(obj);\n              }\n              this.setState(obj);\n            }\n            // Show hint over next move\n            else if(this.state.moveSet.length){\n              let moveSet = this.state.moveSet;\n              let obj = {};\n              if(typeof(moveSet[0][0])==='number') {\n                //console.log(\"changing speed\");\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                obj.moveSet=moveSet;\n              }\n              else{\n                let data = this.convertMoveToData(moveSet[0]);\n                if(data){\n                  this.mouseOver(this.state.moveSet[0],data);\n                }\n              }\n              if(obj.length){\n                this.setState({obj});\n              }   \n            }\n          }\n\n          else if(this.state.currentFunc===\"Color Picker\"){\n            // Code here for color picker interface\n          }\n          else if(this.state.currentFunc==='Reset'){\n            this.reset();\n          }\n          else {\n            if(this.state.moveSet.length){\n              let cD = this.state.cubeDimension;\n              let tempRubiks = this.state.rubiksObject;\n              let blockMoveLog = this.state.blockMoveLog;\n              let moveLog = this.state.moveLog;\n              let solveMoves = this.state.solveMoves;\n              let solveState = this.state.solveState;\n              let end = this.state.end;\n\n\n              if(typeof(this.state.moveSet[0][0])==='number') {\n                //console.log(\"changing speed\");\n                let moveSet=this.state.moveSet;\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                this.setState({moveSet});\n              }\n              else{\n                let moveData = this.parseMoveArray(this.state.moveSet);\n\n\n                if(moveData){\n                  let obj = this.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n      \n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\n\n                  this.setState(obj);\n                }\n              }\n\n            } \n            else{\n              this.setState({currentFunc:\"None\"}); \n            }\n          }\n        }\n      }\n      \n      controls.update();\n      renderer.render( scene, camera );\n      // stats.end();     \n    };\n  }\n\n  // Renders html to the index.html page\n  render() {\n    \n    return (\n      <div className=\"App\" style={{width:\"max-content\"}}>\n        \n        <Navbar\n          title=\"Rubik's Cube\"\n          changeSettings={this.changeSettings.bind(this)}\n          isLocal={this.getSizeFromUrl(true)}\n          state={this.state}\n        />\n\n        {this.state.currentFunc===\"Color Picker\"?<></>:<p style={{position:\"fixed\", top: \"110px\", left: \"10px\",color: \"lightgrey\",fontSize:\"1rem\"}}>Speed: {this.state.currentSpeed}</p>}\n        <div style={{width:\"100px\",position:\"absolute\", top: \"75px\",marginLeft: \"50%\",left:\"-50px\"}}>\n          {this.state.currentFunc===\"None\"||this.state.currentFunc===\"Undo\"||this.state.currentFunc===\"Redo\"||this.state.currentFunc===\"Drag Turn\"?\n          [<button key=\"undo\" className=\"redoUndo\" style={{border:\"none\",marginRight:\"2px\",display:\"inline-block\", width:\"45%\",height:\"50px\",fontSize:\"1rem\",background: \"url(https://image.flaticon.com/icons/svg/889/889590.svg)\",backgroundRepeat:\"no-repeat\"}} onClick={() => this.undo()}></button>,\n          <button key=\"redo\" className=\"redoUndo\" style={{border:\"none\",marginLeft:\"2px\",display:\"inline-block\", width:\"45%\",height:\"50px\",fontSize:\"1rem\",background: \"url(https://image.flaticon.com/icons/svg/889/889578.svg)\",backgroundRepeat:\"no-repeat\"}} onClick={() => this.redo()}></button>]\n          :\"\"\n          }\n        </div>\n\n        {this.state.currentFunc===\"Color Picker\"?[]:<Speeds //Top left with slider\n          onSliderChange={this.onSliderChange}\n          speed={this.state.sliderSpeed}\n        />}\n        { this.state.showMoveInput? \n          <MoveInput\n            algorithm = {this.algorithm}\n            handleDrag = {this.handleDragInput}\n            onStart = {this.onStartInput}\n            onStop = {this.onStopInput}\n          /> : []\n        }\n        {this.state.currentFunc===\"Solving\"?\n            <SolverInfo\n              solvedSetLength={this.state.solvedSet.length}\n              prevSetLength={this.state.prevSet.length}\n            />:[]\n        }\n        {this.state.currentFunc===\"Color Picker\"?\n            <ColorPickerInfo\n              colorPicked={this.state.colorPicked}\n            />:[]\n        }\n\n        <Menu \n          state = {this.state}\n          setState = {this.menuSetState}\n          beginScramble = {this.beginScramble}\n          disableHover={this.state.showGuideArrows}\n\n          //Controls\n          generatedButtons={this.state.generatedButtons}\n          size={this.getSizeFromUrl()}\n          rotateOneFace={this.rotateOneFace}\n          mouseEnter= {this.mouseOver}\n          mouseLeave= {this.mouseLeave}\n\n          //Color Picker\n          beginColorPicker={this.beginColorPicker}\n          endColorPicker={this.endColorPicker}\n          colorPicked={this.state.colorPicked}\n          changeColor={this.changeColor}\n          isValidConfig={this.state.isValidConfig}\n          setColorPickedCube={this.setColorPickedCube}\n          cpErrors={this.state.cpErrors}\n\n          //Solver\n          beginSolve={this.beginSolve}\n          stopSolve={this.stopSolve}\n          playOne={this.playOne}\n          rewindOne={this.rewindSolve}\n          reload={this.reloadTurnedPieces}\n          autoJump={this.autoJump}\n        />\n\n        {/* <button className=\"menuToggle cpButton\" onClick={this.menuToggle}>˅</button> */}\n\n        {/* add button-> center bottom hide/show menu. let user make rotations for solve moves with swipes */}\n  \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nconst routing = (\n    <Router>\n      <div>\n        <Route path=\"*\" component={App} />\n      </div>\n    </Router>\n  )\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}