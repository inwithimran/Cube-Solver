{"version":3,"sources":["solvers/edges/solveWhiteCross.js","solvers/corners/solveWhiteCorners.js","solvers/edges/solveMiddleEdges.js","solvers/edges/solveYellowCross.js","solvers/edges/alignYellowCross.js","solvers/corners/solveYellowCorners.js","solvers/corners/alignYellowCorners.js","solvers/middles/white.js","solvers/middles/yellow.js","solvers/middles/blue.js","solvers/middles/green.js","solvers/middles/orange.js","solvers/edges/solveFrontEdgeSegments.js","solvers/edges/solveBackEdgeSegments.js","solvers/edges/solveMiddleEdgeSegements.js","components/Navbar/Navbar.js","components/Speeds/Speeds.js","components/MoveInput.js","components/SolverInfo/SolverInfo.js","components/ColorPickerInfo/ColorPickerInfo.js","components/Controls.js","cubeFunctions/algorithms.js","solvers/solveMiddleLogic.js","solvers/solveMiddles.js","solvers/solveEdgeLogic.js","solvers/solveEdges.js","solvers/solver.js","cubeFunctions/cube.js","cubeFunctions/move.js","solvers/solverMain.js","components/SolverUI/SolverUIFunctions.js","components/SolverUI/SolverUI.js","components/ColorPicker/ColorButton.js","components/ColorPicker/ColorPicker.js","components/MobileView/MobileView.js","components/MenuOptions/MenuOptions.js","components/MenuOptionsOther/MenuOptionsOther.js","components/View.js","components/ColorPicker/SideColorPicker.js","components/SolverUI/SideSolverUI.js","components/SolverUI/SideSolverControls.js","components/ColorPicker/SideColorPickerController.js","components/MainSideMenu/MainSideMenuButton.js","components/MainSideMenu/MainSideMenu.js","components/SideView/SideView.js","components/MenuWrapper/MenuWrapper.js","components/ColorPicker/ColorPickerUIFunctions.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["inMiddle","coord","maxCoord","minCoord","module","exports","rubiksObject","cubeDimension","moveStringToArray","edges","moveString","cube","space","solvedEdges","solveState","fourEdgeSections","splitEdges","edgeSegments","length","segmentsPerSection","temp","i","push","sectionSpliter","pieceOne","pieceTwo","pieceThree","pieceFour","includes","emptyCount","whiteSide","cubeX","cubeY","cubeZ","j","moveArray","moveSet","corners","solvedCorners","dim","moveFromMiddle212","moveFromMiddle210","moveFromMiddle010","edgeOne","edgeTwo","edgeThree","edgeFour","blueSide","greenSide","move","depth","side","recipe","cubeIndex","cubeAtIndex","skip","counter","solveMoves","solveAlgo","obj","moveLog","currentFunc","solveCount","current","solved","index","currentSide","row","Math","floor","column","x","y","z","middle","isOddCube","console","log","checkSide","max","min","moves","join","oddCube","extractFromFront","moveFromMiddleToBack","flipPieceOnBack","solveFromBackToFront","yellowSide","displace","solve","replace","flip","cubeSize","centerEdge","firstEdge","secondEdge","thirdEdge","flipFirstCenterEdge","flipSecondCenterEdge","flipThirdCenterEdge","swapLastTwoCenterEdges","flipLastCenterEdge","solveUp","solveDown","solveUp2","solveDown2","solveUp3","solveDown3","Navbar","props","navCubes","reloadPage","setTimeout","window","location","reload","Dropdown","Item","key","href","onClick","className","style","color","title","DropdownButton","aria-label","id","type","data-toggle","changeSettings","defaultChecked","float","height","trigger","close","zIndex","width","backgroundColor","margin","transform","padding","fontSize","marginTop","textAlign","borderRadius","paddingTop","marginBottom","paddingBottom","target","marginRight","value","position","top","left","Speeds","isDisabled","defaultValue","speed","step","onChange","onSliderChange","MoveInput","handle","defaultPosition","grid","scale","onStart","handleStart","onDrag","handleDrag","onStop","handleStop","placeholder","onKeyDown","e","algorithm","document","getElementById","stopPropagation","border","SolverInfo","innerWidth","innerHeight","solvedSetLength","prevSetLength","ColorPickerInfo","colorPicked","centerButtons","singleButtons","multiButtons","singleCols","multiCols","namesToColors","face","bgc","Controls","size","generatedButtons","center","forEach","element","onMouseDown","rotateOneFace","clockwise","name","data","onMouseEnter","mouseEnter","onMouseLeave","mouseLeave","single","colors","lengthBtns","lengthBtns1","multi","cross","sixSpots","checkboardInCube","convertRuwixAlgo","wire","split","perpendicularLines","verticalStripes","giftBox","twister","spiral","fourCrosses","unionJack","displaceMotif","viaduct","staircase","wrapped2x2","exchangedDuckFeet","pyraminx","twinPeaks","cornerPyramid","sixTwoOne","yinYang","snakeEyes","weirdo","algoStr","map","char","trim","bundle","rangeLow","rangeHigh","sets","worksFor","generalizedBundle","moveSet2","algoName","pop","generalizerLower","generalizerUpper","moveParts","baseLower","substring","toLowerCase","toUpperCase","baseUpper","algorithms","cubeSizes","blankBundle","solveMiddleLogic","cubeDimensions","rubiksObjectAtIndex","faceColor","whiteSolver","yellowSolver","blueSolver","orangeSolver","greenSolver","solveMiddles","middles","numberOfMiddles","rubiksIndex","indexOf","solveEdgeLogic","edgeLength","section","frontEdges","backEdges","middleEdges","solveEdges","CONSTANTS","solver","solveWhiteCross","solveWhiteCorners","solveMiddleEdges","solveYellowCross","alignYellowCross","alignYellowCorners","solveYellowCorners","generateSolved","_x","_y","_z","half","tempArr","tempMiddles","tempEdges","k","side0","side1","side2","side3","side4","side5","edgeType","middleType","tempCount","tempType","middleEdgeLength","middleCorners","middleRestructure","middleIndex","layer","ceil","reverse","flat","generateBlank","generateButtonData","numLayers","centerLayer","faces","buttons","baseNameSingle","baseNameMulti","generateMoveHints","image","cD","groups","geometry","THREE","material","transparent","opacity","tempGroup","tempGroupOther","tempPlane","tempPlaneOther","translateX","translateZ","translateY","rotateZ","PI","rotateX","add","visible","rotateY","rotatePoint","c1","c2","direction","p1","p2","rotation","theta","cos","sin","rotatePieces","rotate","tempCubes","state","setState","centerPoint","cubes","turnDirection","start","cubeDepth","isMulti","newPoint","round","rotatePoint2","rotateFace","cubeFace","object","degrees","tempFace","rotateCubeFace","blockMoveLog","end","tempMove","moveFuncs","parseMoveArray","shifted","shift","tempDirection","tempDepth","tempIsMulti","parseInt","slice","convertDataToMove","toString","concat","convertMoveToData","str","tempArray","generateMove","maxDepth","randFace","random","randTurn","randIsMulti","randDepth","equivalentMove","_move","inverted","checkMoveEquivalence","dragMove","nextMove","generateAllSolveMoves","beforeObject","tempState","solvedSet","currentIndex","previousIndex","indexOccurence","error","threeByThreeCounter","moveData","splitSet","undefined","splice","dataMove","moveSetLength","piece","tempPiece","tempFiltered","filter","validCount","solveable","solvedSetIndex","tempObject","SolverUIFunctions","autoJump","setTarget","autoPlay","autoRewind","targetSolveIndex","playOne","autoTarget","prevSetNew","moveSetNew","forwardMoves","prevSet","backwardMoves","algoStart","algo","algoSet","generated","find","set","activeAlgo","jumpToEnd","UI","SolverUI","nextProps","rewindOne","this","solveOnce","solverMain","solverSet","defaultSolver","defaultMessage","jumperButtons","preSetTarget","buttonClassColor","el","marginLeft","previousMove","pauseSolver","autoScroll","optionClick","querySelector","visibility","display","activeMenu","hoverData","isValidConfig","currentFunct","Row","Col","mobile","paddingLeft","paddingRight","maxWidth","stopSolve","classList","remove","leave","Component","React","memo","ColorPicker","capitalized","charAt","unselected","nativeEvent","stopImmediatePropagation","changeColor","isMobile","useState","solveBtnText","setSolveBtnText","checkBtnText","setCheckBtnText","overflowX","overflowY","setColorPickedCube","cpErrors","runCheckColors","endColorPicker","beginSolve","ColorButton","Mobile","nextState","solveTime","algoLength","otherOptionClick","beginScramble","beginColorPicker","xs","algorithmSet","baseOptions","View","upDateCp","pointerEvents","bottom","minWidth","SideColorPicker","SideSolverControls","scrollIntoView","SideColorPickerController","li","listStyle","lineHeight","MainSideMenuButton","MainSideMenu","algs","SideView","activeMenuBottom","activeMenuExit","solverLeaveButton","algoLeaveButton","cpLeaveButton","confirmLeavePopup","confirmLeavePopupCp","Menu","resized","ColorPickerUIFunctions","alignQuadrant","_piece","pos","checkOccurences","a1","a2","success","failedColors","count","amount","convertToBlueMiddle","blue","red","yellow","checkValidMatchMiddle","validPiece","manualPiece","newValidPiece","newManualPiece","convertToBlueWhiteEdge","checkValidMatchEdge","checkColors","invalidMiddleConfig","invalidEdgeConfig","rubiksLength","whiteCount","blueCount","redCount","yellowCount","orangeCount","greenCount","duplicateFace","duplicateColors","matchedCount","validAmount","rubiks","newGenerated","rubik","res","tempColors","checked","otherChecked","pieceIndex","tempInvalidMatch","sort","validEdgePlacement","validMiddlePlacement","invalidAmounts","App","blackObject","rotationSpeed","cameraX","cameraY","cameraZ","angle","currentSpeed","facePosX","facePosY","facePosZ","faceSide","mouseFace","mouseDown","mousePos","undoIndex","previousPiece","showMoveInput","showControls","showHints","showGuideArrows","activeDragsInput","deltaPositionInput","controlledPositionInput","activeDragsControls","deltaPositionControls","controlledPositionControls","isVisible","showSolveController","generateAllMoves","isLocal","sliderSpeed","algoUp","algoDown","keyBinds","rewindSolve","undo","redo","keyHandling","changeSpeed","_speed","_rotationSpeed","_name","bypass","changeFaceColor","tempObj","tempCube","reloadTurnedPieces","backwardsMove","err","vals","moveName","reset","blank","newMoveSet","tempMoveSet","tempPrev","lastEl","popped","handleDragInput","ui","deltaX","deltaY","onStartInput","onStopInput","mouseOver","menuSetState","windowResized","event","settingToChange","newVals","removeEventListener","checkLocal","parts","checkID","substr","previous","pieceFace","calculated","turn","dif","calculateTurnAtFace","coord1","compare1","coord2","compare2","piece1","piece2","dir1","dir2","abs","getSizeFromUrl","previousPieceIndex","ignoreChange","scene","camera","renderer","antialias","alpha","raycaster","mouse","cubeGeometry","loader","load","moveHintImage","tanFOV","tan","fov","windowHeight","calculateTurn","algorithmFunc","addEventListener","clientX","clientY","setFromCamera","intersects","intersectObjects","children","point","tempPos","intersected","faceIndex","bind","controls","enabled","saveState","faceInteresected","tempIndex","aspect","atan","updateProjectionMatrix","lookAt","setSize","render","setClearColor","domElement","body","appendChild","anisotropy","capabilities","getMaxAnisotropy","cubeMaterials","OrbitControls","enableDamping","dampingFactor","enableZoom","autoRotate","minDistance","maxDistance","enablePan","keys","LEFT","UP","RIGHT","BOTTOM","group","animate","requestAnimationFrame","hFace","hDir","hDepth","hMulti","tempVal","tempRubiks","update","disableHover","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","routing","path","ReactDOM","URL","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"+MAAA,SAASA,EAASC,EAAMC,EAASC,GAC/B,OAAOF,EAAME,GAAUF,EAAMC,EAiO/BE,EAAOC,QA5MP,SAAyBC,EAAaC,EAAcC,EAAkBC,GAElE,IAAIC,EAAa,GACbC,EAAOL,EACPM,EAAQ,GACRC,EAAc,EAGZX,EADIK,EACW,EAGrB,GAAW,IAJDA,EAIK,MAAO,CAACO,WAAa,GASpC,IAPA,IAAIC,EA/BR,SAAwBN,GAOtB,IANA,IAAIO,EAAa,GACbC,EAAeR,EAAMS,OAAO,EAE5BC,EAAqBF,EADJ,EAGjBG,EAAO,GACHC,EAAI,EAAGA,EAAIJ,EAAaI,IAC9BD,EAAKE,KAAKb,EAAMY,IACbD,EAAKF,SAASC,IACfH,EAAWM,KAAKF,GAChBA,EAAK,IAIT,OAAOJ,EAgBkBO,CAAed,GAElCe,EAAWT,EAAiB,GAAG,GAC/BU,EAAWV,EAAiB,GAAG,GAC/BW,EAAaX,EAAiB,GAAG,GACjCY,EAAYZ,EAAiB,GAAG,GAE5BM,EAAI,EAAGA,EAAIV,EAAKO,OAAQG,IAE9B,GADGX,EAAWQ,SAAQN,EAAQ,KAC3BD,EAAKU,GAAGO,SAAS,SAAS,CAS3B,IAPA,IAAIC,EAAa,EACbC,GAAa,EACbC,EAAQpB,EAAKU,GAAG,GAChBW,EAAQrB,EAAKU,GAAG,GAChBY,EAAQtB,EAAKU,GAAG,GAGZa,EAAI,EAAGA,EAAI,EAAGA,IACD,UAAfvB,EAAKU,GAAGa,GAAgBL,IAER,UAAflB,EAAKU,GAAGa,KAAgBJ,EAAYI,GAKzB,IAAfL,IACER,IAAIG,GAA4B,IAAhBX,IACdb,EAAS+B,EAAM7B,EAhCT,QAgC+B8B,GAAoBC,IAAQ/B,EACjE4B,EAA4BpB,GAAaE,EAAQ,iBAArCC,IAEPkB,IAAQ7B,GAnCP,IAmCmB8B,GAAoBhC,EAASiC,EAAM/B,EAnCtD,GAoCoCQ,GAA1CoB,EAAuDlB,EAAQ,UAAtCA,EAAQ,OAE5BZ,EAAS+B,EAAM7B,EAtCd,QAsCoC8B,GAtCpC,IAsCwDC,EACpBvB,GAA1CoB,EAAuDlB,EAAQ,eAAtCA,EAAQ,OAvC3B,IAyCDmB,GAzCC,IAyCmBC,GAAoBhC,EAASiC,EAAM/B,EAzCtD,GA0CmCQ,GAAzCoB,EAAsDlB,EAAQ,YAArCA,EAAQ,MA1C3B,IA6CDmB,GAAoB/B,EAASgC,EAAM9B,EA7ClC,IA6CwD+B,IAAQ/B,EACvDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,UAAyBA,EAAQ,OAEhEmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EAhDlC,IAgDwD+B,IAAQ/B,EACvDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,MAElEmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EAnDlC,QAmDwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,WApDjE,IAsDDmB,GAAoB/B,EAASgC,EAAM9B,EAtDlC,QAsDwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,WAA0BA,EAAQ,WAIjEZ,EAAS+B,EAAM7B,EA3Dd,IA2DoC8B,IAAQ9B,GAAY+B,IAAQ/B,EACvDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,OAAsBA,EAAQ,eAE7DmB,IAAQ7B,GAAY8B,IAAQ9B,GAAYF,EAASiC,EAAM/B,EA9DtD,GA+DSQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,WAElEZ,EAAS+B,EAAM7B,EAjEd,IAiEoC8B,IAAQ9B,GAjE5C,IAiEwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,gBAlEjE,IAoEDmB,GAAoBC,IAAQ9B,GAAYF,EAASiC,EAAM/B,EApEtD,KAqESQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,aAGzES,IAAII,GAA4B,IAAhBZ,IAxER,IA0ENkB,GA1EM,IA0EcC,GAAoBhC,EAASiC,EAAM/B,EA1EjD,GA2EN4B,EAA4BpB,GAAaE,EAAQ,qBAArCC,IAEPb,EAAS+B,EAAM7B,EA7Ed,QA6EoC8B,GA7EpC,IA6EwDC,EACPvB,GAAvDoB,EAAoElB,EAAQ,YAAnDA,EAAQ,oBAE5BmB,IAAQ7B,GAhFP,IAgFmB8B,GAAoBhC,EAASiC,EAAM/B,EAhFtD,KAiFkDQ,GAAxDoB,EAAqElB,EAAQ,mBAApDA,EAAQ,sBAjF3B,IAqFNmB,GAAoB/B,EAASgC,EAAM9B,EArF7B,IAqFmD+B,IAAQ/B,EAClDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,MAAqBA,EAAQ,gBAE5DmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EAxFlC,IAwFwD+B,IAAQ/B,EACvDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,iBAAgCA,EAAQ,gBAEvEmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EA3FlC,QA2FwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,gBA5FrE,IA8FDmB,GAAoB/B,EAASgC,EAAM9B,EA9FlC,QA8FwD+B,IAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,eAA8BA,EAAQ,QAI1EZ,EAAS+B,EAAM7B,EAnGT,IAmG+B8B,IAAQ9B,GAAY+B,IAAQ/B,EAClDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,eAEtEmB,IAAQ7B,GAAY8B,IAAQ9B,GAAYF,EAASiC,EAAM/B,EAtGtD,GAuGSQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,oBAElEZ,EAAS+B,EAAM7B,EAzGd,IAyGoC8B,IAAQ9B,GAzG5C,IAyGwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,WA1GrE,IA4GDmB,GAAoBC,IAAQ9B,GAAYF,EAASiC,EAAM/B,EA5GtD,KA6GSQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,OAAsBA,EAAQ,sBAGpES,IAAIK,GAA8B,IAAhBb,IAEhBb,EAAS+B,EAAM7B,EAlHT,QAkH+B8B,GAlH/B,IAkHmDC,EACFvB,GAAvDoB,EAAoElB,EAAQ,UAAnDA,EAAQ,oBAE5BmB,IAAQ7B,GArHP,IAqHmB8B,GAAoBhC,EAASiC,EAAM/B,EArHtD,KAsHN4B,EAA4BpB,GAAaE,EAAQ,mBAArCC,KAtHN,IA0HNkB,GAAoB/B,EAASgC,EAAM9B,EA1H7B,IA0HmD+B,IAAQ/B,EAClDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,gBAEtEmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EA7HlC,IA6HwD+B,IAAQ/B,EACvDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,OAAsBA,EAAQ,eAE7DmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EAhIlC,QAgIwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,MAjIrE,IAmIDmB,GAAoB/B,EAASgC,EAAM9B,EAnIlC,QAmIwD+B,IAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,eAA8BA,EAAQ,kBAI1EZ,EAAS+B,EAAM7B,EAxIT,IAwI+B8B,IAAQ9B,GAAY+B,IAAQ/B,EAClDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,gBAEtEmB,IAAQ7B,GAAY8B,IAAQ9B,GAAYF,EAASiC,EAAM/B,EA3ItD,GA4ISQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,OAAsBA,EAAQ,oBAE7DZ,EAAS+B,EAAM7B,EA9Id,IA8IoC8B,IAAQ9B,GA9I5C,IA8IwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,WA/IrE,IAiJDmB,GAAoBC,IAAQ9B,GAAYF,EAASiC,EAAM/B,EAjJtD,KAkJSQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,YAA2BA,EAAQ,uBAGzES,IAAIM,GAA6B,IAAhBd,IAEfb,EAAS+B,EAAM7B,EAvJT,QAuJ+B8B,GAvJ/B,IAuJmDC,IACzDH,EAA4BpB,GAAaE,EAAQ,mBAArCC,KAxJN,IA2JNkB,GAAoB/B,EAASgC,EAAM9B,EA3J7B,IA2JmD+B,IAAQ/B,EAClDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,eAA8BA,EAAQ,iBAErEmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EA9JlC,IA8JwD+B,IAAQ/B,EACvDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,gBAEtEmB,IAAQ7B,GAAYF,EAASgC,EAAM9B,EAjKlC,QAiKwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,OAAsBA,EAAQ,eAlK5D,IAoKDmB,GAAoB/B,EAASgC,EAAM9B,EApKlC,QAoKwD+B,IAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,MAAqBA,EAAQ,iBAIjEZ,EAAS+B,EAAM7B,EAzKT,IAyK+B8B,IAAQ9B,GAAY+B,IAAQ/B,EAClDQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,iBAAgCA,EAAQ,mBAEvEmB,IAAQ7B,GAAY8B,IAAQ9B,GAAYF,EAASiC,EAAM/B,EA5KtD,GA6KSQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,gBAEtEZ,EAAS+B,EAAM7B,EA/Kd,IA+KoC8B,IAAQ9B,GA/K5C,IA+KwD+B,EAC/CvB,GAAJ,IAAZoB,EAA6BlB,EAAQ,OAAsBA,EAAQ,oBAhL5D,IAkLDmB,GAAoBC,IAAQ9B,GAAYF,EAASiC,EAAM/B,EAlLtD,KAmLSQ,GAAJ,IAAZoB,EAA6BlB,EAAQ,gBAA+BA,EAAQ,kBAOtF,IAAMuB,EAAY3B,EAAkBE,GAEpC,OAAGG,EAAc,EACN,CAACuB,QAAUD,GAEX,CAACrB,WAAa,K,kBCxH3BV,EAAOC,QArGP,SAA2BC,EAAaC,EAAcC,EAAkB6B,GAetE,IAdA,IAAI3B,EAAa,GACbC,EAAOL,EACPgC,EAAgB,EAEhBC,EAAMhC,EAENL,EAAWqC,EAAI,EAGff,EAAWa,EAAQ,GACnBZ,EAAWY,EAAQ,GACnBX,EAAaW,EAAQ,GACrBV,EAAYU,EAAQ,GAEhBhB,EAAI,EAAGA,EAAIV,EAAKO,OAAQG,IAAI,CAMlC,IALA,IAAIS,GAAa,EACbC,EAAQpB,EAAKU,GAAG,GAChBW,EAAQrB,EAAKU,GAAG,GAChBY,EAAQtB,EAAKU,GAAG,GAEZa,EAAI,EAAGA,EAAI,EAAGA,IACF,UAAfvB,EAAKU,GAAGa,KAAgBJ,EAAYI,GAGtCb,IAAIG,GAA8B,IAAlBc,IAjBN,IAmBRP,GAnBQ,IAmBYC,GAAoBC,IAAQ/B,EAClC,IAAZ4B,EAAeQ,IACK5B,EAAH,IAAZoB,EAA0B,iCAClB,mCAEVC,IAAQ7B,GAxBL,IAwBiB8B,GAAoBC,IAAQ/B,EAAUQ,EAAW,wBACrEqB,IAAQ7B,GAzBL,IAyBiB8B,GAzBjB,IAyBqCC,EAAkBvB,EAAW,8BAzBlE,IA0BHqB,GA1BG,IA0BiBC,GA1BjB,IA0BqCC,EAAkBvB,EAAW,wBA1BlE,IA4BHqB,GAAoBC,IAAQ9B,GAAY+B,IAAQ/B,EAAUQ,EAAW,eACrEqB,IAAQ7B,GAAY8B,IAAQ9B,GAAY+B,IAAQ/B,EAAUQ,EAAW,eACrEqB,IAAQ7B,GAAY8B,IAAQ9B,GA9BzB,IA8BqC+B,EAAkBvB,EAAW,gBA9BlE,IA+BHqB,GAAoBC,IAAQ9B,GA/BzB,IA+BqC+B,IAAkBvB,EAAW,kBAG5EW,IAAII,GAA8B,IAAlBa,IACdP,IAAQ7B,GAnCA,IAmCY8B,GAAoBC,IAAQ/B,EAChC,IAAd4B,EAAiBQ,IACG5B,EAAH,IAAZoB,EAA2B,kCAClB,iCAEXC,IAAU7B,GAxCP,IAwCmB8B,GAxCnB,IAwCuCC,EAAkBvB,EAAW,wBAxCpE,IAyCHqB,GAzCG,IAyCiBC,GAzCjB,IAyCqCC,EAAkBvB,EAAW,yBAzClE,IA2CHqB,GAAoBC,IAAQ9B,GAAY+B,IAAQ/B,EAAUQ,EAAW,gBACrEqB,IAAQ7B,GAAY8B,IAAQ9B,GAAY+B,IAAQ/B,EAAUQ,EAAW,oBACrEqB,IAAQ7B,GAAY8B,IAAQ9B,GA7CzB,IA6CqC+B,EAAkBvB,EAAW,qBA7ClE,IA8CHqB,GAAoBC,IAAQ9B,GA9CzB,IA8CqC+B,IAAkBvB,EAAW,kBAG5EW,IAAIK,GAAgC,IAAlBY,IAjDR,IAkDRP,GAlDQ,IAkDYC,GAlDZ,IAkDgCC,EACxB,IAAdH,EAAiBQ,IACK5B,EAAH,IAAdoB,EAA6B,iCACpB,kCAEXC,IAAU7B,GAvDP,IAuDmB8B,GAvDnB,IAuDuCC,EAAkBvB,EAAW,yBAvDpE,IAyDHqB,GAAoBC,IAAQ9B,GAAY+B,IAAQ/B,EAAUQ,EAAW,eACrEqB,IAAQ7B,GAAY8B,IAAQ9B,GAAY+B,IAAQ/B,EAAUQ,EAAW,gBACrEqB,IAAQ7B,GAAY8B,IAAQ9B,GA3DzB,IA2DqC+B,EAAkBvB,EAAW,qBA3DlE,IA4DHqB,GAAoBC,IAAQ9B,GA5DzB,IA4DqC+B,IAAkBvB,EAAW,kBAE5EW,IAAIM,GAA+B,IAAlBW,IACfP,IAAU7B,GA/DF,IA+Dc8B,GA/Dd,IA+DkCC,EAC1B,IAAdH,EAAiBQ,IACK5B,EAAH,IAAdoB,EAA6B,kCACpB,iCAlER,IAqEHC,GAAoBC,IAAQ9B,GAAY+B,IAAQ/B,EAAWQ,EAAW,iBACtEqB,IAAQ7B,GAAY8B,IAAQ9B,GAAY+B,IAAQ/B,EAAWQ,EAAW,gBACtEqB,IAAQ7B,GAAY8B,IAAQ9B,GAvEzB,IAuEqC+B,EAAmBvB,EAAW,oBAvEnE,IAwEHqB,GAAoBC,IAAQ9B,GAxEzB,IAwEqC+B,IAAmBvB,EAAW,iBAMlF,IAAMyB,EAAY3B,EAAkBE,GAEpC,OAAG4B,EAAgB,EACR,CAACF,QAAUD,GAGT,IAARI,EACM,CAACzB,WAAa,GAGd,CAACA,WAAa,K,kBCjG7B,SAASd,EAASC,EAAMC,EAASC,GAC/B,OAAOF,EAAME,GAAUF,EAAMC,EAqI/BE,EAAOC,QAhHP,SAA0BC,EAAaE,EAAkBC,EAAM8B,GAsB7D,IArBA,IAAI7B,EAAa,GACbC,EAAOL,EACPM,EAAQ,GACRC,EAAc,EAEd2B,EAAoB,sCACpBC,EAAoB,sCACpBC,EAAoB,sCAGpBxC,EAAWqC,EAAI,EAEfxB,EA/BN,SAAwBN,GAOtB,IANA,IAAIO,EAAa,GACbC,EAAeR,EAAMS,OAAO,EAE5BC,EAAqBF,EADJ,EAGjBG,EAAO,GACHC,EAAiB,EAAbJ,EAAgBI,EAAiB,EAAbJ,EAAeI,IAC7CD,EAAKE,KAAKb,EAAMY,IACbD,EAAKF,SAASC,IACfH,EAAWM,KAAKF,GAChBA,EAAK,IAIT,OAAOJ,EAgBgBO,CAAed,GAElCkC,EAAU5B,EAAiB,GAAG,GAC9B6B,EAAU7B,EAAiB,GAAG,GAC9B8B,EAAY9B,EAAiB,GAAG,GAChC+B,EAAW/B,EAAiB,GAAG,GAI3BM,EAAI,EAAGA,EAAIV,EAAKO,OAAQG,IAAI,CAC/BX,EAAWQ,SAAQN,EAAQ,KAS5B,IANA,IAAImC,GAAY,EACZC,GAAa,EACbjB,EAAQpB,EAAKU,GAAG,GAChBW,EAAQrB,EAAKU,GAAG,GAChBY,EAAQtB,EAAKU,GAAG,GAEZa,EAAI,EAAGA,EAAI,EAAGA,IACD,UAAfvB,EAAKU,GAAGa,KAEQ,SAAfvB,EAAKU,GAAGa,GAAea,EAAWb,EACd,UAAfvB,EAAKU,GAAGa,KAAgBc,EAAYd,IAQ3Cb,IAAIsB,GAA2B,IAAhB9B,IAlCT,IAoCJkB,GAAsB/B,EAASgC,EAAM9B,EApCjC,IAoCuD+B,IAAU/B,EACzD,IAAb6C,EAAiBlC,IAAgBH,GAAaE,EA1ChC,sCA4CRmB,IAAU7B,GAAYF,EAASgC,EAAM9B,EAvCtC,IAuC4D+B,IAAU/B,EAAUQ,GAAaE,EAAQ4B,EAvCrG,IAwCCT,GAAsB/B,EAASgC,EAAM9B,EAxCtC,QAwC4D+B,EAAoBvB,GAAaE,EAAQ8B,EACpGX,IAAU7B,GAAYF,EAASgC,EAAM9B,EAzCtC,QAyC4D+B,EAAoBvB,GAAaE,EAAQ6B,EAzCrG,IA2CCV,GAAsBC,IAAU9B,GAAYF,EAASiC,EAAM/B,EA3C5D,GA4CYQ,GAAJ,IAAbqC,EAA8BnC,EAjDhB,sCAiDyDA,EAAQ,sCAEzEZ,EAAS+B,EAAM7B,EA9ChB,IA8CqC8B,IAAU9B,GAAY+B,IAAU/B,EAAUQ,GAAaE,EAAQ,MACnGmB,IAAU7B,GAAY8B,IAAU9B,GAAYF,EAASiC,EAAM/B,EA/C5D,GA+CgFQ,GAAaE,EAAQ,OACpGZ,EAAS+B,EAAM7B,EAhDhB,IAgDsC8B,IAAU9B,GAhDhD,IAgD4D+B,IAAoBvB,GAAaE,EAAQ,SAE3GS,IAAIuB,GAA2B,IAAhB/B,IAEbkB,IAAU7B,GAAYF,EAASgC,EAAM9B,EApDjC,IAoDuD+B,IAAU/B,EACzD,IAAb6C,EAAiBlC,IAAgBH,GAAaE,EAAQ4B,EArDjD,IAuDCT,GAAsB/B,EAASgC,EAAM9B,EAvDtC,QAuD4D+B,EAAoBvB,GAAaE,EAAQ8B,EACpGX,IAAU7B,GAAYF,EAASgC,EAAM9B,EAxDtC,QAwD4D+B,EAAoBvB,GAAaE,EAAQ6B,EAEpGzC,EAAS+B,EAAM7B,EA1DhB,IA0DsC8B,IAAU9B,GAAY+B,IAAU/B,EAC1DQ,GAAJ,IAAbqC,EAA8BnC,EAAQ4B,EAAiC5B,EAAQ,sCAEzEmB,IAAU7B,GAAY8B,IAAU9B,GAAYF,EAASiC,EAAM/B,EA7D5D,GA6DgFQ,GAAaE,EAAQ,MACpGZ,EAAS+B,EAAM7B,EA9DhB,IA8DsC8B,IAAU9B,GA9DhD,IA8D4D+B,EAAoBvB,GAAaE,EAAQ,OA9DrG,IA+DCmB,GAAsBC,IAAU9B,GAAYF,EAASiC,EAAM/B,EA/D5D,KA+DgFQ,GAAaE,EAAQ,SAE3GS,IAAIwB,GAA6B,IAAhBhC,IAjEX,IAmEJkB,GAAsB/B,EAASgC,EAAM9B,EAnEjC,QAmEuD+B,EAC9C,IAAde,EAAkBnC,IAAgBH,GAAaE,EAAQ8B,EAEjDX,IAAU7B,GAAYF,EAASgC,EAAM9B,EAtEtC,QAsE4D+B,EAAoBvB,GAAaE,EAAQ6B,EAEpGzC,EAAS+B,EAAM7B,EAxEhB,IAwEsC8B,IAAU9B,GAxEhD,IAwE4D+B,EAC/CvB,GAAJ,IAAdsC,EAA+BpC,EAAQ8B,EAAiC9B,EAAQ,sCAzE3E,IA2ECmB,GAAsBC,IAAU9B,GAAYF,EAASiC,EAAM/B,EA3E5D,GA2EgFQ,GAAaE,EAAQ,MACpGZ,EAAS+B,EAAM7B,EA5EhB,IA4EsC8B,IAAU9B,GAAY+B,IAAU/B,EAAUQ,GAAaE,EAAQ,OACpGmB,IAAU7B,GAAY8B,IAAU9B,GAAYF,EAASiC,EAAM/B,EA7E5D,KA6EgFQ,GAAaE,EAAQ,SAE3GS,IAAIyB,GAA4B,IAAhBjC,IAEdkB,IAAU7B,GAAYF,EAASgC,EAAM9B,EAjFjC,QAiFuD+B,EAC9C,IAAde,EAAkBnC,IAAgBH,GAAaE,EAAQ6B,EAGjDV,IAAU7B,GAAY8B,IAAU9B,GAAYF,EAASiC,EAAM/B,EArF5D,GAsFaQ,GAAJ,IAAdsC,EAA+BpC,EAAQ6B,EAAiC7B,EAAQ,sCAE1EZ,EAAS+B,EAAM7B,EAxFhB,IAwFsC8B,IAAU9B,GAxFhD,IAwF4D+B,EAAoBvB,GAAaE,EAAQ,MAxFrG,IAyFCmB,GAAsBC,IAAU9B,GAAYF,EAASiC,EAAM/B,EAzF5D,GAyFgFQ,GAAaE,EAAQ,OACpGZ,EAAS+B,EAAM7B,EA1FhB,IA0FsC8B,IAAU9B,GAAY+B,IAAU/B,IAAUQ,GAAaE,EAAQ,SAMpH,IAAMuB,EAAY3B,EAAkBE,GAEpC,OAAGG,EAAc,EAAW,CAACuB,QAAUD,GAC3B,CAACrB,WAAa,K,kBCjH5B,SAASd,EAASC,EAAMC,EAASC,GAC/B,OAAOF,EAAME,GAAUF,EAAMC,EAG/B,SAAS+C,EAAKC,EAAMC,GAClB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EA8ErC/C,EAAOC,QA3ET,SAA0BC,EAAaE,EAAkBC,EAAM8B,GAE3D,GAAW,IAARA,EAAY,MAAO,CAACzB,WAAa,GAepC,IAbA,IAAIJ,EAAa,GACbC,EAAOL,EACP8C,EAAS,6BAETlD,EAAWqC,EAAI,EAGfxB,EArCR,SAAwBN,GAOtB,IANA,IAAIO,EAAa,GACbC,EAAeR,EAAMS,OAAO,EAE5BC,EAAqBF,EADJ,EAGjBG,EAAO,GACHC,EAAIJ,EAAcI,EAAiB,EAAbJ,EAAeI,IAC3CD,EAAKE,KAAKb,EAAMY,IACbD,EAAKF,SAASC,IACfH,EAAWM,KAAKF,GAChBA,EAAK,IAIT,OAAOJ,EAsBkBO,CAAed,GAElC4C,EAAY,CAACtC,EAAiB,GAAG,GAAGA,EAAiB,GAAG,GAAGA,EAAiB,GAAG,GAAGA,EAAiB,GAAG,IAEtGuC,EAAc,GAEVjC,EAAI,EAAGA,EAAI,EAAGA,IACjBrB,EAASW,EAAK0C,EAAUhC,IAAI,GAAGnB,EATrB,IAUVS,EAAK0C,EAAUhC,IAAI,KAAOnB,GAC1BS,EAAK0C,EAAUhC,IAAI,KAAOnB,EAAUoD,EAAY,GAAK3C,EAAK0C,EAAUhC,IAAI,GAX9D,IAYJV,EAAK0C,EAAUhC,IAAI,IAC1BV,EAAK0C,EAAUhC,IAAI,KAAOnB,GAC1BF,EAASW,EAAK0C,EAAUhC,IAAI,GAAGnB,EAdpB,GAcwCoD,EAAY,GAAK3C,EAAK0C,EAAUhC,IAAI,GAChFV,EAAK0C,EAAUhC,IAAI,KAAOnB,GACjCS,EAAK0C,EAAUhC,IAAI,KAAOnB,GAC1BF,EAASW,EAAK0C,EAAUhC,IAAI,GAAGnB,EAjBpB,GAiBwCoD,EAAY,GAAK3C,EAAK0C,EAAUhC,IAAI,GAChFrB,EAASW,EAAK0C,EAAUhC,IAAI,GAAGnB,EAlB3B,IAmBXS,EAAK0C,EAAUhC,IAAI,KAAOnB,GAnBf,IAoBXS,EAAK0C,EAAUhC,IAAI,KAAiBiC,EAAY,GAAK3C,EAAK0C,EAAUhC,IAAI,IAG5E,IAAIkC,GAAO,EAEX,GAAGhB,EAAI,IAAI,GAAGA,GAAK,EAAE,CAEnB,IADA,IAAIiB,EAAU,EACNnC,EAAI,EAAGA,EAAI,EAAGA,IACS,WAA1BV,EAAK0C,EAAUhC,IAAI,IAAiBmC,IAEtCA,EAAQ,IACTD,GAAK,EACL7C,EAAW,GAAD,OACLuC,EAAKV,EAAI,EAAE,KADN,iBACmBU,EAAKV,EAAI,EAAE,MAD9B,6BAENU,EAAKV,EAAI,EAAE,KAFL,iBAEkBU,EAAKV,EAAI,EAAE,KAF7B,6BAGNU,EAAKV,EAAI,EAAE,MAHL,iBAGmBU,EAAKV,EAAI,EAAE,KAH9B,6BAINU,EAAKV,EAAI,EAAE,MAJL,kCAKNU,EAAKV,EAAI,EAAE,MALL,iBAKmBU,EAAKV,EAAI,QAItCgB,GAC2B,WAA1B5C,EAAK0C,EAAU,IAAI,IACM,WAA1B1C,EAAK0C,EAAU,IAAI,IACO,WAA1B1C,EAAK0C,EAAU,IAAI,IACO,WAA1B1C,EAAK0C,EAAU,IAAI,KAIkD3C,EAA3C,WAAnB4C,EAAY,IAAsC,WAAnBA,EAAY,GAAgC,OAASF,EACjE,WAAnBE,EAAY,IAAsC,WAAnBA,EAAY,GAAgCF,EAGxD,WAAnBE,EAAY,IAAsC,WAAnBA,EAAY,GAAgC,QAAUF,EAAS,IAAMA,EACjF,WAAnBE,EAAY,IAAsC,WAAnBA,EAAY,GAAgCF,EAAS,IAAMA,EACvE,WAAnBE,EAAY,IAAsC,WAAnBA,EAAY,GAAgC,OAASF,EAAS,IAAMA,EAChF,WAAnBE,EAAY,IAAmBA,EAAY,GAAmB,QAAUF,EAAS,IAAMA,EAE7EA,GAErB,IAAMjB,EAAY3B,EAAkBE,GAEpC,OAAGA,EAAWQ,OAAe,CAACkB,QAAUD,GAC5B,CAACrB,WAAW,K,kBChF5B,SAASd,EAASC,EAAMC,EAASC,GAC7B,OAAOF,EAAME,GAAUF,EAAMC,EA0CjCE,EAAOC,QAvCP,SAA0BC,EAAaE,EAAkBC,EAAM8B,GAE3D,GAAW,IAARA,EAAY,MAAO,CAACzB,WAAa,GAEpC,IAAIJ,EAAa,GACbC,EAAOL,EAEPJ,EAAWqC,EAAI,EAGfxB,EAhCR,SAAwBN,GAOpB,IANA,IAAIO,EAAa,GACbC,EAAeR,EAAMS,OAAO,EAE5BC,EAAqBF,EADJ,EAGjBG,EAAO,GACHC,EAAIJ,EAAcI,EAAiB,EAAbJ,EAAeI,IAC3CD,EAAKE,KAAKb,EAAMY,IACbD,EAAKF,SAASC,IACfH,EAAWM,KAAKF,GAChBA,EAAK,IAIT,OAAOJ,EAiBgBO,CAAed,GAClC4C,EAAY,CAACtC,EAAiB,GAAG,GAAGA,EAAiB,GAAG,GAAGA,EAAiB,GAAG,GAAGA,EAAiB,GAAG,IAEvGf,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EALnB,IAKyCS,EAAK0C,EAAU,IAAI,KAAOnD,GAAYS,EAAK0C,EAAU,IAAI,KAAOnD,EALzG,IAORS,EAAK0C,EAAU,IAAI,IAAmBrD,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EAP7D,IAQPS,EAAK0C,EAAU,IAAI,KAAOnD,GAAYF,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EAR9D,KAUHS,EAAK0C,EAAU,IAAI,KAAOnD,GAAYF,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EAVlE,IAWXF,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EAXpB,QAW0CS,EAAK0C,EAAU,IAAI,GAAiB3C,EAAa,0EAE9FC,EAAK0C,EAAU,IAAI,KAAOnD,GAAYF,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EAblE,QAeHS,EAAK0C,EAAU,IAAI,IAAmBrD,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EAflE,MAasFQ,EAAa,uCAQ9GA,EADIC,EAAK0C,EAAU,IAAI,KAAOnD,GAAYS,EAAK0C,EAAU,IAAI,KAAOnD,GAAYF,EAASW,EAAK0C,EAAU,IAAI,GAAGnD,EApBpG,GAqBE,MAEC,OAElB,IAAMiC,EAAY3B,EAAkBE,GAEpC,OAAGA,EAAWQ,OAAe,CAACkB,QAAUD,GAC7B,CAACrB,WAAW,K,kBC1D3B,SAASmC,EAAKC,EAAMC,GAClB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EA4HrC/C,EAAOC,QAzHT,SAA4BC,EAAaC,EAAcC,EAAkBiD,EAAWpB,GAChF,IAaIF,EAbAzB,EAAa,GACbC,EAAOL,EACPoD,EAAY,sCACZnB,EAAMhC,EAENL,EAAWqC,EAAI,EAGff,EAAWa,EAAQ,GACnBZ,EAAWY,EAAQ,GACnBX,EAAaW,EAAQ,GACrBV,EAAYU,EAAQ,GA+CxB,GA3CyB,WAAtB1B,EAAKa,GAAU,IACO,WAAtBb,EAAKc,GAAU,IACS,WAAxBd,EAAKe,GAAY,IACM,WAAvBf,EAAKgB,GAAW,GAZJ,IAaVhB,EAAKa,GAAU,IAAmBb,EAAKa,GAAU,KAAOtB,IACtDQ,EAAa,OAGS,WAArBC,EAAKa,GAAU,GAErBd,EAAagD,EAGc,WAArB/C,EAAKc,GAAU,GAGnBf,EAzBW,IAuBVC,EAAKc,GAAU,IAAmBd,EAAKc,GAAU,KAAOvB,EAE5CwD,EAGA,MAGa,WAAtB/C,EAAKgB,GAAW,GAGpBjB,EAlCW,IAgCVC,EAAKgB,GAAW,IAAmBhB,EAAKgB,GAAW,KAAOzB,EAE9CwD,EAGA,MAGc,WAAvB/C,EAAKe,GAAY,KAGrBhB,EA3CW,IAyCVC,EAAKe,GAAY,IAAmBf,EAAKe,GAAY,KAAOxB,EAEhDwD,EAGA,OAIjBvB,EAAY3B,EAAkBE,GAE3BA,EAAWQ,OACZ,MAAO,CAACkB,QAAQD,GAIhB,GAAW,IAARI,EAAW,CAEZ,GA3DW,IA2DR5B,EAAKa,GAAU,IAAiBb,EAAKa,GAAU,KAAKtB,EAoBrD,MAAO,CAACkC,QADRD,EAAY3B,EADZE,EAAa,QAjBb,GAAGC,EAAKc,GAAU,KAAKvB,GAAYS,EAAKc,GAAU,KAAKvB,EAAS,CAC9D,GA7DO,IA6DJS,EAAKe,GAAY,IA7Db,IA6D8Bf,EAAKe,GAAY,GAAc,CAClE,IAAIiC,EAAM,CAACC,QAAU,GAAGC,YAAa,OAAOzB,QAAQ,GAAGtB,YAAY,GACnE,OAAG2C,EAAWvC,QACZyC,EAAIF,WAAa,GACVE,GAEFA,EAKP,MAAO,CAACvB,QADRD,EAAY3B,EADZE,EAAa,yCAYhB,MAAG6B,EAAI,GAqBP,CACH,IAAIoB,EAAM,CAACC,QAAU,GAAGC,YAAa,OAAOzB,QAAQ,GAAGtB,YAAY,GACnE,OAAG2C,EAAWvC,QACZyC,EAAIF,WAAa,GACVE,GAGFA,EA3BP,GAnFW,IAmFRhD,EAAKa,GAAU,IAAiBb,EAAKa,GAAU,KAAKtB,GAClDS,EAAKc,GAAU,KAAKvB,GAAYS,EAAKc,GAAU,KAAKvB,EAAS,CAC9D,GArFO,IAqFJS,EAAKe,GAAY,IArFb,IAqF8Bf,EAAKe,GAAY,GAAc,CAClE,IAAIiC,EAAM,CAACC,QAAU,GAAGC,YAAa,OAAOzB,QAAQ,GAAGtB,YAAY,GACnE,OAAG2C,EAAWvC,QACZyC,EAAIF,WAAa,GACVE,GAEFA,EAOP,OAHAjD,EAAa,qCAGN,CAAC0B,QADRD,EAAY3B,EADZE,EAAU,UAAMuC,EAAKV,EAAI,EAAE,MAAjB,sBAAoCU,EAAKV,EAAI,EAAE,MAA/C,sBAAkEU,EAAKV,EAAI,EAAE,MAA7E,iBAA2FU,EAAKV,EAAI,EAAE,MAAtG,iBAAoHU,EAAKV,EAAI,EAAE,MAA/H,UAEgBzB,WAAW,O,kBC7GnD,SAASmC,EAAKC,EAAMC,GACjB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EAoDtC/C,EAAOC,QAjDT,SAA4BC,EAAaC,EAAcC,EAAkB6B,GACrE,IAAI3B,EAAa,GACbC,EAAOL,EAEPiC,EAAMhC,EAENL,EAAWqC,EAAI,EAGff,EAAWa,EAAQ,GACnBZ,EAAWY,EAAQ,GACnBX,EAAaW,EAAQ,GACrBV,EAAYU,EAAQ,GAEpByB,EAAa,EASjB,GANGnD,EAAKa,GAAU,KAAKb,EAAKa,GAAU,IAAMb,EAAKa,GAAU,KAAKb,EAAKa,GAAU,KAAOb,EAAKa,GAAU,KAAKb,EAAKa,GAAU,KAAKsC,IAC3HnD,EAAKc,GAAU,KAAKd,EAAKc,GAAU,IAAMd,EAAKc,GAAU,KAAKd,EAAKc,GAAU,KAAOd,EAAKc,GAAU,KAAKd,EAAKc,GAAU,KAAKqC,IAC3HnD,EAAKe,GAAY,KAAKf,EAAKe,GAAY,IAAMf,EAAKe,GAAY,KAAKf,EAAKe,GAAY,KAAOf,EAAKe,GAAY,KAAKf,EAAKe,GAAY,KAAKoC,IACvInD,EAAKgB,GAAW,KAAKhB,EAAKgB,GAAW,IAAMhB,EAAKgB,GAAW,KAAKhB,EAAKgB,GAAW,KAAOhB,EAAKgB,GAAW,KAAKhB,EAAKgB,GAAW,KAAKmC,IAbrH,IAgBZnD,EAAKa,GAAU,IAAmBb,EAAKa,GAAU,KAAOtB,GACxDS,EAAKc,GAAU,KAAOvB,GAAYS,EAAKc,GAAU,KAAOvB,QAEvD,GAAkB,IAAf4D,GAAoBvB,EAAM,EAAG,CAElC7B,EAAU,gCAIV,IAAMyB,EAAY3B,EAHlBE,EAAU,UAAMuC,EAAKV,EAAI,EAAE,MAAjB,sBAAoCU,EAAKV,EAAI,EAAE,MAA/C,iBAA6DU,EAAKV,EAAI,EAAE,MAAxE,YAAiFU,EAAKV,EAAI,EAAE,MAA5F,iBAA0GU,EAAKV,EAAI,EAAE,QAI/H,GAAG7B,EAAWQ,OAAQ,MAAO,CAACkB,QAAUD,EAAUrB,WAAW,QAGWJ,EA7B3D,IA6BPC,EAAKa,GAAU,IAAmBb,EAAKa,GAAU,KAAOtB,EAAuB,sCAC/ES,EAAKc,GAAU,KAAOvB,GAAYS,EAAKc,GAAU,KAAOvB,EAAuB,sCA9BxE,IA+BPS,EAAKe,GAAY,IA/BV,IA+B6Bf,EAAKe,GAAY,GAA8B,sCACnFf,EAAKgB,GAAW,KAAOzB,GAhChB,IAgC4BS,EAAKgB,GAAW,GAA8B,sCAEvE,sCAElB,IAAMQ,EAAY3B,EAAkBE,GAEpC,OAAGA,EAAWQ,OAAe,CAACkB,QAAUD,GAC5B,CAACrB,WAAW,K,kBCrC5B,SAASmC,EAAKrC,EAAMsC,EAAMC,GACtB,OAAQvC,GAAOsC,EAAM,GAAI,IAAI,IAAMA,EAAQC,EAoJ/C/C,EAAOC,QAjJgB,SAAC0D,EAAQC,EAAOzB,EAAI0B,GAEvC,IAAIC,EAAc,IACdC,EAAMC,KAAKC,MAAMJ,GAAO1B,EAAI,IAC5B+B,EAASL,GAAO1B,EAAI,GACpB7B,EAAa,GAyIjB,OAvIiB,IAAdqD,EAAQQ,EAASL,EAAc,IAC1BH,EAAQQ,IAAMhC,EAAI,EAAG2B,EAAc,IACnCH,EAAQS,IAAMjC,EAAI,EAAG2B,EAAc,IACrB,IAAdH,EAAQU,EAASP,EAAc,IAC/BH,EAAQU,IAAMlC,EAAI,IAAG2B,EAAc,KAE7B,IAAXF,EAAOO,EAGE7D,EAFL6B,EAAIyB,EAAOS,IAAM,EACC,MAAdP,EACY,MAEO,MAAdA,GAAiC,MAAdA,EACpBH,EAAQU,IAAIlC,EAAI,EACH,KAAO2B,EAGPjB,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,KAInCV,EAAQQ,IAAIP,EAAOO,EACL,KAAOL,EAGP,MAKJ,MAAdA,EACcjB,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAEf,MAAdP,EACDH,EAAQU,GAAGT,EAAOS,EACJxB,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAEnB,MAEA,MAAdP,EACDH,EAAQS,IAAIjC,EAAI,GAGXwB,EAAQU,IAAIT,EAAOS,EAFX,MAMCxB,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAGvBxB,EAAK,GAAGc,EAAQS,EAAE,EAAE,MAIjC,IAANL,EAGSzD,EAFS,MAAdwD,EACIH,EAAQU,EAAIT,EAAOS,GAAKV,EAAQQ,GAAIP,EAAOO,EAC7BtB,EAAK,GAAGV,EAAIwB,EAAQQ,EAAE,KAGtBtB,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAGnB,MAAdP,EACDH,EAAQQ,IAAMP,EAAOO,GAAKR,EAAQU,IAAKT,EAAOS,EAChCxB,EAAK,GAAGqB,EAAO,EAAE,MAGjB,MAIdP,EAAQS,IAAIjC,EAAI,EACZwB,EAAQU,IAAMlC,EAAI,EACJU,EAAK,GAAGkB,EAAI,EAAE,KAGxBJ,EAAQQ,IAAMP,EAAOO,EACP,MAGAtB,EAAK,GAAGqB,EAAO,EAAE,KAKzB,KAAOJ,EAKX,MAAdA,EACIH,EAAQU,EAAET,EAAOS,EAChB/D,EAAauC,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,MAGnC/D,EAAauC,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,KACnC/D,GAAcuC,EAAK,IAAIV,EAAIwB,EAAQQ,EAAE,MACrC7D,GAAcuC,EAAK,IAAIV,EAAIwB,EAAQU,EAAE,OAIvB,MAAdP,EACDH,EAAQU,IAAIT,EAAOS,EACfT,EAAOO,IAAIR,EAAQQ,GAClB7D,EAAauC,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,KACnC/D,GAAcuC,EAAK,IAAIc,EAAQQ,EAAE,EAAE,KACnC7D,GAAcuC,EAAK,IAAIV,EAAIwB,EAAQU,EAAE,QAGrC/D,EAAauC,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,KACnC/D,GAAc,OACdA,GAAcuC,EAAK,IAAIV,EAAIwB,EAAQU,EAAE,OAGxC/D,EAAa,MAGD,MAAdwD,EAECxD,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,KAGhCT,EAAQQ,IAAIP,EAAOO,GAAKR,EAAQS,IAAIR,EAAOS,EAC1C/D,EAAa,OAGbA,EAAa,OACbA,GAAcuC,EAAK,IAAIV,EAAIyB,EAAOS,EAAE,MACpC/D,GAAcuC,EAAK,IAAIc,EAAQQ,EAAE,EAAE,KACnC7D,GAAcuC,EAAK,IAAIV,EAAIyB,EAAOS,EAAE,MAMjD/D,I,kBClJX,SAASuC,EAAKrC,EAAMsC,EAAMC,GACtB,OAAQvC,GAAOsC,EAAM,GAAI,IAAI,IAAMA,EAAQC,EAmE/C/C,EAAOC,QAhEiB,SAAC0D,EAAQC,EAAOzB,EAAI0B,GAExC,IAAIC,EAAc,IACdQ,EAASN,KAAKC,MAAM9B,EAAI,GACxB7B,EAAa,GAyDjB,OAvDiB,IAAdqD,EAAQQ,EAASL,EAAc,IAC1BH,EAAQQ,IAAMhC,EAAI,EAAG2B,EAAc,IACnCH,EAAQS,IAAMjC,EAAI,EAAG2B,EAAc,IACrB,IAAdH,EAAQU,EAASP,EAAc,IAC/BH,EAAQU,IAAMlC,EAAI,IAAG2B,EAAc,KAE1B,MAAdA,GACCxD,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,MAEnC/D,GAAe6B,EAAI,GAAGwB,EAAQU,IAAIC,EAAS,OAAS,QAEpDhE,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,KAEnC/D,GAAe6B,EAAI,GAAGwB,EAAQU,IAAIC,EAAS,OAAS,GAEpDhE,GAAcuC,EAAK,IAAIc,EAAQQ,EAAE,EAAE,KAEnC7D,GAAe6B,EAAI,GAAGwB,EAAQU,IAAIC,EAAS,QAAU,GAErDhE,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,MAEnC/D,GAAe6B,EAAI,GAAGwB,EAAQU,IAAIC,EAAS,QAAU,QAErDhE,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,MAGlB,MAAdP,EACCxD,EAAYuC,EAAK,GAAGc,EAAQS,EAAE,EAAE,KAG7BT,EAAQS,IAAIjC,GAAKyB,EAAOO,EAAE,IAAIR,EAAQU,IAAIT,EAAOS,EAChD/D,EAAa,OAGbA,EAAauC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MACjC9D,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,MAC/BV,EAAQS,GAAIE,GAAQX,EAAQU,GAAGC,GAC/BX,EAAQS,EAAGE,GAAQX,EAAQU,EAAEC,EAC7BhE,GAAc,OAEdA,GAAc,QAElBA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,KAE/BT,EAAQS,GAAIE,GAAQX,EAAQU,GAAGC,GAC/BX,EAAQS,EAAGE,GAAQX,EAAQU,EAAEC,EAC7BhE,GAAc,QAEdA,GAAc,OAElBA,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,MAKxC/D,I,kBCnEX,SAASuC,EAAKrC,EAAMsC,EAAMC,GACtB,OAAQvC,GAAOsC,EAAM,GAAI,IAAI,IAAMA,EAAQC,EA8F/C/C,EAAOC,QA3Fe,SAAC0D,EAAQC,EAAOzB,GAElC,IAAI2B,EAAc,IACdQ,EAASN,KAAKC,MAAM9B,EAAI,GACxBoC,EAAYpC,EAAI,EAChB7B,EAAa,GAOjB,GALiB,IAAdqD,EAAQQ,EAASL,EAAc,IAC1BH,EAAQQ,IAAMhC,EAAI,EAAG2B,EAAc,IACrB,IAAdH,EAAQU,EAASP,EAAc,IAC/BH,EAAQU,IAAMlC,EAAI,IAAG2B,EAAc,KAExCS,GAAaX,EAAOO,IAAIG,GAAUV,EAAOQ,IAAIE,EAC5C,OAAOR,GACH,IAAK,IACDxD,EAAauC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MACjC9D,GAAc,OACdA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,KACnC9D,GAAc,QACdA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,KACnC,MACJ,IAAK,IACD9D,EAAauC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MACjC9D,GAAc,OACdA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,MACnC9D,GAAc,QACdA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,KACnC,MACJ,IAAK,IACD9D,EAAauC,EAAK,GAAGc,EAAQS,EAAE,EAAE,KACjC9D,GAAc,OACdA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,MACnC9D,GAAc,QACdA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,MACnC,MACJ,QACII,QAAQC,IAAI,mEAIF,MAAdX,GACJxD,EAAauC,EAAK,GAAGc,EAAQS,EAAE,EAAE,KACjC9D,GAAcuC,EAAK,IAAIc,EAAQQ,EAAE,EAAE,MAC/BI,GAAaZ,EAAQS,IAAIE,IAAQhE,GAAa,SAClDA,GAAcuC,EAAK,IAAIc,EAAQS,EAAE,EAAE,MAC/BG,GAAaZ,EAAQS,IAAIE,IAAQhE,GAAa,QAClDA,GAAcuC,EAAK,IAAIc,EAAQQ,EAAE,EAAE,OAGjB,MAAdL,EACA3B,EAAIwB,EAAQU,IAAMT,EAAOO,EAAE,GAAMR,EAAQS,IAAIR,EAAOQ,GACpD9D,EAAauC,EAAK,GAAGe,EAAOO,EAAE,EAAE,MAC7BI,GAAaX,EAAOQ,IAAIE,IAAQhE,GAAc,SACjDA,GAAcuC,EAAK,IAAIe,EAAOQ,EAAE,EAAE,KAC/BG,GAAaX,EAAOQ,IAAIE,IAAQhE,GAAc,QACjDA,GAAcuC,EAAK,IAAIe,EAAOO,EAAE,EAAE,MAClC7D,GAAcuC,EAAK,IAAIe,EAAOQ,EAAE,EAAE,OAGlC9D,EAAa,OAIC,MAAdwD,EACDH,EAAQU,IAAIT,EAAOO,GAAKR,EAAQS,IAAIR,EAAOQ,GAC1C9D,EAAauC,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAC9BE,GAAaX,EAAOQ,IAAIE,IAAQhE,GAAc,QACjDA,GAAcuC,EAAK,IAAIe,EAAOQ,EAAE,EAAE,MAC/BG,GAAaX,EAAOQ,IAAIE,IAAQhE,GAAc,SACjDA,GAAcuC,EAAK,IAAIc,EAAQU,EAAE,EAAE,MACnC/D,GAAcuC,EAAK,IAAIe,EAAOQ,EAAE,EAAE,MAGlC9D,EAAa,MAKdqD,EAAQS,IAAIR,EAAOQ,EAClB9D,EAAa,OAGbA,EAAauC,EAAK,GAAGe,EAAOQ,EAAE,EAAE,MAChC9D,GAAc,OACdA,GAAcuC,EAAK,IAAIe,EAAOQ,EAAE,EAAE,MAI1C,OAAO9D,I,kBC1FX,SAASuC,EAAKC,EAAMC,GAChB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EA4czC/C,EAAOC,QA/bgB,SAAC0D,EAAQC,EAAOzB,GAEnC,IAAM2B,EAZV,SAAmBH,EAAQxB,GACvB,IAAI2B,EAAc,IAMlB,OALiB,IAAdH,EAAQQ,EAASL,EAAc,IAC1BH,EAAQQ,IAAMhC,EAAI,EAAG2B,EAAc,IACnCH,EAAQS,IAAMjC,EAAI,EAAG2B,EAAc,IACrB,IAAdH,EAAQU,EAASP,EAAc,IAC/BH,EAAQU,IAAMlC,EAAI,IAAG2B,EAAc,KACpCA,EAKaY,CAAUf,EAAQxB,GAChCmC,EAASN,KAAKC,MAAM9B,EAAI,GACxBwC,EAAML,EAAO,EACbM,EAAMN,EAAO,EACbO,EAAQ,GAGd,GAAG1C,EAAI,IAAI,EACY,MAAhB2B,IACIF,EAAOO,IAAMG,EAAO,GAAKV,EAAOQ,IAAME,EAAO,GAAkB,IAAbV,EAAOS,EACxDQ,EAAM3D,KAAK,OAGP0C,EAAOO,IAAMG,GAAUV,EAAOQ,IAAME,EAAO,GAAkB,IAAbV,EAAOS,GAC3DQ,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAExBR,EAAOO,IAAMG,EAAO,GAAKV,EAAOQ,IAAME,GAAuB,IAAbV,EAAOS,GAC3DQ,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OACzBO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OAGrBV,EAAOO,IAAIP,EAAOQ,GAClBR,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOO,IAAIP,EAAOQ,EACnBR,EAAOQ,EAAEE,GAAQV,EAAOO,EAAEG,EACzBO,EAAM3D,KAAK,OAEP0C,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,MAGjBR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,GAC9BO,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MAK7BS,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAIwB,EAAQQ,EAAE,KACnB,MACAtB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQQ,EAAE,MACnB,MACAtB,EAAKV,EAAIwB,EAAQS,EAAE,KACnB,QAMG,MAAhBN,IACIF,EAAOO,IAAMG,EAAO,GAAKV,EAAOQ,IAAME,EAAO,GAAkB,IAAbV,EAAOS,GACxDQ,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAExBR,EAAOO,IAAMG,GAAUV,EAAOQ,IAAME,EAAO,GAAkB,IAAbV,EAAOS,EACxDV,EAAQS,IAAIE,GAAUX,EAAQU,IAAIC,GACjCO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,MACzBO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAG,QAI1BO,EAAM3D,KAAK,OAIX0C,EAAOO,IAAMG,EAAO,GAAKV,EAAOQ,IAAME,GAAuB,IAAbV,EAAOS,EACxDV,EAAQS,IAAIE,GAAUX,EAAQU,IAAIC,EAAO,GACxCO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OACzBO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OAGzBO,EAAM3D,KAAK,OAGX0C,EAAOO,IAAMG,GAAUV,EAAOQ,IAAME,GAAuB,IAAbV,EAAOS,EACtDV,EAAQS,IAAIE,EAAO,GAAKX,EAAQU,IAAIC,GACnCO,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAG,OAC1BO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAG,MAC1BO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAG,OAC1BO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAG,OAG1BO,EAAM3D,KAAK,OAKX0C,EAAOO,IAAIP,EAAOQ,GAClBR,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOO,IAAIP,EAAOQ,EACnBT,EAAQS,EAAEE,GAAUX,EAAQU,EAAIC,EAC5BV,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EACzBO,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,KACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OAGAR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF,OACA2B,EAAKc,EAAQS,EAAE,EAAE,KACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,QAGAR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF2B,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MAGnBR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,GAC9BO,EAAM3D,KACF,OACA2B,EAAKV,EAAIwB,EAAQS,EAAE,KACnB,OACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACA,MACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MAK3BS,EAAM3D,KAAK,OAIhByC,EAAQS,IAAIR,EAAOQ,GAAGT,EAAQU,IAAIT,EAAOO,EACxCU,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAIwB,EAAQU,EAAE,KACnB,MACAxB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQU,EAAE,MACnB,MACAxB,EAAKV,EAAIwB,EAAQS,EAAE,KACnB,OAIJS,EAAM3D,KAAK,aAO1B,GAAGiB,EAAI,EAER,OAAO2B,GACH,IAAK,IACEF,EAAOO,GAAGS,GAAKhB,EAAOO,GAAGQ,GAAKf,EAAOQ,GAAGQ,GAAKhB,EAAOQ,GAAGO,EACnDf,EAAOQ,IAAIQ,EACPhB,EAAOO,IAAIS,EAAKC,EAAM3D,KAAK,OACtB0C,EAAOO,IAAIG,EACZX,EAAQQ,EAAEG,GACTO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QAEPyC,EAAQQ,EAAEG,GACdO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,UAGX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAIhCS,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,SAGX0C,EAAOQ,IAAIE,EACZV,EAAOO,IAAIS,EACPjB,EAAQS,IAAIE,GACXO,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,MACtBC,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,SAGtBC,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,MACtBC,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,SAI1BC,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAI7BR,EAAOO,IAAIS,IACVC,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAKhCR,EAAOO,IAAIP,EAAOQ,GAClBR,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOO,IAAIP,EAAOQ,EACnBR,EAAOQ,EAAEE,GAAQV,EAAOO,EAAEG,EACzBO,EAAM3D,KAAK,OAEP0C,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,MAGjBR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,GAC9BO,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MAK7BS,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAIwB,EAAQQ,EAAE,KACnB,MACAtB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQQ,EAAE,MACnB,MACAtB,EAAKV,EAAIwB,EAAQS,EAAE,KACnB,OAIZ,MACJ,IAAK,IACER,EAAOO,GAAGG,EAAO,GAAGV,EAAOO,GAAGG,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,EACzEV,EAAOQ,IAAIQ,EACPhB,EAAOO,IAAIS,GACVC,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAExBR,EAAOO,IAAIG,EACZX,EAAQU,IAAIM,GACXE,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAE3BS,EAAM3D,KAAK,OAGbyC,EAAQS,IAAIO,GAAKhB,EAAQU,IAAIM,GAC5BE,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAE3BS,EAAM3D,KAAK,OAGhB0C,EAAOQ,IAAIE,EACZV,EAAOO,IAAIS,EACPjB,EAAQS,IAAIO,GACXE,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OACzBO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OAExBO,EAAM3D,KAAK,QAGbyC,EAAQU,IAAIO,GACXC,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,MACtBC,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,OACtBC,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,MACtBC,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAK+B,EAAI,EAAE,QAErBC,EAAM3D,KAAK,QAIjB0C,EAAOO,IAAIS,EACPjB,EAAQU,IAAIO,GAAKjB,EAAQS,IAAIQ,GAC5BC,EAAM3D,KAAK2B,EAAK8B,EAAI,EAAE,OACtBE,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAK8B,EAAI,EAAE,OAGtBE,EAAM3D,KAAK,OAGX0C,EAAOO,IAAIG,EACZX,EAAQS,IAAIO,GACXE,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAG5BS,EAAM3D,KAAK,OAIZyC,EAAQS,IAAIO,GAAKhB,EAAQU,IAAIO,GAC5BC,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAG5BS,EAAM3D,KAAK,OAMnB0C,EAAOO,IAAIP,EAAOQ,GAClBR,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOO,IAAIP,EAAOQ,EACnBT,EAAQS,EAAEE,GAAUX,EAAQU,EAAIC,EAC5BV,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EACzBO,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,KACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OAGAR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF,OACA2B,EAAKc,EAAQS,EAAE,EAAE,KACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,QAGAR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF2B,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MAGnBR,EAAOO,EAAEG,GAAQV,EAAOQ,EAAEE,GAC9BO,EAAM3D,KACF,OACA2B,EAAKV,EAAIwB,EAAQS,EAAE,KACnB,OACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACA,MACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQS,EAAE,MAK3BS,EAAM3D,KAAK,OAIhByC,EAAQS,IAAIR,EAAOQ,GAAGT,EAAQU,IAAIT,EAAOO,EACxCU,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAIwB,EAAQU,EAAE,KACnB,MACAxB,EAAKV,EAAIwB,EAAQS,EAAE,MACnB,OACAvB,EAAKV,EAAIwB,EAAQU,EAAE,MACnB,MACAxB,EAAKV,EAAIwB,EAAQS,EAAE,KACnB,OAIJS,EAAM3D,KAAK,OAIvB,MACJ,QACIsD,QAAQC,IAAI,iEAIxB,OAAOI,EAAMC,KAAK,O,kBC1ctB,SAASjC,EAAKC,EAAMC,GAChB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EAmmBzC/C,EAAOC,QAhmBiB,SAAC0D,EAAQC,EAAOzB,GACpC,IAAImC,EAASN,KAAKC,MAAM9B,EAAI,GACxB4C,EAAU5C,EAAI,EACd0C,EAAQ,GACRf,EAAc,IAMlB,GALiB,IAAdH,EAAQQ,EAASL,EAAc,IAC1BH,EAAQQ,IAAMhC,EAAI,EAAG2B,EAAc,IACrB,IAAdH,EAAQU,IAASP,EAAc,KAGpC3B,EAAI,IAAI,EAEP,OAAO2B,GACH,IAAK,IACe,IAAbF,EAAOO,GAAWP,EAAOQ,IAAOE,EAAO,GAAIV,EAAOS,IAAMC,EACvDO,EAAM3D,KAAK,OAEM,IAAb0C,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,EAAO,GAKlD,IAAbV,EAAOO,GAAWP,EAAOQ,IAAME,GAAUV,EAAOS,IAAMC,GAJ1DO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,SACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAQxBR,EAAOS,IAAIT,EAAOQ,GAAGR,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GAAIjC,EAAI,EAAGyB,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GAAIjC,EAAI,EAAGyB,EAAOS,IAAIT,EAAOQ,EAC9GT,EAAQU,EAAEC,EAAO,GAAGX,EAAQS,EAAEE,EAAO,EAEpCO,EAAM3D,KACF,OACA,OACA2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,KACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,KACjB,OAGAT,EAAQU,EAAEC,GAAQX,EAAQS,EAAEE,EAAO,EACvCO,EAAM3D,KACF,OACA2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,KACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MAGjBT,EAAQU,EAAEC,GAAQX,EAAQS,EAAEE,EAChCO,EAAM3D,KACF,MACA,OACA2B,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,OACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,QAGAT,EAAQU,EAAEC,EAAO,GAAGX,EAAQS,EAAEE,GAClCO,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,OACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,QAMRS,EAAM3D,KACF,OACA2B,EAAMV,EAAI,EAAGwB,EAAQU,EAAE,EAAE,MACzB,MACAxB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAMV,EAAI,EAAGwB,EAAQU,EAAE,EAAE,KACzB,MACAxB,EAAKc,EAAQS,EAAE,EAAE,MAI7B,MACJ,IAAK,IACe,IAAbR,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,GACvDO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,SACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAEX,IAAbR,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,EAAO,EAChEX,EAAQQ,IAAIG,GAAUX,EAAQS,IAAIE,EACjCO,EAAM3D,KACF,MACA2B,EAAKyB,EAAO,MACZ,OACAzB,EAAKyB,EAAO,MAIhBO,EAAM3D,KAAK,OAGE,IAAb0C,EAAOO,GAAWP,EAAOQ,IAAME,GAAUV,EAAOS,IAAMC,EACvDX,EAAQS,IAAIE,EAAO,GAAKX,EAAQQ,IAAIG,EAAO,EAC1CO,EAAM3D,KACF2B,EAAKyB,EAAO,EAAE,MACd,OACAzB,EAAKyB,EAAO,EAAE,MAIlBO,EAAM3D,KAAK,OAGE,IAAb0C,EAAOO,GAAWP,EAAOQ,IAAME,GAAUV,EAAOS,IAAMC,EAAO,EAC9DX,EAAQS,IAAIE,EAAO,GAAKX,EAAQQ,IAAIG,EACnCO,EAAM3D,KACF2B,EAAKyB,EAAO,EAAE,MACd,OACAzB,EAAKyB,EAAO,EAAE,KACd,MACAzB,EAAKyB,EAAO,EAAE,MACd,MACAzB,EAAKyB,EAAO,EAAE,MAIlBO,EAAM3D,KAAK,OAIX0C,EAAOO,IAAIP,EAAOQ,GAClBR,EAAOO,IAAKhC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOS,IAAIT,EAAOQ,EAEnBT,EAAQQ,EAAEG,EAAO,GAAGX,EAAQS,EAAEE,EAAO,EACjCV,EAAOS,EAAEC,EAAO,GAAGV,EAAOQ,EAAEE,EAAO,EAElCO,EAAM3D,KACF,OACA,OACA2B,EAAKe,EAAOQ,EAAE,EAAE,MAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,MAChB,OACAvB,EAAKe,EAAOQ,EAAE,EAAE,KAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,KAChB,OAGAR,EAAOS,EAAEC,GAAQV,EAAOQ,EAAEE,EAAO,EACrCO,EAAM3D,KACF,OACA2B,EAAKe,EAAOQ,EAAE,EAAE,MAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,MAChB,OACAvB,EAAKe,EAAOQ,EAAE,EAAE,KAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,MAGhBR,EAAOS,EAAEC,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF,MACA,OACA2B,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,OACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,QAGAR,EAAOS,EAAEC,EAAO,GAAGV,EAAOQ,EAAEE,GAChCO,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,OACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,QAKRS,EAAM3D,KAAK,OAIhByC,EAAQS,IAAIR,EAAOQ,GAAGT,EAAQQ,IAAKhC,EAAI,EAAGyB,EAAOS,EAChDQ,EAAM3D,KACF,OACA2B,EAAKc,EAAQQ,EAAE,EAAE,MACjB,MACAtB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQQ,EAAE,EAAE,KACjB,MACAtB,EAAKc,EAAQS,EAAE,EAAE,MAIrBS,EAAM3D,KAAK,OAIvB,MACJ,IAAK,IACe,IAAb0C,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,GACvDO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAGd,IAAbR,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,EAAO,GAClD,IAAbV,EAAOO,GAAWP,EAAOQ,IAAME,GAAUV,EAAOS,IAAMC,EAAO,GAChD,IAAbV,EAAOO,GAAWP,EAAOQ,IAAME,GAAUV,EAAOS,IAAMC,GAEvDO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAG5BS,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,KACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,OAGzB,MACJ,QACII,QAAQC,IAAI,wBAKnB,GAAGtC,EAAI,EAAE,CAGV,OAAO2B,GACH,IAAK,IACEF,EAAOS,GAAGC,EAAO,GAAGV,EAAOS,GAAGC,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,EAE5D,IAAbV,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,EAAO,EAC9DO,EAAM3D,KAAK,OAGP0C,EAAOQ,IAAME,EAAO,GACxBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BE,GAAUS,EACNF,EAAM3D,KAAK,OAAO2B,EAAKc,EAAQS,EAAE,EAAE,MACnCS,EAAM3D,KAAK,OAAO2B,EAAKc,EAAQS,EAAE,EAAE,OAGnCR,EAAOQ,IAAME,GACjBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAGxBR,EAAOQ,IAAME,EAAO,GACrBV,EAAOS,IAAMC,EAAO,IACnBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAKhCR,EAAOS,IAAIT,EAAOQ,GAClBR,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOS,IAAIT,EAAOQ,EACnBT,EAAQU,EAAEC,EAAO,GAAGX,EAAQS,EAAEE,EAAO,EAEpCO,EAAM3D,KACF,OACA,OACA2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,KACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,KACjB,OAGAT,EAAQU,EAAEC,GAAQX,EAAQS,EAAEE,EAAO,EACvCO,EAAM3D,KACF,OACA2B,EAAKc,EAAQS,EAAE,EAAE,MACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQS,EAAE,EAAE,KACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,MAGjBT,EAAQU,EAAEC,GAAQX,EAAQS,EAAEE,EAChCO,EAAM3D,KACF,MACA,OACA2B,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,OACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,QAGAT,EAAQU,EAAEC,EAAO,GAAGX,EAAQS,EAAEE,GAClCO,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,MACrB,OACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,MACAvB,EAAKV,EAAKwB,EAAQS,EAAG,KACrB,QAKZS,EAAM3D,KACF,OACA2B,EAAMV,EAAI,EAAGwB,EAAQU,EAAE,EAAE,MACzB,MACAxB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAMV,EAAI,EAAGwB,EAAQU,EAAE,EAAE,KACzB,MACAxB,EAAKc,EAAQS,EAAE,EAAE,MAI7B,MAEJ,IAAK,IACER,EAAOS,GAAGC,EAAO,GAAGV,EAAOS,GAAGC,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,EAC5D,IAAbV,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,EAAO,EAC9DO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,KAAK,OAAOvB,EAAKc,EAAQS,EAAE,EAAE,OAGrDR,EAAOQ,IAAME,EAAO,EACrBX,EAAQQ,EAAEG,EAAO,GAAGX,EAAQS,IAAIE,EAAO,EACtCO,EAAM3D,KAAK,OAGX2D,EAAM3D,KAAK,MAAM2B,EAAKc,EAAQS,EAAE,EAAE,KAAK,OAAOvB,EAAKc,EAAQS,EAAE,EAAE,OAI/DR,EAAOQ,IAAME,EAEdV,EAAOS,IAAMC,EAAO,EAChBX,EAAQS,IAAME,EAAO,EACpBO,EAAM3D,KAAK,QAGX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OACzBO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OAIzBV,EAAOS,IAAMC,EAAO,IACrBX,EAAQS,IAAME,EAAO,EACpBO,EAAM3D,KAAK,QAGX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,OACzBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,OAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,QAK7BV,EAAOQ,IAAME,EAAO,IAErBV,EAAOS,IAAMC,EAAO,EAChBX,EAAQQ,IAAMG,EAAO,GAAKX,EAAQS,IAAME,EAAO,GAC9CO,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAC3BO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAG3BO,EAAM3D,KAAK,OAIX0C,EAAOS,IAAMC,EACdX,EAAQQ,IAAMG,EAAO,GACpBO,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAC3BO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,MAC3BO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAG3BO,EAAM3D,KAAK,QAGX0C,EAAOS,IAAMC,EAAO,IACrBX,EAAQQ,IAAMG,EAAO,GAAKX,EAAQS,IAAME,EAAO,GAE9CO,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,MAC3BO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAC3BO,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAC3BO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAG3BO,EAAM3D,KAAK,SAMnB0C,EAAOS,IAAIT,EAAOQ,GAClBR,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GACzBjC,EAAI,EAAGyB,EAAOS,IAAKlC,EAAI,EAAGyB,EAAOQ,GACjCjC,EAAI,EAAGyB,EAAOS,IAAIT,EAAOQ,EACnBT,EAAQQ,EAAEG,EAAO,GAAGX,EAAQS,EAAEE,EAAO,EACjCV,EAAOS,EAAEC,EAAO,GAAGV,EAAOQ,EAAEE,EAAO,EAElCO,EAAM3D,KACF,OACA,OACA2B,EAAKe,EAAOQ,EAAE,EAAE,MAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,MAChB,OACAvB,EAAKe,EAAOQ,EAAE,EAAE,KAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,KAChB,OAGAR,EAAOS,EAAEC,GAAQV,EAAOQ,EAAEE,EAAO,EACrCO,EAAM3D,KACF,OACA2B,EAAKe,EAAOQ,EAAE,EAAE,MAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,MAChB,OACAvB,EAAKe,EAAOQ,EAAE,EAAE,KAChB,MACAvB,EAAKe,EAAOQ,EAAE,EAAE,MAGhBR,EAAOS,EAAEC,GAAQV,EAAOQ,EAAEE,EAC9BO,EAAM3D,KACF,MACA,OACA2B,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,OACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,QAGAR,EAAOS,EAAEC,EAAO,GAAGV,EAAOQ,EAAEE,GAEhCO,EAAM3D,KACF,OACA,OACA2B,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,MACpB,OACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,MACAvB,EAAKV,EAAKyB,EAAOQ,EAAG,KACpB,QAKRS,EAAM3D,KAAK,OAIhByC,EAAQS,IAAIR,EAAOQ,GAAGT,EAAQQ,IAAKhC,EAAI,EAAGyB,EAAOS,EAChDQ,EAAM3D,KACF,OACA2B,EAAKc,EAAQQ,EAAE,EAAE,MACjB,MACAtB,EAAKc,EAAQS,EAAE,EAAE,MACjB,OACAvB,EAAKc,EAAQQ,EAAE,EAAE,KACjB,MACAtB,EAAKc,EAAQS,EAAE,EAAE,MAIrBS,EAAM3D,KAAK,OAIvB,MACJ,IAAK,IACE0C,EAAOS,GAAGC,EAAO,GAAGV,EAAOS,GAAGC,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,GAAGV,EAAOQ,GAAGE,EAAO,EAC5D,IAAbV,EAAOO,GAAWP,EAAOQ,IAAME,EAAO,GAAKV,EAAOS,IAAMC,EAAO,EAC9DO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAAM,OAAOvB,EAAKc,EAAQS,EAAE,EAAE,OAGtDR,EAAOQ,IAAME,EAAO,EACrBX,EAAQU,IAAIC,EAAO,GAAGX,EAAQS,IAAIE,EAAO,EACxCO,EAAM3D,KAAK,OAGX2D,EAAM3D,KAAK,MAAM2B,EAAKc,EAAQS,EAAE,EAAE,MAAM,OAAOvB,EAAKc,EAAQS,EAAE,EAAE,OAIhER,EAAOQ,IAAME,GACjBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAGxBR,EAAOQ,IAAME,EAAO,IAErBV,EAAOS,IAAMC,EAAO,EAChBX,EAAQS,IAAIE,EAAO,GAAGX,EAAQU,IAAIC,EAAO,GACxCO,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,OAC3BO,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKyB,EAAO,EAAE,EAAE,QAG3BO,EAAM3D,KAAK,OAIX0C,EAAOS,IAAMC,GACjBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,OACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,QAExBR,EAAOS,IAAMC,EAAO,IACxBO,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,MAC5BS,EAAM3D,KAAK,QACX2D,EAAM3D,KAAK2B,EAAKc,EAAQS,EAAE,EAAE,SAKpCS,EAAM3D,KACF2B,EAAKc,EAAQS,EAAE,EAAE,KACjB,MACAvB,EAAKc,EAAQS,EAAE,EAAE,OAGzB,MACJ,QAEI,OADAI,QAAQC,IAAI,mBACL,GAGf,OAAOI,EAAMC,KAAK,KAGtB,OAAOD,EAAMC,KAAK,O,kBC7mBtB,SAASjC,EAAKrC,EAAMsC,EAAMC,GACtB,OAAQvC,GAAOsC,EAAM,GAAI,IAAI,IAAMA,EAAQC,EAsH/C/C,EAAOC,QAhCsB,SAAC0D,EAAQC,EAAOzB,EAAIT,GAC7C,IACM5B,EAAWqC,EAAI,EA2BrB,OA1BiB,IAQdwB,EAAQS,EA9Ff,SAA0BT,EAAQ7D,EAASC,GACvC,OAAG4D,EAAQU,IAAIvE,EACL,GAAN,OAAU+C,EAAK,GAAGc,EAAQQ,EAAE,EAAE,MAA9B,yBAAoDtB,EAAK,GAAGc,EAAQQ,EAAE,EAAE,KAAxE,SAEIR,EAAQQ,IAAIrE,EACV,GAAN,OAAU+C,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAA9B,yBAAmDxB,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAAvE,SAEIV,EAAQU,IAAItE,EACV,GAAN,OAAU8C,EAAK,GAAGc,EAAQQ,EAAE,EAAE,KAA9B,yBAAmDtB,EAAK,GAAGc,EAAQQ,EAAE,EAAE,MAAvE,SAEIR,EAAQQ,IAAIpE,EACV,GAAN,OAAU8C,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAA9B,yBAAoDxB,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAAxE,cADC,EAqFYW,CAAiBrB,EAAQ7D,EATzB,GAWT6D,EAAQS,EAXC,GAWWT,EAAQS,EAAEtE,EAlF1C,SAA8B6D,EAAQ7D,EAASC,EAAS2B,GACpD,OAAGiC,EAAQQ,IAAIrE,GAAY6D,EAAQU,IAAIvE,EACpB,IAAZ4B,EACO,eAGA,eAGXiC,EAAQQ,IAAIpE,GAAY4D,EAAQU,IAAIvE,EACpB,IAAZ4B,EACO,eAGA,eAGXiC,EAAQQ,IAAIrE,GAAY6D,EAAQU,IAAItE,EACpB,IAAZ2B,EACO,eAGA,eAGXiC,EAAQQ,IAAIpE,GAAY4D,EAAQU,IAAItE,EACpB,IAAZ2B,EACO,eAGA,oBALd,EA0DiBuD,CAAqBtB,EAAQ7D,EAZ7B,EAY+C4B,GAExDiC,EAAQS,IAAItE,GAhBT,IAgBqB4B,EAlDpC,SAAyBiC,EAAQ7D,EAASC,GACtC,OAAG4D,EAAQU,IAAIvE,EACL,8BAEF6D,EAAQQ,IAAIrE,EACV,8BAEF6D,EAAQU,IAAItE,EACV,8BAEF4D,EAAQQ,IAAIpE,EACV,mCADL,EAyCYmF,CAAgBvB,EAAQ7D,EAfxB,GAiBT6D,EAAQU,IAAIT,EAAOS,GAAGV,EAAQQ,IAAIP,EAAOO,EAtCrD,SAA8BR,EAAQC,EAAO9D,EAASC,GAClD,OAAG4D,EAAQU,IAAIvE,GAAU8D,EAAOS,IAAIvE,EAC1B,GAAN,OAAU+C,EAAK,GAAGc,EAAQQ,EAAE,EAAE,KAA9B,0BAAoDtB,EAAK,GAAGc,EAAQQ,EAAE,EAAE,MAAxE,iBAEIR,EAAQQ,IAAIrE,GAAY8D,EAAOO,IAAIrE,EACjC,GAAN,OAAU+C,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAA9B,0BAAqDxB,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAAzE,iBAEIV,EAAQU,IAAItE,GAAY6D,EAAOS,IAAItE,EACjC,GAAN,OAAU8C,EAAK,GAAGc,EAAQQ,EAAE,EAAE,MAA9B,0BAAqDtB,EAAK,GAAGc,EAAQQ,EAAE,EAAE,KAAzE,iBAEIR,EAAQQ,IAAIpE,GAAY6D,EAAOO,IAAIpE,EACjC,GAAN,OAAU8C,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAA9B,0BAAoDxB,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAAxE,iBAEC,GA0BYc,CAAqBxB,EAAQC,EAAO9D,EAlBpC,GAqBH,Q,kBC/GlB,SAAS+C,EAAKrC,EAAMsC,EAAMC,GACtB,OAAQvC,GAAOsC,EAAM,GAAI,IAAI,IAAMA,EAAQC,EA6L/C/C,EAAOC,QA1LqB,SAAC0D,EAAQC,EAAOzB,EAAIiD,GAC5C,IACMtF,EAAWqC,EAAI,EAEjB7B,EAAa,GASjB,GAAGsD,EAAOS,IAAIvE,EAEP6D,EAAQS,EAAEtE,GAAY6D,EAAQU,IAAIvE,GAAY6D,EAAQQ,IAAIrE,EAIrDQ,EAlBK,IAgBN8E,EAEW,uBAAmBvC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MAAvC,8BAAkEvB,EAAK,GAAGc,EAAQS,EAAE,EAAE,MAKtF,iCAIVT,EAAQU,IAAIT,EAAOS,GAAKV,EAAQS,IAAIR,EAAOQ,EAE/C9D,EAAU,uBAAmBuC,EAAK,GAAGV,EAAKwB,EAAQQ,EAAG,MAA3C,8BAAsEtB,EAAK,GAAGV,EAAKwB,EAAQQ,EAAG,MAGpGR,EAAQS,IAAItE,GAAc6D,EAAQU,IAAIvE,EAC1CQ,EAAU,eAGNqD,EAAQS,IAAItE,IACb6D,EAAQU,IAAIvE,GAnCN,IAmCkB6D,EAAQQ,EAC/B7D,EAAU,oBApCL,IAsCDqD,EAAQU,GAtCP,IAsCuBV,EAAQQ,EACpC7D,EAAU,oBAvCL,IAyCDqD,EAAQU,GAAgBV,EAAQQ,IAAIrE,IACxCQ,EAAU,2BAKjB,GAAGsD,EAAOO,IAAIrE,EACZ6D,EAAQS,EAAEtE,GAhDA,IAgDY6D,EAAQU,GAAgBV,EAAQQ,IAAIrE,EAMrDQ,EAxDmB,IAoDpB8E,EAIW,uBAAmBvC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MAAvC,8BAAkEvB,EAAK,GAAGc,EAAQS,EAAE,EAAE,KAAtF,kBAKA,4CAKVT,EAAQQ,IAAIP,EAAOO,GAAKR,EAAQS,IAAIR,EAAOQ,EAE/C9D,EAAU,uBAAmBuC,EAAK,GAAGc,EAAQU,EAAE,EAAE,MAAvC,8BAAkExB,EAAK,GAAGc,EAAQU,EAAE,EAAE,KAAtF,kBAKNV,EAAQS,IAAItE,EAvEP,IAwEN6D,EAAQU,EACP/D,EAAU,0BAzEL,IA0ECqD,EAAQQ,IACd7D,EAAU,4BAKVqD,EAAQS,IAAItE,IACb6D,EAAQQ,IAAIrE,GAAY6D,EAAQU,IAAIvE,EACnCQ,EAAU,wBAlFL,IAoFDqD,EAAQQ,GAAgBR,EAAQU,IAAIvE,EACxCQ,EAAU,oBArFL,IAuFDqD,EAAQQ,GAvFP,IAuFuBR,EAAQU,IACpC/D,EAAU,2BAKjB,GA7FY,IA6FTsD,EAAOS,EACRV,EAAQS,EAAEtE,GA9FA,IA8FY6D,EAAQU,GA9FpB,IA8FoCV,EAAQQ,EAIjD7D,EApGY,IAkGb8E,EAEW,uBAAmBvC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MAAvC,8BAAkEvB,EAAK,GAAGc,EAAQS,EAAE,EAAE,KAAtF,2BAKA,oEAKVT,EAAQU,IAAIT,EAAOS,GAAKV,EAAQS,IAAIR,EAAOQ,EAE/C9D,EAAU,uBAAmBuC,EAAK,GAAGc,EAAQQ,EAAE,EAAE,MAAvC,8BAAkEtB,EAAK,GAAGc,EAAQQ,EAAE,EAAE,KAAtF,2BAGNR,EAAQS,IAAItE,EAChBQ,EAAU,0BAENqD,EAAQS,EAAEtE,IACdQ,EAAU,uCAIb,GAzHY,IAyHTsD,EAAOO,EAAa,CACxB,IAAMkB,EAAQ,sCACRC,EAAK,uBAAmBzC,EAAK,GAAGc,EAAQS,EAAE,EAAE,MAAvC,8BAAkEvB,EAAK,GAAGc,EAAQS,EAAE,EAAE,KAAtF,2BACLmB,EAAO,sCACPC,EAAI,oEAEP7B,EAAQS,EAAEtE,GAAY6D,EAAQU,IAAIvE,GAAY6D,EAAQQ,IAAIrE,EAIrDQ,EArIK,IAmIN8E,EAEW,UAAMC,EAAN,YAAkBC,EAAlB,YAA2BC,GAK3B,UAAMC,GAIhB7B,EAAQS,EAAEtE,GAAY6D,EAAQU,IAAIvE,GA5I7B,IA4IyC6D,EAAQQ,EAGtD7D,EAjJH,IA+IE8E,EAEW,UAAMvC,EAAK,GAAGV,EAAI,EAAE,KAApB,YAA4BkD,EAA5B,YAAwCC,EAAxC,YAAiDC,EAAjD,YAA4D1C,EAAK,GAAGV,EAAI,EAAE,OAI1E,UAAMU,EAAK,GAAGV,EAAI,EAAE,KAApB,YAA4BqD,EAA5B,YAAoC3C,EAAK,GAAGV,EAAI,EAAE,OAI5DwB,EAAQS,EAAEtE,GAvJL,IAuJiB6D,EAAQU,GAvJzB,IAuJyCV,EAAQQ,EAGtD7D,EA5JY,IA0Jb8E,EAEW,UAAMvC,EAAK,GAAGV,EAAI,EAAE,MAApB,YAA6BkD,EAA7B,YAAyCC,EAAzC,YAAkDC,EAAlD,YAA6D1C,EAAK,GAAGV,EAAI,EAAE,OAI3E,UAAMU,EAAK,GAAGV,EAAI,EAAE,MAApB,YAA6BqD,EAA7B,YAAqC3C,EAAK,GAAGV,EAAI,EAAE,OAI7DwB,EAAQS,EAAEtE,GAlKL,IAkKiB6D,EAAQU,GAAgBV,EAAQQ,IAAIrE,EAG1DQ,EAvKmB,IAqKpB8E,EAEW,UAAMvC,EAAK,GAAGV,EAAI,EAAE,MAApB,YAA6BkD,EAA7B,YAAyCC,EAAzC,YAAkDC,EAAlD,YAA6D1C,EAAK,GAAGV,EAAI,EAAE,MAI3E,UAAMU,EAAK,GAAGV,EAAI,EAAE,MAApB,YAA6BqD,EAA7B,YAAqC3C,EAAK,GAAGV,EAAI,EAAE,MAI7DwB,EAAQQ,IAAIP,EAAOO,GAAKR,EAAQS,IAAIR,EAAOQ,IAE/C9D,EAAU,UAAM+E,EAAN,yBAA+BxC,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,MAArD,8BAAgFxB,EAAK,GAAGV,EAAIwB,EAAQU,EAAE,KAAtG,2DAKlB,OAAO/D,I,kBC3LX,SAASuC,EAAKC,EAAMC,GAChB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EA6MzC/C,EAAOC,QA1MuB,SAAC0D,EAAQC,EAAO6B,GAC1C,IAuEoB3C,EAvEdhD,EAAW2F,EAAS,EAEpBC,EAAa1B,KAAKC,MAAMwB,EAAS,GAEnCZ,EAAQ,GAGRc,EANa,IAMA/B,EAAOO,GAAgBP,EAAOS,IAAIvE,EAE/C8F,EAAchC,EAAOO,IAAIrE,GAAY8D,EAAOS,IAAIvE,EAEhD+F,EAAajC,EAAOO,IAAIrE,GAVX,IAUuB8D,EAAOS,EAOzCyB,EAAsB,CACxBjD,EAAK6C,EAAW,EAAE,MAClB,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MACvC7C,EAAK6C,EAAW,EAAE,MAGhBK,EAAuB,CACzBlD,EAAK6C,EAAW,EAAE,MAClB,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MACvC7C,EAAK6C,EAAW,EAAE,MAGhBM,EAAsB,CACxBnD,EAAK6C,EAAW,EAAE,MAClB,MAAM,MAAM,OAAO,MAAM,OAAO,OAAO,MACvC7C,EAAK6C,EAAW,EAAE,MAGhBO,EAAyB,CAC3BpD,EAAK6C,EAAW,MAAM,OAAO,OAC7B7C,EAAK6C,EAAW,MAAM,OAAO,OAC7B7C,EAAK6C,EAAW,MAAM,QAGpBQ,EAAqB,CACvBrD,EAAK6C,EAAW,KAAK,OAAO7C,EAAK6C,EAAW,KAAK,OACjD7C,EAAK6C,EAAW,MAAM,OAAO7C,EAAK6C,EAAW,KAAK,OAClD7C,EAAK6C,EAAW,MAAM,OAAO7C,EAAK6C,EAAW,KAAK,OAClD7C,EAAK6C,EAAW,MAAM,OAAO7C,EAAK4C,EAAS,MAAM5C,EAAK6C,EAAW,MACjE,OAAO7C,EAAK6C,EAAW,MAAM,OAAO7C,EAAK6C,EAAW,EAAE,KACtD,OAAO,MAAM,OAIbS,EAAU,SAAArD,GACV,MAAO,CAAC,MAAMD,EAAKC,EAAM,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,OAAOD,EAAKC,EAAM,QAEhFsD,EAAY,SAAAtD,GACZ,MAAO,CAACD,EAAKC,EAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAMD,EAAKC,EAAM,KAAK,QAEhFuD,EAAW,SAAAvD,GACX,MAAO,CAAC,MAAMD,EAAKC,EAAM,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,OAAOD,EAAKC,EAAM,QAEhFwD,EAAa,SAAAxD,GACb,MAAO,CAACD,EAAKC,EAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAMD,EAAKC,EAAM,KAAK,QAEhFyD,EAAW,SAAAzD,GACX,MAAO,CAAC,MAAMD,EAAKC,EAAM,KAAK,MAAM,OAAO,MAAM,OAAO,MAAM,OAAOD,EAAKC,EAAM,QAEhF0D,EAAa,SAAA1D,GACb,MAAO,CAACD,EAAKC,EAAM,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAMD,EAAKC,EAAM,KAAK,QAkIpF,OAtHG2C,EAAS,GAAGA,EAAS,GAAG9B,EAAQS,IAAIsB,EAG3Bb,EAFLc,EAhFU,IAiFNhC,EAAQQ,GAjFF,IAiFgBR,EAAQU,EACvB,CAACxB,EAAK6C,EAAW,EAAE,MAAM,OAAO7C,EAAK6C,EAAW,EAAE,MAEpD/B,EAAQQ,IAAIrE,GApFX,IAoFqB6D,EAAQU,EAC5B,CAAC,QAEHV,EAAQQ,IAAIrE,GAAU6D,EAAQU,IAAIvE,EAChC,CAAC+C,EAAK6C,EAAW,EAAE,KAAK,OAAO7C,EAAK6C,EAAW,EAAE,OAEhDI,EAEPF,EA5FK,IA6FNjC,EAAQQ,GA7FF,IA6FgBR,EAAQU,EACvB,CAAC,QAEHV,EAAQQ,IAAIrE,GAhGX,IAgGqB6D,EAAQU,EAC5B,CAACxB,EAAK6C,EAAW,EAAE,KAAK,OAAO7C,EAAK6C,EAAW,EAAE,OAEhDK,EAEPF,EACDlC,EAAQQ,IAAIrE,GAtGN,IAsGgB6D,EAAQU,EACvB2B,EAGAC,EAIJC,EAIPP,EAlHU,IAmHNhC,EAAQQ,GAAcR,EAAQU,IAAIvE,EAE7B+E,EADDlB,EAAQS,GAAGsB,EACJU,EAAUX,EAAS9B,EAAQS,GAG3B+B,EAAQxC,EAAQS,EAAE,GAGxBT,EAAQQ,IAAIrE,GAAU6D,EAAQU,IAAIvE,EAElC+E,EADDlB,EAAQS,IAAIR,EAAOQ,EA/GvB,CAAC,MAAM,OAAO,MAAM,OAAO,OAmHnBT,EAAQS,GAAGsB,EACJS,EAAQV,EAAS9B,EAAQS,GAGzBgC,EAAUzC,EAAQS,EAAE,GApI7B,IAwIDT,EAAQQ,GAxIP,IAwIqBR,EAAQU,EAClCQ,EAAM3D,KAAK,OAAO,QAGlB2D,EAAM3D,KAAK,QAGX0E,EACDjC,EAAQQ,IAAIrE,GAAU6D,EAAQU,IAAIvE,EAEzB+E,EADLlB,EAAQS,GAAGsB,EACAY,EAAWb,EAAS9B,EAAQS,GAG5BiC,EAAS1C,EAAQS,EAAE,GAG7BT,EAAQQ,IAAIrE,GAxJX,IAwJqB6D,EAAQU,EAE9BQ,EADDlB,EAAQS,IAAIR,EAAOQ,EA3ItB,CAAC,MAAM,OAAO,MAAM,OAAO,OA+IpBT,EAAQS,GAAGsB,EACJW,EAASZ,EAAS9B,EAAQS,GAG1BkC,EAAW3C,EAAQS,EAAE,GAKnCS,EAAM3D,KAAK,QAGX2E,EACDlC,EAAQQ,IAAIrE,GA1KN,IA0KgB6D,EAAQU,EAErBQ,EADLlB,EAAQS,IAAKtE,EAAS,EACX0G,EAAWf,EAAS9B,EAAQS,GAG5BmC,EAAS5C,EAAQS,EAAE,GA/K5B,IAkLDT,EAAQQ,GAlLP,IAkLqBR,EAAQU,IAE9BQ,EADDlB,EAAQS,IAAIR,EAAOQ,EApKtB,CAAC,MAAM,OAAO,MAAM,OAAO,OAwKpBT,EAAQS,IAAKtE,EAAS,EACfyG,EAASd,EAAS9B,EAAQS,GAG1BoC,EAAW7C,EAAQS,EAAE,IAMvCS,EA1HG,CACHhC,EAFYC,EA2HQa,EAAQS,EAAE,EAzHnB,MAAM,OAAOvB,EAAKC,EAAM,KAAM,OACzCD,EAAKC,EAAM,MAAM,OAAOD,EAAKC,EAAM,MAAM,OACzCD,EAAKC,EAAM,KAAM,OAAOD,EAAKC,EAAM,MAAM,OAAO,OAChDD,EAAKC,EAAM,MAAM,QA0HlB+B,EAAMC,KAAK,O,2ZCtGP2B,EA/FA,SAAAC,GACb,IAAMC,EAAW,GAEjB,SAASC,IACPC,YAAW,WACTC,OAAOC,SAASC,WACf,IAEL,IAAK,IAAI/F,EAAI,EAAGA,GAAK,GAAIA,IACvB0F,EAASzF,KACP,kBAAC+F,EAAA,EAASC,KAAV,CAAeC,IAAKlG,EAAGmG,KAAI,6BAAwBnG,GAAKoG,QAAST,GAAa3F,EAA9E,MAAoFA,IAGxF,OACE,yBAAKqG,UAAU,gCACb,wBAAIA,UAAU,6BACZ,wBAAIA,UAAU,6BACZ,uBAAGA,UAAU,eAAeC,MAAO,CAAEC,MAAO,cAAe,2BAAId,EAAMe,QAGrE,yBAAKH,UAAU,oBACb,kBAACI,EAAA,EAAD,CAAgBJ,UAAU,WAAWK,aAAW,WAAWC,GAAG,WAAWH,MAAO,uBAAGH,UAAU,eAC3F,4BAEE,wBAAIA,UAAU,wBACZ,yBAAKA,UAAU,mBACX,2BAAOO,KAAK,WAAWC,cAAY,SAAST,QAAS,kBAAMX,EAAMqB,eAAe,wBAFtF,cAOA,wBAAIT,UAAU,uBAAuBD,QAAS,kBAAMX,EAAMqB,eAAe,kBAGvE,yBAAKT,UAAU,mBACX,2BAAOO,KAAK,WAAWG,gBAAc,EAACF,cAAY,SAAST,QAAS,kBAAMX,EAAMqB,eAAe,oBAJrG,iBAcN,yBAAKT,UAAU,iBACb,kBAACI,EAAA,EAAD,CAAgBD,MAAM,QAAQH,UAAU,SACrCX,MAKT,yBAAKY,MAAO,CAAEU,MAAO,QAASC,OAAQ,SACpC,kBAAC,IAAD,CAAOC,QAAS,4BAAQP,GAAG,WAAX,UACb,SAAAQ,GAAK,OACJ,yBAAKb,MAAO,CAAEc,OAAQ,MAAOC,MAAO,OAAQJ,OAAQ,SAClD,yBAAKZ,UAAU,kBAAkBC,MAAO,CAAEgB,gBAAiB,QAASF,OAAQ,OAAShB,QAASe,IAC9F,yBAAKb,MAAO,CAAEc,OAAQ,MAAOC,MAAO,cAAeE,OAAQ,OAAQC,UAAW,mBAAoBC,QAAS,OAASpB,UAAU,YAC5H,uBAAGC,MAAO,CAAEoB,SAAU,SAAtB,gBACA,yBAAKrB,UAAU,QAAQM,GAAG,WAAWP,QAASe,GAA9C,QAGA,yBAAKb,MAAO,CAAEgB,gBAAiB,iBAAkBL,OAAQ,OAAQU,UAAW,IAAKpB,MAAO,YAAamB,SAAU,OAAQE,UAAW,SAAUC,aAAc,SAAUJ,QAAS,QAC3K,yBAAKnB,MAAO,CAAEwB,WAAY,KAA1B,sDACA,wBAAIxB,MAAO,CAAEgB,gBAAiB,YAAaD,MAAO,SAClD,mFAAwD,6BAAxD,sCACA,6BACE,yBAAKf,MAAO,CAAEe,MAAO,OAAQO,UAAW,WACtC,uBAAGtB,MAAO,CAAEC,MAAO,QAASe,gBAAiB,UAA7C,QAAgE,uBAAGhB,MAAO,CAAEC,MAAO,QAASe,gBAAiB,UAA7C,MAChE,uBAAGhB,MAAO,CAAEC,MAAO,OAAQe,gBAAiB,UAA5C,QAA+D,uBAAGhB,MAAO,CAAEC,MAAO,OAAQe,gBAAiB,UAA5C,MAC/D,uBAAGhB,MAAO,CAAEC,MAAO,MAAOe,gBAAiB,UAA3C,QAA8D,uBAAGhB,MAAO,CAAEC,MAAO,MAAOe,gBAAiB,UAA3C,MAC9D,uBAAGhB,MAAO,CAAEC,MAAO,SAAUe,gBAAiB,UAA9C,QAAiE,uBAAGhB,MAAO,CAAEC,MAAO,SAAUe,gBAAiB,UAA9C,MACjE,uBAAGhB,MAAO,CAAEC,MAAO,SAAUe,gBAAiB,UAA9C,QAAiE,uBAAGhB,MAAO,CAAEC,MAAO,SAAUe,gBAAiB,UAA9C,MACjE,uBAAGhB,MAAO,CAAEC,MAAO,QAASe,gBAAiB,UAA7C,QAAgE,uBAAGhB,MAAO,CAAEC,MAAO,QAASe,gBAAiB,UAA7C,MAChE,uBAAGhB,MAAO,CAAEe,MAAO,OAAQO,UAAW,WAAtC,+DAGJ,wBAAItB,MAAO,CAAEgB,gBAAiB,YAAaD,MAAO,SAClD,yBAAKf,MAAO,IACZ,yBAAKA,MAAO,CAAEyB,aAAc,IAAKC,cAAe,KAAhD,wBAA2E,6BAA3E,IAAqF,uBAAGC,OAAO,IAAI9B,KAAK,iCAAgC,uBAAGE,UAAU,eAAeC,MAAO,CAAEoB,SAAU,OAAQQ,YAAa,WAAkB,uBAAGD,OAAO,IAAI9B,KAAK,gEAA+D,uBAAGE,UAAU,iBAAiBC,MAAO,CAAEoB,SAAU,YACjW,wBAAIpB,MAAO,CAAEgB,gBAAiB,eAC9B,yBAAKhB,MAAO,CAAEC,MAAO,QAASe,gBAAiB,GAAIM,UAAW,WAA9D,qDA7BZ,IAqCY,IACV,4BAAQjB,GAAG,gBAAgBwB,MAAM,QAAjC,iB,yBC3FF7B,EAAQ,CAAEe,MAAO,MAAOe,SAAU,QAASC,IAAK,OAAQC,KAAM,OAAOZ,SAAS,QA2BrEa,EAzBA,SAAA9C,GAAK,OAEhB,yBAAKY,UAAU,YAAYC,MAASA,GAE/Bb,EAAM+C,WACP,kBAAC,IAAD,CACIC,aAAc,GACdN,MAAO1C,EAAMiD,MACb/E,IAAK8B,EAAMiD,MAAOhF,IAAK+B,EAAMiD,MAC7BC,KAAM,KAGV,kBAAC,IAAD,CACIF,aAAc,GACdN,MAAO1C,EAAMiD,MACb/E,IAAK,EAAGD,IAAK,GACbiF,KAAM,GACNC,SAAUnD,EAAMoD,mB,kBCUbC,EA/BG,SAACrD,GAQf,OACI,yBAAKa,MAAO,CAAC8B,SAAU,WAAYhB,OAAQ,OACvC,kBAAC,IAAD,CACI2B,OAAO,UACPC,gBAAiB,CAAC9F,EAA2B,EAAIC,EAAG,KACpDiF,SAAU,KACVa,KAAM,CAAC,GAAI,IACXC,MAAO,EACPC,QAAS1D,EAAM2D,YACfC,OAAQ5D,EAAM6D,WACdC,OAAQ9D,EAAM+D,YACd,6BACI,yBAAKnD,UAAU,SAASC,MAAO,CAACC,MAAM,SAAtC,kBACA,6BACI,2BAAOkD,YAAY,kBAAkB9C,GAAG,YAAY+C,UArBnD,SAACC,GACP,UAARA,EAAEzD,KACDT,EAAMmE,UAAUC,SAASC,eAAe,aAAa3B,MAAM,UAE/DwB,EAAEI,mBAiB2FzD,MAAO,CAACuB,aAAc,MAAON,OAAQ,MAAMyC,OAAQ,sBAAsB3C,MAAM,WAC5J,4BAAQV,GAAG,aAAaP,QAAS,kBAAMX,EAAMmE,UAAUC,SAASC,eAAe,aAAa3B,MAAM,YAAlG,cCZT8B,G,OAXI,SAACxE,GAAD,OACf,yBAAKY,UAAYR,OAAOqE,WAAa,KAAKrE,OAAOsE,YAAY,IAAK,iBAAiB,cAC/E,yBAAK9D,UAAU,oBAAf,gBACiB,yBAAKA,UAAU,aAAaZ,EAAM2E,kBAEnD,yBAAK/D,UAAU,oBAAf,iBACkB,yBAAKA,UAAU,aAAaZ,EAAM4E,mBCE7CC,G,OARS,SAAC7E,GAAD,OACpB,yBAAKY,UAAYR,OAAOqE,WAAa,KAAKrE,OAAOsE,YAAY,IAAK,iBAAiB,cAC/E,yBAAK9D,UAAU,oBAAf,kBACmB,yBAAKA,UAAU,YAAYC,MAAO,CAACgB,gBAAgB7B,EAAM8E,mBCFhFC,G,qBAAc,IACdC,EAAc,GACdC,EAAa,GACbC,EAAW,GACXC,EAAU,GACV1E,EAAI,EAER,SAAS2E,EAAcC,GACnB,OAAOA,GACH,IAAK,IACD,MAAO,CACHC,IAAK,QACLxE,MAAO,SAEf,IAAK,IACD,MAAO,CACHwE,IAAK,OACLxE,MAAO,SAEf,IAAK,IACD,MAAO,CACHwE,IAAK,MACLxE,MAAO,SAEf,IAAK,IACD,MAAO,CACHwE,IAAK,SACLxE,MAAO,SAEf,IAAK,IACD,MAAO,CACHwE,IAAK,SACLxE,MAAO,SAEf,IAAK,IACD,MAAO,CACHwE,IAAK,QACLxE,MAAO,UAQvB,IAkJeyE,EAlJE,SAAAvF,GAOb,OANA+E,EAAc,GACdC,EAAc,GACdC,EAAa,GACbC,EAAW,GACXC,EAAU,GAGN,yBAAKjE,GAAG,eAEAlB,EAAMwF,KAAK,EACX,yBAAK5E,UAAU,cAAcC,MAAO,CAAC4B,YAAa,QAC9C,yBAAK7B,UAAU,sBAEXZ,EAAMyF,iBAAiBC,OAAOC,SAAQ,SAAAC,GAClCb,EAAcvK,KACV,yBAAKoG,UAAU,UACPH,IAAKA,EACLoF,YAAa,kBAAM7F,EAAM8F,cAAcF,EAAQG,UAAUC,KAAKJ,EAAQG,UAAUE,OAChFpF,MAAO,CAAC8B,SAAS,WAAYE,KAAM,MAAMhB,gBAAiB,UAAUD,MAAM,QAC1EsE,aAAc,SAAChC,GAAD,OAAKlE,EAAMmG,WAAWP,EAAQG,UAAUC,KAAKJ,EAAQG,UAAUE,KAAK/B,IAClFkC,aAAc,kBAAIpG,EAAMqG,eAG3BT,EAAQG,UAAUC,OAG3BvF,GAAK,EACLsE,EAAcvK,KACV,yBAAKoG,UAAU,UACPH,IAAKA,EACLoF,YAAa,kBAAM7F,EAAM8F,cAAcF,EAAQlJ,QAAQsJ,KAAKJ,EAAQlJ,QAAQuJ,OAC5EpF,MAAO,CAAC8B,SAAS,WAAYE,KAAM,MAAMhB,gBAAiB,UAAUD,MAAM,QAC1EsE,aAAc,kBAAIlG,EAAMmG,WAAWP,EAAQlJ,QAAQsJ,KAAKJ,EAAQlJ,QAAQuJ,OACxEG,aAAc,kBAAIpG,EAAMqG,eAE3BT,EAAQlJ,QAAQsJ,OAGzBvF,GAAK,KAGZsE,IAEI,GAEb,yBAAKnE,UAAU,mBAAmBC,MAAO,CAAC4B,YAAa,QAE/CzC,EAAMyF,iBAAiBa,OAAOX,SAAQ,SAAAC,GAClC,IAAIW,EAASnB,EAAcQ,EAAQlJ,QAAQ2I,MACf,MAAzBO,EAAQlJ,QAAQ2I,MAAcL,EAAcxK,KAAK,GAAG,IACvD,IAAIgM,EAAaxB,EAAc5K,OAAO,EAClCqM,EAAczB,EAAc5K,OAAO,EACvC4K,EAAcwB,GAAYhM,KACtB,yBAAKoG,UAAU,UACPH,IAAKA,EACLoF,YAAa,kBAAM7F,EAAM8F,cAAcF,EAAQlJ,QAAQsJ,KAAKJ,EAAQlJ,QAAQuJ,OAC5EpF,MAAO,CAAC8B,SAAS,WAAYE,KAAM,MAAMhB,gBAAiB0E,EAAOjB,IAAIxE,MAAOyF,EAAOzF,MAAMc,MAAM,QAC/FsE,aAAc,kBAAIlG,EAAMmG,WAAWP,EAAQlJ,QAAQsJ,KAAKJ,EAAQlJ,QAAQuJ,OACxEG,aAAc,kBAAIpG,EAAMqG,eAE3BT,EAAQlJ,QAAQsJ,OAGzBvF,GAAK,EACLuE,EAAcyB,GAAajM,KACvB,yBAAKoG,UAAU,UACXH,IAAKA,EACLoF,YAAa,kBAAM7F,EAAM8F,cAAcF,EAAQG,UAAUC,KAAKJ,EAAQG,UAAUE,OAChFpF,MAAO,CAAC8B,SAAS,WAAYE,KAAM,MAAMhB,gBAAiB0E,EAAOjB,IAAIxE,MAAOyF,EAAOzF,MAAMc,MAAM,QAC/FsE,aAAc,kBAAIlG,EAAMmG,WAAWP,EAAQG,UAAUC,KAAKJ,EAAQG,UAAUE,OAC5EG,aAAc,kBAAIpG,EAAMqG,eAEvBT,EAAQG,UAAUC,OAG3BvF,GAAK,KAKTuE,EAAcW,SAAQ,SAAAC,GAClBnF,GAAK,EACLyE,EAAW1K,KACP,yBAAKiG,IAAKA,EAAKG,UAAU,sBACpBgF,OAMbV,GAGR,yBAAKtE,UAAU,mBAEPZ,EAAMyF,iBAAiBiB,MAAMf,SAAQ,SAAAC,GACjC,IAAIW,EAASnB,EAAcQ,EAAQlJ,QAAQ2I,MACf,MAAzBO,EAAQlJ,QAAQ2I,MAAcJ,EAAazK,KAAK,GAAG,IACtD,IAAIgM,EAAavB,EAAa7K,OAAO,EACjCqM,EAAcxB,EAAa7K,OAAO,EACtC6K,EAAauB,GAAYhM,KACrB,yBAAKoG,UAAU,UACXH,IAAKA,EACLoF,YAAa,kBAAM7F,EAAM8F,cAAcF,EAAQlJ,QAAQsJ,KAAKJ,EAAQlJ,QAAQuJ,OAC5EpF,MAAO,CAAC8B,SAAS,WAAYE,KAAM,MAAMhB,gBAAiB0E,EAAOjB,IAAIxE,MAAOyF,EAAOzF,MAAMc,MAAM,QAC/FsE,aAAc,kBAAIlG,EAAMmG,WAAWP,EAAQlJ,QAAQsJ,KAAKJ,EAAQlJ,QAAQuJ,OACxEG,aAAc,kBAAIpG,EAAMqG,eAEvBT,EAAQlJ,QAAQsJ,OAGzBvF,GAAK,EACLwE,EAAawB,GAAajM,KACtB,yBAAKoG,UAAU,UACXH,IAAKA,EACLoF,YAAa,kBAAM7F,EAAM8F,cAAcF,EAAQG,UAAUC,KAAKJ,EAAQG,UAAUE,OAChFpF,MAAO,CAAC8B,SAAS,WAAYE,KAAM,MAAMhB,gBAAiB0E,EAAOjB,IAAIxE,MAAOyF,EAAOzF,MAAMc,MAAM,QAC/FsE,aAAc,kBAAIlG,EAAMmG,WAAWP,EAAQG,UAAUC,KAAKJ,EAAQG,UAAUE,OAC5EG,aAAc,kBAAIpG,EAAMqG,eAEvBT,EAAQG,UAAUC,OAG3BvF,GAAK,KAKTwE,EAAaU,SAAQ,SAAAC,GACjBnF,GAAK,EACL0E,EAAU3K,KACN,yBAAKiG,IAAKA,EAAKG,UAAU,qBACpBgF,OAMbT,K,kBC1LdwB,G,OAAQ,yFAKRC,EAAW,sCAOXC,EAAmBC,GAAiB,gCACpCC,EAAOD,GAAiB,4CAA4CE,MAAM,KAAK5I,KAAK,KACpF6I,EAAqBH,GAAiB,4CAA4CE,MAAM,KAAK5I,KAAK,KAClG8I,EAAkBJ,GAAiB,yCAAyCE,MAAM,KAAK5I,KAAK,KAC5F+I,EAAUL,GAAiB,0DAA0DE,MAAM,KAAK5I,KAAK,KACrGgJ,EAAUN,GAAiB,qCAAqCE,MAAM,KAAK5I,KAAK,KAChFiJ,EAASP,GAAiB,2CAA2CE,MAAM,KAAK5I,KAAK,KACrFkJ,EAAcR,GAAiB,gCAAgCE,MAAM,KAAK5I,KAAK,KAC/EmJ,EAAYT,GAAiB,+BAA+BE,MAAM,KAAK5I,KAAK,KAC5EoJ,EAAgBV,GAAiB,kDAAkDE,MAAM,KAAK5I,KAAK,KACnGqJ,EAAUX,GAAiB,0DAA0DE,MAAM,KAAK5I,KAAK,KACrGsJ,EAAYZ,GAAiB,sDAAsDE,MAAM,KAAK5I,KAAK,KACnGuJ,EAAab,GAAiB,yDAAyDE,MAAM,KAAK5I,KAAK,KACvGwJ,EAAoBd,GAAiB,2CAA2CE,MAAM,KAAK5I,KAAK,KAChGyJ,GAAWf,GAAiB,uCAAuCE,MAAM,KAAK5I,KAAK,KACnF0J,GAAYhB,GAAiB,qDAAqDE,MAAM,KAAK5I,KAAK,KAClG2J,GAAgBjB,GAAiB,+CAA+CE,MAAM,KAAK5I,KAAK,KAChG4J,GAAYlB,GAAiB,gCAAgCE,MAAM,KAAK5I,KAAK,KAC7E6J,GAAUnB,GAAiB,8BAA8BE,MAAM,KAAK5I,KAAK,KACzE8J,GAAYpB,GAAiB,oBAAoBE,MAAM,KAAK5I,KAAK,KACjE+J,GAASrB,GAAiB,+CAA+CE,MAAM,KAAK5I,KAAK,KAE/F,SAAS0I,GAAiBsB,GACtB,OAAOA,EACFpB,MAAM,IACNqB,KAAI,SAACC,EAAK/N,GAAN,MACO,MAAP+N,GAAmB,MAAPA,EACT,MAAMA,EACC,MAAPA,EACA,MAAMF,EAAQ7N,EAAE,GAChB+N,KAEPlK,KAAK,IACLmK,OAGT,IAAIC,GAAS,SAACxC,EAAK1K,EAAQmN,EAASC,GAChC,IAAIC,EAAO,GACXA,EAAKnO,KACD,CACIwL,KAAOA,EACP7H,MAAQ7C,EACRsN,SAAU,KAGlB,IAAK,IAAIrO,EAAIkO,EAAUlO,GAAKmO,EAAWnO,IAC/BoO,EAAK,GAAGC,SAASpO,KAAKD,GAE9B,OAAOoO,GAYPE,GAAoB,SAAC7C,EAAK1K,EAAQwN,GAElC,IADA,IAAIH,EAAO,GACFpO,EAAI,EAAGA,GA5EF,GA4EkBA,IAAI,CAChC,IAAIwO,EAAW/C,EACH,YAATA,KACC+C,EAASA,EAAS/B,MAAM,KACfgC,MACTD,EAASvO,KAAKD,GACdwO,EAASA,EAAS3K,KAAK,KAE3BuK,EAAKnO,KACD,CACIwL,KAAO+C,EACP5K,MAAQ8K,GAAiB1O,EAAEe,EAAQwN,GACnCF,SAAU,CAACrO,KAIhBA,GAAG,GACFoO,EAAKnO,KAAK,CACNwL,KAAO+C,EAAS,aAChB5K,MAAQ+K,GAAiB3O,EAAEe,GAC3BsN,SAAU,CAACrO,KAIvB,OAAOoO,GAGPM,GAAmB,SAACzD,EAAKlK,EAAQwN,GAEjC,IADA,IAAMK,EAAY,GACV5O,EAAI,EAAGA,GAAG+C,KAAKC,MAAMiI,EAAK,GAAIjL,IAC/BuO,GAAYvO,EAAE,EAAG4O,EAAU3O,KAAK4O,GAAU7O,EAAEuO,IAC1CK,EAAU3O,KAAK4O,GAAU7O,EAAEe,IAEpC,OAAO6N,EAAU/K,KAAK,MAGtBgL,GAAY,SAAChN,EAAMd,GACnB,IAAM6C,EAAQ,GAKd,OAJI/B,EAAM,EACNd,EAAQ0L,MAAM,KAAKrB,SAAQ,SAAAzB,GAAC,OAAE/F,EAAM3D,KAAK2B,GAAKC,EAAM8H,EAAEmF,UAAU,GAAGC,mBAElEhO,EAAQ0L,MAAM,KAAKrB,SAAQ,SAAAzB,GAAC,OAAE/F,EAAM3D,KAAK2B,GAAKC,EAAM8H,EAAEmF,UAAU,GAAGE,mBACjEpL,EAAMC,KAAK,MAGlB8K,GAAmB,SAAC1D,EAAKlK,GAEzB,IADA,IAAM6N,EAAY,GACV5O,EAAI,EAAGA,GAAG+C,KAAKC,MAAMiI,EAAK,GAAIjL,IAClC4O,EAAU3O,KAAKgP,GAAUjP,EAAEe,IAE/B,OAAO6N,EAAU/K,KAAK,MAGtBoL,GAAY,SAACpN,EAAMd,GACnB,IAAM6C,EAAQ,GAEd,OADA7C,EAAQ0L,MAAM,KAAKrB,SAAQ,SAAAzB,GAAC,OAAE/F,EAAM3D,KAAK2B,GAAKC,EAAM8H,EAAEmF,UAAU,GAAGE,mBAC5DpL,EAAMC,KAAK,MAGtB,SAASjC,GAAKC,EAAMC,GAChB,OAASD,EAAM,GAAI,IAAI,IAAMA,EAAQC,EAGzC,IAoCeoN,GApCD,CA1EI,SAACzD,GAEf,IADA,IAAI0D,EAAY,GACRnP,EAAI,EAAGA,GAnED,GAmEcA,IAAKmP,EAAUlP,KAAKD,GAChD,MAAO,CACHyL,KAAOA,EACP4C,SAAUc,GAsEdC,CAAY,kBADF,mBAEPd,GAAkB,WAxIR,mEAsIH,YAGPA,GAAkB,QAAQlC,IAHnB,YAIP6B,GAAO,UApIC,+EAoIgB,EAAE,IAJnB,YAKPK,GAAkB,UAxIV,4FAmID,YAMPL,GAAO,kBAvIQ,0NAuIwB,EAAE,IANlC,YAOPK,GAAkB,eA/IJ,oDAwIP,YAQPA,GAAkB,gBA/IH,wIAuIR,YASPA,GAAkB,uBAAuBhC,IATlC,YAUPgC,GAAkB,iBAAiBd,KAV5B,YAWPc,GAAkB,kBAAkBrB,IAX7B,YAYPqB,GAAkB,sBAAsBjB,IAZjC,YAaPiB,GAAkB,eAAevB,IAb1B,YAcPuB,GAAkB,WAAW1B,IAdtB,YAeP0B,GAAkB,sBAAsB5B,IAfjC,YAgBP4B,GAAkB,WAAWhB,KAhBtB,YAiBPgB,GAAkB,SAtJV,0EAqID,YAkBPL,GAAO,QApJA,2VAoJc,EAAE,IAlBhB,YAmBPK,GAAkB,YAAYjC,IAnBvB,YAoBPiC,GAAkB,oBAAoBjC,EAASD,IApBxC,YAqBPkC,GAAkB,cAAcb,KArBzB,YAsBPQ,GAAO,aAAaN,GAAU,EAAE,IAtBzB,YAuBPW,GAAkB,SAASxB,IAvBpB,YAwBPwB,GAAkB,YAAYnB,IAxBvB,YAyBPmB,GAAkB,aAAaf,KAzBxB,YA0BPe,GAAkB,UAAUzB,IA1BrB,YA2BPyB,GAAkB,aAAatB,IA3BxB,YA4BPsB,GAAkB,mBAAmB3B,IA5B9B,YA6BP2B,GAAkB,UAAUpB,IA7BrB,YA8BPoB,GAAkB,SAASV,KA9BpB,YA+BPK,GAAO,OAAOzB,EAAK,EAAE,IA/Bd,YAgCP8B,GAAkB,cAAclB,IAhCzB,YAiCPkB,GAAkB,WAAWZ,M,gRC7GrB2B,OAlDf,SAA0BC,EAAeC,EAAoB3M,GAEzD,IAAI1B,EAAMoO,EACNE,EAAYzM,KAAKC,MAAOJ,IAAS1B,EAAI,IAAIA,EAAI,KAG7CwB,EAAU,CACVQ,EAAEqM,EAAoB,GACtBpM,EAAEoM,EAAoB,GACtBnM,EAAEmM,EAAoB,IAEtB5M,EAAS,CACTO,EAAEqM,EAAoB,GACtBpM,EAAEoM,EAAoB,IACtBnM,EAAEmM,EAAoB,KAyB1B,OAAG7M,EAAQQ,IAAIP,EAAOO,GAAKR,EAAQS,IAAIR,EAAOQ,GAAKT,EAAQU,IAAIT,EAAOS,EAtBtE,SAAeoM,GACX,OAAOA,GACH,KAAK,EAED,OAAOC,KAAY/M,EAAQC,EAAOzB,EAAI0B,GAC1C,KAAK,EAED,OAAO8M,KAAahN,EAAQC,EAAOzB,EAAI0B,GAC3C,KAAK,EAED,OAAO+M,KAAWjN,EAAQC,EAAOzB,GACrC,KAAK,EAED,OAAO0O,KAAalN,EAAQC,EAAOzB,GACvC,KAAK,EAED,OAAO2O,KAAYnN,EAAQC,EAAOzB,EAAI0B,GAC1C,QACIW,QAAQC,IAAI,4BASba,CAAMmL,GAGV,ICFIM,OAxDf,SAAsBxQ,EAAK4B,EAAI/B,EAAkByD,EAAMmN,GAGnD,GAAS,IAAN7O,EAAS,MAAO,CAACzB,WAAa,GAEjC,IAAMuQ,GAAmB9O,EAAI,IAAIA,EAAI,GAAI,EACnCoB,EAAM,GACRjD,EAAa,GAGjB,GAAS,IAAN6B,EAAQ,CACS,IAAf5B,EAAK,GAAG,IAA4B,IAAhBA,EAAK,IAAI,KAGd,IAAbA,EAAK,GAAG,GACK,IAAdA,EAAK,IAAI,GAASD,GAAY,OAASA,GAAY,OAEhC,IAAbC,EAAK,GAAG,GACA,IAAdA,EAAK,IAAI,GAASD,GAAY,OAASA,GAAY,OAEhC,IAAbC,EAAK,GAAG,GACA,IAAdA,EAAK,IAAI,GAASD,GAAY,MAAQA,GAAY,OAE/B,IAAbC,EAAK,GAAG,GACA,IAAdA,EAAK,IAAI,GAASD,GAAY,MAAQA,GAAY,OAE/B,IAAbC,EAAK,GAAG,GACA,IAAdA,EAAK,IAAI,GAASD,GAAY,OAASA,GAAY,OAEhDA,GAAY,QAGnB,IAAMyB,EAAY3B,EAAkBE,GACpCA,EAAW2O,OAAOnO,OAASyC,EAAIvB,QAAUD,EAAYwB,EAAI7C,WAAa,OAMtE,GAAGmD,EAAMoN,EAAgB,CAEvB,IAAMlP,EAAY3B,EADlBE,EAAagQ,GAAiBnO,EAAI5B,EAAKyQ,EAAQnN,IAAQA,IAEvDvD,EAAW2O,OAAOnO,OAASyC,EAAIvB,QAAUD,EAAYwB,EAAI2N,YAAcrN,EAAM,OAI7EN,EAAI7C,WAAa,GACjB6C,EAAI2N,YAAc,EAClB3N,EAAIE,YAAc,UAClBF,EAAIvB,QAAU,CAAC,QAInB,OAAOuB,G,+DCnDX,SAASR,GAAK7C,EAAasH,GACvB,OAAOtH,EAAaiR,QAAQ3J,GA0DjB4J,OAvDf,SAAwBb,EAAeC,EAAoB3M,EAAMtD,EAAKF,GAElE,IAAM8B,EAAMoO,EAENc,EAAalP,EAAI,EACjBmP,EAAUtN,KAAKC,MAAMJ,GAFH,EAEUwN,IAC5B3P,EAAYqB,GAAKyN,EAAoB,SACrCpL,EAAarC,GAAKyN,EAAoB,UACtC7N,EAAWI,GAAKyN,EAAoB,QACpC5N,EAAYG,GAAKyN,EAAoB,SAEvClQ,EAAa,GAGbqD,EAAU,CACVQ,EAAEqM,EAAoB,GACtBpM,EAAEoM,EAAoB,GACtBnM,EAAEmM,EAAoB,IAEtB5M,EAAS,CACTO,EAAEqM,EAAoB,GACtBpM,EAAEoM,EAAoB,IACtBnM,EAAEmM,EAAoB,KAG1B,GAAG7M,EAAQQ,IAAIP,EAAOO,GAAKR,EAAQS,IAAIR,EAAOQ,GAAKT,EAAQU,IAAIT,EAAOS,IAE/C,IAAd3C,GAAgC,IAAZ4P,GACL,IAAflM,GAAgC,IAAZkM,GACP,IAAb3O,GAAgC,IAAZ2O,GACN,IAAd1O,GAAgC,IAAZ0O,GAErB,MAAO,GAGf,OAAOA,GACH,KAAK,EAEDhR,EAAaiR,KAAW5N,EAAQC,EAAOzB,EAAIT,GAC3C,MACJ,KAAK,EAEDpB,EAAakR,KAAU7N,EAAQC,EAAOzB,EAAIiD,GAC1C,MACJ,KAAK,EAED9E,EAAamR,KAAY9N,EAAQC,EAAOzB,GACxC,MACJ,QACIqC,QAAQC,IAAI,2BAGpB,OAAOnE,GClCIoR,OAxBf,SAAoBnR,EAAK4B,EAAI/B,EAAkBC,EAAMwD,GACjD,IAGIvD,EAAa,GACXiD,EAAM,GAgBZ,OAdIM,EANiB,IACG1B,EAAI,IAMxB7B,EAAa8Q,GAAejP,EAAI5B,EAAKF,EAAMwD,IAAQA,EAAMtD,EAAKF,IACnD4O,OAAOnO,OAChByC,EAAIvB,QAAU5B,EAAkBE,GAChCiD,EAAI2N,YAAcrN,EAAM,GAI5BN,EAAI7C,WAAa,EACjB6C,EAAI2N,YAAc,EAClB3N,EAAIE,YAAc,UAClBF,EAAIvB,QAAU,CAAC,SAGVuB,GCbLoO,GACa,EADbA,GAEW,GAFXA,GAGiB,EAHjBA,GAImB,EAJnBA,GAKkB,EALlBA,GAMkB,EANlBA,GAOkB,EAPlBA,GAQoB,EARpBA,GASoB,EA4BXC,OAzBf,SAAgBlR,EAAWR,EAAaC,EAAcC,EAAkBiD,EAAW6N,EAAYF,EAAQ3Q,EAAM4B,GACzG,OAAOvB,GACH,KAAKiR,GACD,OAAOZ,GAAa7Q,EAAaC,EAAcC,EAAkB8Q,EAAYF,GACjF,KAAKW,GACD,OAAOD,GAAWxR,EAAaC,EAAcC,EAAkBC,EAAM6Q,GACzE,KAAKS,GACD,OAAOE,KAAgB3R,EAAaC,EAAcC,EAAkBC,GACxE,KAAKsR,GACD,OAAOG,KAAkB5R,EAAaC,EAAcC,EAAkB6B,GAC1E,KAAK0P,GACD,OAAOI,KAAiB7R,EAAaE,EAAkBC,EAAMF,GACjE,KAAKwR,GACD,OAAOK,KAAiB9R,EAAaE,EAAkBC,EAAMF,GACjE,KAAKwR,GACD,OAAOM,KAAiB/R,EAAaE,EAAkBC,EAAMF,GACjE,KAAKwR,GACD,OAAOO,KAAmBhS,EAAaC,EAAcC,EAAkB6B,GAC3E,KAAK0P,GACD,OAAOQ,KAAmBjS,EAAaC,EAAcC,EAAkBiD,EAAWpB,GACtF,QACIuC,QAAQC,IAAI,yB,QCxClBlE,GAAO,CAET6R,eAAiB,SAAUC,EAAGC,EAAGC,GAqB7B,IApBA,IAAMrG,EAAOqG,EACPC,EAAOxO,KAAKC,MAAMiI,EAAK,GACvBuG,EAAU,GACVzB,EAAU,GACV3Q,EAAQ,GACR4B,EAAU,GACVyQ,EAAc,CAClB,GACA,GACA,GACA,GACA,GACA,IAEIC,EAAY,CAChB,CAAC,GAAG,GAAG,GAAG,IACV,CAAC,GAAG,GAAG,GAAG,IACV,CAAC,GAAG,GAAG,GAAG,KAGJ7Q,EAAI,EAAGA,EAAIwQ,EAAIxQ,IACrB,IAAI,IAAI8Q,EAAIL,EAAG,EAAGK,GAAK,EAAGA,IACxB,IAAI,IAAI3R,EAAI,EAAGA,EAAIoR,EAAIpR,IAAI,CACzB,IAAI4R,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAW,KACXC,EAAa,KACdnS,IAAIoR,EAAG,EAAGU,EAAQ,MACR,IAAJ9R,IAAOgS,EAAO,UACpBnR,IAAIwQ,EAAG,EAAGU,EAAQ,SACR,IAAJlR,IAAO+Q,EAAO,SACpBD,IAAIL,EAAG,EAAGO,EAAQ,OACR,IAAJF,IAAOM,EAAO,SACvB,IAAIG,EAAY,EACT,IAAJvR,GAASA,IAAMwQ,EAAG,GAAGe,IACjB,IAAJT,GAASA,IAAML,EAAG,GAAGc,IACjB,IAAJpS,GAASA,IAAMoR,EAAG,GAAGgB,IACxB,IAAIC,EAAW,OAEA,IAAZD,GACDC,EAAW,SACRpH,EAAK,IACFpK,IAAI0Q,GAAMI,IAAIJ,GACd1Q,IAAI0Q,GAAMvR,IAAIuR,GACdvR,IAAIuR,GAAMI,IAAIJ,KAChBY,EAAW,UAGR,IAAJtR,IAAQ4Q,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAC7EgB,IAAIwQ,EAAG,IAAII,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAChF8R,IAAIL,EAAG,IAAIG,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAC5E,IAAJG,IAAQyR,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GACzE,IAAJ8R,IAAQF,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAC7EG,IAAIoR,EAAG,IAAIK,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,IAGjE,IAAZuS,GAENC,EAAW,OACF,IAANxR,EACE8Q,IAAIL,EAAG,GACLF,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvBG,IAAIoR,EAAG,GACVA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GACHP,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJG,IACHoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvBgB,IAAMwQ,EAAG,EACdM,IAAIL,EAAG,GACLF,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvBG,IAAIoR,EAAG,GACVA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GACHP,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJG,IACHoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAG5B8R,IAAIL,EAAG,GAAS,IAAJtR,GACVoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvB8R,IAAIL,EAAG,GAAKtR,IAAIoR,EAAG,GACtBA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GAAS3R,IAAIoR,EAAG,GACnBA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GAAa,IAAJ3R,IACZoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,UAIf,IAAZuS,IACNC,EAAW,SACXrR,EAAQf,KAAKuR,EAAQ3R,SAGvB2R,EAAQvR,KAAK,CAAC2R,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAC9BjS,EAAEa,EAAE8Q,EACJ3R,EAAEa,EAAE8Q,EACJU,EACAH,EACAC,IAcjBlH,GAAQ,GAAG,WAGZ,IAFA,IAAIqH,EAAmBrH,EAAK,EAAE,EADnB,WAGH0G,GAMN,IALA,IAAIY,EAAgB,GAChBC,EAAoB,GACpBC,EAAc,EAGVzS,EAAI,EAAGA,EAAKuR,EAAK,EAAIvR,IAC3BwS,EAAkBvS,KAAK,IAIzBuS,EAAkBpH,SAAQ,SAACsH,EAAM9P,GAE/B,IAAI,IAAI5C,EAAI,EAAGA,GAAIsS,EAAkBtS,IACnC,IAAK,IAAIa,EAAI,EAAGA,GAAIyR,EAAkBzR,KAChCb,IAAI4C,GAAO0P,EAAiBtS,IAAI4C,IACjC/B,GAAG+B,GAAO/B,GAAGyR,EAAiB1P,EAG7B/B,IAAI,EAAE+B,GAAO/B,IAAIyR,EAAiB1P,KAChC/B,EAAEkC,KAAK4P,KAAKL,EAAiB,GAAG,GACjCzR,EAAEkC,KAAK4P,KAAKL,EAAiB,IAAIrH,EAAK,EAAE,EAAE,IAE7CyH,EAAMzS,KAAKwR,EAAYE,GAAGc,IAD1BF,EAActS,KAAKwR,EAAYE,GAAGc,KAG3BzS,EAAE4C,GAAO0P,EAAiBtS,EAAE4C,IAClC/B,IAAI+B,GAAO/B,IAAIyR,EAAiB1P,IAK3BA,IAAQ2O,EAAK,GAAGvR,IAAIa,GAAGb,IAAIsS,EAAiB,IAFlDI,EAAMzS,KAAKwR,EAAYE,GAAGc,IAM5BA,GAAa,EAGjBA,EAAY,KAEd,IAAI1S,EAAOyS,EAAkBA,EAAkB3S,OAAO,GACtD2S,EAAkBA,EAAkB3S,OAAO,GAAG0S,EAC9CC,EAAkBvS,KAAKF,GACvByS,EAAkBI,UAElBnB,EAAYE,GAAKa,EAAkBK,KAAK,IA7ClClB,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAAnBA,GAHI,GAqDd,IAAI,IAAI3R,EAAI,EAAGA,EAAI,EAAGA,IACpB,IAAI,IAAIa,EAAI,EAAGA,GAAKuQ,EAAG,IAAIA,EAAG,GAAIvQ,IAChCkP,EAAQ9P,KAAKwR,EAAYzR,GAAGa,IAIhC,IAAI,IAAIb,EAAI,EAAGA,EAAI,EAAGA,IACpB,IAAI,IAAIa,EAAI,EAAGA,EAAI,EAAGA,IACpBzB,EAAMa,KAAN,MAAAb,EAAK,YAASsS,EAAU1R,GAAGa,KAG/B,MAAO,CAAC2Q,UAAQzB,UAAQ3Q,QAAM4B,YAGlC8R,cAAgB,SAAU1B,EAAGC,EAAGC,GAqB9B,IApBA,IAAMrG,EAAOmG,EACPG,EAAOxO,KAAKC,MAAMiI,EAAK,GACvBuG,EAAU,GAGVxQ,EAAU,GACVyQ,EAAc,CAClB,GACA,GACA,GACA,GACA,GACA,IAEIC,EAAY,CAChB,CAAC,GAAG,GAAG,GAAG,IACV,CAAC,GAAG,GAAG,GAAG,IACV,CAAC,GAAG,GAAG,GAAG,KAGJ7Q,EAAI,EAAGA,EAAIwQ,EAAIxQ,IACrB,IAAI,IAAI8Q,EAAIL,EAAG,EAAGK,GAAK,EAAGA,IACxB,IAAI,IAAI3R,EAAI,EAAGA,EAAIoR,EAAIpR,IAAI,CACzB,IAAI4R,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAQ,QACRC,EAAW,KACXC,EAAa,KAOZnS,IAAIoR,EAAG,EAAGU,EAAQ,MACR,IAAJ9R,IAAOgS,EAAO,UACpBnR,IAAIwQ,EAAG,EAAGU,EAAQ,SACR,IAAJlR,IAAO+Q,EAAO,SACpBD,IAAIL,EAAG,EAAGO,EAAQ,OACR,IAAJF,IAAOM,EAAO,SACvB,IAAIG,EAAY,EACT,IAAJvR,GAASA,IAAMwQ,EAAG,GAAGe,IACjB,IAAJT,GAASA,IAAML,EAAG,GAAGc,IACjB,IAAJpS,GAASA,IAAMoR,EAAG,GAAGgB,IACxB,IAAIC,EAAW,OAEA,IAAZD,GACDC,EAAW,SACRpH,EAAK,IACFpK,IAAI0Q,GAAMI,IAAIJ,GACd1Q,IAAI0Q,GAAMvR,IAAIuR,GACdvR,IAAIuR,GAAMI,IAAIJ,KAChBY,EAAW,UAGR,IAAJtR,IAAQ4Q,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAC7EgB,IAAIwQ,EAAG,IAAII,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAChF8R,IAAIL,EAAG,IAAIG,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAC5E,IAAJG,IAAQyR,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GACzE,IAAJ8R,IAAQF,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,GAC7EG,IAAIoR,EAAG,IAAIK,EAAY,GAAGxR,KAAKuR,EAAQ3R,QAAQsS,EAAWV,EAAY,GAAG5R,OAAO,IAGjE,IAAZuS,GAENC,EAAW,OAEF,IAANxR,EACE8Q,IAAIL,EAAG,GACLF,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvBG,IAAIoR,EAAG,GACVA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GACHP,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJG,IACHoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvBgB,IAAMwQ,EAAG,EACdM,IAAIL,EAAG,GACLF,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvBG,IAAIoR,EAAG,GACVA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GACHP,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJG,IACHoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAG5B8R,IAAIL,EAAG,GAAS,IAAJtR,GACVoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEvB8R,IAAIL,EAAG,GAAKtR,IAAIoR,EAAG,GACtBA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GAAS3R,IAAIoR,EAAG,GACnBA,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,SAEnB,IAAJ8R,GAAa,IAAJ3R,IACZoR,EAAG,GAAGM,EAAU,GAAG,GAAG7R,OAAO,IAAIkD,KAAKC,MAAMoO,EAAG,KAChDc,EAAS,UAEXR,EAAU,GAAG,GAAGzR,KAAKuR,EAAQ3R,UAIf,IAAZuS,IACNC,EAAW,SACXrR,EAAQf,KAAKuR,EAAQ3R,SAGzB2R,EAAQvR,KAAK,CAAC2R,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAC9BjS,EAAEa,EAAE8Q,EACJ3R,EAAEa,EAAE8Q,EACJU,EACAH,EACAC,IAMpB,OAAOX,GAGTuB,mBAAqB,SAAS9H,GAC1B,IAAI+H,EAAYjQ,KAAKC,MAAMiI,EAAK,GAC5BgI,EAAclQ,KAAK4P,KAAK1H,EAAK,GAC3BiI,EAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7BC,EAAU,CACdhI,OAAS,GACTY,OAAS,GACTI,MAAQ,IAGPlB,EAAK,GACNkI,EAAQhI,OAAOlL,KACb,CAACuL,UAAW,CAACC,KAAK,KAAKC,KAAK,CAAC,GAAG,EAAEuH,GAAY,IAC7C9Q,QAAS,CAACsJ,KAAK,MAAMC,KAAK,CAAC,EAAE,EAAEuH,GAAY,KAC5C,CAACzH,UAAW,CAACC,KAAK,KAAKC,KAAK,CAAC,GAAG,EAAEuH,GAAY,IAC9C9Q,QAAS,CAACsJ,KAAK,MAAMC,KAAK,CAAC,EAAE,EAAEuH,GAAY,KAC3C,CAACzH,UAAW,CAACC,KAAK,KAAKC,KAAK,CAAC,GAAG,EAAEuH,GAAY,IAC9C9Q,QAAS,CAACsJ,KAAK,MAAMC,KAAK,CAAC,EAAE,EAAEuH,GAAY,MAG/C,IAAK,IAAIjT,EAAI,EAAGA,EAAIgT,EAAWhT,IAC7B,IAAI,IAAIa,EAAI,EAAGA,EAAIqS,EAAMrT,OAAQgB,IAAI,CACnC,IAAIuS,GAAmBpT,EAAE,GAAI,IAAM,KAAOA,EAAE,GAAKkT,EAAMrS,GACnDwS,GAAkBrT,EAAE,GAAI,IAAM,KAAOA,EAAE,GAAKkT,EAAMrS,GAAGkO,cAEzDoE,EAAQpH,OAAO9L,KAAK,CAClBuL,UAAW,CAACV,KAAKoI,EAAMrS,GAAI4K,KAAK2H,EAAgB1H,KAAK,CAAC7K,GAAG,EAAEb,EAAE,GAAE,IAC/DmC,QAAS,CAAC2I,KAAKoI,EAAMrS,GAAI4K,KAAK2H,EAAe,IAAI1H,KAAK,CAAC7K,EAAE,EAAEb,EAAE,GAAE,MAE9DA,EAAE,GACHmT,EAAQhH,MAAMlM,KAAK,CACjBuL,UAAW,CAACV,KAAKoI,EAAMrS,GAAG4K,KAAK4H,EAAe3H,KAAK,CAAC7K,GAAG,EAAEb,EAAE,GAAE,IAC7DmC,QAAS,CAAC2I,KAAKoI,EAAMrS,GAAG4K,KAAK4H,EAAc,IAAI3H,KAAK,CAAC7K,EAAE,EAAEb,EAAE,GAAE,MAMrE,OAAOmT,GAGXG,kBAAoB,SAASC,EAAMC,GAWjC,IAVA,IAAMC,EAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IACzBC,EAAW,IAAIC,KAAoB,EAAE,GACrCC,EAAW,IAAID,KAAyB,CAC5C7F,IAAIyF,EACJM,aAAa,EACbtN,MAAO,QACPuN,QAAQ,KACRhS,KAAM6R,OAGAhC,EAAI,EAAGA,EAAI6B,EAAI7B,IAAI,CAGzB,IAFA,IAAIoC,EAAY,IAAIJ,KAChBK,EAAiB,IAAIL,KACjB3T,EAAI,EAAGA,EAAI,EAAGA,IACpB,IAAI,IAAIa,EAAI,EAAGA,EAAE2S,EAAG3S,IAAI,CACtB,IAAIoT,EAAY,IAAIN,KAAYD,EAAUE,GACtCM,EAAiB,IAAIP,KAAYD,EAAUE,GACxC,IAAJ5T,GACDiU,EAAUE,WAAWX,EAAG,EAAE7B,GAC1BsC,EAAUG,WAAYZ,EAAG,EAAG,KAC5BS,EAAUI,WAAYb,EAAG,EAAG3S,GAE5BqT,EAAeC,WAAWX,EAAG,EAAE7B,GAC/BuC,EAAeE,WAAYZ,EAAG,EAAG,KACjCU,EAAeG,WAAYb,EAAG,EAAG3S,GACjCqT,EAAeI,QAAQvR,KAAKwR,KAElB,IAAJvU,GACNiU,EAAUE,WAAWX,EAAG,EAAE7B,GAC1BsC,EAAUG,WAAYZ,EAAG,EAAG3S,GAC5BoT,EAAUI,WAAYb,EAAG,EAAG,KAC5BS,EAAUO,QAAQzR,KAAKwR,GAAG,GAC1BN,EAAUK,QAAQvR,KAAKwR,IAEvBL,EAAeC,WAAWX,EAAG,EAAE7B,GAC/BuC,EAAeE,WAAYZ,EAAG,EAAG3S,GACjCqT,EAAeG,WAAYb,EAAG,EAAG,KACjCU,EAAeM,QAAQzR,KAAKwR,GAAG,IAErB,IAAJvU,GACNiU,EAAUE,WAAWX,EAAG,EAAE7B,GAC1BsC,EAAUG,YAAY,KACtBH,EAAUI,WAAYb,EAAG,EAAG3S,GAC5BoT,EAAUO,QAAQzR,KAAKwR,IAEvBL,EAAeC,WAAWX,EAAG,EAAE7B,GAC/BuC,EAAeE,YAAY,KAC3BF,EAAeG,WAAYb,EAAG,EAAG3S,IAEvB,IAAJb,IACNiU,EAAUE,WAAWX,EAAG,EAAE7B,GAC1BsC,EAAUG,WAAYZ,EAAG,EAAG3S,GAC5BoT,EAAUI,YAAY,KACtBJ,EAAUO,SAASzR,KAAKwR,GAAG,GAC3BN,EAAUK,QAAQvR,KAAKwR,IAEvBL,EAAeC,WAAWX,EAAG,EAAE7B,GAC/BuC,EAAeE,WAAYZ,EAAG,EAAG3S,GACjCqT,EAAeG,YAAY,KAC3BH,EAAeM,SAASzR,KAAKwR,GAAG,IAElCR,EAAUU,IAAIR,GACdD,EAAeS,IAAIP,GAGvBH,EAAUW,SAAU,EACpBV,EAAeU,SAAU,EACzBjB,EAAO,GAAGxT,KAAK8T,GACfN,EAAO,GAAGxT,KAAK+T,GAIjB,IAAI,IAAIrC,EAAI,EAAGA,EAAI6B,EAAI7B,IAAI,CAGzB,IAFA,IAAIoC,EAAY,IAAIJ,KAChBK,EAAiB,IAAIL,KACjB3T,EAAI,EAAGA,EAAI,EAAGA,IACpB,IAAI,IAAIa,EAAI,EAAGA,EAAE2S,EAAG3S,IAAI,CACtB,IAAIoT,EAAY,IAAIN,KAAYD,EAAUE,GACtCM,EAAiB,IAAIP,KAAYD,EAAUE,GACxC,IAAJ5T,GACDiU,EAAUE,WAAYX,EAAG,EAAG3S,GAC5BoT,EAAUG,WAAYZ,EAAG,EAAG,KAC5BS,EAAUI,WAAW1C,GACrBsC,EAAUK,SAASvR,KAAKwR,GAAG,GAG3BL,EAAeC,WAAYX,EAAG,EAAG3S,GACjCqT,EAAeE,WAAYZ,EAAG,EAAG,KACjCU,EAAeG,WAAW1C,GAC1BuC,EAAeM,QAAQzR,KAAKwR,IAC5BL,EAAeI,QAAQvR,KAAKwR,GAAG,IAErB,IAAJvU,GACNiU,EAAUE,WAAYX,EAAG,EAAG,KAC5BS,EAAUG,WAAYZ,EAAG,EAAG3S,GAC5BoT,EAAUI,WAAW1C,GACrBsC,EAAUO,QAAQzR,KAAKwR,GAAG,GAC1BN,EAAUK,QAAQvR,KAAKwR,IACvBN,EAAUU,QAAQ5R,KAAKwR,GAAG,GAE1BL,EAAeC,WAAYX,EAAG,EAAG,KACjCU,EAAeE,WAAYZ,EAAG,EAAG3S,GACjCqT,EAAeG,WAAW1C,GAC1BuC,EAAeM,QAAQzR,KAAKwR,GAAG,GAC/BL,EAAeS,QAAQ5R,KAAKwR,GAAG,IAErB,IAAJvU,GACNiU,EAAUE,WAAYX,EAAG,EAAG3S,GAC5BoT,EAAUG,YAAY,KACtBH,EAAUI,WAAW1C,GACrBsC,EAAUO,QAAQzR,KAAKwR,IACvBN,EAAUK,QAAQvR,KAAKwR,GAAG,GAE1BL,EAAeC,WAAYX,EAAG,EAAG3S,GACjCqT,EAAeE,YAAY,KAC3BF,EAAeG,WAAW1C,GAC1BuC,EAAeI,SAASvR,KAAKwR,GAAG,IAEtB,IAAJvU,IACNiU,EAAUE,YAAY,KACtBF,EAAUG,WAAYZ,EAAG,EAAG3S,GAC5BoT,EAAUI,WAAW1C,GACrBsC,EAAUO,SAASzR,KAAKwR,GAAG,GAC3BN,EAAUK,QAAQvR,KAAKwR,IACvBN,EAAUU,SAAS5R,KAAKwR,GAAG,GAE3BL,EAAeC,YAAY,KAC3BD,EAAeE,WAAYZ,EAAG,EAAG3S,GACjCqT,EAAeG,WAAW1C,GAC1BuC,EAAeM,SAASzR,KAAKwR,GAAG,GAChCL,EAAeS,QAAQ5R,KAAKwR,GAAG,IAGjCR,EAAUU,IAAIR,GACdD,EAAeS,IAAIP,GAGvBH,EAAUW,SAAU,EACpBV,EAAeU,SAAU,EAEzBjB,EAAO,GAAGxT,KAAK8T,GACfN,EAAO,GAAGxT,KAAK+T,GAIjB,IAAI,IAAIrC,EAAI,EAAGA,EAAI6B,EAAI7B,IAAI,CAGzB,IAFA,IAAIoC,EAAY,IAAIJ,KAChBK,EAAiB,IAAIL,KACjB3T,EAAI,EAAGA,EAAI,EAAGA,IACpB,IAAI,IAAIa,EAAI,EAAGA,EAAE2S,EAAG3S,IAAI,CACtB,IAAIoT,EAAY,IAAIN,KAAYD,EAAUE,GACtCM,EAAiB,IAAIP,KAAYD,EAAUE,GACxC,IAAJ5T,GACDiU,EAAUE,WAAYX,EAAG,EAAG3S,GAC5BoT,EAAUG,WAAYZ,EAAG,EAAG7B,GAC5BsC,EAAUI,WAAYb,EAAG,EAAG,KAC5BS,EAAUK,SAASvR,KAAKwR,GAAG,GAC3BN,EAAUU,QAAQ5R,KAAKwR,GAAG,GAG1BL,EAAeC,WAAYX,EAAG,EAAG3S,GACjCqT,EAAeE,WAAYZ,EAAG,EAAG7B,GACjCuC,EAAeG,WAAYb,EAAG,EAAG,KACjCU,EAAeM,QAAQzR,KAAKwR,IAC5BL,EAAeI,QAAQvR,KAAKwR,GAAG,GAC/BL,EAAeS,QAAQ5R,KAAKwR,GAAG,IAErB,IAAJvU,GACNiU,EAAUE,WAAYX,EAAG,EAAG,KAC5BS,EAAUG,WAAYZ,EAAG,EAAG7B,GAC5BsC,EAAUI,WAAYb,EAAG,EAAG3S,GAE5BoT,EAAUK,QAAQvR,KAAKwR,IACvBN,EAAUU,QAAQ5R,KAAKwR,GAAG,GAE1BL,EAAeC,WAAYX,EAAG,EAAG,KACjCU,EAAeE,WAAYZ,EAAG,EAAG7B,GACjCuC,EAAeG,WAAYb,EAAG,EAAG3S,GAEjCqT,EAAeS,QAAQ5R,KAAKwR,GAAG,IAErB,IAAJvU,GACNiU,EAAUE,WAAYX,EAAG,EAAG3S,GAC5BoT,EAAUG,WAAYZ,EAAG,EAAG7B,GAC5BsC,EAAUI,YAAY,KACtBJ,EAAUO,QAAQzR,KAAKwR,GAAG,GAC1BN,EAAUK,QAAQvR,KAAKwR,GAAG,GAE1BL,EAAeC,WAAYX,EAAG,EAAG3S,GACjCqT,EAAeE,WAAYZ,EAAG,EAAG7B,GACjCuC,EAAeG,YAAY,KAC3BH,EAAeM,QAAQzR,KAAKwR,GAAG,GAC/BL,EAAeI,SAASvR,KAAKwR,GAAG,IAEtB,IAAJvU,IACNiU,EAAUE,YAAY,KACtBF,EAAUG,WAAYZ,EAAG,EAAG7B,GAC5BsC,EAAUI,WAAYb,EAAG,EAAG3S,GAC5BoT,EAAUO,QAAQzR,KAAKwR,IACvBN,EAAUK,QAAQvR,KAAKwR,IACvBN,EAAUU,SAAS5R,KAAKwR,GAAG,GAE3BL,EAAeC,YAAY,KAC3BD,EAAeE,WAAYZ,EAAG,EAAG7B,GACjCuC,EAAeG,WAAYb,EAAG,EAAG3S,GACjCqT,EAAeM,SAASzR,KAAKwR,IAC7BL,EAAeS,QAAQ5R,KAAKwR,GAAG,IAGjCR,EAAUU,IAAIR,GACdD,EAAeS,IAAIP,GAGvBH,EAAUW,SAAU,EACpBV,EAAeU,SAAU,EAEzBjB,EAAO,GAAGxT,KAAK8T,GACfN,EAAO,GAAGxT,KAAK+T,GAEjB,OAAOP,GAITmB,YAAc,SAAUC,EAAGC,EAAGC,EAAUC,EAAGC,EAAGC,GAC1C,IAAIC,EAAQD,EAASnS,KAAKwR,GAAG,IAE7B,OADGQ,EAAY,IAAGI,IAAQ,GACnB,CAAEH,GAAMjS,KAAKqS,IAAID,IAAUH,EAAGH,GAAM9R,KAAKsS,IAAIF,IAAUF,EAAGH,GAAMD,EAC9DI,GAAMlS,KAAKsS,IAAIF,IAAUH,EAAGH,GAAM9R,KAAKqS,IAAID,IAAUF,EAAGH,GAAMA,IAuB3EQ,aAAe,SAAUC,EAAOC,EAAUC,EAAMC,GAG9C,IAAIC,EAAcF,EAAMvW,cAAc,EAAE,GACpC0W,EAAQH,EAAMG,MACdC,EAAgBJ,EAAMI,cACtBnN,EAAQ+M,EAAM/M,MACdoN,EAAQL,EAAMK,MACdhL,EAAO2K,EAAM3K,KACbiL,EAAYN,EAAMM,UAClBC,EAAUP,EAAMO,QAIpB,GAAY,IAATlL,EACD,IAAI,IAAI9K,EAAI,EAAGA,EAAEyV,EAAMxW,aAAaY,OAAOG,IAGzC,IAAIgW,GAAWJ,EAAM5V,GAAGoI,SAASjF,EAAI4S,EAAU,IAAMH,EAAM5V,GAAGoI,SAASjF,EAAI4S,EAAU,CAGnFF,EAAc,EAAID,EAAM5V,GAAGkV,SAAS/R,GAAK,MAAMuF,EAAM,GAAKkN,EAAM5V,GAAGkV,SAAS/R,GAAK,MAAMuF,EAAM,GAG7F,IAAIuN,EAAWV,EAAOI,EAAYA,EAAYE,EAAcD,EAAM5V,GAAGoI,SAASlF,EAAE0S,EAAM5V,GAAGoI,SAAShF,EAAEsF,GAGjGoN,EAAQ,KAAO,IAChBG,EAASjB,GAAKjS,KAAKmT,MAAMD,EAASjB,IAClCiB,EAAShB,GAAKlS,KAAKmT,MAAMD,EAAShB,KAIpCW,EAAM5V,GAAGoI,SAASlF,EAAI+S,EAASjB,GAC/BY,EAAM5V,GAAGoI,SAAShF,EAAI6S,EAAShB,GAKrC,GAAY,IAATnK,EACD,IAAI,IAAI9K,EAAI,EAAGA,EAAEyV,EAAMxW,aAAaY,OAAOG,IACzC,IAAIgW,GAAWJ,EAAM5V,GAAGoI,SAAShF,EAAIqS,EAAMvW,cAAgB,EAAI6W,IAAcH,EAAM5V,GAAGoI,SAAShF,EAAIqS,EAAMvW,cAAgB,EAAI6W,EAAU,CACrIF,EAAc,EAAID,EAAM5V,GAAGkV,SAAS9R,GAAK,MAAMsF,EAAM,GAAKkN,EAAM5V,GAAGkV,SAAS9R,GAAK,MAAMsF,EAAM,GAC7F,IAAIuN,EAAWV,EAAOI,EAAYA,EAAYE,EAAcD,EAAM5V,GAAGoI,SAASlF,EAAE0S,EAAM5V,GAAGoI,SAASjF,EAAE,GAAGuF,EAAM,IAC1GoN,EAAQ,KAAO,IAChBG,EAASjB,GAAKjS,KAAKmT,MAAMD,EAASjB,IAClCiB,EAAShB,GAAKlS,KAAKmT,MAAMD,EAAShB,KAEpCW,EAAM5V,GAAGoI,SAASlF,EAAI+S,EAASjB,GAC/BY,EAAM5V,GAAGoI,SAASjF,EAAI8S,EAAShB,GAKrC,GAAY,IAATnK,EACD,IAAI,IAAI9K,EAAI,EAAGA,EAAEyV,EAAMxW,aAAaY,OAAOG,IACzC,IAAIgW,GAAWR,EAAUxV,GAAGoI,SAASlF,EAAIuS,EAAMvW,cAAgB,EAAI6W,IAAcH,EAAM5V,GAAGoI,SAASlF,EAAIuS,EAAMvW,cAAgB,EAAI6W,EAAU,CACzIF,EAAc,EAAIL,EAAUxV,GAAGkV,SAAShS,GAAK,MAAMwF,EAAM,GAAK8M,EAAUxV,GAAGkV,SAAShS,GAAK,MAAMwF,EAAM,GACrG,IAAIuN,EAAWV,EAAOI,EAAYA,EAAYE,EAAcL,EAAUxV,GAAGoI,SAASjF,EAAEqS,EAAUxV,GAAGoI,SAAShF,EAAE,GAAGsF,EAAM,IAClHoN,EAAQ,KAAO,IAChBG,EAASjB,GAAKjS,KAAKmT,MAAMD,EAASjB,IAClCiB,EAAShB,GAAKlS,KAAKmT,MAAMD,EAAShB,KAEpCO,EAAUxV,GAAGoI,SAASjF,EAAI8S,EAASjB,GACnCQ,EAAUxV,GAAGoI,SAAShF,EAAI6S,EAAShB,GAKzC,GAAY,IAATnK,EACD,IAAI,IAAI9K,EAAI,EAAGA,EAAEyV,EAAMxW,aAAaY,OAAOG,IACzC,IAAIgW,GAAWR,EAAUxV,GAAGoI,SAASjF,EAAIsS,EAAMvW,cAAgB,EAAI6W,IAAcH,EAAM5V,GAAGoI,SAASjF,EAAIsS,EAAMvW,cAAgB,EAAI6W,EAAU,CACzIF,EAAc,EAAIL,EAAUxV,GAAGkV,SAAS/R,GAAK,MAAMuF,EAAM,GAAK8M,EAAUxV,GAAGkV,SAAS/R,GAAK,MAAMuF,EAAM,GACrG,IAAIuN,EAAWV,EAAOI,EAAYA,EAAYE,EAAcL,EAAUxV,GAAGoI,SAASlF,EAAEsS,EAAUxV,GAAGoI,SAAShF,EAAE,GAAGsF,EAAM,IAClHoN,EAAQ,KAAO,IAChBG,EAASjB,GAAKjS,KAAKmT,MAAMD,EAASjB,IAClCiB,EAAShB,GAAKlS,KAAKmT,MAAMD,EAAShB,KAEpCO,EAAUxV,GAAGoI,SAASlF,EAAI+S,EAASjB,GACnCQ,EAAUxV,GAAGoI,SAAShF,EAAI6S,EAAShB,GAKzC,GAAY,IAATnK,EACD,IAAI,IAAI9K,EAAI,EAAGA,EAAEyV,EAAMxW,aAAaY,OAAOG,IACzC,IAAIgW,GAAWR,EAAUxV,GAAGoI,SAASlF,EAAI6S,EAAU,IAAMH,EAAM5V,GAAGoI,SAASlF,EAAI6S,EAAU,CACvFF,EAAc,EAAIL,EAAUxV,GAAGkV,SAAShS,GAAK,MAAMwF,EAAM,GAAK8M,EAAUxV,GAAGkV,SAAShS,GAAK,MAAMwF,EAAM,GACrG,IAAIuN,EAAWV,EAAOI,EAAYA,EAAYE,EAAcL,EAAUxV,GAAGoI,SAASjF,EAAEqS,EAAUxV,GAAGoI,SAAShF,EAAE,GAAGsF,EAAM,IAClHoN,EAAQ,KAAO,IAChBG,EAASjB,GAAKjS,KAAKmT,MAAMD,EAASjB,IAClCiB,EAAShB,GAAKlS,KAAKmT,MAAMD,EAAShB,KAEpCO,EAAUxV,GAAGoI,SAASjF,EAAI8S,EAASjB,GACnCQ,EAAUxV,GAAGoI,SAAShF,EAAI6S,EAAShB,GAKzC,GAAY,IAATnK,EACD,IAAI,IAAI9K,EAAI,EAAGA,EAAEyV,EAAMxW,aAAaY,OAAOG,IACzC,IAAIgW,GAAWR,EAAUxV,GAAGoI,SAAShF,EAAI2S,EAAU,IAAMH,EAAM5V,GAAGoI,SAAShF,EAAI2S,EAAU,CACvFF,EAAc,EAAIL,EAAUxV,GAAGkV,SAAS9R,GAAK,MAAMsF,EAAM,GAAK8M,EAAUxV,GAAGkV,SAAS9R,GAAK,MAAMsF,EAAM,GACrG,IAAIuN,EAAWV,EAAOI,EAAYA,EAAYE,EAAcL,EAAUxV,GAAGoI,SAASlF,EAAEsS,EAAUxV,GAAGoI,SAASjF,EAAE,GAAGuF,EAAM,IAClHoN,EAAQ,KAAO,IAChBG,EAASjB,GAAKjS,KAAKmT,MAAMD,EAASjB,IAClCiB,EAAShB,GAAKlS,KAAKmT,MAAMD,EAAShB,KAEpCO,EAAUxV,GAAGoI,SAASlF,EAAI+S,EAASjB,GACnCQ,EAAUxV,GAAGoI,SAASjF,EAAI8S,EAAShB,GAKzC,MAAO,CAACa,MAAQA,EAAMpN,EAAM3C,QAAS,IAIvCoQ,aAAe,SAAUtB,EAAGC,EAAGC,EAAUC,EAAGC,GACxC,IAAIE,EAAQpS,KAAKwR,GAAG,EAEpB,OADGQ,EAAY,IAAGI,IAAQ,GACnB,CAAEH,IAAQjS,KAAKsS,IAAIF,IAAUF,EAAGH,GAAMD,EACpCI,GAAQlS,KAAKsS,IAAIF,IAAUH,EAAGH,GAAMC,IAIjDsB,WAAa,SAAUC,EAAStB,EAAUgB,EAAUC,EAAQxC,EAAG8C,GAC7D,IAAIpX,EAAgBsU,EAChBmC,EAAcnC,EAAG,EAAE,GACnBvU,EAAY,YAAOqX,GACnBC,EAAU,GAKd,GAHGxB,EAAY,IAAIwB,IAAW,GAGb,IAAbF,EACA,IAAI,IAAIrW,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IAGpC,IAAKgW,GAAW/W,EAAae,GAAG,GAAK+V,EAAU,IAC3C9W,EAAae,GAAG,GAAK+V,EAAU,CAG/B,IAAIE,EAAW3W,GAAK6W,aAAaR,EACAA,EACAY,EACAtX,EAAae,GAAG,GAChBf,EAAae,GAAG,IAMjD,GALAf,EAAae,GAAG,GAAKiW,EAASjB,GAC9B/V,EAAae,GAAG,GAAKiW,EAAShB,GAIb,IAAdF,EAAgB,CACf,IAAIyB,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,MAClB,CACH,IAAIA,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,GAOrC,GAAiB,IAAbH,EACA,IAAI,IAAIrW,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IACpC,IAAKgW,GAAW/W,EAAae,GAAG,GAAKd,EAAc,EAAE6W,IACjD9W,EAAae,GAAG,GAAGd,EAAc,EAAE6W,EAAU,CAC7C,IAAIE,EAAW3W,GAAK6W,aAAaR,EACAA,EACAY,EACAtX,EAAae,GAAG,GAChBf,EAAae,GAAG,IAGjD,GAFAf,EAAae,GAAG,GAAKiW,EAASjB,GAC9B/V,EAAae,GAAG,GAAKiW,EAAShB,GACb,IAAdF,EAAgB,CACf,IAAIyB,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,MAClB,CACH,IAAIA,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,GAMrC,GAAiB,IAAbH,EACA,IAAI,IAAIrW,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IACpC,IAAKgW,GAAW/W,EAAae,GAAG,GAAKd,EAAc,EAAE6W,IACjD9W,EAAae,GAAG,GAAGd,EAAc,EAAE6W,EAAU,CAC7C,IAAIE,EAAW3W,GAAK6W,aAAaR,EACAA,EACAY,EACAtX,EAAae,GAAG,GAChBf,EAAae,GAAG,IAGjD,GAFAf,EAAae,GAAG,GAAKiW,EAASjB,GAC9B/V,EAAae,GAAG,GAAKiW,EAAShB,GACb,IAAdF,EAAgB,CACf,IAAIyB,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,MAClB,CACH,IAAIA,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,GAMrC,GAAiB,IAAbH,EACA,IAAI,IAAIrW,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IACpC,IAAKgW,GAAW/W,EAAae,GAAG,GAAKd,EAAc,EAAE6W,IAAc9W,EAAae,GAAG,GAAGd,EAAc,EAAE6W,EAAU,CAC5G,IAAIE,EAAW3W,GAAK6W,aAAaR,EAAYA,EAAYY,EAAQtX,EAAae,GAAG,GAAGf,EAAae,GAAG,IAGpG,GAFAf,EAAae,GAAG,GAAKiW,EAASjB,GAC9B/V,EAAae,GAAG,GAAKiW,EAAShB,IACZ,IAAfF,EAAiB,CAChB,IAAIyB,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,MAClB,CACH,IAAIA,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,GAMrC,GAAiB,IAAbH,EACA,IAAI,IAAIrW,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IACpC,IAAKgW,GAAW/W,EAAae,GAAG,GAAK+V,EAAU,IAAM9W,EAAae,GAAG,GAAK+V,EAAU,CAChF,IAAIE,EAAW3W,GAAK6W,aAAaR,EAAYA,EAAYY,EAAQtX,EAAae,GAAG,GAAGf,EAAae,GAAG,IAGpG,GAFAf,EAAae,GAAG,GAAKiW,EAASjB,GAC9B/V,EAAae,GAAG,GAAKiW,EAAShB,IACZ,IAAfF,EAAiB,CAChB,IAAIyB,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,MAClB,CACH,IAAIA,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,GAMrC,GAAiB,IAAbH,EACA,IAAI,IAAIrW,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IACpC,IAAKgW,GAAW/W,EAAae,GAAG,GAAK+V,EAAU,IAAM9W,EAAae,GAAG,GAAK+V,EAAU,CAChF,IAAIE,EAAW3W,GAAK6W,aAAaR,EAAYA,EAAYY,EAAQtX,EAAae,GAAG,GAAGf,EAAae,GAAG,IAGpG,GAFAf,EAAae,GAAG,GAAKiW,EAASjB,GAC9B/V,EAAae,GAAG,GAAKiW,EAAShB,IACZ,IAAfF,EAAiB,CAChB,IAAIyB,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,MAClB,CACH,IAAIA,EAAWvX,EAAae,GAAG,GAC/Bf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKf,EAAae,GAAG,GACrCf,EAAae,GAAG,GAAKwW,GAMrC,OAAOvX,GAITwX,eAAiB,SAAU3L,EAAKiK,EAAUgB,EAAUC,EAAQU,EAAanU,EAAQH,EAAWuU,EAAIlX,GAChG,IAAI6C,EAAM,GACV,IAAIoU,EAAa,CAEf,IAAIE,EAAW,GACAA,GAAfb,EAAU,GAAe,IAAIA,EAAwBA,EACzC,IAATjL,EAAyC8L,GAA5BZ,EAAwC,IAAlB,IACrB,IAATlL,EAAyC8L,GAA5BZ,EAAwC,IAAlB,IAC1B,IAATlL,EAAyC8L,GAA5BZ,EAAwC,IAAlB,IAC1B,IAATlL,EAAyC8L,GAA5BZ,EAAwC,IAAlB,IAC1B,IAATlL,EAAyC8L,GAA5BZ,EAAwC,IAAlB,IAC1B,IAATlL,IAAyC8L,GAA5BZ,EAAwC,IAAlB,MACzB,IAAfjB,IAAkB6B,GAAY,KAEjCrU,GAASA,EAAQ1C,OAAS,EACxByC,EAAIC,QAAWA,EAAU,IAAMqU,EAC/BtU,EAAIC,QAAWqU,EAGdnX,GAAc,IACf6C,EAAIF,WAAcA,EAAWvC,OAASuC,EAAa,IAAMwU,EAAWxU,EAAawU,GAgBrF,OAZG9L,EAAK,IAAoB,IAAfiK,EAAkBA,EAAY,EAElCjK,EAAK,GAAmB,IAAdiK,IAAiBA,GAAa,GAEjDzS,EAAIoU,cAAe,EACnBpU,EAAIwI,KAAOA,EACXxI,EAAIuT,cAAgBd,EACpBzS,EAAIqU,IAAMA,EAAM,GAChBrU,EAAIyT,UAAYA,EAChBzT,EAAI0T,QAAUA,EAGP1T,IAIIhD,MC3gCTuX,GAAY,CACdC,eAAiB,SAAShW,GAEtB,IAAIiW,EAAUjW,EAAUkW,QAEpBR,EAAW,EACXS,GAAiB,EACjBC,EAAY,EACZC,GAAc,EAElB,GAAGJ,EAeH,OAdsB,IAAnBA,EAAQlX,SAAcoX,EAAc,GACvCC,EAAYE,SAASL,EAAQM,MAAM,EAAE,IAElCN,EAAQM,MAAM,EAAE,KAAON,EAAQM,MAAM,EAAE,GAAGtI,gBACzCoI,GAAc,GAGsB,MAArCJ,EAAQM,MAAM,EAAE,GAAGrI,cAAuBwH,EAAW,EACX,MAArCO,EAAQM,MAAM,EAAE,GAAGrI,cAAuBwH,EAAW,EAChB,MAArCO,EAAQM,MAAM,EAAE,GAAGrI,cAAuBwH,EAAW,EAChB,MAArCO,EAAQM,MAAM,EAAE,GAAGrI,cAAuBwH,EAAW,EAChB,MAArCO,EAAQM,MAAM,EAAE,GAAGrI,cAAuBwH,EAAW,EAChB,MAArCO,EAAQM,MAAM,EAAE,GAAGrI,gBAAuBwH,EAAW,GAEtD,CAACA,EAASS,EAAcC,EAAUC,IAI7CG,kBAAoB,SAAS5L,GACzB,IAAI9J,EAAO,GACPkJ,EAAO,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KAIhC,OAHAlJ,GAAM8J,EAAK,GAAG6L,WAAW1X,OAAO,EAAE,IAAI2X,OAAO9L,EAAK,IAAIA,EAAK,GAC3D9J,GAAO8J,EAAK,GAAGZ,EAAKY,EAAK,IAAIqD,cAAcjE,EAAKY,EAAK,KAC1C,IAAXA,EAAK,GAAQ9J,GAAM,GAAGA,GAAM,IACrBA,GAGX6V,kBAAoB,SAAU7V,GAC1B,GAAGA,EAAK/B,OAAS,EAAG,OAAO,EAC3B,IAAI6L,EAAO,GAMX,OAJAA,EAAKzL,KADM,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACjBiQ,QAAQtO,EAAK,GAAGoN,gBAC/BpN,EAAK/B,OAAS,EAAI6L,EAAKzL,MAAM,GAAKyL,EAAKzL,KAAK,GAClC,MAAV2B,EAAK,GAAW8J,EAAKzL,KAAKmX,SAASxV,EAAK,KAAO8J,EAAKzL,KAAKmX,SAASxV,EAAKkN,UAAU,EAAG,KACpFlN,EAAK,GAAGoN,gBAAkBpN,EAAK,GAAK8J,EAAKzL,MAAK,GAASyL,EAAKzL,MAAK,GAC1DyL,GAKXvM,kBAAoB,SAAUuY,GAM1B,IALA,IAAIC,EAAYD,EAAIjL,MAAM,KACtB3L,EAAY,GAIRd,EAAI,EAAGA,EAAI2X,EAAU9X,OAAOG,IAChC,GAA2B,IAAxB2X,EAAU3X,GAAGH,QAA0C,MAA1B8X,EAAU3X,GAAGqX,MAAM,EAAE,GAAU,CAC3D,IAAIT,EAAWe,EAAU3X,GAAGqX,MAAM,EAAE,GACpCvW,EAAUb,KAAK2W,GACf9V,EAAUb,KAAK2W,QAGf9V,EAAUb,KAAK0X,EAAU3X,IAGjC,OAAOc,GAIX8W,aAAe,SAAU3M,GACrB,IAAI4M,EAAW9U,KAAK4P,KAAK1H,EAAK,GAC1B6M,EAAW/U,KAAKC,MAAsB,EAAhBD,KAAKgV,UAC3BC,EAAWjV,KAAKC,MAAuB,EAAhBD,KAAKgV,SAAc,GAC1CE,EAAclV,KAAKC,MAAsB,EAAhBD,KAAKgV,UAC9BG,EAAY,EAYhB,OAVGJ,EAAS,GAAG7M,EAAK,IAAG4M,GAAU,GAE9B5M,EAAK,IACNiN,EAAYnV,KAAKC,MAAOD,KAAKgV,SAAWF,GAAa,GAExC,IAAZK,IAAeD,EAAc,GAE7BC,IAAcnV,KAAK4P,KAAK1H,EAAK,IAAMA,EAAK,IACzCgN,EAAY,GAEPpB,GAAUS,kBAAkB,CAACQ,EAAUE,EAASE,EAAUD,KAMrEE,eA9Fc,SA8FCC,EAAMnN,GACjB,IAEIpJ,EAFED,EAAMwW,EAAM3L,MAAM,IACpB4L,EAAW,GAgBf,OANEA,IAPAxW,EADW,MAAVD,EAAK,GACEqJ,EAAOmM,SAASxV,EAAK,IAAM,EAG3BqJ,EAAOmM,SAASxV,EAAK,GAAGA,EAAK,IAAM,GAGpC,GACG,IAAF,OAAMC,GAGJ,GAAF,OAAKA,GAGRD,EAAK,IACV,IAAK,IACHyW,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IACV,MACF,IAAK,IACHA,GAAU,IAMd,OADGzW,EAAK/B,OAAO,IAAGwY,GAAU,KACrBA,GAKXC,qBA9Jc,SA8JOC,EAASC,EAASvN,GACnC,GAAGuN,EAASzJ,gBAAgByJ,EACxB,GAAGD,EAASxJ,cAAcsI,MAAM,KAAKmB,EAASnB,MAAM,IAChD,GAAGD,SAASmB,EAASlB,MAAM,EAAE,KAAKD,SAASoB,EAASnB,MAAM,EAAE,IAC5D,OAAO,OAEN,GAAGR,GAAUsB,eAAeI,EAAStN,GAAM8D,cAAcsI,MAAM,KAAKmB,EAASnB,MAAM,IACjFD,SAASP,GAAUsB,eAAeI,EAAStN,GAAMoM,MAAM,EAAE,KAAKD,SAASoB,EAASnB,MAAM,EAAE,IAC3F,OAAO,EAGf,OAAGkB,IAAWC,GAAU3B,GAAUsB,eAAeI,EAAStN,KAAQuN,IAO3D3B,MCXA4B,OAlKf,SAA+BhD,EAAMxW,GACjC,IAAIyZ,EAAezZ,EAAa6O,KAAI,SAAAnE,GAAC,mBAAMA,MACvCgP,EAAS,eAAOlD,GAAQmD,EAAY,GACpCC,EAAe,KACfC,EAAgB,KAChBC,EAAiB,EACjBC,GAAQ,EACR7W,EAAU,EACV8W,EAAsB,EAM1B,IAL6B,iBAA1BN,EAAUnW,cACXmW,EAAUlZ,WAAa,EACvBkZ,EAAUnW,YAAc,UACxBmW,EAAU1Z,aAAeA,EAAa6O,KAAI,SAAAnE,GAAC,mBAAMA,OAErB,YAAxBgP,EAAUnW,aAEd,GAAImW,EAAU5X,SAAY4X,EAAU5X,QAAQlB,OAmDxC,CACF,IAAI2T,EAAKmF,EAAUzZ,cACfwX,EAAeiC,EAAUjC,aACzBnU,EAAUoW,EAAUpW,QACpBH,EAAauW,EAAUvW,WACvBnD,EAAe0Z,EAAU1Z,aACzB0X,EAAMgC,EAAUhC,IAChBlX,EAAakZ,EAAUlZ,WACvByZ,EAAWrC,GAAUC,eAAe6B,EAAU5X,SAC9CuB,EAAMhD,GAAKmX,eAAL,MAAAnX,GAAI,YAAmB4Z,GAAnB,QAA4BxC,EAAanU,EAAQH,EAAWuU,EAAIlX,KAC9E6C,EAAIrD,aAAeK,GAAK8W,WAAW9T,EAAIwI,KAAKxI,EAAIuT,cAAcvT,EAAIyT,UAAUzT,EAAI0T,QAAQxC,EAAGvU,GAC3F0Z,EAAS,2BAAOA,GAAarW,OA9DqB,EAElDuW,EAAaF,EAAU1I,eACL6I,EAAeC,GAAgC,EAC5DA,EAAiB,EACnBJ,EAAUlZ,YAAY,GAAGwZ,IAC5B,IAAIrV,OAAK,EAaT,IAXAA,EAAQ+M,GAAOgI,EAAUlZ,WAAWkZ,EAAU1Z,aAAa0Z,EAAUzZ,cAAc2X,GAAU1X,kBAC3FwZ,EAAUvW,WAAWuW,EAAU1I,YAAY0I,EAAU5I,QAAQ4I,EAAUvZ,MAAMuZ,EAAU3X,YAC7E4C,EAAQ,IACjBA,EAAM7C,SAA8B,SAAnB6C,EAAM7C,QAAQ,KACL,YAAxB4X,EAAUnW,aACXoB,EAAMxB,WAAauW,EAAUvW,WAAV,WAA2BwB,EAAM7C,QAAQ,IAC5D6C,EAAM7C,QAAQ0N,OAEX7K,EAAM7C,QAAQ0N,OAGlB7K,EAAM7C,QAAQ,CAEf,IADA,IAAIhB,EAAO,GACHC,EAAI,EAAGA,EAAE4D,EAAM7C,QAAQlB,OAAQG,IAEf,KAAnB4D,EAAM7C,QAAQf,IAA4B,MAAnB4D,EAAM7C,QAAQf,IAAgC,MAAtB4D,EAAM7C,QAAQf,GAAG,IAA6B,MAAnB4D,EAAM7C,QAAQf,IACtFD,EAAKE,KAAK2D,EAAM7C,QAAQf,IAE/B4D,EAAM7C,QAAUhB,EAEfkZ,EAAoB,KACrBD,GAAQ,EAERpV,EAAMpB,YAAY,SAEXuW,EAAe,IAAMJ,EAAUlZ,WAAW,GAAI0C,EAAQ,KAAQyB,EAAM7C,SAA4B,UAAnB6C,EAAM7C,QAAQ,MAElGwC,QAAQC,IACN,gBAAgBmV,EAAUlZ,WAC1B,qBAAqBsZ,EACrB,YAAYJ,EAAU1Z,aAAa0Z,EAAU5I,QAAQ4I,EAAU1I,eAGjE1M,QAAQC,IAAII,GACZoV,GAAQ,EAERpV,EAAMpB,YAAY,QAEjBoB,EAAMpB,aAAmC,SAApBoB,EAAMpB,cAAsBoW,EAAYD,EAAUvW,YAC1ED,IACAwW,EAAS,2BAAOA,GAAa/U,GAC7BkV,EAAcD,EAgBlB,IAAIM,EAAWP,EAAUnM,MAAM,KACX,MAAjB0M,EAAS,GAAG,IAA2B,MAAjBA,EAAS,GAAG,IAAUA,EAASnC,QACxD,IAAIjW,EAAU,GACdoY,EAAS/N,SAAQ,SAAAzB,GAAC,MAAoB,MAAhBA,EAAEA,EAAE9J,OAAO,GAAUkB,EAAQd,KAAK0J,EAAErF,QAAQ,IAAI,KAAKvD,EAAQd,KAAK0J,EAAE,QAE1F,IAAI,IAAI3J,EAAI,EAAGA,EAAEe,EAAQlB,OAAQG,IACf,KAAbe,EAAQf,IAAsB,MAAbe,EAAQf,IAA0B,MAAhBe,EAAQf,GAAG,IAAuB,MAAbe,EAAQf,SAAuBoZ,IAAbrY,EAAQf,IACnFe,EAAQsY,OAAOrZ,EAAE,GAIrB,IAAI6X,EAAW9U,KAAKC,MAAM2V,EAAUzZ,cAAc,GAClD6B,EAAUA,EAAQ+M,KAAI,SAAAlM,GACpB,GAAU,UAAPA,EAAgB,OAAOA,EAE1B,IAAI0X,EAAWzC,GAAUY,kBAAkB7V,GAC3C,OAAGwV,SAASkC,EAAS,IAAIzB,IAAWyB,EAAS,IAE3CA,EAAS,GAAIX,EAAUzZ,cAAcoa,EAAS,GAAI,EACvB,IAAxBlC,SAASkC,EAAS,IAASA,EAAS,GAAK,EACZ,IAAxBlC,SAASkC,EAAS,IAASA,EAAS,GAAK,EACjB,IAAxBlC,SAASkC,EAAS,IAASA,EAAS,GAAK,EACjB,IAAxBlC,SAASkC,EAAS,IAASA,EAAS,GAAK,EACjB,IAAxBlC,SAASkC,EAAS,IAASA,EAAS,GAAK,EACjB,IAAxBlC,SAASkC,EAAS,MAASA,EAAS,GAAK,GACnC,IAAdA,EAAS,GAAOA,EAAS,IAAI,EAAEA,EAAS,GAAG,EAGpCzC,GAAUS,kBAAkBgC,IAE9BzC,GAAUS,kBAAkBgC,MAIrC,IADA,IAAIC,EAAgB,EACdxY,EAAQlB,SAAS0Z,GAAc,CACnCA,EAAgBxY,EAAQlB,OACxB,IAAI,IAAIG,EAAI,EAAGA,EAAIe,EAAQlB,OAAO,EAAGG,IAChCe,EAAQf,GAAG8O,UAAU,EAAE,KAAK/N,EAAQf,EAAE,GAAG8O,UAAU,EAAE,IAAM/N,EAAQf,GAAGH,SAASkB,EAAQf,EAAE,GAAGH,QAC7FkB,EAAQsY,OAAOrZ,EAAE,GAGrB,IAAI,IAAIA,EAAI,EAAGA,EAAIe,EAAQlB,OAAO,EAAGG,IAChCe,EAAQf,KAAKe,EAAQf,EAAE,IAAMe,EAAQf,KAAKe,EAAQf,EAAE,KAC9B,IAApBe,EAAQf,GAAGH,OAAYkB,EAAQf,IAAI,IACjCe,EAAQf,GAAGe,EAAQf,GAAG8O,UAAU,EAAE,GACvC/N,EAAQsY,OAAOrZ,EAAE,EAAE,IA6BzB,MAxBgB,UAAbe,EAAQ,IAA2B,UAAbA,EAAQ,IAA+B,IAAjBA,EAAQlB,SAAYkB,EAAU,IAK1E0U,EAAMvW,cAAc,GACrByZ,EAAU1Z,aAAamM,SAAQ,SAAAoO,GAC7B,IAAGA,EAAMjZ,SAAS,UAAlB,CACA,IAAIkZ,EAAYD,EAAMnC,MAAM,EAAE,GAC1BqC,EAAeD,EAAUE,QAAO,SAAA7X,GAAI,MAAS,UAAPA,KACtC8X,EAAa,EACd,CAACJ,EAAM,GAAGA,EAAM,GAAGA,EAAM,IAAI3V,KAAK,MAAM,CAAC2V,EAAM,GAAGA,EAAM,IAAIA,EAAM,KAAK3V,KAAK,KAC1E6V,EAAa7Z,OAAO,IAA4BmZ,GAAM,GAEzC,UAAfS,EAAU,IAA6B,UAAfA,EAAU,IAAcG,IACjC,SAAfH,EAAU,IAA4B,UAAfA,EAAU,IAAcG,IAChC,QAAfH,EAAU,IAA2B,UAAfA,EAAU,IAAcG,IAC/B,WAAfH,EAAU,IAA8B,UAAfA,EAAU,IAAcG,IAClC,WAAfH,EAAU,IAA8B,UAAfA,EAAU,IAAcG,IAClC,UAAfH,EAAU,IAA6B,UAAfA,EAAU,IAAcG,IAChDA,EAAW,IAA4BZ,GAAM,OAIjDA,EAEM,CAACjY,QAAQ,YAAIA,GAAS9B,aAAeyZ,EAAamB,WAAU,EAAMjB,UAAU,YAAI7X,GAAS+Y,eAAe,GAE1G,CAAC/Y,QAAQ,YAAIA,GAAS9B,aAAeyZ,EAAamB,WAAU,EAAKjB,UAAU,YAAI7X,GAAS+Y,eAAe,EAAEC,WAAWpB,EAAU1Z,eC/JnI+a,GAAoB,CAGtBC,SAAW,SAAUxE,EAAM7R,GACvB,IAAI+U,EAAS,eAAOlD,GAGpB,IAFAkD,EAAU5X,QAAU6C,EAEd+U,EAAU5X,QAAQlB,QAAO,CAE3B,IAAI2T,EAAKmF,EAAUzZ,cACfwX,EAAeiC,EAAUjC,aACzBnU,EAAUoW,EAAUpW,QACpBH,EAAauW,EAAUvW,WACvBnD,EAAe0Z,EAAU1Z,aACzB0X,EAAMgC,EAAUhC,IAChBlX,EAAakZ,EAAUlZ,WACvByZ,EACFrC,GAAUC,eAAe6B,EAAU5X,SACjCuB,EACFhD,GAAKmX,eAAL,MAAAnX,GAAI,YAAmB4Z,GAAnB,QAA4BxC,EAAanU,EAAQH,EAAWuU,EAAIlX,KACtE6C,EAAIrD,aACFK,GAAK8W,WAAW9T,EAAIwI,KAAKxI,EAAIuT,cAAcvT,EAAIyT,UAAUzT,EAAI0T,QAAQxC,EAAGvU,GAC1E0Z,EAAS,2BAAOA,GAAarW,GAEjC,OAAO,YAAIqW,EAAU1Z,eAIzBib,UAAY,SAAUvQ,EAAElE,GAEpB,GAAGA,EAAMgQ,MAAM0E,UAAU1U,EAAMgQ,MAAM2E,iBAGhC,GAAGhD,SAASzN,EAAE1B,OAAOtB,IAAIlB,EAAMgQ,MAAMqE,iBAAiB,EACvDrU,EAAMiQ,SAAS,CAAC2E,iBAAiBjD,SAASzN,EAAE1B,OAAOtB,MACnDlB,EAAM6U,QAAQ7U,QAEb,GAAGA,EAAMgQ,MAAMqE,gBAAgB1C,SAASzN,EAAE1B,OAAOtB,IAAI,CACtDlB,EAAMiQ,SAAS,CAAC2E,iBAAiBjD,SAASzN,EAAE1B,OAAOtB,IAAI4T,YAAW,IAClE,IAAIC,EAAa/U,EAAMgQ,MAAMmD,UAAUvB,MAAM,EAAED,SAASzN,EAAE1B,OAAOtB,KAC7D8T,EAAahV,EAAMgQ,MAAMmD,UAAUvB,MAAMD,SAASzN,EAAE1B,OAAOtB,IAAIlB,EAAMgQ,MAAMmD,UAAU/Y,QACrF6a,EAAejV,EAAMgQ,MAAMmD,UAAUvB,MAAM5R,EAAMgQ,MAAMqE,eAAe1C,SAASzN,EAAE1B,OAAOtB,KAE5FlB,EAAMiQ,SAAS,CACXoE,eAAe1C,SAASzN,EAAE1B,OAAOtB,IACjCgU,QAAQH,EACRzZ,QAAQ0Z,EACRxb,aAAa+a,GAAkBC,SAASxU,EAAMgQ,MAAMiF,UAEvD,GAAGjV,EAAMgQ,MAAMqE,eAAe1C,SAASzN,EAAE1B,OAAOtB,IAAK,CACtDlB,EAAMiQ,SAAS,CAAC2E,iBAAiBjD,SAASzN,EAAE1B,OAAOtB,IAAI4T,YAAW,IAClE,IAAIC,EAAa/U,EAAMgQ,MAAMmD,UAAUvB,MAAM,EAAED,SAASzN,EAAE1B,OAAOtB,KAC7D8T,EAAahV,EAAMgQ,MAAMmD,UAAUvB,MAAMD,SAASzN,EAAE1B,OAAOtB,IAAIlB,EAAMgQ,MAAMmD,UAAU/Y,QACrF+a,EAAenV,EAAMgQ,MAAMmD,UAAUvB,MAAMD,SAASzN,EAAE1B,OAAOtB,IAAIlB,EAAMgQ,MAAMqE,gBAC5EhM,KAAI,SAAAlM,GAAI,OAAgB,IAAdA,EAAK/B,OAAW+B,EAAKyV,MAAM,EAAE,GAAIzV,EAAK,OAErD6D,EAAMiQ,SAAS,CACXoE,eAAe1C,SAASzN,EAAE1B,OAAOtB,IACjCgU,QAAQH,EACRzZ,QAAQ0Z,EACRxb,aAAa+a,GAAkBC,SAASxU,EAAMgQ,MAAMmF,EAAchI,eAK9EiI,UAAY,SAAUpP,EAAKhG,GACvB,IAAI+N,EAAK/N,EAAMgQ,MAAMvW,cACjB4b,EAAOrP,EACPsP,EAAU,GACVC,EAAY1b,GAAK6R,eAAeqC,EAAGA,EAAGA,GAChC,kBAAPsH,IACCC,EAAU7L,GACL+L,MACG,SAAAC,GAAG,OAAEA,EAAIzP,OAAOqP,GAChBI,EAAI7M,SAAS9N,SAASiT,MAAK5P,MAAM6I,MAAM,MACnDhH,EAAMiQ,SAAS,CAACyF,WAAWL,EAAK/Z,QAAQ,YAAIga,GAAS9b,aAAe+b,EAAUxJ,QAAQqI,WAAU,EAAKjB,UAAU,YAAImC,GAASjB,eAAe,EAAEa,QAAQ,GAAGS,WAAU,MAI3JpB,MC1EVE,GAAwBmB,GAAxBnB,UAAWW,GAAaQ,GAAbR,UAEVS,G,kDAGF,WAAY7V,GAAQ,uCACVA,G,oEAIV,SAAiC8V,IACG,IAA7BA,EAAU9F,MAAM2E,YAAqBmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAEtD,UAA7BkB,EAAU9F,MAAM1U,QAAQ,IACvBwa,EAAU7F,SAAS,CAAC0E,YAAW,IAEnCmB,EAAUC,cAEuB,IAA7BD,EAAU9F,MAAM2E,YAAqBmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAE3FkB,EAAU7F,SAAS,CAAC0E,YAAW,KAGL,IAA3BmB,EAAU9F,MAAM0E,UAAmBoB,EAAU9F,MAAMqE,eAAiByB,EAAU9F,MAAM4E,kBAEnD,UAA7BkB,EAAU9F,MAAM1U,QAAQ,IACvBwa,EAAU7F,SAAS,CAACyE,UAAS,IAEjCoB,EAAUjB,QAAQiB,KAEa,IAA3BA,EAAU9F,MAAM0E,UAAmBoB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAEzFkB,EAAU7F,SAAS,CAACyE,UAAS,IAE9BoB,EAAU9F,MAAM2F,WACfG,EAAU7F,SAAS,CAAC0F,WAAU,GAAOlB,GAAU,CAACjS,OAAO,CAACtB,GAAG4U,EAAU9F,MAAM1U,QAAQlB,SAAS0b,M,+BAIpG,WACI,IAAI7F,EAAW+F,KAAKhW,MAAMiQ,SACtBD,EAAQgG,KAAKhW,MAAMgQ,MACpBA,EAAMiG,WACL9V,YAAW,WACH8P,EAAS,2BAAIiG,GAAWlG,EAAMA,EAAMxW,eAA5B,IAA0Cyc,WAAU,OACjE,M,oBAIX,WAAS,IAAD,OAEAE,EAAY,GACZjB,EAAUc,KAAKhW,MAAMgQ,MAAMkF,QAC3B5Z,EAAU0a,KAAKhW,MAAMgQ,MAAM1U,QAC3B8a,EAAgBJ,KAAKhW,MAAMgQ,MAAMiG,UAAU,0BAA0B,iBACrEI,EAAgD,YAA/BL,KAAKhW,MAAMgQ,MAAMjT,YAAwBqZ,EAAc,gBACxEE,EAAgB,CAAC,yBAAK3V,QAAS,SAACuD,GAAD,OAAKqS,EAAarS,EAAE,EAAKlE,MAAMyU,KAAYvT,GAAI,EAAGN,UAAU,sBAAsBH,KAAM,GAAtG,QAEf+V,EAAmB,SAAAtS,GAErB,OADAA,EAAEA,EAAEoF,eACCxO,SAAS,KAAa,QAExBoJ,EAAEpJ,SAAS,KAAa,MACxBoJ,EAAEpJ,SAAS,KAAa,SACxBoJ,EAAEpJ,SAAS,KAAa,SACxBoJ,EAAEpJ,SAAS,KAAa,aAA3B,GAGHkb,KAAKhW,MAAMgQ,MAAMmD,UAAU/Y,OAE5B4b,KAAKhW,MAAMgQ,MAAMmD,UAAUxN,SAAQ,SAAC8Q,EAAGlc,GAAJ,OAAQkc,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GACzE,qCACK,UAALkc,GACCN,EAAU3b,KAAK,yBAAKiG,IAAKlG,EAAGsG,MAAO,CAACe,MAAM,SAAS,wBAAInB,IAAKlG,EAAGsG,MAAO,CAAC0D,OAAO,sBAAsBmS,WAAW,SAAqC,IAAvBJ,EAAclc,OAAW,UAAU,UAAgBkc,EAAc9b,KACpK,IAAvB8b,EAAclc,OAAW,yBAAKuG,QAAS,SAACuD,GAAD,OAAKqS,EAAarS,EAAE,EAAKlE,MAAMyU,KAAYvT,GAAI3G,EAAE,EAAGqG,UAAU,sBAAsBH,IAAKlG,GAAvG,QACzB,yBAAKoG,QAAS,SAACuD,GAAD,OAAKqS,EAAarS,EAAE,EAAKlE,MAAMyU,KAAYvT,GAAI3G,EAAE,EAAGqG,UAAU,sBAAsBH,IAAKlG,GAAvG,SAEJkc,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GAC9BA,IAAI,EAAKyF,MAAMgQ,MAAMqE,gBAAiB9Z,IAAI,EAAKyF,MAAMgQ,MAAMqE,eAAe,GAAGoC,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GAC3G4b,EAAU3b,KAAK,yBACX0G,GAAI3G,EAAE,EACNqG,UAAS,sCAAiC4V,EAAiBC,IAC3DhW,IAAKlG,GAAIkc,EAAG5X,QAAQ,IAAI4X,EAAG,GAAGA,EAAG,IAAI5X,QAAQ,IAAI,IAAI,MAEzDsX,EAAU3b,KAAK,yBACXmG,QAAS,SAACuD,GAAD,OAAKuQ,GAAUvQ,EAAE,EAAKlE,QAC/BkB,GAAI3G,EAAE,EACNqG,UAAS,uBAAkB4V,EAAiBC,IAC5ChW,IAAKlG,GAAIkc,EAAG5X,QAAQ,IAAI4X,EAAG,GAAGA,EAAG,IAAI5X,QAAQ,IAAI,IAAI,MAE7DtE,IAAI,EAAKyF,MAAMgQ,MAAMqE,gBAAiB9Z,IAAI,EAAKyF,MAAMgQ,MAAMqE,eAAe,GAAGoC,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GAC3G4b,EAAU3b,KAAK,yBACX0G,GAAI3G,EACJqG,UAAS,sCAAiC4V,EAAiBC,IAC3DhW,IAAKlG,GAAIkc,EAAG5X,QAAQ,IAAI4X,EAAG,GAAGA,EAAG,MAErCN,EAAU3b,KAAK,yBACXmG,QAAS,SAACuD,GAAD,OAAKuQ,GAAUvQ,EAAE,EAAKlE,QAC/BkB,GAAI3G,EAAGqG,UAAS,uBAAkB4V,EAAiBC,IACnDhW,IAAKlG,GAAIkc,EAAG5X,QAAQ,IAAI4X,EAAG,GAAGA,EAAG,SA9BjDN,EAAU3b,KAAK6b,GAiCfF,EAAU9N,KAAI,SAAAoO,GAAE,OAAE,kBAAC,KAAD,CAAUjV,OAAO,QAAjB,SAGlB,IAAImV,EACA,yBAAK/V,UAAU,gBACVsU,EAAQ9a,OAAO,GAAG,EACa,UAA5B8a,EAAQA,EAAQ9a,OAAO,GACnB8a,EAAQA,EAAQ9a,OAAO,GACnB8a,EAAQA,EAAQ9a,OAAO,KAAK8a,EAAQA,EAAQ9a,OAAO,GAC/C8a,EAAQA,EAAQ9a,OAAO,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAAIyE,QAAQ,IAAI,IAAI,EAEjHqW,EAAQA,EAAQ9a,OAAO,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAEjG,IAEJ8a,EAAQA,EAAQ9a,OAAO,KAAK8a,EAAQA,EAAQ9a,OAAO,GAC/C8a,EAAQA,EAAQ9a,OAAO,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAAIyE,QAAQ,IAAI,IAAI,EAEjHqW,EAAQA,EAAQ9a,OAAO,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAErG,KAGR2Y,EACA,yBAAKnS,UAAU,YACVtF,EAAQ,IAA4B,kBAAjBA,EAAQ,GAAG,IAA6B,MAAbA,EAAQ,GACtC,UAAbA,EAAQ,GACJA,EAAQ,GACJA,EAAQ,KAAKA,EAAQ,GACjBA,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAAIuD,QAAQ,IAAI,IAAI,EAEpEvD,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAEpD,IAEJA,EAAQ,KAAKA,EAAQ,GACjBA,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAAIuD,QAAQ,IAAI,IAAI,EAEpEvD,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAExD,KAmDZ,SAASsb,EAAY5W,GACjBA,EAAMiQ,SAAS,CAACyE,UAAS,EAAMC,YAAW,IAG9C,SAAS4B,EAAarS,EAAElE,EAAMyU,GAC1BzU,EAAMiQ,SAAS,CAAC4G,YAAW,IAC3BpC,EAAUvQ,EAAElE,GAGhB,SAAS8W,EAAY5S,EAAElE,GACnB,OAAOA,EAAMgQ,MAAMjT,aACf,IAAK,UACDqH,SAAS2S,cAAc,uBAAuBlW,MAAMmW,WAAW,UAC/D5S,SAAS2S,cAAc,uBAAuBlW,MAAMe,MAAM,OAC1DwC,SAAS2S,cAAc,oBAAoBlW,MAAMoW,QAAQ,OACzD7S,SAAS2S,cAAc,YAAYlW,MAAMoW,QAAQ,OACjD,MACJ,IAAK,aAEDjX,EAAMiQ,SAAS,CAACiH,WAAW,GAAGna,YAAY,QAAQoW,UAAU,GAAGgE,UAAU,GAAGjC,QAAQ,GAAG5Z,QAAQ,GAAG8b,eAAc,EAAMxC,kBAAkB,EAAGjY,WAAa,GAAG+X,UAAS,EAAMC,YAAW,EAAMG,YAAY,EAAMD,SAAU,EAAMa,WAAW,SACxO,MACJ,QACI1V,EAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,UAKvD,OAAO,yBAAKzW,UAAU,mBAClB,kBAAC0W,EAAA,EAAD,CAAKzW,MAAO,CAACe,MAAM,OAAOJ,OAAO,OAAOM,OAAO,IAC3C,kBAACyV,EAAA,EAAD,CAAKrW,GAAM8U,KAAKhW,MAAMwX,QAAuC,eAA/BxB,KAAKhW,MAAMgQ,MAAMjT,YAA8C,GAAlB,kBAAsB8D,MAAO,CAAC4W,YAAY,QAC/GzB,KAAKhW,MAAMwX,OAKH,oCACsB,eAA/BxB,KAAKhW,MAAMgQ,MAAMjT,YAA2B,oCAAE,kBAACua,EAAA,EAAD,CAAKzW,MAAO,CAAC4W,YAAY,SAGpE,4BAAQ5W,MAAO,CAACC,MAAM,YAAYe,gBAAgB,WAAYX,GAAG,WAAWiC,SAAU,SAACe,GAAD,OAAOkR,GAAUlR,EAAE1B,OAAOE,MAAM,EAAK1C,SAC1HyJ,GAAWpB,KAAI,SAAAgN,GAAI,OAAEA,EAAKzM,SAAS9N,SAAS,EAAKkF,MAAMgQ,MAAMvW,eAC1D,4BAAQmH,UAAU,aAAaM,GAAImU,EAAKrP,KAAMtD,MAAO2S,EAAKrP,KAAMvF,IAAK4U,EAAKrP,MAAOqP,EAAKrP,MACjF,QAGb,kBAACsR,EAAA,EAAD,CAAKzW,MAAO,CAAC4W,YAAY,SACrB,yBAAK7W,UAAU,aAEVuV,KAIC,oCACV,yBAAKvV,UAAU,qBAENuV,KAzBW,oCACpB,yBAAKvV,UAAU,eAEVuV,KA6BT,kBAACoB,EAAA,EAAD,CAAKrW,GAAM8U,KAAKhW,MAAMwX,QAAuC,eAA/BxB,KAAKhW,MAAMgQ,MAAMjT,YAA6C,sBAAjB,iBAAwC8D,MAAO,CAAC6W,aAAa,EAAED,YAAY,EAAEE,SAAS,UACzJ,yBAAK/W,UAAU,sBACH,yBAAKM,GAAG,mBAAmB+E,KAAK,KAC/B+P,KAAKhW,MAAMwX,OACR,yBAAK5W,UAAU,iBAAf,gCACA,yBAAKA,UAAU,iBAAf,uEAEJ,4BAAQD,QAlHpC,WACIyD,SAAS2S,cAAc,uBAAuBlW,MAAMmW,WAAW,SAC/D5S,SAAS2S,cAAc,oBAAoBlW,MAAMoW,QAAQ,QACzD7S,SAAS2S,cAAc,YAAYlW,MAAMoW,QAAQ,SA+GFrW,UAAU,mBAAjC,QAAgE,4BAAQD,QAAS,SAACuD,GAAD,OA5G7G,SAAeA,EAAElE,GAQb,GAPAkE,EAAEI,kBACFtE,EAAM4X,YAEFxT,SAAS2S,cAAc,gBACvB3S,SAAS2S,cAAc,eAAec,UAAUC,OAAO,cAGxD1T,SAAS2S,cAAc,qBAAqB9Q,KAAK,CAChD,IAAIA,EAAO7B,SAAS2S,cAAc,qBAAqB9Q,KAAKe,MAAM,KAClE,GAAa,gBAAVf,EAAK,GAGJ,OAFAjG,EAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,OAAOD,eAAc,SAChEhT,SAAS2S,cAAc,qBAAqB9Q,KAAK,IAGrD7B,SAAS2S,cAAT,WAA2B9Q,EAAK,KAAM4R,UAAU7I,IAAI,cACpDhP,EAAMiQ,SAAS,CAACiH,WAAWjR,EAAK,GAAGoR,aAAapR,EAAK,GAAGmR,eAAc,IACtEhT,SAAS2S,cAAc,qBAAqB9Q,KAAK,QAIjDjG,EAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,OAAOD,eAAc,IAuF0CW,CAAM7T,EAAE,EAAKlE,QAAQY,UAAU,mBAArD,UAEhF,yBAAKA,UAAU,mBAEX,yBAAKA,UAAU,6BACX,4BACIA,UAAS,eACTD,QAAS,kBAAM,EAAKX,MAAM+V,UAAU,EAAK/V,SAF7C,YAGU2W,IAGd,yBAAK/V,UAAU,2BACX,4BACIA,UAAS,eACTD,QAAS,kBAAM,EAAKX,MAAM6U,QAAQ,EAAK7U,SAF3C,QAGM+S,IAGV,yBAAKnS,UAAU,6BACVoV,KAAKhW,MAAMgQ,MAAM2E,WAClB,4BACI/T,UAAS,eACTD,QAAS,kBAAMiW,EAAY,EAAK5W,SACpC,yBAAKa,MAAO,CAACe,MAAM,SAAnB,SAHA,WAMA,4BACIhB,UAAS,eACTD,QAAS,WAAiB,EAAKX,MApG7CiQ,SAAS,CAACyE,UAAS,EAAMC,YAAW,EAAKC,iBAAiB,MAqGhD,yBAAK/T,MAAO,CAACe,MAAM,SAAnB,QAHA,YAOJ,yBAAKhB,UAAU,+BACXoV,KAAKhW,MAAMgQ,MAAM0E,SACjB,4BACI9T,UAAS,eACTD,QAAS,kBAAMiW,EAAY,EAAK5W,SACpC,yBAAKa,MAAO,CAACe,MAAM,SAAnB,SAHA,WAMA,4BACIhB,UAAS,eACTD,QAAS,WA9HjC,IAAqBX,KA8H8B,EAAKA,OA7H1CgQ,MAAM1U,QAAQlB,SACK,IAA7B4F,EAAMgQ,MAAM1U,QAAQlB,OAChB4F,EAAM6U,QAAQ7U,GACdA,EAAMiQ,SAAS,CACXyE,UAAS,EACTC,YAAW,EACXC,iBAAiB5U,EAAMgQ,MAAMmD,UAAU/Y,YAwH/B,yBAAKyG,MAAO,CAACe,MAAM,SAAnB,QAHA,cAUR,yBAAKhB,UAAU,UAAUC,MAAO,CAACe,MAAM,OAAOJ,OAAO,QAErB,YAA/BwU,KAAKhW,MAAMgQ,MAAMjT,YAAwB,oCACtC,4BAAQmE,GAAG,SAAS+E,KAAK,UAAUtF,QAAS,SAACuD,GAAD,OAAK4S,EAAY5S,EAAE,EAAKlE,QAAQY,UAAU,cAAtF,SACA,4BAAQM,GAAG,aAAa+E,KAAK,aAAatF,QAAS,SAACuD,GAAD,OAAK4S,EAAY5S,EAAE,EAAKlE,QAAQY,UAAU,cAA7F,gB,GA3TDoX,aAqURC,OAAMC,KAAKrC,ICzSXsC,I,MApCK,SAACnY,GAEjB,IASMoY,EAAcpY,EAAMc,MAAMuX,OAAO,GAAG9O,cAAgBvJ,EAAMc,MAAM8Q,MAAM,GACtE0G,EAAatY,EAAMc,QAAQd,EAAM8E,YAAY,GAAG9E,EAAMc,MAE5D,OACI,yBACIH,QAAS,SAAAuD,GAAIA,EAAEI,kBAAkBJ,EAAEqU,YAAYC,4BAC/C5X,UAAS,UAAKZ,EAAM3D,KAAK,uBAAuB,iBAAvC,YAA2D2D,EAAM7C,MAAM,EAAE,SAAS,YAC/F,4BACIyD,UAAS,sBAAiB0X,GAC1BzX,MAAO,CACHgB,gBAAgByW,EAAW,oBAAD,eAnBzB,CACT,MAAQ,CAAC,IAAI,IAAI,KACjB,KAAO,CAAC,EAAE,EAAE,KACZ,IAAM,CAAC,IAAI,EAAE,GACb,OAAS,CAAC,IAAI,IAAI,GAClB,OAAS,CAAC,IAAI,IAAI,GAClB,MAAQ,CAAC,EAAE,IAAI,IAauDtY,EAAMc,OAA1C,QAC1BA,MAAMd,EAAMc,OAEhBH,QAAS,SAACuD,GACLA,EAAEI,kBACHJ,EAAEqU,YAAYC,2BACdxY,EAAMyY,YAAYzY,EAAMc,SAEvBd,EAAM0Y,SAASN,EAAf,UAA8BpY,EAAM7C,MAApC,aAA8Cib,OC4EhDD,GAvGK,SAACnY,GACjB,MAAuC2Y,mBAAS,SAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAuCF,mBAAS,SAAhD,mBAAOG,EAAP,KAAoBC,EAApB,KAqDA,OACI,kBAACzB,EAAA,EAAD,CAAK1W,UAAU,eAAeC,MAAO,CAACW,OAAO,MAAMI,MAAM,OAAQoX,UAAU,mBAAmBC,UAAU,mBAAmBnX,OAAO,QAC9H,kBAACyV,EAAA,EAAD,KACI,yBAAK3W,UAAU,UAEPZ,EAAMoX,cACN,yBAAKxW,UAAU,cAAa,4BAAQA,UAAU,UAAUD,QAAS,kBAtDjFkY,EAAgB,uBAChB1Y,YAAW,WACPH,EAAMkZ,uBACP,OAoDiB,4BAAQrY,MAAO,CAACC,MAAM,QAAQmB,SAAS,SAAU2W,KACpC5Y,EAAMmZ,SAAS/e,OAGhB,GAFhB,yBAAKwG,UAAU,cAAa,4BAAQA,UAAU,UAAUD,QAAS,kBAlDjFoY,EAAgB,oBAChB5Y,YAAW,WACPH,EAAMoZ,iBACNL,EAAgB,WACjB,OA+CiB,4BAAQlY,MAAO,CAACC,MAAM,OAAOmB,SAAS,SAAU6W,KAGxD,yBAAKjY,MAAO,CAACoB,SAAS,UACjBjC,EAAMgQ,MAAMmJ,SAAS9Q,KAAI,SAACkL,EAAMhZ,GAAP,OACtB,uBAAGkG,IAAKlG,EAAGqG,UAAU,kBAAkB,KAAK2S,SAK5D,kBAACgE,EAAA,EAAD,CAAK1W,MAAO,CAACmB,QAAQ,QACjB,yBAAKpB,UAAU,gBACX,yBAAKM,GAAG,eAAe+E,KAAK,KAC3BjG,EAAM0Y,SACH,yBAAK9X,UAAU,aAAf,+BACA,yBAAKA,UAAU,aAAf,4EACJ,4BAAQD,QArCxB,WACIyD,SAAS2S,cAAc,iBAAiBlW,MAAMoW,QAAQ,OACtD7S,SAAS2S,cAAc,yBAAyBlW,MAAMmW,WAAW,WAmC9BpW,UAAU,eAAjC,QAA4D,4BAAQD,QA5DpF,WAOI,GANAX,EAAMqZ,iBAEFjV,SAAS2S,cAAc,gBACvB3S,SAAS2S,cAAc,eAAec,UAAUC,OAAO,cAGxD1T,SAAS2S,cAAc,iBAAiB9Q,KAAK,CAC5C,IAAIA,EAAO7B,SAAS2S,cAAc,iBAAiB9Q,KAAKe,MAAM,KAC9D,GAAa,WAAVf,EAAK,GAGJ,OAFAjG,EAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,OAAOD,eAAc,SAChEhT,SAAS2S,cAAc,iBAAiB9Q,KAAK,IAGjD7B,SAAS2S,cAAT,WAA2B9Q,EAAK,KAAM4R,UAAU7I,IAAI,cACpD5K,SAAS2S,cAAc,iBAAiB9Q,KAAK,GAE7CjG,EAAMiQ,SAAS,CAACiH,WAAWjR,EAAK,GAAGlJ,YAAYkJ,EAAK,GAAGmR,eAAc,IAAO,kBAAIpX,EAAMsZ,qBAGtFtZ,EAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,OAAOD,eAAc,KAwC4BxW,UAAU,eAAlC,UAEhE,yBAAKA,UAAU,wBA/EZ,CAAC,QAAQ,OAAO,MAAM,SAAS,SAAS,SAiF/ByH,KAAI,SAACvH,EAAMvG,GAAP,OAAW,kBAACgf,GAAD,CACnBpc,MAAO5C,EAAE,EACTkG,IAAKK,EACLA,MAAOA,EACPgE,YAAa9E,EAAM8E,YACnB2T,YAAazY,EAAMyY,YACnBC,SAAU1Y,EAAM0Y,cAEpB,yBAAK9X,UAAU,iBAAiBC,MAAO,CAAC0B,cAAc,MAAMX,MAAM,SAC9D,4BAAQV,GAAG,cAAc+E,KAAK,eAAetF,QA7CjE,SAAqBuD,GACjBE,SAAS2S,cAAc,iBAAiBlW,MAAMoW,QAAQ,QACtD7S,SAAS2S,cAAc,iBAAiBlW,MAAMe,MAAM,OACpDwC,SAAS2S,cAAc,yBAAyBlW,MAAMmW,WAAW,UA0CkBpW,UAAU,0CAA7E,aC6CT4Y,G,kDAlIX,WAAYxZ,GAAQ,uCACVA,G,yDAGV,SAAsB8V,EAAW2D,GAE7B,OAAGzD,KAAKhW,MAAMgQ,MAAMmD,YAAY2C,EAAU9F,MAAMmD,YAK7C6C,KAAKhW,MAAMgQ,MAAMjT,cAAc+Y,EAAU9F,MAAMjT,cAE/CiZ,KAAKhW,MAAMgQ,MAAM0F,aAAaI,EAAU9F,MAAM0F,aAE7CM,KAAKhW,MAAMgQ,MAAM0F,aAAaI,EAAU9F,MAAM0F,YAC9CM,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,iBAChD2B,KAAKhW,MAAMgQ,MAAM2E,aAAYqB,KAAKhW,MAAMgQ,MAAM0E,UAC9CsB,KAAKhW,MAAMgQ,MAAM2E,aAAamB,EAAU9F,MAAM2E,YAC9CqB,KAAKhW,MAAMgQ,MAAM0E,WAAWoB,EAAU9F,MAAM0E,YAE/CsB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,oBAClDyB,EAAU9F,MAAM2E,YAAYmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,iBAAiB,QAC/FkB,EAAU9F,MAAM0E,UAAUoB,EAAU9F,MAAMqE,eAAiByB,EAAU9F,MAAM4E,iBAAiB,OAE3FkB,EAAU9F,MAAM2E,aAAYqB,KAAKhW,MAAMgQ,MAAM2E,gBAC7CmB,EAAU9F,MAAM0E,WAAUsB,KAAKhW,MAAMgQ,MAAM0E,aAE5CsB,KAAKhW,MAAMgQ,MAAMkH,aAAapB,EAAU9F,MAAMkH,YAC9ClB,KAAKhW,MAAMgQ,MAAMlL,cAAcgR,EAAU9F,MAAMlL,aAC/CkR,KAAKhW,MAAMgQ,MAAMjT,cAAc+Y,EAAU9F,MAAMjT,aAC/CiZ,KAAKhW,MAAMgQ,MAAMoH,gBAAgBtB,EAAU9F,MAAMoH,eACjDpB,KAAKhW,MAAMmZ,WAAWrD,EAAUqD,UAChCnD,KAAKhW,MAAMgQ,MAAM0J,YAAY5D,EAAU9F,MAAM0J,WAC7C1D,KAAKhW,MAAMgQ,MAAM6E,UAAUiB,EAAU9F,MAAM6E,UAC1CmB,KAAKhW,MAAMgQ,MAAM0E,cAElBsB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM0E,UAAYsB,KAAKhW,MAAMgQ,MAAMqE,eAAiB2B,KAAKhW,MAAMgQ,MAAM4E,qBAEpJoB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM2E,YAAcqB,KAAKhW,MAAMgQ,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM4E,4B,oBAK9J,WAAS,IAAD,OAEE+E,EAAalQ,GAAWyK,QAAO,SAAAuB,GAAG,OAAEA,EAAI7M,SAAS9N,SAAS,EAAKkF,MAAMgQ,MAAMvW,kBAAgBW,OAEjG,SAASwf,EAAiB1V,EAAElE,GACxB,OAAOkE,EAAE1B,OAAOtB,IACZ,IAAK,QACDlB,EAAMiQ,SAAS,CAACiH,WAAW,GAAGna,YAAY,UAC1C,MACJ,IAAK,WAC4B,SAA1BiD,EAAMgQ,MAAMjT,aACXiD,EAAM6Z,gBAEV,MACJ,QACI7Z,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGnE,YAAY,UAI/D,SAAS+Z,EAAY5S,EAAElE,GACU,SAA1BA,EAAMgQ,MAAMjT,cACM,gBAAdmH,EAAE1B,OAAOtB,IAERlB,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGkW,eAAc,IACrDpX,EAAM8Z,oBAEY,WAAd5V,EAAE1B,OAAOtB,IACblB,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,KACpClB,EAAMsZ,cAEY,eAAdpV,EAAE1B,OAAOtB,IAEblB,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGnE,YAAY,aAAakZ,WAAU,EAAM9C,UAAU,GAAG+B,QAAQ,GAAG5Z,QAAQ,MAK5H,OACA,yBAAKsF,UAAU,eACwB,SAAjCoV,KAAKhW,MAAMgQ,MAAMjT,aAAyD,cAAjCiZ,KAAKhW,MAAMgQ,MAAMjT,aAA8D,SAAjCiZ,KAAKhW,MAAMgQ,MAAMjT,aAAyD,SAAjCiZ,KAAKhW,MAAMgQ,MAAMjT,aAAyD,eAAjCiZ,KAAKhW,MAAMgQ,MAAMjT,aAA6D,UAA9BiZ,KAAKhW,MAAMgQ,MAAMkH,WAwBvM,iBAAjClB,KAAKhW,MAAMgQ,MAAMjT,YACjB,kBAAC,GAAD,iBAAiBiZ,KAAKhW,MAAtB,CAA6B0Y,UAAU,KACN,YAAjC1C,KAAKhW,MAAMgQ,MAAMjT,YACjB,kBAAC,GAAD,iBAAciZ,KAAKhW,MAAnB,CAA0BwX,QAAQ,KACD,eAAjCxB,KAAKhW,MAAMgQ,MAAMjT,YACjB,oCAAE,kBAAC,GAAD,iBAAciZ,KAAKhW,MAAnB,CAA0BwX,QAAQ,MAEN,UAA9BxB,KAAKhW,MAAMgQ,MAAMkH,WACb,kBAACI,EAAA,EAAD,CAAKzW,MAAO,CAACW,OAAQ,SACjB,kBAAC+V,EAAA,EAAD,CAAKwC,GAAI,GACL,yBAAK7Y,GAAG,UAAUL,MAAO,CAACoB,SAAS,OAAOD,QAAQ,EAAEiV,QAAQ,UAAWtW,QAAS,WAAK,EAAKX,MAAMiQ,SAAS,CAACiH,WAAW,OAArH,WAEJ,kBAACK,EAAA,EAAD,CAAKwC,GAAI,IACL,kBAAC,EAAa/D,KAAKhW,SAG9B,qCAvCD,kBAACsX,EAAA,EAAD,CAAKzW,MAAO,CAACe,MAAM,OAAQJ,OAAO,OAAQM,OAAQ,IAC9C,kBAACyV,EAAA,EAAD,CAAKwC,GAAI,EAAGlZ,MAAO,CAAC6W,aAAa,UAC5B1B,KAAKhW,MAAMgQ,MAAMvW,eA3FpB,IA4FM,oCAAE,4BAAQmH,UAAU,eAAeM,GAAG,cAAc+E,KAAK,eAAetF,QAAS,SAACuD,GAAD,OAAK4S,EAAY5S,EAAE,EAAKlE,QAAQS,IAAK,GAApH,gBACF,4BAAQG,UAAU,eAAeM,GAAG,SAAS+E,KAAK,UAAUtF,QAAS,SAACuD,GAAD,OAAK4S,EAAY5S,EAAE,EAAKlE,QAAQS,IAAK,GAA1G,WACC,oCACD,4BAAQG,UAAU,cAAcH,IAAK,IACrC,4BAAQG,UAAU,cAAcH,IAAK,KAExCkZ,EACG,4BAAQ/Y,UAAU,eAAeM,GAAG,aAAa+E,KAAK,aAAatF,QAAS,SAACuD,GAAD,OAAK4S,EAAY5S,EAAE,EAAKlE,QAAQS,IAAK,GAAjH,YAAsI,IAG9I,kBAAC8W,EAAA,EAAD,CAAKwC,GAAI,EAAGlZ,MAAO,CAAC4W,YAAY,UAC3BzB,KAAKhW,MAAMgQ,MAAMvW,cAAc,EAC5B,4BAAQmH,UAAU,eAAeD,QAAS,kBAAIiZ,GAAkBnZ,IAAK,GAArE,SACA,4BAAQG,UAAU,cAAcH,IAAK,IAEzC,4BAAQG,UAAU,eAAeM,GAAG,WAAWP,QAAS,SAACuD,GAAD,OAAK0V,EAAiB1V,EAAE,EAAKlE,QAAQS,IAAK,GAAlG,YACA,4BAAQG,UAAU,eAAeM,GAAG,QAAQP,QAAS,SAACuD,GAAD,OAAK0V,EAAiB1V,EAAE,EAAKlE,QAASS,IAAK,GAAhG,gB,GA1GHuX,aCmENC,I,OAAAA,IAAMC,MAtED,SAAAlY,GACZ,IAAIga,EACAvQ,GACKyK,QAAO,SAAAmB,GAAI,OAAEA,EAAKzM,SAAS9N,SAASkF,EAAMgQ,MAAMvW,kBAChD4O,KAAI,SAAAgN,GAAI,OACL,4BACInU,GAAImU,EAAKrP,KACTvF,IAAK4U,EAAKrP,KACVpF,UACIZ,EAAMgQ,MAAM0F,aAAaL,EAAKrP,KAC1B,wBAAwB,aAEhCrF,QAAS,SAACuD,GAAD,OAazB,SAAmBA,EAAElE,GACjB,GAAGA,EAAMgQ,MAAM0E,UAAU1U,EAAMgQ,MAAM2E,YAAY3U,EAAMgQ,MAAM6E,QAAS,OACtE,IAAI9G,EAAK/N,EAAMgQ,MAAMvW,cACjB4b,EAAOnR,EAAE1B,OAAOtB,GAChBoU,EAAU,GACVC,EAAY1b,GAAK6R,eAAeqC,EAAGA,EAAGA,GAC1CtE,GAAW9D,SAAQ,SAAAzB,GACZA,EAAE/F,OAAO+F,EAAE8B,OAAOqP,GAAMnR,EAAE0E,SAAS9N,SAASiT,IAAKuH,EAAQ9a,KAAR,MAAA8a,EAAO,YAASpR,EAAE/F,MAAM6I,MAAM,UAGtFhH,EAAMiQ,SAAS,CAACyF,WAAWL,EAAK/Z,QAAQ,GAAD,OAAKga,GAAS9b,aAAe+b,EAAUxJ,QAAQqI,WAAU,EAAKjB,UAAU,GAAD,OAAKmC,GAASjB,eAAe,EAAEa,QAAQ,GAAGR,UAAS,EAAMC,YAAW,EAAMG,YAAY,EAAMD,SAAU,EAAMc,WAAU,IAvB1MP,CAAUlR,EAAElE,KACzBqV,EAAKrP,SAIhBiU,EAAc,oCAChBja,EAAMgQ,MAAMvW,eArBF,IAqB+B,4BAAQyH,GAAG,cAAcT,IAAI,eAAewF,KAAK,eAAetF,QAASmW,EAAalW,UAAU,cAAhG,gBAAmI,4BAAQA,UAAU,qBAC9LZ,EAAMgQ,MAAMvW,eArBE,IAqB+B,4BAAQyH,GAAG,SAAST,IAAI,QAAQwF,KAAK,UAAUtF,QAASmW,EAAalW,UAAU,cAA/E,UAA4G,4BAAQA,UAAU,qBAC3KoZ,EAAa5f,OAAO,4BAAQ8G,GAAG,aAAaT,IAAI,aAAawF,KAAK,OAAOtF,QAASmW,EAAalW,UAAU,cAArF,YAAoH,4BAAQA,UAAU,sBAkB9J,SAASkW,EAAY5S,GACY,SAA1BlE,EAAMgQ,MAAMjT,cACM,gBAAdmH,EAAE1B,OAAOtB,IAERlB,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGkW,eAAc,IACrDpX,EAAM8Z,oBAEY,WAAd5V,EAAE1B,OAAOtB,GACblB,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,IAAIlB,EAAMsZ,cAG5B,eAAdpV,EAAE1B,OAAOtB,IACbpD,QAAQC,IAAIiC,EAAMgQ,MAAMjT,aAExBiD,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGnE,YAAY,aAAakZ,WAAU,EAAM9C,UAAU,GAAG+B,QAAQ,GAAG5Z,QAAQ,GAAGoa,WAAW,MAE7H1V,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGnE,YAAY,UAGhE,OACA,yBAAK6D,UAAU,sBACgB,YAA1BZ,EAAMgQ,MAAMjT,YAAwB,GACX,iBAA1BiD,EAAMgQ,MAAMjT,YAA6B,oCAAE,yBAAK8D,MAAO,CAACwB,WAAW,SACnE,4BAAQnB,GAAG,cAAc+E,KAAK,eAAexF,IAAI,eAAeE,QAASmW,EAAalW,UAAU,uBAAhG,SAC0B,eAA1BZ,EAAMgQ,MAAMjT,YACZ,yBAAK6D,UAAU,YACVoZ,GACEC,OCjCJhC,OAAMC,MArCI,SAAAlY,GAErB,IAAMia,EAAc,oCAEhB,4BAAQrZ,UAAU,oBAAoBH,IAAI,UAC1C,4BAAQS,GAAG,WAAWT,IAAI,WAAWE,QAASiZ,EAAkBhZ,UAAU,wBAA1E,YAGA,4BAAQM,GAAG,QAAQT,IAAI,QAAQE,QAASiZ,EAAkBhZ,UAAU,qBAApE,UAKJ,SAASgZ,EAAiB1V,GACtB,OAAOA,EAAE1B,OAAOtB,IACZ,IAAK,QACDlB,EAAMiQ,SAAS,CAACiH,WAAW,GAAGna,YAAY,UAC1C,MACJ,IAAK,WAC4B,SAA1BiD,EAAMgQ,MAAMjT,aACXiD,EAAM6Z,gBAEV,MACJ,QACI7Z,EAAMiQ,SAAS,CAACiH,WAAWhT,EAAE1B,OAAOtB,GAAGnE,YAAY,UAI/D,OACI,yBAAK6D,UAAU,qBAAqBC,MAAO,CAACU,MAAM,UACnB,YAA1BvB,EAAMgQ,MAAMjT,aAAmD,iBAA1BiD,EAAMgQ,MAAMjT,aAAwD,eAA1BiD,EAAMgQ,MAAMjT,YAA2B,oCAAE,yBAAK8D,MAAO,CAACwB,WAAW,UACzI4X,MCxBdC,G,kDAEF,WAAYla,GAAQ,uCACVA,G,yDAGV,SAAsB8V,EAAW2D,GAC7B,OAAGzD,KAAKhW,MAAMgQ,MAAMmK,WAAWrE,EAAU9F,MAAMmK,WAG5CnE,KAAKhW,MAAMgQ,MAAMmD,YAAY2C,EAAU9F,MAAMmD,YAI7C6C,KAAKhW,MAAMgQ,MAAMjT,cAAc+Y,EAAU9F,MAAMjT,cAE/CiZ,KAAKhW,MAAMgQ,MAAM0F,aAAaI,EAAU9F,MAAM0F,aAE7CM,KAAKhW,MAAMgQ,MAAM0F,aAAaI,EAAU9F,MAAM0F,YAC9CM,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,iBAChD2B,KAAKhW,MAAMgQ,MAAM2E,aAAYqB,KAAKhW,MAAMgQ,MAAM0E,UAC9CsB,KAAKhW,MAAMgQ,MAAM2E,aAAamB,EAAU9F,MAAM2E,YAC9CqB,KAAKhW,MAAMgQ,MAAM0E,WAAWoB,EAAU9F,MAAM0E,YAE/CsB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,oBAClDyB,EAAU9F,MAAM2E,YAAYmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,iBAAiB,QAC/FkB,EAAU9F,MAAM0E,UAAUoB,EAAU9F,MAAMqE,eAAiByB,EAAU9F,MAAM4E,iBAAiB,OAE3FkB,EAAU9F,MAAM2E,aAAYqB,KAAKhW,MAAMgQ,MAAM2E,gBAC7CmB,EAAU9F,MAAM0E,WAAUsB,KAAKhW,MAAMgQ,MAAM0E,aAE5CsB,KAAKhW,MAAMgQ,MAAMkH,aAAapB,EAAU9F,MAAMkH,YAC9ClB,KAAKhW,MAAMgQ,MAAMlL,cAAcgR,EAAU9F,MAAMlL,aAC/CkR,KAAKhW,MAAMgQ,MAAMjT,cAAc+Y,EAAU9F,MAAMjT,aAC/CiZ,KAAKhW,MAAMgQ,MAAMoH,gBAAgBtB,EAAU9F,MAAMoH,eACjDpB,KAAKhW,MAAMmZ,WAAWrD,EAAUqD,UAChCnD,KAAKhW,MAAMgQ,MAAM0J,YAAY5D,EAAU9F,MAAM0J,WAC7C1D,KAAKhW,MAAMgQ,MAAM6E,UAAUiB,EAAU9F,MAAM6E,UAC1CmB,KAAKhW,MAAMgQ,MAAM0E,cAElBsB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM0E,UAAYsB,KAAKhW,MAAMgQ,MAAMqE,eAAiB2B,KAAKhW,MAAMgQ,MAAM4E,qBAEpJoB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM2E,YAAcqB,KAAKhW,MAAMgQ,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM4E,6B,oBAI9J,WAEI,IAAIsC,EACJ,OAAOlB,KAAKhW,MAAMgQ,MAAMkH,YACpB,IAAK,QACDA,EAAa,kBAAC,EAAalB,KAAKhW,OAChC,MACJ,IAAK,cACDkX,EAAa,kBAAC,GAAgBlB,KAAKhW,OACnC,MACJ,IAAK,SAGL,IAAK,aACDkX,EAAW,kBAAC,GAAalB,KAAKhW,OAC9B,MACJ,QACIkX,EAAW,GAKnB,OACA,yBAAKtW,UAAU,cAAcC,MAAO,CAACuZ,cAAe,SAChD,kBAAC9C,EAAA,EAAD,CAAKzW,MAAO,CAACW,OAAQ,OAAOM,OAAO,QACE,gBAA9BkU,KAAKhW,MAAMgQ,MAAMkH,YAA0D,WAA9BlB,KAAKhW,MAAMgQ,MAAMkH,WACjE,GACA,CAAC,kBAACK,EAAA,EAAD,CAAK9W,IAAI,cAAcI,MAAO,CAAC4W,YAAY,QACxC,kBAAC,GAAgBzB,KAAKhW,QAE1B,kBAACuX,EAAA,EAAD,CAAK9W,IAAI,qBAAqBI,MAAO,CAACmB,QAAQ,EAAGlB,MAAM,QAAQuN,QAAQ,GAAI0L,GAAI,IAA/E,MAGA,kBAACxC,EAAA,EAAD,CACIrW,GAAG,UACHL,MAAO,CAAC8B,SAAS,WAAW0X,OAAO,IAAI7Y,OAAO,QAC9CuY,GACmC,iBAA/B/D,KAAKhW,MAAMgQ,MAAMjT,aAA4D,WAA9BiZ,KAAKhW,MAAMgQ,MAAMkH,WAChE,GAAkC,SAA/BlB,KAAKhW,MAAMgQ,MAAMjT,aAAqD,eAA/BiZ,KAAKhW,MAAMgQ,MAAMjT,aAA2D,UAA/BiZ,KAAKhW,MAAMgQ,MAAMjT,YAAsB,EAAE,GACnIma,GAE2B,gBAA9BlB,KAAKhW,MAAMgQ,MAAMkH,YAA0D,WAA9BlB,KAAKhW,MAAMgQ,MAAMkH,YAAqD,eAA9BlB,KAAKhW,MAAMgQ,MAAMkH,WACxG,GACA,CAAC,kBAACK,EAAA,EAAD,CAAK9W,IAAI,mBAAmBI,MAAO,CAACmB,QAAQ,EAAGlB,MAAM,QAAQuN,QAAQ,GAAI0L,GAAI,IAA7E,KAGD,kBAACxC,EAAA,EAAD,CAAK9W,IAAI,0BAA0BI,MAAO,CAAC4W,YAAY,MAAM6C,SAAU,QAAQ5C,aAAa,QACxF,kBAAC,GAAqB1B,KAAKhW,e,GA7F5BgY,aAqGJC,OAAMC,KAAKgC,IC7DXK,I,MA9CS,SAACva,GACrB,MAAuC2Y,mBAAS,SAAhD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAuCF,mBAAS,SAAhD,mBAAOG,EAAP,KAAoBC,EAApB,KAoBA,OACI,yBAAKnY,UAAU,0BACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,SAASC,MAAO,CAACe,MAAM,SAE1B5B,EAAMoX,cACN,yBAAKxW,UAAU,cAAa,4BAAQA,UAAU,UAAUD,QAxBvD,WACjBkY,EAAgB,kBAChB1Y,YAAW,WACPiE,SAAS2S,cAAc,iBAAiBlW,MAAMoW,QAAU,OACxD7S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,UAC1DhX,EAAMkZ,uBACP,OAmBiB,4BAAQrY,MAAO,CAACC,MAAM,QAAQmB,SAAS,SAAU2W,KACpC5Y,EAAMmZ,SAAS/e,OAGhB,GAFhB,yBAAKwG,UAAU,cAAa,4BAAQA,UAAU,UAAUD,QAlBvD,WACjBoY,EAAgB,eAChB5Y,YAAW,WACPH,EAAMoZ,iBACNL,EAAgB,WACjB,OAciB,4BAAQlY,MAAO,CAACC,MAAM,OAAOmB,SAAS,SAAU6W,KAGxD,yBAAKjY,MAAO,CAACoB,SAAS,UACjBjC,EAAMgQ,MAAMmJ,SAAS9Q,KAAI,SAACkL,EAAMhZ,GAAP,OACtB,uBAAGkG,IAAKlG,EAAGqG,UAAU,kBAAkB,KAAK2S,YChCnEkB,I,OAAuBmB,GAAvBnB,WAAUW,GAAaQ,GAAbR,UAETS,G,kDAGF,WAAY7V,GAAQ,uCACVA,G,oEAIV,SAAiC8V,IACG,IAA7BA,EAAU9F,MAAM2E,YAAqBmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAEtD,UAA7BkB,EAAU9F,MAAM1U,QAAQ,IACvBwa,EAAU7F,SAAS,CAAC0E,YAAW,IAEnCmB,EAAUC,cAEuB,IAA7BD,EAAU9F,MAAM2E,YAAqBmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAE3FkB,EAAU7F,SAAS,CAAC0E,YAAW,KAGL,IAA3BmB,EAAU9F,MAAM0E,UAAmBoB,EAAU9F,MAAMqE,eAAiByB,EAAU9F,MAAM4E,kBAEnD,UAA7BkB,EAAU9F,MAAM1U,QAAQ,IACvBwa,EAAU7F,SAAS,CAACyE,UAAS,IAEjCoB,EAAUjB,QAAQiB,KAEa,IAA3BA,EAAU9F,MAAM0E,UAAmBoB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAEzFkB,EAAU7F,SAAS,CAACyE,UAAS,IAE9BoB,EAAU9F,MAAM2F,WACfG,EAAU7F,SAAS,CAAC0F,WAAU,GAAOlB,GAAU,CAACjS,OAAO,CAACtB,GAAG4U,EAAU9F,MAAM1U,QAAQlB,SAAS0b,M,+BAIpG,WACI,IAAI7F,EAAW+F,KAAKhW,MAAMiQ,SACtBD,EAAQgG,KAAKhW,MAAMgQ,MACpBA,EAAMiG,WACL9V,YAAW,WACH8P,EAAS,2BAAIiG,GAAWlG,EAAMA,EAAMxW,eAA5B,IAA0Cyc,WAAU,OACjE,M,oBAIX,WAAS,IAAD,OAEAE,EAAY,GACZC,EAAgBJ,KAAKhW,MAAMgQ,MAAMiG,UAAU,0BAA0B,iBACrEI,EAAgD,YAA/BL,KAAKhW,MAAMgQ,MAAMjT,YAAwBqZ,EAAc,gBACxEE,EAAgB,CAAC,yBAAK3V,QAAS,SAACuD,GAAD,OAAKqS,EAAarS,EAAE,EAAKlE,MAAMyU,KAAYvT,GAAI,EAAGN,UAAU,sBAAsBH,KAAM,GAAtG,QAEf+V,EAAmB,SAAAtS,GAErB,OADAA,EAAEA,EAAEoF,eACCxO,SAAS,KAAa,QAExBoJ,EAAEpJ,SAAS,KAAa,MACxBoJ,EAAEpJ,SAAS,KAAa,SACxBoJ,EAAEpJ,SAAS,KAAa,SACxBoJ,EAAEpJ,SAAS,KAAa,aAA3B,GAGHkb,KAAKhW,MAAMgQ,MAAMmD,UAAU/Y,OAE5B4b,KAAKhW,MAAMgQ,MAAMmD,UAAUxN,SAAQ,SAAC8Q,EAAGlc,GAAJ,OAAQkc,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GACzE,qCACK,UAALkc,GACCN,EAAU3b,KAAK,yBAAKiG,IAAKlG,EAAGsG,MAAO,CAACe,MAAM,SAAS,wBAAInB,IAAKlG,EAAGsG,MAAO,CAAC0D,OAAO,sBAAsBmS,WAAW,SAAqC,IAAvBJ,EAAclc,OAAW,UAAU,UAAgBkc,EAAc9b,KACpK,IAAvB8b,EAAclc,OAAW,yBAAKuG,QAAS,SAACuD,GAAD,OAAKqS,EAAarS,EAAE,EAAKlE,MAAMyU,KAAYvT,GAAI3G,EAAE,EAAGqG,UAAU,sBAAsBH,IAAKlG,GAAvG,QACzB,yBAAKoG,QAAS,SAACuD,GAAD,OAAKqS,EAAarS,EAAE,EAAKlE,MAAMyU,KAAYvT,GAAI3G,EAAE,EAAGqG,UAAU,sBAAsBH,IAAKlG,GAAvG,SAEJkc,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GAC9BA,IAAI,EAAKyF,MAAMgQ,MAAMqE,gBAAiB9Z,IAAI,EAAKyF,MAAMgQ,MAAMqE,eAAe,GAAGoC,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GAC3G4b,EAAU3b,KAAK,yBACX0G,GAAI3G,EAAE,EACNqG,UAAS,sCAAiC4V,EAAiBC,IAC3DhW,IAAKlG,GAAIkc,EAAG5X,QAAH,WAAe4X,EAAG,IAAKA,EAAG,IAAI5X,QAAQ,IAAI,IAAI,MAE3DsX,EAAU3b,KAAK,yBACXmG,QAAS,SAACuD,GAAD,OAAKuQ,GAAUvQ,EAAE,EAAKlE,QAC/BkB,GAAI3G,EAAE,EACNqG,UAAS,uBAAkB4V,EAAiBC,IAC5ChW,IAAKlG,GAAIkc,EAAG5X,QAAH,WAAe4X,EAAG,IAAKA,EAAG,IAAI5X,QAAQ,IAAI,IAAI,MAE/DtE,IAAI,EAAKyF,MAAMgQ,MAAMqE,gBAAiB9Z,IAAI,EAAKyF,MAAMgQ,MAAMqE,eAAe,GAAGoC,IAAK,EAAKzW,MAAMgQ,MAAMmD,UAAU5Y,EAAE,GAC3G4b,EAAU3b,KAAK,yBACX0G,GAAI3G,EACJqG,UAAS,sCAAiC4V,EAAiBC,IAC3DhW,IAAKlG,GAAIkc,EAAG5X,QAAH,WAAe4X,EAAG,IAAKA,EAAG,MAEvCN,EAAU3b,KAAK,yBACXmG,QAAS,SAACuD,GAAD,OAAKuQ,GAAUvQ,EAAE,EAAKlE,QAC/BkB,GAAI3G,EAAGqG,UAAS,uBAAkB4V,EAAiBC,IACnDhW,IAAKlG,GAAIkc,EAAG5X,QAAH,WAAe4X,EAAG,IAAKA,EAAG,SA9BnDN,EAAU3b,KAAK6b,GAiCfF,EAAU9N,KAAI,SAAAoO,GAAE,OAAE,kBAAC,KAAD,CAAUjV,OAAO,QAAjB,SAElB,IAAIwY,EACAvQ,GACKyK,QAAO,SAAAmB,GAAI,OAAEA,EAAKzM,SAAS9N,SAAS,EAAKkF,MAAMgQ,MAAMvW,kBACrD4O,KAAI,SAAAgN,GAAI,OACL,4BACInU,GAAImU,EAAKrP,KACTvF,IAAK4U,EAAKrP,KACVpF,UACI,EAAKZ,MAAMgQ,MAAM0F,aAAaL,EAAKrP,KAC/B,wBAAwB,aAEhCrF,QAAS,kBAAIyU,GAAUC,EAAKrP,KAAK,EAAKhG,SACrCqV,EAAKrP,SAItB,SAASuQ,EAAarS,EAAElE,EAAMyU,GAC1BzU,EAAMiQ,SAAS,CAAC4G,YAAW,IAC3BpC,EAAUvQ,EAAElE,GAGhB,OACI,yBAAKY,UAAU,YACX,yBAAKA,UAAU,0BACqB,YAA/BoV,KAAKhW,MAAMgQ,MAAMjT,YAClB,yBAAK6D,UAAU,gBAEVuV,GAGL,CACA,yBAAKvV,UAAU,eAAeH,IAAI,gBAC9B,yBAAKG,UAAU,WAAWC,MAAO,CAAC8W,SAAS,UACtCqC,IAGT,yBAAKpZ,UAAU,eAAeH,IAAI,gBAC9B,yBAAKG,UAAU,gBAEVuV,W,GA3IN6B,aAuJRC,OAAMC,KAAKrC,IC7JpB2E,G,kDAGF,WAAYxa,GAAQ,uCACVA,G,oEAIV,SAAiC8V,IACM,IAA/BA,EAAU9F,MAAM2E,YAAuBmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAEtD,UAA/BkB,EAAU9F,MAAM1U,QAAQ,IACxBwa,EAAU7F,SAAS,CAAE0E,YAAY,IAErCmB,EAAUC,cAE0B,IAA/BD,EAAU9F,MAAM2E,YAAuBmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAE9FkB,EAAU7F,SAAS,CAAE0E,YAAY,KAGJ,IAA7BmB,EAAU9F,MAAM0E,UAAqBoB,EAAU9F,MAAMqE,eAAiByB,EAAU9F,MAAM4E,kBAEnD,UAA/BkB,EAAU9F,MAAM1U,QAAQ,IACxBwa,EAAU7F,SAAS,CAAEyE,UAAU,IAEnCoB,EAAUjB,QAAQiB,KAEgB,IAA7BA,EAAU9F,MAAM0E,UAAqBoB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,kBAE5FkB,EAAU7F,SAAS,CAAEyE,UAAU,M,gCAOvC,WACQtQ,SAAS2S,cAAc,oBAAsBf,KAAKhW,MAAMgQ,MAAM6G,aAC9DzS,SAAS2S,cAAc,mBAAmB0D,gBAAe,GACzDzE,KAAKhW,MAAMiQ,SAAS,CAAE4G,YAAY,O,oBAI1C,WAAU,IAAD,OACD3B,EAAUc,KAAKhW,MAAMgQ,MAAMkF,QAC3B5Z,EAAU0a,KAAKhW,MAAMgQ,MAAM1U,QAE3Bqb,EACA,yBAAK/V,UAAU,gBACVsU,EAAQ9a,OAAS,GAAK,EACa,UAAhC8a,EAAQA,EAAQ9a,OAAS,GACrB8a,EAAQA,EAAQ9a,OAAS,GACrB8a,EAAQA,EAAQ9a,OAAS,KAAO8a,EAAQA,EAAQ9a,OAAS,GACrD8a,EAAQA,EAAQ9a,OAAS,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAAIyE,QAAQ,IAAK,IAAM,EAEtHqW,EAAQA,EAAQ9a,OAAS,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAEnG,IAEJ8a,EAAQA,EAAQ9a,OAAS,KAAO8a,EAAQA,EAAQ9a,OAAS,GACrD8a,EAAQA,EAAQ9a,OAAS,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAAIyE,QAAQ,IAAK,IAAM,EAEtHqW,EAAQA,EAAQ9a,OAAS,GAAGyE,QAAQ,IAAIqW,EAAQA,EAAQ9a,OAAO,GAAG,GAAG8a,EAAQA,EAAQ9a,OAAO,GAAG,IAEvG,KAGR2Y,EACA,yBAAKnS,UAAU,YACVtF,EAAQ,IAAiC,kBAAnBA,EAAQ,GAAG,IAAmC,MAAfA,EAAQ,GAC3C,UAAfA,EAAQ,GACJA,EAAQ,GACJA,EAAQ,KAAOA,EAAQ,GACnBA,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAAIuD,QAAQ,IAAK,IAAM,EAEvEvD,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAEpD,IAEJA,EAAQ,KAAOA,EAAQ,GACnBA,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAAIuD,QAAQ,IAAK,IAAM,EAEvEvD,EAAQ,GAAGuD,QAAQ,IAAIvD,EAAQ,GAAG,GAAGA,EAAQ,GAAG,IAExD,KAoBZ,SAASsb,EAAY5W,GACjBA,EAAMiQ,SAAS,CAAEyE,UAAU,EAAOC,YAAY,IAIlD,OAAO,yBAAK/T,UAAU,gBAAgBC,MAAO,CAAEe,MAAM,SACjD,yBAAKhB,UAAU,iBAEf,yBAAKA,UAAU,6BACX,4BACIA,UAAS,eACTD,QAAS,kBAAM,EAAKX,MAAM+V,UAAU,EAAK/V,SAF7C,YAGc2W,IAGlB,yBAAK/V,UAAU,2BACX,4BACIA,UAAS,eACTD,QAAS,kBAAM,EAAKX,MAAM6U,QAAQ,EAAK7U,SAF3C,QAGU+S,IAGd,yBAAKnS,UAAU,6BACVoV,KAAKhW,MAAMgQ,MAAM2E,WACd,4BACI/T,UAAS,eACTD,QAAS,kBAAMiW,EAAY,EAAK5W,SAChC,yBAAKa,MAAO,CAAEe,MAAO,SAArB,SAHJ,WAMA,4BACIhB,UAAS,eACTD,QAAS,WAAiB,EAAKX,MAnCrCiQ,SAAS,CAAEyE,UAAU,EAAOC,YAAY,EAAMC,iBAAkB,MAoC1D,yBAAK/T,MAAO,CAAEe,MAAO,SAArB,QAHJ,YAOR,yBAAKhB,UAAU,+BACVoV,KAAKhW,MAAMgQ,MAAM0E,SACd,4BACI9T,UAAS,eACTD,QAAS,kBAAMiW,EAAY,EAAK5W,SAChC,yBAAKa,MAAO,CAAEe,MAAO,SAArB,SAHJ,WAMA,4BACIhB,UAAS,eACTD,QAAS,WA9DzB,IAAqBX,KA8DsB,EAAKA,OA7DjCgQ,MAAM1U,QAAQlB,SACM,IAA/B4F,EAAMgQ,MAAM1U,QAAQlB,OAChB4F,EAAM6U,QAAQ7U,GACdA,EAAMiQ,SAAS,CACXyE,UAAU,EACVC,YAAY,EACZC,iBAAkB5U,EAAMgQ,MAAMmD,UAAU/Y,YAwDpC,yBAAKyG,MAAO,CAAEe,MAAO,SAArB,QAHJ,mB,GAtJaoW,aAoKlBC,OAAMC,KAAKsC,ICzIXE,GA5BmB,SAAC1a,GAC/B,IACM2a,EAAK,GAOX,OANA3a,EAAMmZ,SAASxT,SAAQ,SAAS4N,EAAMhZ,GAClCogB,EAAGngB,KAAK,uBAAGiG,IAAKlG,EAAGsG,MAAO,CAACC,MAAM,MAAMmB,SAAS,QAAQE,UAAU,OAAOyY,UAAU,OAAO9Y,OAAO,MAAM+Y,WAAY,SAC9G,KAAKtH,OAKV,yBAAK3S,UAAU,gBAAgBC,MAAO,CAAEe,MAAM,SAC1C,yBAAKhB,UAAU,wBAVR,CAAC,QAAQ,OAAO,MAAM,SAAS,SAAS,SAWnCyH,KAAI,SAACvH,EAAMvG,GAAP,OAAW,kBAACgf,GAAD,CACnBpc,MAAO5C,EAAE,EACTkG,IAAKK,EACLU,OAAQ,EAAE,EAAE,IACZV,MAAOA,EACPzE,MAAM,EACNyI,YAAa9E,EAAM8E,YACnB2T,YAAazY,EAAMyY,YACnBC,SAAU1Y,EAAM0Y,iBCVrBoC,I,OAVY,SAAA9a,GACvB,OACI,yBAAKY,UAAU,qBAAqBC,MAAO,CAACW,OAAO,GAAD,OAAI,EAAE,EAAE,IAAR,OAC9C,4BAAQZ,UAAU,iBAAiBD,QAASX,EAAMW,SAC7CX,EAAMgG,SC2DR+U,GA7DM,SAAA/a,GAEjB,IAAIga,EAAegB,GAAK9G,QAAO,SAAAmB,GAAI,OAAEA,EAAKzM,SAAS9N,SAASkF,EAAMgQ,MAAMvW,kBA6BxE,OACI,yBAAKmH,UAAU,0BACVZ,EAAMgQ,MAAMvW,eAAe,IAAI,kBAAC,GAAD,CAC5BuM,KAAK,eACLrF,QA/BZ,WACiC,SAA1BX,EAAMgQ,MAAMjT,cACXiD,EAAMiQ,SAAS,CAACiH,WAAW,cAAcE,eAAc,IACvDpX,EAAM8Z,uBA6BH,GACF9Z,EAAMgQ,MAAMvW,eAAe,IAC5B,kBAAC,GAAD,CACIuM,KAAK,SACLrF,QA7BZ,WACiC,SAA1BX,EAAMgQ,MAAMjT,aACXiD,EAAMiQ,SAAS,CAACiH,WAAW,UAAUlX,EAAMsZ,iBA4BxC,GACFU,EAAa5f,OAAO,EAAE,kBAAC,GAAD,CACnB4L,KAAK,WACLrF,QAlBZ,WACiC,SAA1BX,EAAMgQ,MAAMjT,aACXiD,EAAMiQ,SAAS,CAACiH,WAAW,aAAana,YAAY,aAAakZ,WAAU,EAAM9C,UAAU,GAAG+B,QAAQ,GAAG5Z,QAAQ,QAiB9G,GAIH,kBAAC,GAAD,CACI0K,KAAK,WACLrF,QAnCZ,WACiC,SAA1BX,EAAMgQ,MAAMjT,aACXiD,EAAMiQ,SAAS,CAACiH,WAAW,cAAclX,EAAM6Z,oBAmC/C,kBAAC,GAAD,CACI7T,KAAK,QACLrF,QAjCZ,WACIX,EAAMiQ,SAAS,CAACiH,WAAW,GAAGna,YAAY,eCnB5Cke,G,kDAEF,WAAYjb,GAAQ,uCACVA,G,yDAGV,SAAsB8V,EAAW2D,GAC7B,OAAGzD,KAAKhW,MAAMgQ,MAAMmK,WAAWrE,EAAU9F,MAAMmK,WAG5CnE,KAAKhW,MAAMgQ,MAAMmD,YAAY2C,EAAU9F,MAAMmD,YAK7C6C,KAAKhW,MAAMgQ,MAAMjT,cAAc+Y,EAAU9F,MAAMjT,cAE/CiZ,KAAKhW,MAAMgQ,MAAM0F,aAAaI,EAAU9F,MAAM0F,aAE7CM,KAAKhW,MAAMgQ,MAAM0F,aAAaI,EAAU9F,MAAM0F,YAC9CM,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,iBAChD2B,KAAKhW,MAAMgQ,MAAM2E,aAAYqB,KAAKhW,MAAMgQ,MAAM0E,UAC9CsB,KAAKhW,MAAMgQ,MAAM2E,aAAamB,EAAU9F,MAAM2E,YAC9CqB,KAAKhW,MAAMgQ,MAAM0E,WAAWoB,EAAU9F,MAAM0E,YAE/CsB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,oBAClDyB,EAAU9F,MAAM2E,YAAYmB,EAAU9F,MAAMqE,gBAAkByB,EAAU9F,MAAM4E,iBAAiB,QAC/FkB,EAAU9F,MAAM0E,UAAUoB,EAAU9F,MAAMqE,eAAiByB,EAAU9F,MAAM4E,iBAAiB,OAE3FkB,EAAU9F,MAAM2E,aAAYqB,KAAKhW,MAAMgQ,MAAM2E,gBAC7CmB,EAAU9F,MAAM0E,WAAUsB,KAAKhW,MAAMgQ,MAAM0E,aAE5CsB,KAAKhW,MAAMgQ,MAAMkH,aAAapB,EAAU9F,MAAMkH,YAC9ClB,KAAKhW,MAAMgQ,MAAMlL,cAAcgR,EAAU9F,MAAMlL,aAC/CkR,KAAKhW,MAAMgQ,MAAMjT,cAAc+Y,EAAU9F,MAAMjT,aAC/CiZ,KAAKhW,MAAMgQ,MAAMoH,gBAAgBtB,EAAU9F,MAAMoH,eACjDpB,KAAKhW,MAAMmZ,WAAWrD,EAAUqD,UAChCnD,KAAKhW,MAAMgQ,MAAM0J,YAAY5D,EAAU9F,MAAM0J,WAC7C1D,KAAKhW,MAAMgQ,MAAM6E,UAAUiB,EAAU9F,MAAM6E,UAC1CmB,KAAKhW,MAAMgQ,MAAM0E,cAElBsB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM0E,UAAYsB,KAAKhW,MAAMgQ,MAAMqE,eAAiB2B,KAAKhW,MAAMgQ,MAAM4E,qBAEpJoB,KAAKhW,MAAMgQ,MAAMqE,iBAAiByB,EAAU9F,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM2E,YAAcqB,KAAKhW,MAAMgQ,MAAMqE,gBAAkB2B,KAAKhW,MAAMgQ,MAAM4E,6B,oBAI9J,WAAS,IACDsC,EACAgE,EACAC,EAHA,OA+DJ,IA0BIC,EACA,4BACIla,GAAG,SACH+E,KAAK,UACLtF,QAvFU,WACdyD,SAAS2S,cAAc,uBAAuBlW,MAAMmW,WAAW,UAC/D5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,SAC1D5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,UAqFtDpW,UAAU,cAJd,QAMAya,EACA,4BACIna,GAAG,aACH+E,KAAK,aACLtF,QAlFO,WACX,EAAKX,MAAMiQ,SAAS,CAACiH,WAAW,GAAGna,YAAY,QAAQoW,UAAU,GAAGgE,UAAU,GAAGjC,QAAQ,GAAG5Z,QAAQ,GAAG8b,eAAc,EAAMxC,kBAAkB,EAAGjY,WAAa,GAAG+X,UAAS,EAAMC,YAAW,EAAMG,YAAY,EAAMD,SAAU,EAAMa,WAAW,UAkFzO9U,UAAU,cAJd,QAMA0a,EACA,4BACIpa,GAAG,cACH+E,KAAK,eACLtF,QA/FY,WAChByD,SAAS2S,cAAc,iBAAiBlW,MAAMoW,QAAQ,QACtD7S,SAAS2S,cAAc,yBAAyBlW,MAAMmW,WAAW,SACjE5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,UA6FtDpW,UAAU,cAJd,QAMA2a,EACA,yBAAKra,GAAG,gBAAgBN,UAAU,qBAAqBC,MAAO,CAAC8B,SAAS,WAAYE,KAAK,OAAQjB,MAAM,OAAQyY,OAAQ,QACnH,yBAAKnZ,GAAG,mBAAmB+E,KAAK,KAChC,yBAAKrF,UAAU,iBAAf,sEACA,4BAAQD,QA5FhB,WACIyD,SAAS2S,cAAc,uBAAuBlW,MAAMmW,WAAa,SACjE5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,UAC1D5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,WAyF/BpW,UAAU,mBAAjC,QAAgE,4BAAQD,QAAS,SAACuD,GAAD,OAhFzF,SAAeA,EAAGlE,GAUd,GATAoE,SAAS2S,cAAc,uBAAuBlW,MAAMmW,WAAa,SACjE5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,UAC1D9S,EAAEI,kBACFtE,EAAM4X,YAEFxT,SAAS2S,cAAc,gBACvB3S,SAAS2S,cAAc,eAAec,UAAUC,OAAO,cAGvD1T,SAAS2S,cAAc,qBAAqB9Q,KAAM,CAClD,IAAIA,EAAO7B,SAAS2S,cAAc,qBAAqB9Q,KAAKe,MAAM,KAClE,GAAgB,gBAAZf,EAAK,GAGL,OAFAjG,EAAMiQ,SAAS,CAAEiH,WAAY,GAAIG,aAAc,OAAQD,eAAe,SACtEhT,SAAS2S,cAAc,qBAAqB9Q,KAAO,IAGvD7B,SAAS2S,cAAT,WAA2B9Q,EAAK,KAAM4R,UAAU7I,IAAI,cACpDhP,EAAMiQ,SAAS,CAAEiH,WAAYjR,EAAK,GAAIoR,aAAcpR,EAAK,GAAImR,eAAe,IAC5EhT,SAAS2S,cAAc,qBAAqB9Q,KAAO,QAInDjG,EAAMiQ,SAAS,CAAEiH,WAAY,GAAIG,aAAc,OAAQD,eAAe,IAyDkBW,CAAM7T,EAAG,EAAKlE,QAAQY,UAAU,mBAAxD,UAGpE4a,EACA,yBAAKta,GAAG,gBAAgBN,UAAU,eAAeC,MAAO,CAAC8B,SAAS,WAAYE,KAAK,OAAQjB,MAAM,OAAQyY,OAAQ,QAC7G,yBAAKnZ,GAAG,eAAe+E,KAAK,KAC5B,yBAAKrF,UAAU,aAAf,4EACA,4BAAQD,QA7FhB,WACIyD,SAAS2S,cAAc,iBAAiBlW,MAAMoW,QAAU,OACxD7S,SAAS2S,cAAc,yBAAyBlW,MAAMmW,WAAW,UACjE5S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,WA0F7BpW,UAAU,eAAnC,QAA8D,4BAAQD,QA1D/D,WASX,GARAyD,SAAS2S,cAAc,iBAAiBlW,MAAMoW,QAAU,OACxD7S,SAAS2S,cAAc,kBAAkBlW,MAAMmW,WAAW,UAC1D,EAAKhX,MAAMqZ,iBAEPjV,SAAS2S,cAAc,gBACvB3S,SAAS2S,cAAc,eAAec,UAAUC,OAAO,cAGxD1T,SAAS2S,cAAc,iBAAiB9Q,KAAK,CAC5C,IAAIA,EAAO7B,SAAS2S,cAAc,iBAAiB9Q,KAAKe,MAAM,KAC9D,GAAa,WAAVf,EAAK,GAGJ,OAFA,EAAKjG,MAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,OAAOD,eAAc,SACrEhT,SAAS2S,cAAc,iBAAiB9Q,KAAK,IAGjD7B,SAAS2S,cAAT,WAA2B9Q,EAAK,KAAM4R,UAAU7I,IAAI,cACpD5K,SAAS2S,cAAc,iBAAiB9Q,KAAK,GAE7C,EAAKjG,MAAMiQ,SAAS,CAACiH,WAAWjR,EAAK,GAAGlJ,YAAYkJ,EAAK,GAAGmR,eAAc,IAAO,kBAAI,EAAKpX,MAAMsZ,qBAGhG,EAAKtZ,MAAMiQ,SAAS,CAACiH,WAAW,GAAGG,aAAa,OAAOD,eAAc,KAoCmBxW,UAAU,eAApC,UAGtE,OAAOoV,KAAKhW,MAAMgQ,MAAMkH,YACpB,IAAK,QACDA,EAAa,kBAAC,EAAalB,KAAKhW,OAChC,MACJ,IAAK,cACDkX,EAAa,kBAAC,GAAgBlB,KAAKhW,OACnCkb,EAAmB,kBAAC,GAA8BlF,KAAKhW,OACvDmb,EAAiBG,EACjB,MACJ,IAAK,SACDpE,EAAW,kBAAC,GAAiBlB,KAAKhW,OAClCkb,EAAiB,kBAAC,GAAuBlF,KAAKhW,OAC9Cmb,EAAeC,EACf,MACJ,IAAK,aACDlE,EAAW,kBAAC,GAAiBlB,KAAKhW,OAClCkb,EAAiB,kBAAC,GAAuBlF,KAAKhW,OAC9Cmb,EAAeE,EACf,MACJ,QACInE,EAAW,kBAAC,GAAiBlB,KAAKhW,OAClCkb,EAAiB,GAKzB,MACA,CAAC,yBAAKta,UAAU,kBAAkBH,IAAI,kBAAkBI,MAAO,CAACuZ,cAAe,SAC1ElD,GAEL,yBAAKtW,UAAU,oBAAoBH,IAAI,oBAAoBI,MAAO,CAACuZ,cAAe,SAC7EoB,EACAD,EACAL,EACD,yBAAKta,UAAU,iBACVua,S,GA9MMnD,aAqNRC,OAAMC,KAAK+C,IC3NpBQ,G,kDAEF,WAAYzb,GAAQ,uCACVA,G,yDAGV,SAAsB8V,EAAW2D,GAE7B,OAA8B,IAA3BzD,KAAKhW,MAAMgQ,MAAM0L,SAChB1F,KAAKhW,MAAMiQ,SAAS,CAACyL,SAAQ,KACtB,GAGR1F,KAAKhW,MAAMgQ,MAAMmK,WAAWrE,EAAU9F,MAAMmK,WAG5CnE,KAAKhW,MAAMgQ,MAAMmD,YAAY2C,EAAU9F,MAAMmD,YAKd,eAA/B6C,KAAKhW,MAAMgQ,MAAMjT,cAEjBiZ,KAAKhW,MAAMgQ,MAAMkH,aAAapB,EAAU9F,MAAMkH,YAA0C,SAA9BlB,KAAKhW,MAAMgQ,MAAMkH,cAG1C,eAA/BlB,KAAKhW,MAAMgQ,MAAMjT,aAA2D,YAA/BiZ,KAAKhW,MAAMgQ,MAAMjT,aAC/DiZ,KAAKhW,MAAMgQ,MAAM1U,UAAUwa,EAAU9F,MAAM1U,UAChB,IAA3B0a,KAAKhW,MAAMgQ,MAAM6E,UACW,IAA5BmB,KAAKhW,MAAMgQ,MAAM0E,WACa,IAA9BsB,KAAKhW,MAAMgQ,MAAM2E,aACY,IAA7BmB,EAAU9F,MAAM2E,gB,oBAKxB,WACI,IAAM3U,EAAQgW,KAAKhW,MACnB,OAAQI,OAAOqE,WAAa,KAAKrE,OAAOsE,YAAY,IAChD,kBAAC,GAAa1E,GACRI,OAAOqE,WAAa,IAC1B,kBAAC,GAASzE,GACV,kBAAC,GAAeA,O,GA1CTgY,aA8CJC,OAAMC,KAAKuD,I,iCC/CpBE,GAAyB,CAC3BC,cAD2B,SACbC,EAAOrW,GACjB,IAAIsW,EAAMD,EAAOlZ,SACboR,EAAQ,CAACxN,OAAOsV,EAAOtV,QACrBtI,EAAMuH,EAAK,EAYjB,OAVGsW,EADO,GACExe,KAAKC,MAAMiI,EAAK,IAAMsW,EADjB,IAC2Bxe,KAAKC,MAAMiI,EAAK,GAC1DuO,EAAMpR,SAAW,CAAG1E,EAAM6d,EAFX,GAEoBA,EAF3B,GAEmCA,EAFrB,IAE8B1d,KAAK,IAEnD0d,EAJE,IAIQxe,KAAKC,MAAMiI,EAAK,IAAMsW,EAJvB,IAIiCxe,KAAK4P,KAAK1H,EAAK,GAC/DuO,EAAMpR,SAAW,CAAG1E,EAAM6d,EALlB,GAK2B7d,EAAM6d,EAL1B,GAKkCA,EAL3B,IAKoC1d,KAAK,IAEzD0d,EAPE,IAOQxe,KAAK4P,KAAK1H,EAAK,IAAMsW,EAPtB,GAO+Bxe,KAAK4P,KAAK1H,EAAK,GAC7DuO,EAAMpR,SAAW,CAAEmZ,EARJ,GAQa7d,EAAI6d,EARxB,GAQiCA,EARnB,IAQ2B1d,KAAK,IAEnD2V,EAAMpR,SAASmZ,EAAI1d,KAAK,IACtB2V,GAGXgI,gBAAkB,SAAUC,EAAIC,GAI5B,IAHA,IAAIC,GAAU,EAEVC,EAAe,GACX5hB,EAAI,EAAGA,EAAIyhB,EAAG5hB,OAAQG,IAAK,CAEjC,IADA,IAAI6hB,EAAQ,EACJze,EAAI,EAAGA,EAAIse,EAAG7hB,OAAQuD,IACxBse,EAAGte,KAAOqe,EAAGzhB,IAAI6hB,IAEpBA,EAAM,IACPF,GAAU,EACNC,EAAarhB,SAASkhB,EAAGzhB,KAAK4hB,EAAa3hB,KAAKwhB,EAAGzhB,KAI3D,MAAO,CAAC2hB,UAAQC,eAAaE,OAbhB,IAgBjBC,oBAAsB,SAAUT,EAAOrW,GACnC,IAAMuO,EAAK,YAAO8H,GACZ5d,EAAMuH,EAAK,EACH+W,EAAK/W,EAAK,EAAEgX,EAAIhX,EAAK,EAAEiX,EAAOjX,EAAK,EAEjD,OAFY,IAETuO,EAAM,GACA,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACNA,EAAM,GACN9V,IAKH8V,EAAM,KAAKwI,EACL,CACLhW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACNA,EAAM,GACN9V,IAKH8V,EAAM,KAAKyI,EACL,CACLjW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACVA,EAAM,GACN9V,IAKH8V,EAAM,KAAK0I,EACL,CACLlW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN9V,EAAI8V,EAAM,GACV9V,IArEoD,IA0EvD8V,EAAM,GACA,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACNA,EAAM,GACN9V,IAvF4D,IA4F/D8V,EAAM,GACA,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACVA,EAAM,GACN9V,SAbN,GAoBJye,sBAxJ2B,SAwJLC,EAAWC,EAAYpX,GACzC,IAAIqX,EAAgBlB,GAAuBC,cAAcD,GAAuBW,oBAAoBK,EAAWnX,GAAMA,GACjHsX,EAAiBnB,GAAuBC,cAAcD,GAAuBW,oBAAoBM,EAAYpX,GAAMA,GACvH,OAAGqX,EAActW,SAASuW,EAAevW,QAAQsW,EAAcla,WAAWma,EAAena,UAM7Foa,uBAAyB,SAAUlB,EAAOrW,GACtC,IAAMuO,EAAK,YAAO8H,GACZ5d,EAAMuH,EAAK,EACH+W,EAAK/W,EAAK,EAAEgX,EAAIhX,EAAK,EAAEiX,EAAOjX,EAAK,EAGjD,OAHY,IAGTuO,EAAM,IAAYA,EAAM,KAAKwI,EACvB,CACLhW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN,EACA9V,GACAG,KAAK,KAjB+C,IAqBvD2V,EAAM,IAAaA,EAAM,KAAKwI,EACxB,CACLhW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACV,EACA9V,GACAG,KAAK,KAIR2V,EAAM,KAAK0I,GAAQ1I,EAAM,KAAKwI,EACxB,CACLhW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACP6C,GAAMuO,EAAM,GAAG,GACf,EACA9V,GACAG,KAAK,KAIR2V,EAAM,KAAKyI,GAAKzI,EAAM,KAAKwI,EACrB,CACLhW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN,EACA9V,GACAG,KAAK,KAvE+C,IA2EvD2V,EAAM,IA3EG,IA2EUA,EAAM,GACnB,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN,EACA9V,GACAG,KAAK,KAIR2V,EAAM,KAAKyI,GA7FF,IA6FOzI,EAAM,GAChB,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,GACNA,EAAM,IACN3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACV,EACA9V,GACAG,KAAK,KA3G+C,IA+GvD2V,EAAM,IAAaA,EAAM,KAAK0I,EACxB,CACLlW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACN,QACA,QACA,QACA,SACA3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN,EACA9V,GACAG,KAAK,KAIR2V,EAAM,KAAKyI,GAAKzI,EAAM,KAAK0I,EACrB,CACLlW,OAAO,CACLwN,EAAM,GACNA,EAAM,GACN,QACA,QACA,QACA,SACA3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACV,EACA9V,GACAG,KAAK,KA/IC,IAmJT2V,EAAM,IAnJyD,IAmJ7CA,EAAM,GAClB,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACN,QACA,QACA,QACA,SACA3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACV,EACA9V,GACAG,KAAK,KAjK+C,IAqKvD2V,EAAM,IArKyD,IAqK5CA,EAAM,GACnB,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACN,QACA,QACA,QACA,SACA3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN,EACA9V,GACAG,KAAK,KAIR2V,EAAM,KAAK0I,GAvLoD,IAuL5C1I,EAAM,GACnB,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACN,QACA,QACA,QACA,SACA3V,KAAK,IACPuE,SAAS,CACPoR,EAAM,GACN,EACA9V,GACAG,KAAK,KAIR2V,EAAM,KAAKyI,GAzMoD,IAyM/CzI,EAAM,GAChB,CACLxN,OAAO,CACLwN,EAAM,GACNA,EAAM,GACN,QACA,QACA,QACA,SACA3V,KAAK,IACPuE,SAAS,CACP1E,EAAI8V,EAAM,GACV,EACA9V,GACAG,KAAK,MAIXN,QAAQC,IAAI,2BAA2BgW,GAChC,OAGXiJ,oBAAsB,SAASL,EAAWC,EAAYpX,GAClD,IAAIvH,EAAMuH,EAAK,EACXqX,EAAgBlB,GAAuBoB,uBAAvB,YAAkDJ,GAAYnX,GAC9EsX,EAAiBnB,GAAuBoB,uBAAvB,YAAkDH,GAAapX,GACpF,SAAIqX,EAActW,SAASuW,EAAevW,QAAQsW,EAAcla,WAAWma,EAAena,UAAWga,EAAW7hB,SAAS,YAGjH+hB,EAActW,SAASuW,EAAevW,QAAQoL,SAASkL,EAAcla,SAAS,MAAM1E,EAAI0T,SAASmL,EAAena,SAAS,KAQrIsa,YAAc,SAAUjN,GAcpB,IAbA,IAWIkN,EACAC,EAZA3X,EAAOwK,EAAMvW,cACb2jB,EAAepN,EAAMxW,aAAaY,OAClCijB,EAAa,EAAEC,EAAY,EAAEC,EAAW,EAAEC,EAAc,EAAEC,EAAc,EAAEC,EAAa,EACvFC,GAAgB,EAChBC,EAAkB,GAClBC,EAAe,EACfhhB,EAAM,CAAC0W,MAAM,IACbuK,EAActY,EAAKA,EACnBuY,EAAM,YAAO/N,EAAMxW,cACnB+b,EAAY1b,GAAK6R,eAAelG,EAAKA,EAAKA,GAC1CwY,EAAe,GAGXzjB,EAAI,EAAGA,EAAIwjB,EAAO3jB,OAAQG,IAAI,CACpC,IAAI0jB,EAAK,YAAOF,EAAOxjB,IAEpB0jB,EAAMnjB,SAAS,WAAUuiB,GAAY,GACrCY,EAAMnjB,SAAS,UAASwiB,GAAW,GACnCW,EAAMnjB,SAAS,SAAQyiB,GAAU,GACjCU,EAAMnjB,SAAS,YAAW0iB,GAAa,GACvCS,EAAMnjB,SAAS,YAAW2iB,GAAa,GACvCQ,EAAMnjB,SAAS,WAAU4iB,GAAY,GAExC,IAAIQ,EAAMvC,GAAuBI,gBARlB,CAAC,QAAQ,OAAO,MAAM,SAAS,SAAS,SAQCkC,GACpDC,EAAIhC,SAAS,WACfyB,GAAgB,EAChB,IAAIQ,EAAa,GACjBD,EAAI/B,aAAaxW,SAAQ,SAAA7E,GACnBqd,EAAWrjB,SAASgG,IACtBqd,EAAW3jB,KAAKsG,MAGpB8c,EAAgBO,EARD,GAYnB,IAAIC,EAAU,GACVC,EAAe,GAMnB9I,EAAUxJ,QAAQpG,SAAQ,WAAY2Y,GAAe,IAAtBvK,EAAqB,wBAClDiK,EAAaxjB,KAAK,IAClB,IAAI+jB,EAAmB,GACvBR,EAAOpY,SAAQ,WAAYpL,GAAO,IAAd0jB,EAAa,wBAE3BtB,EAAa,EAIjB,GAHA5I,EAAMnC,MAAM,EAAE,GAAG4M,OAAO7Y,SAAQ,SAACN,EAAKlI,GACjC8gB,EAAMrM,MAAM,EAAE,GAAG4M,OAAOrhB,KAASkI,GAAOsX,OAE7B,IAAbA,IAAiByB,EAAQtjB,SAASwjB,KAAcD,EAAavjB,SAASP,GAAG,CAC1E,IAAIkkB,GAAqB,EACrBC,GAAuB,EACxB3K,EAAMjZ,SAAS,SAChB2jB,EAAqB9C,GAAuBqB,oBAAoBjJ,EAAMkK,EAAMzY,GAE5D,WAAZuO,EAAM,KAA4B,WAAZkK,EAAM,KACjB,WAAZA,EAAM,KAA4B,WAAZlK,EAAM,IAC3B0K,GAAqB,EAEJ,WAAZ1K,EAAM,KAA4B,WAAZkK,EAAM,MACnCQ,GAAqB,IAGjB1K,EAAMjZ,SAAS,WACrB4jB,EAAuB/C,GAAuBe,sBAAsB3I,EAAMkK,EAAMzY,KACtD+Y,EAAiB/jB,KAAK,CAACuZ,EAAMkK,KAGvDQ,GAAqB,EACrBC,GAAuB,IAEtBD,GAAoBC,KACrBb,IACAO,EAAQ5jB,KAAK8jB,GACbD,EAAa7jB,KAAKD,GAClByjB,EAAaM,GAAb,sBACKL,EAAMrM,MAAM,EAAE,IADnB,YAEKmC,EAAMnC,MAAM,EAAE,WAKY,IAAlCoM,EAAaM,GAAYlkB,SACX,SAAZ2Z,EAAM,IACPoJ,EAAkB,8BACA,WAAZpJ,EAAM,MACZmJ,EAAsB,qCAI5B,IAAIyB,EAAiB,IAClBtB,IAAaS,GACda,EAAenkB,KAAK,SAEnB8iB,IAAYQ,GACba,EAAenkB,KAAK,QAEnB+iB,IAAWO,GACZa,EAAenkB,KAAK,OAEnBgjB,IAAcM,GACfa,EAAenkB,KAAK,UAEnBijB,IAAcK,GACfa,EAAenkB,KAAK,UAEnBkjB,IAAaI,GACda,EAAenkB,KAAK,SAEnBmkB,EAAevkB,SAChBukB,EAAeA,EAAevgB,KAAK,MACnCvB,EAAI0W,MAAM/Y,KAAV,kBAA0BmkB,EAA1B,qBAGChB,IACDC,EAAgBA,EAAgBxf,KAAK,MACrCvB,EAAI0W,MAAM/Y,KAAV,qCAA6CojB,EAA7C,wBAGCC,IAAeT,GAAcpN,EAAMvW,cAAc,GAClDoD,EAAI0W,MAAM/Y,KAAV,WAAmBqjB,EAAa,EAAhC,qBAA8CT,EAAa,EAA3D,+BAAoFA,EAAa,GAAIS,EAAa,GAAlH,MAGCV,GACDtgB,EAAI0W,MAAM/Y,KAAK2iB,GAEdD,GACDrgB,EAAI0W,MAAM/Y,KAAK0iB,GAGbrgB,EAAI0W,MAAMnZ,WAEa,IADV,eAAO8b,GAAWlG,EAAMgO,IAC1B5J,UAEXvX,EAAI0W,MAAM/Y,KAAV,wHAIAqC,EAAI0W,WAAQI,GAKhB,OADI9W,EAAI0W,QAAQ1W,EAAIqf,SAAU,EAAKrf,EAAImhB,aAAeA,GAC/CnhB,IAIA8e,MC8wBAiD,G,4MA5xCb5O,MAAQ,CACNG,MAAQ,GACR3W,aAAe,GACfqlB,YAAa,GACb5b,MAAQ,IACR6b,cAAgB,IAChBzO,MAAQ,IACRa,IAAM,EACNd,cAAgB,EAChB/K,KAAO,EACP0Z,QAAU,EACVC,SAAW,EACXC,QAAU,EACVliB,YAAc,OACdD,QAAU,GACVxB,QAAU,GACV4Z,QAAU,GACVgK,MAAQ,IACRzlB,cAAgB,KAChB6W,UAAY,EACZ6O,aAAa,SACbhhB,MAAQ,EACRmC,QAAS,EACTtG,YAAc,EACd2C,WAAa,GACbwW,UAAW,GACXkB,eAAgB,EAChB+K,SAAW,KACXC,SAAW,KACXC,SAAW,KACXC,SAAW,KACXza,YAAa,QACb0a,UAAY,KACZC,WAAY,EACZC,SAAW,KACXC,UAAY,EACZ1O,cAAe,EACf2O,cAAgB,KAChBpV,YAAc,EACdF,QAAU,GACV/O,QAAU,GAEVskB,eAAe,EACfC,cAAc,EACdC,WAAW,EACXC,iBAAiB,EACjBC,iBAAkB,EAClBC,mBAAoB,CAClBziB,EAAG,IAAKC,EAAG,KAEbyiB,wBAAyB,CACvB1iB,EAAG,EAAGC,EAAG,GAEX0iB,oBAAqB,EACrBC,sBAAuB,CACrB5iB,EAAG,IAAKC,EAAG,KAEb4iB,2BAA4B,CAC1B7iB,EAAG,EAAGC,EAAG,GAEX6S,SAAU,EACVgQ,WAAY,EACZnJ,eAAgB,EAChBD,UAAY,GACZqJ,qBAAsB,EACtB9L,UAAW,EACXC,YAAY,EACZG,YAAY,EACZD,SAAU,EACV4L,kBAAkB,EAClBC,QAAU,KACVvH,SAAW,GACXjC,WAAa,GACbwC,UAAU,EACV9E,kBAAmB,EACnBc,WAAW,gBACXiL,YAAY,GACZhL,WAAW,EACXiL,QAAQ,EACRC,UAAU,EACV1G,SAAU,G,EAIZ2G,SAAW,SAAArgB,GACT,OAAQA,GAEN,IAAK,IACH,EAAKqF,cAAcrF,EAAI,IAAI,CAAC,EAAE,EAAE,IAChC,MACF,IAAK,IACH,EAAKqF,cAAcrF,EAAI8I,cAAc,CAAC,GAAG,EAAE,IAC3C,MAEF,IAAK,IACH,EAAKzD,cAAcrF,EAAI,IAAI,CAAC,EAAE,EAAE,IAChC,MACF,IAAK,IACH,EAAKqF,cAAcrF,EAAI8I,cAAc,CAAC,GAAG,EAAE,IAC3C,MAEF,IAAK,IACH,EAAKzD,cAAcrF,EAAI,IAAI,CAAC,EAAE,EAAE,IAChC,MACF,IAAK,IACH,EAAKqF,cAAcrF,EAAI8I,cAAc,CAAC,GAAG,EAAE,IAC3C,MAEF,IAAK,IACH,EAAKzD,cAAcrF,EAAI,IAAI,CAAC,EAAE,EAAE,IAChC,MACF,IAAK,IACH,EAAKqF,cAAcrF,EAAI8I,cAAc,CAAC,GAAG,EAAE,IAC3C,MAEF,IAAK,IACH,EAAKzD,cAAcrF,EAAI,IAAI,CAAC,EAAE,EAAE,IAChC,MACF,IAAK,IACH,EAAKqF,cAAcrF,EAAI8I,cAAc,CAAC,GAAG,EAAE,IAC3C,MAEF,IAAK,IACH,EAAKzD,cAAcrF,EAAI,IAAI,CAAC,EAAE,EAAE,IAChC,MACF,IAAK,IACH,EAAKqF,cAAcrF,EAAI8I,cAAc,CAAC,GAAG,EAAE,IAC3C,MAEF,IAAK,IACyB,iBAAzB,EAAKyG,MAAMjT,aACZ,EAAK0b,YAAY,SAEnB,MACF,IAAK,IACyB,iBAAzB,EAAKzI,MAAMjT,aACZ,EAAK0b,YAAY,QAEnB,MACF,IAAK,IACyB,iBAAzB,EAAKzI,MAAMjT,aACZ,EAAK0b,YAAY,OAEnB,MACF,IAAK,IACyB,iBAAzB,EAAKzI,MAAMjT,aACZ,EAAK0b,YAAY,UAEnB,MACF,IAAK,IACyB,iBAAzB,EAAKzI,MAAMjT,aACZ,EAAK0b,YAAY,UAEnB,MACF,IAAK,IACyB,iBAAzB,EAAKzI,MAAMjT,aACZ,EAAK0b,YAAY,SAEnB,MACF,IAAK,YACyB,YAAzB,EAAKzI,MAAMjT,aAAkD,eAAzB,EAAKiT,MAAMjT,YAChD,EAAKgkB,cAE0B,SAAzB,EAAK/Q,MAAMjT,aACjB,EAAKikB,OAEP,MACF,IAAK,aACH,GAA4B,YAAzB,EAAKhR,MAAMjT,aAAkD,eAAzB,EAAKiT,MAAMjT,YAA2B,CAC3E,IAAI,EAAKiT,MAAM1U,QAAQlB,OAAQ,OAC/B,GAAI,EAAK4V,MAAM1U,QAAQ,KAAK,EAAK0U,MAAM1U,QAAQ,IAA4B,UAAxB,EAAK0U,MAAM1U,QAAQ,IAAgB,EAAK0U,MAAM0E,SAM7F,CACA,IAAwB,IAArB,EAAK1E,MAAM6E,QAAgB,OAC3B,EAAK7E,MAAM1U,QAAQ,IAAuC,kBAA5B,EAAK0U,MAAM1U,QAAQ,GAAG,IAAwC,MAAxB,EAAK0U,MAAM1U,QAAQ,IACxF,EAAK2U,SAAS,CAAC4E,SAAQ,EAAKK,QAAQ,GAAD,mBAAK,EAAKlF,MAAMkF,SAAhB,CAAwB,EAAKlF,MAAM1U,QAAQ,YARlF,EAAK2U,SAAS,CACRyE,UAAS,EACTC,YAAW,EACXC,iBAAiB,EAAK5E,MAAMqE,eAAe,QASpB,SAAzB,EAAKrE,MAAMjT,aACjB,EAAKkkB,OAEP,MACF,IAAK,YACyB,eAAzB,EAAKjR,MAAMjT,aACZ,EAAKkT,SAAS,CAAC4Q,UAAS,EAAKnF,SAAQ,IAEvC,MACF,IAAK,UACyB,eAAzB,EAAK1L,MAAMjT,aACZ,EAAKkT,SAAS,CAAC2Q,QAAO,EAAKlF,SAAQ,M,EAQ3CwF,YAAc,SAAAhd,GACZ,EAAK4c,SAAS5c,EAAEzD,M,EAOlB2C,eAAiB,SAACV,GAEhB,OADA,EAAKuN,SAAS,CAAC0Q,YAAYje,IACpBA,GACL,KAAK,EACH,EAAKye,YAAY,IAAI,KAAK,WAC1B,MACF,KAAK,GACH,EAAKA,YAAY,EAAE,IAAI,UACvB,MACF,KAAK,GACH,EAAKA,YAAY,EAAE,IAAI,QACvB,MACF,KAAK,GACH,EAAKA,YAAY,IAAI,IAAI,UACzB,MACF,KAAK,GACH,EAAKA,YAAY,GAAG,IAAI,QACxB,MACF,KAAK,GACH,EAAKA,YAAY,GAAG,IAAI,UACxB,MACF,KAAK,GACH,EAAKA,YAAY,GAAG,IAAI,WACxB,MACF,KAAK,GACH,EAAKA,YAAY,GAAG,GAAG,UACvB,MACF,QACErjB,QAAQC,IAAI,yB,EAKlBojB,YAAc,SAACC,EAAOC,EAAeC,EAAMC,GAChB,SAAzB,EAAKvR,MAAMjT,aAAuBwkB,EAEhC,EAAKtR,SAAS,CAACkP,aAAcmC,EAAMre,MAAOme,EAAQ/Q,MAAO+Q,EAAQlQ,IAAK,EAAG4N,cAAeuC,IADxF,EAAKpR,SAAS,CAAC3U,QAAQ,CAAC,CAAC8lB,EAAOC,EAAeC,IAAzB,mBAAmC,EAAKtR,MAAM1U,a,EAIxEmd,YAAc,SAAC3X,GACb,EAAKmP,SAAS,CAACnL,YAAYhE,K,EAG7B0gB,gBAAkB,SAAC1F,EAAIzf,EAAKyE,GAE1B,IADA,IAAI2gB,EAAO,YAAO,EAAKzR,MAAMxW,cACrBe,EAAI,EAAGA,EAAIknB,EAAQrnB,OAAQG,IAAI,CACrC,IAAImnB,EAAQ,YAAOD,EAAQlnB,IACxBmnB,EAAS,KAAK5F,EAAIre,GAAKikB,EAAS,KAAK5F,EAAIpe,GAAKgkB,EAAS,KAAK5F,EAAIne,IACjE+jB,EAASrlB,GAAMyE,EACf2gB,EAAQlnB,GAAR,YAAiBmnB,GACjBnnB,EAAIknB,EAAQrnB,QAGhB,EAAK6V,SAAS,CAACzW,aAAa,YAAIioB,GAASrK,eAAc,EAAM+C,SAAS,EAAKnK,MAAMmK,SAAS,EAAEhB,SAAU,KAAI,WACxG,EAAKwI,mBAAmB,U,EAU5BzI,mBAAqB,WACnB,IAAI6E,EAAM,YAAO,EAAK/N,MAAMxW,cACxBgM,EAAO,EAAKwK,MAAMvW,cAClB8b,EAAY1b,GAAK6R,eAAelG,EAAKA,EAAKA,GAC1CwY,EAAe,GACfI,EAAU,GACVC,EAAe,GAEnB9I,EAAUxJ,QAAQpG,SAAQ,WAAY2Y,GAAe,IAAtBvK,EAAqB,wBAClDiK,EAAaxjB,KAAK,IAClBujB,EAAOpY,SAAQ,WAAYpL,GAAO,IAAd0jB,EAAa,wBAC3BtB,EAAa,EAIjB,GAHA5I,EAAMnC,MAAM,EAAE,GAAG4M,OAAO7Y,SAAQ,SAACN,EAAKlI,GACjC8gB,EAAMrM,MAAM,EAAE,GAAG4M,OAAOrhB,KAASkI,GAAOsX,OAE7B,IAAbA,IAAiByB,EAAQtjB,SAASwjB,KAAcD,EAAavjB,SAASP,GAAG,CAC1E,IAAIkkB,GAAqB,EACrBC,GAAuB,EACxB3K,EAAMjZ,SAAS,SAChB2jB,EAAqB9C,GAAuBqB,oBAAoBjJ,EAAMkK,EAAMzY,GAE5D,WAAZuO,EAAM,KAA4B,WAAZkK,EAAM,KACjB,WAAZA,EAAM,KAA4B,WAAZlK,EAAM,IAC7B0K,GAAqB,EAEF,WAAZ1K,EAAM,KAA4B,WAAZkK,EAAM,MACnCQ,GAAqB,IAGjB1K,EAAMjZ,SAAS,UACrB4jB,EAAuB/C,GAAuBe,sBAAsB3I,EAAMkK,EAAMzY,IAGhFiZ,GAAqB,EACrBC,GAAuB,IAEtBD,GAAoBC,KACrBN,EAAQ5jB,KAAK8jB,GACbD,EAAa7jB,KAAKD,GAClByjB,EAAaM,GAAb,sBACKL,EAAMrM,MAAM,EAAE,IADnB,YAEKmC,EAAMnC,MAAM,EAAE,cAO3B,EAAK3B,SAAS,CAACzW,aAAawkB,EAAajhB,YAAc,OAAOma,WAAW,KAAI,WAC3E,EAAKyK,mBAAmB,SACxB,EAAK1R,SAAS,CAACiH,WAAW,WAC1B,EAAKoC,iB,EAKT0H,KAAO,WACL,IAAIrB,EAAY,EAAK3P,MAAM2P,UACvB/lB,EAAa,EAAKoW,MAAMlT,QACtBzB,EAAY+V,GAAU1X,kBAAkBE,GAC5B,KAAfA,GAEgC,SAA3B,EAAKoW,MAAMjT,aAEX1B,EAAUjB,OAAO,EAAEulB,GAAa,GACtC,EAAK1P,SAAS,CAACgB,cAAe,EACflU,YAAc,OACdzB,QAAU,CAACD,EAAUA,EAAUjB,OAAO,EAAEulB,IACxCA,UAAYA,EAAY,K,EAI3CsB,KAAO,WACL,GAA8B,SAA3B,EAAKjR,MAAMjT,YAAd,CACA,IAAI4iB,EAAY,EAAK3P,MAAM2P,UACvB/lB,EAAa,EAAKoW,MAAMlT,QAC5B,GAAkB,KAAflD,EAAH,CAEA,IAAMyB,EAAY+V,GAAU1X,kBAAkBE,GAE1CgoB,EAAgBvmB,EAAUA,EAAUjB,OAAOulB,GAC/C,IACEiC,EAAc9mB,SAAS,KAAO8mB,EAAgBA,EAAcvY,UAAU,EAAE,GAAKuY,GAAiB,IAC/F,MAAMC,GACL,OAGClC,EAAY,GACb,EAAK1P,SAAS,CAACgB,cAAe,EACflU,YAAc,OACdzB,QAAU,CAACsmB,GACXjC,UAAYA,EAAY,O,EAI3C7Z,cAAgB,SAAC5B,EAAE4d,GAGjB,GAFIA,EAAK1nB,OAAS,GAAG0nB,EAAKtnB,MAAK,GAED,SAA3B,EAAKwV,MAAMjT,YAAwB,CAEpC,IAAIgR,EAAK,EAAKiC,MAAMvW,cAChBD,EAAe,EAAKwW,MAAMxW,aAC1ByX,EAAe,EAAKjB,MAAMiB,aAC1BnU,EAAU,EAAKkT,MAAMlT,QACrBH,EAAa,EAAKqT,MAAMrT,WACxB3C,EAAa,EAAKgW,MAAMhW,WACxBkX,EAAM,EAAKlB,MAAMkB,IACjBrU,EAAMhD,GAAKmX,eAAe8Q,EAAK,GAAGA,EAAK,GAAGA,EAAK,GAAGA,EAAK,GAAG7Q,EAAanU,EAAQH,EAAWuU,EAAIlX,GAElG6C,EAAIE,YAAcmH,EAClBrH,EAAIrD,aAAeK,GAAK8W,WAAW9T,EAAIwI,KAAKxI,EAAIuT,cAAcvT,EAAIyT,UAAUzT,EAAI0T,QAAQxC,EAAGvU,GAE3F,EAAKyW,SAASpT,K,EAKlBsH,UAAY,SAACvK,EAAWmoB,GACtB,GAA8B,YAA3B,EAAK/R,MAAMjT,aAAsD,eAA3B,EAAKiT,MAAMjT,aAQpD,GAA8B,SAA3B,EAAKiT,MAAMjT,YAAd,CACA,IAAM1B,EAAY+V,GAAU1X,kBAAkBE,GAC9C,EAAKqW,SAAS,CAAClT,YAAcglB,EAAUzmB,QAAUD,UAT5C,EAAK2U,MAAM1U,QAAQ,IACjB8V,GAAUyB,qBAAqBjZ,EAAW,EAAKoW,MAAM1U,QAAQ,GAAG,EAAK0U,MAAMvW,gBAC5E,EAAKob,QAAL,iB,EAWRmN,MAAQ,WACN,IAAIjU,EAAK,EAAKiC,MAAMvW,cAEhBD,EADYK,GAAK6R,eAAeqC,EAAGA,EAAGA,GACbhC,QAC7B,EAAKkE,SAAS,CAACzW,eAAa8B,QAAS,GAAGwB,QAAS,GAAGC,YAAc,OAAO/C,YAAc,EAAE0a,UAAW,EAAOG,SAAU,EAAO0L,WAAY,EAAOpJ,UAAY,GAAIxa,WAAa,GAAIuY,QAAU,GAAGiE,SAAS,GAAGjC,WAAW,SAAQ,WAC1N,EAAKyK,mBAAmB,W,EAK5B9H,cAAgB,WAEd,GAA8B,SAA3B,EAAK7J,MAAMjT,YAAwB,CAEpC,IADA,IAAIzB,EAAU,GACPA,EAAQlB,OAAO,IAAG,CACvB,IAAIE,EAAO8W,GAAUe,aAAa,EAAKnC,MAAMvW,eAC1C6B,EAAQA,EAAQlB,OAAO,IACvBkB,EAAQA,EAAQlB,OAAO,GAAGwX,MAAM,EAAE,KAAKtX,EAAKsX,MAAM,EAAE,IACpDtW,EAAQA,EAAQlB,OAAO,GAAGA,SAASE,EAAKF,QACnCkB,EAAQA,EAAQlB,OAAO,IACvBkB,EAAQA,EAAQlB,OAAO,IACvBkB,EAAQA,EAAQlB,OAAO,KAAKE,GAC5BgB,EAAQA,EAAQlB,OAAO,KAAKE,GAC/BgB,EAAQd,KAAKF,GAEpB,EAAK2V,SAAS,CAAClT,YAAc,aAAazB,c,EAK9Cge,WAAa,WACmB,SAA3B,EAAKtJ,MAAMjT,aACd,EAAKkT,SAAS,CAAClT,YAAc,UAAU/C,WAAa,EAAE0a,UAAW,EAAOG,SAAU,EAAOoB,WAAY,K,EAGvG2B,UAAY,WACV,EAAK3H,SAAS,CAAClT,YAAc,OAAO/C,YAAc,EAAE0a,UAAW,EAAOG,SAAU,EAAO0L,WAAY,EAAOpJ,UAAY,GAAIxa,WAAa,GAAIuY,QAAU,GAAI5Z,QAAU,GAAGsZ,kBAAkB,EAAEzB,UAAU,M,EAGtM2G,iBAAmB,WACjB,IAAI/L,EAAK,EAAKiC,MAAMvW,cACpB,GAA8B,SAA3B,EAAKuW,MAAMjT,YAAd,CACA,IAAMklB,EAAK,YAAOpoB,GAAKwT,cAAcU,EAAGA,EAAGA,IAC3C,EAAKkC,SAAS,CAAClT,YAAc,eAAevD,aAAa,YAAKyoB,KAAQ,WACpE,EAAKN,mBAAmB,W,EAI5BtI,eAAiB,WACf,EAAK2I,QACL,EAAK/R,SAAS,CAAClT,YAAc,OAAOoc,SAAS,M,EAG/CtE,QAAU,SAAA7U,GACR,GAAIA,EAAMgQ,MAAM1U,QAAQlB,OACxB,GAAI4F,EAAMgQ,MAAM1U,QAAQ,KAAK0E,EAAMgQ,MAAM1U,QAAQ,IAA6B,UAAzB0E,EAAMgQ,MAAM1U,QAAQ,IAAgB0E,EAAMgQ,MAAM0E,SAMjG,CACA,IAAyB,IAAtB1U,EAAMgQ,MAAM6E,QAAgB,OAC5B7U,EAAMgQ,MAAM1U,QAAQ,IAAwC,kBAA7B0E,EAAMgQ,MAAM1U,QAAQ,GAAG,IAAyC,MAAzB0E,EAAMgQ,MAAM1U,QAAQ,IACzF0E,EAAMiQ,SAAS,CAAC4E,SAAQ,EAAKK,QAAQ,GAAD,mBAAKlV,EAAMgQ,MAAMkF,SAAjB,CAAyBlV,EAAMgQ,MAAM1U,QAAQ,YARrF0E,EAAMiQ,SAAS,CACXyE,UAAS,EACTC,YAAW,EACXC,iBAAiB5U,EAAMgQ,MAAMqE,eAAe,K,EAUtD0M,YAAc,WACZ,IAAG,EAAK/Q,MAAM6E,QACd,GAAI,EAAK7E,MAAMkF,QAAQ,EAAKlF,MAAMkF,QAAQ9a,OAAO,KAAK,EAAK4V,MAAMkF,QAAQ,EAAKlF,MAAMkF,QAAQ9a,OAAO,IAAsD,UAAlD,EAAK4V,MAAMkF,QAAQ,EAAKlF,MAAMkF,QAAQ9a,OAAO,IAAgB,EAAK4V,MAAM2E,WAA/K,CAMA,IAAIuN,EAAa,GACbC,EAAW,YAAO,EAAKnS,MAAM1U,SAC7B8mB,EAAQ,YAAO,EAAKpS,MAAMkF,SAC1BmN,EAASD,EAASA,EAAShoB,OAAO,GAClCkoB,EAASF,EAASpZ,MAClBsZ,GAIsB,MAA1BA,EAAOA,EAAOloB,OAAO,GAAWkoB,EAAOA,EAAO1Q,MAAM,EAAE,GAAK0Q,GAAQ,IACnEJ,EAAW1nB,KAAX,MAAA0nB,EAAU,CAAMI,EAAOD,GAAb,mBAAuBF,KACjC,EAAKlS,SAAS,CACZ4E,SAAQ,EACRK,QAAQkN,EACR9mB,QAAQ4mB,EACR7N,eAAe,EAAKrE,MAAMqE,eAAe,KATzC,EAAKpE,SAAS,CAAC0E,YAAW,SAX1B,EAAK1E,SAAS,CACZyE,UAAS,EAAMC,YAAW,EAAKC,iBAAiB,EAAK5E,MAAMqE,eAAe,K,EAuBhFkO,gBAAkB,SAACre,EAAGse,GACpB,MAAe,EAAKxS,MAAMkQ,mBAAnBziB,EAAP,EAAOA,EAAGC,EAAV,EAAUA,EACV,EAAKuS,SAAS,CACZiQ,mBAAoB,CAClBziB,EAAGA,EAAI+kB,EAAGC,OACV/kB,EAAGA,EAAI8kB,EAAGE,W,EAKhBC,aAAe,WACb,EAAK1S,SAAS,CAACgQ,iBAAkB,EAAKjQ,MAAMiQ,iBAAiB,K,EAG/D2C,YAAc,WACZ,EAAK3S,SAAS,CAACgQ,iBAAkB,EAAKjQ,MAAMiQ,iBAAiB,K,EAG/D4C,UAAY,SAAC7c,EAAKC,EAAK/B,GAClB,EAAK8L,MAAM+P,WACZ,EAAK9P,SAAS,CACZsQ,WAAW,EACXpJ,UAAWlR,K,EAIjBI,WAAa,WACX,EAAK4J,SAAS,CACZsQ,WAAW,EACXpJ,UAAW,M,EAcfwK,mBAAqB,SAAC7F,GAGpB,IAFA,IAAI3L,EAAK,YAAO,EAAKH,MAAMG,OAEnB5V,EAAI,EAAGA,EAAE,EAAKyV,MAAMxW,aAAaY,OAAOG,IAAI,CAElD,IAAImnB,EAAQ,eAAOvR,EAAM5V,IACrBkV,EAAWiS,EAASjS,SAGrBqM,IAAQ4F,EAAS/e,UAClB+e,EAASrT,QAAQ,EACjB8B,EAAM5V,GAAKmnB,GAGW,IAAfjS,EAAShS,GAA0B,IAAfgS,EAAS/R,GAAyB,IAAf+R,EAAS9R,GAC7C,QAANme,GAAmB,OAANA,GAAkB,UAANA,IACpB,QAANA,GAAmB,OAANA,IACd4F,EAAS/e,SAASlF,EAAE,EAAKuS,MAAMxW,aAAae,GAAG,GAC/CmnB,EAAS/e,SAASjF,EAAE,EAAKsS,MAAMxW,aAAae,GAAG,IAC/CmnB,EAAS/e,SAAShF,EAAE,EAAKqS,MAAMxW,aAAae,GAAG,KAExC,UAANuhB,IACD4F,EAAS/e,SAASlF,EAAE,EAAKuS,MAAMxW,aAAae,GAAG,GAC/CmnB,EAAS/e,SAASjF,EAAE,EAAKsS,MAAMxW,aAAae,GAAG,GAC/CmnB,EAAS/e,SAAShF,EAAE,EAAKqS,MAAMxW,aAAae,GAAG,IAEjDmnB,EAASvT,SAAS,GAAGrN,MAAQ,IAAIoN,KAAY,EAAK8B,MAAMxW,aAAae,GAAG,IACxEmnB,EAASvT,SAAS,GAAGrN,MAAQ,IAAIoN,KAAY,EAAK8B,MAAMxW,aAAae,GAAG,IACxEmnB,EAASvT,SAAS,GAAGrN,MAAQ,IAAIoN,KAAY,EAAK8B,MAAMxW,aAAae,GAAG,IACxEmnB,EAASvT,SAAS,GAAGrN,MAAQ,IAAIoN,KAAY,EAAK8B,MAAMxW,aAAae,GAAG,IACxEmnB,EAASvT,SAAS,GAAGrN,MAAQ,IAAIoN,KAAY,EAAK8B,MAAMxW,aAAae,GAAG,IACxEmnB,EAASvT,SAAS,GAAGrN,MAAQ,IAAIoN,KAAY,EAAK8B,MAAMxW,aAAae,GAAG,IAExEmnB,EAASjS,SAAShS,EAAI,EAAGikB,EAASjS,SAAS/R,EAAI,EAAGgkB,EAASjS,SAAS9R,EAAI,EACxEwS,EAAM5V,GAAKmnB,GAKf,EAAKzR,SAAS,CAACE,QAAM7P,QAAS,K,EAqHhCwiB,aAAe,SAACjmB,GAEd,EAAKoT,SAASpT,GAAI,WACbA,EAAI6Y,YACL,EAAKiM,mBAAmB,W,EAK9BoB,cAAgB,WACd,EAAK9S,SAAS,CAACyL,SAAQ,K,+CAzfzB,SAAWsH,GACThN,KAAK/F,SAAS,CAACwP,WAAY,M,4BA6D7B,WACE,IAAI5iB,EAAM8e,GAAuBsB,YAAYjH,KAAKhG,OAC/CnT,EAAI0W,MAAOyC,KAAK/F,SAAS,CAACkJ,SAAS,YAAItc,EAAI0W,SACtC1W,EAAIqf,SAASlG,KAAK/F,SAAS,CAACmH,eAAc,EAAK+B,SAAS,O,4BA6TlE,SAAgB8J,EAAgBC,GAC9B,OAAOD,GAKL,IAAK,mBACHjN,KAAK/F,SAAS,CAAC4P,eAAe7J,KAAKhG,MAAM6P,gBACzC,MACF,IAAK,kBACH7J,KAAK/F,SAAS,CAAC6P,cAAc9J,KAAKhG,MAAM8P,eACxC,MACF,IAAK,eACH9J,KAAK/F,SAAS,CAAC8P,WAAW/J,KAAKhG,MAAM+P,YACrC,MACF,QACEjiB,QAAQC,IAAI,sB,kCAKlB,WACEqC,OAAO+iB,oBAAoB,UAAWnN,KAAKkL,e,4BAI7C,SAAekC,GACb,IACI5d,EACA6d,EAAQjjB,OAAOC,SAASK,KAAKsG,MAAM,KACnCsc,EAAUD,EAAMA,EAAMjpB,OAAO,GAAGwX,MAAM,EAAE,GAE5C,OAAGwR,EACyB,cAAvBC,EAAM,GAAGE,OAAO,EAAE,IAQR,SAAZD,IACD9d,EAAOmM,SAAS0R,EAAMA,EAAMjpB,OAAO,GAAGmpB,OAAO,KAG3C/d,GAlBQ,IAkBSA,GAAQ,EAAUA,EAAkB,K,2BAG3D,SAAcvI,EAAQumB,EAASzP,EAAM0P,EAAU1V,GAE7C,IAAI2V,EAAa,KACbtnB,EAAQ,KACRunB,EAAO,KAGLC,EAAM,CACVnmB,EAAI+lB,EAAS/lB,EAAER,EAAQQ,EACvBC,EAAI8lB,EAAS9lB,EAAET,EAAQS,EACvBC,EAAI6lB,EAAS7lB,EAAEV,EAAQU,GAGzB,GAAGV,EAAQQ,IAAI+lB,EAAS/lB,GAAKR,EAAQS,IAAM8lB,EAAS9lB,GAAKT,EAAQU,IAAI6lB,EAAS7lB,EAC5E,OAAO,KAGT,SAASkmB,EAAoBC,EAAOC,EAASC,EAAOC,EAASC,EAAOC,EAAOC,EAAKC,GAC9E,OAAG/mB,KAAKgnB,IAAIR,IAASxmB,KAAKgnB,IAAIN,IAAU1mB,KAAKgnB,IAAIR,GAAQ,IAChD,CAACJ,WAAaK,EAASK,EAAMA,EAAK,IAAKhoB,MAAQ+nB,GAErD7mB,KAAKgnB,IAAIN,GAAQ1mB,KAAKgnB,IAAIR,IAAUxmB,KAAKgnB,IAAIN,GAAQ,IAC/C,CAACN,WAAaO,EAASI,EAAMA,EAAK,IAAKjoB,MAAQ8nB,GAEjD,CAACR,WAAW,KAAKtnB,MAAM,MAIhC,OAAOqnB,GACL,KAAK,EAEHC,GADAC,EAAOE,EAAoBD,EAAIjmB,EAAEimB,EAAIjmB,EAAE,EAAEimB,EAAInmB,EAAEmmB,EAAInmB,GAAG,EAAEsQ,EAAGgG,EAAMpW,EAAEoQ,EAAGgG,EAAMtW,EAAE,IAAI,MAChEimB,WAAYtnB,EAAQunB,EAAKvnB,MAC3C,MACF,KAAK,EAEHsnB,GADAC,EAAOE,EAAoBD,EAAInmB,EAAEmmB,EAAInmB,GAAG,EAAEmmB,EAAIlmB,EAAEkmB,EAAIlmB,EAAE,EAAEqQ,EAAGgG,EAAMtW,EAAEsW,EAAMrW,EAAE,EAAE,IAAI,MAC/DgmB,WAAYtnB,EAAQunB,EAAKvnB,MAC3C,MACF,KAAK,EAEHsnB,GADAC,EAAOE,EAAoBD,EAAIjmB,EAAEimB,EAAIjmB,EAAE,EAAEimB,EAAIlmB,EAAEkmB,EAAIlmB,EAAE,EAAEqQ,EAAGgG,EAAMpW,EAAEoW,EAAMrW,EAAE,EAAE,IAAI,MAC9DgmB,WAAYtnB,EAAQunB,EAAKvnB,MAC3C,MACF,KAAK,EAEHsnB,GADAC,EAAOE,EAAoBD,EAAIjmB,EAAEimB,EAAIjmB,EAAE,EAAEimB,EAAInmB,EAAEmmB,EAAInmB,GAAG,EAAEsQ,EAAGgG,EAAMpW,EAAEoQ,EAAGgG,EAAMtW,EAAE,IAAI,MAChEimB,WAAYtnB,EAAQunB,EAAKvnB,MAC3C,MACF,KAAK,EAEHsnB,GADAC,EAAOE,EAAoBD,EAAIjmB,EAAEimB,EAAIjmB,EAAE,EAAEimB,EAAIlmB,EAAEkmB,EAAIlmB,EAAE,EAAEqQ,EAAGgG,EAAMpW,EAAEoW,EAAMrW,EAAE,EAAE,IAAI,MAC9DgmB,WAAYtnB,EAAQunB,EAAKvnB,MAC3C,MACF,KAAK,EAEHsnB,GADAC,EAAOE,EAAoBD,EAAInmB,EAAEmmB,EAAInmB,GAAG,EAAEmmB,EAAIlmB,EAAEkmB,EAAIlmB,EAAE,EAAEqQ,EAAGgG,EAAMtW,EAAEsW,EAAMrW,EAAE,EAAE,IAAI,MAC/DgmB,WAAYtnB,EAAQunB,EAAKvnB,MAM/C,OAASA,EAAM,GAAI,IAAM,IAAMA,EAAMsnB,I,4BAIvC,c,+BAkBA,WAAqB,IAAD,OAGd3V,EAAKiI,KAAKuO,iBACVhP,EAAY1b,GAAK6R,eAAeqC,EAAGA,EAAGA,GACtCvU,EAAe+b,EAAUxJ,QACzBgE,EAAY,GAEZ6P,EAAgB,KAChB4E,EAAqB,KACrBC,GAAe,EAGfC,EAAQ,IAAIxW,KACZyW,EAAS,IAAIzW,KAAyB,GAAI9N,OAAOqE,WAAWrE,OAAOsE,YAAa,GAAI,KACpFkgB,EAAW,IAAI1W,KAAoB,CAAE2W,WAAW,EAAMC,OAAO,IAC7DC,EAAY,IAAI7W,KAChB8W,EAAQ,IAAI9W,KACZ+W,EAAe,IAAI/W,KACnBgX,GAAS,IAAIhX,MAAsBiX,KAAK,gHACxCC,GAAgB,IAAIlX,MAAsBiX,KAAK,yFAC/CE,EAAS/nB,KAAKgoB,IAAShoB,KAAKwR,GAAK,IAAQ6V,EAAOY,IAAM,GACtDC,EAAeplB,OAAOsE,YAEpBsJ,EAASnU,GAAKgU,kBAAkBuX,EAAcrX,GAEhD0X,EAAgBzP,KAAKyP,cACrBC,EAAgB1P,KAAK7R,UA2GzB/D,OAAOulB,iBAAiB,UAAW3P,KAAKkL,aAAa,GACrD9gB,OAAOulB,iBAAiB,cA5CxB,SAAsB3C,GACpBgC,EAAMvnB,EAAMulB,EAAM4C,QAAUxlB,OAAOqE,WAAe,EAAI,EACtDugB,EAAMtnB,GAAQslB,EAAM6C,QAAUzlB,OAAOsE,YAAgB,EAAI,EAGzDqgB,EAAUe,cAAed,EAAOL,GAGhC,IAAIoB,EAAahB,EAAUiB,iBAAkBtB,EAAMuB,UAEnD,GAAGrG,GACEmG,EAAW3rB,OAAO,CACnB,IAAI6C,EAAU8oB,EAAW,GAAGG,MAExB9D,EAAQ,eAAOxC,EAAcsG,OAC7BC,EAAO,eAAOvG,EAAc/O,OAAOlO,UACnCyjB,EAAc9oB,KAAKC,MAAMqiB,EAAcyG,UAAU,GACjD3C,EAAa+B,EAAcxoB,EAAQmlB,EAAS+D,EAJnC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAIuCC,GAAarY,GAE5D,OAAb2V,GAAoBA,EAAW5oB,SAAS,UAMzC4qB,EAAchC,EAAW,aACzB9D,EAAc/O,OAAO1C,SAASqW,GAAoBnW,QAAQ,EAC1DuR,EAAgB,KAChB4E,EAAqB,QAgBsB8B,KAAKtQ,OAAO,GAC/D5V,OAAOulB,iBAAiB,cA7FxB,SAAsB3C,GACpBuD,EAASC,SAAU,EACnB/B,GAAe,EAEfO,EAAMvnB,EAAMulB,EAAM4C,QAAUxlB,OAAOqE,WAAe,EAAI,EACtDugB,EAAMtnB,GAAQslB,EAAM6C,QAAUzlB,OAAOsE,YAAgB,EAAI,EAGzDqgB,EAAUe,cAAed,EAAOL,GAGhC,IAAIoB,EAAahB,EAAUiB,iBAAkBtB,EAAMuB,UAGnD,GAAGF,EAAW3rB,OAAO,CACnBqqB,GAAe,EACf8B,EAASE,YACTF,EAASC,SAAU,EAGnB,IAFA,IAAIE,EAAmBX,EAAW,GAAGM,UACjCM,GAAa,EACTpsB,EAAI,EAAGA,EAAI,EAAGA,IACpB,GAAGmsB,IAAqB,EAAFnsB,GAAOmsB,IAAsB,EAAFnsB,EAAI,EAAG,CACtDosB,EAAYpsB,EAEZ,MAIJ,GAA4B,iBAAzByb,KAAKhG,MAAMjT,YAA6B,CAGzCiZ,KAAKwL,gBAAgB,CAAC/jB,EAAEsoB,EAAW,GAAGlV,OAAOlO,SAASlF,EAAEC,EAAEqoB,EAAW,GAAGlV,OAAOlO,SAASjF,EAAEC,EAAEooB,EAAW,GAAGlV,OAAOlO,SAAShF,GAD7G,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAC4GgpB,GAAW3Q,KAAKhG,MAAMlL,aAEzJihB,EAAW,GAAGlV,OAAO1C,SAASwY,IAAcA,GAAa,GACvDZ,EAAW,GAAGlV,OAAO1C,SAASwY,GAAW7lB,QAC1C8e,EAAgBmG,EAAW,GAC3BvB,EAAqBmC,EACrBZ,EAAW,GAAGlV,OAAO1C,SAASwY,GAAWtY,QAAQ,SAKrDkY,EAASC,SAAU,EACnB5G,EAAgB,KAChB4E,EAAqB,MAiD0B8B,KAAKtQ,OAAO,GAI/D5V,OAAOulB,iBAAiB,aAfxB,SAAqB3C,GAChBpD,IAAeA,EAAc/O,OAAO1C,SAASqW,GAAoBnW,QAAQ,GACzEoW,GAAc8B,EAASvE,QAC1ByC,GAAe,EACf7E,EAAgB,KAChB2G,EAASC,SAAU,KAU4B,GACjDpmB,OAAOulB,iBAAiB,UAAU,kBAhHVjK,EAgH+B,EAAKqH,cA/G1D4B,EAAOiC,OAASxmB,OAAOqE,WAAarE,OAAOsE,YAG3CigB,EAAOY,IAAQ,IAAMjoB,KAAKwR,GAAOxR,KAAKupB,KAAMxB,GAAWjlB,OAAOsE,YAAc8gB,IAE5Eb,EAAOmC,yBACPnC,EAAOoC,OAAQrC,EAAM/hB,UAErBiiB,EAASoC,QAAS5mB,OAAOqE,WAAYrE,OAAOsE,YAAY,IACxDkgB,EAASqC,OAAQvC,EAAOC,QACxBjJ,IAXF,IAAwBA,KAgHoD,GAG5EkJ,EAASsC,cAAc,IAAIhZ,KAAY,SAAS,GAChD0W,EAASuC,WAAWvmB,UAAY,SAChCgkB,EAASoC,QAAS5mB,OAAOqE,WAAYrE,OAAOsE,aAC5CN,SAASgjB,KAAKnB,SAAS,GAAGoB,YAAazC,EAASuC,YAGhDjC,EAAOoC,WAAa1C,EAAS2C,aAAaC,mBAC1CpC,EAAckC,WAAa1C,EAAS2C,aAAaC,mBAGjD,IAAI,IAAIjtB,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IAAI,CAG1C,IAAIU,EAAQzB,EAAae,GAAG,GACxBW,EAAQ1B,EAAae,GAAG,GACxBY,EAAQ3B,EAAae,GAAG,GAGtBktB,EAAgB,CACpB,IAAIvZ,KAAwB,CAAE7F,IAAK6c,EAAQ9W,aAAa,EAAKC,QAAQ,EAAGvN,MAAMtH,EAAae,GAAG,GAAI8B,KAAM6R,OACxG,IAAIA,KAAwB,CAAE7F,IAAK6c,EAAQ9W,aAAa,EAAKC,QAAQ,EAAGvN,MAAMtH,EAAae,GAAG,GAAI8B,KAAM6R,OACxG,IAAIA,KAAwB,CAAE7F,IAAK6c,EAAQ9W,aAAa,EAAKC,QAAQ,EAAGvN,MAAMtH,EAAae,GAAG,GAAI8B,KAAM6R,OACxG,IAAIA,KAAwB,CAAE7F,IAAK6c,EAAQ9W,aAAa,EAAKC,QAAQ,IACrE,IAAIH,KAAwB,CAAE7F,IAAK6c,EAAQ9W,aAAa,EAAKC,QAAQ,EAAGvN,MAAMtH,EAAae,GAAG,GAAI8B,KAAM6R,OACxG,IAAIA,KAAwB,CAAE7F,IAAK6c,EAAQ9W,aAAa,EAAKC,QAAQ,EAAGvN,MAAMtH,EAAae,GAAG,GAAI8B,KAAM6R,QAI1G6B,EAAUxV,GAAK,IAAI2T,KAAW+W,EAAcwC,GAG5C1X,EAAUxV,GAAGmU,WAAWzT,GACxB8U,EAAUxV,GAAGqU,WAAW1T,GACxB6U,EAAUxV,GAAGoU,WAAWxT,GAI1BupB,EAAMhW,WAAW,GAAGX,EAAG,GACvB2W,EAAM9V,WAAW,GAAGb,EAAG,GACvB2W,EAAM/V,WAAW,GAAGZ,EAAG,GAGvB,IAAIwY,EAAW,IAAImB,KAAe/C,EAASC,EAASuC,YACpDZ,EAASC,SAAU,EACnBD,EAASoB,eAAgB,EACzBpB,EAASqB,cAAgB,IACzBrB,EAASsB,YAAa,EACtBtB,EAASuB,YAAa,EACtBvB,EAASwB,YAAe,EAAEha,EAC1BwY,EAASyB,YAAe,EAAEja,EAAI,GAC9BwY,EAAS0B,WAAY,EACrB1B,EAAS2B,KAAO,CACdC,KAAM,KACNC,GAAI,KACJC,MAAO,KACPC,OAAQ,MAGV/B,EAASZ,iBAAiB,UAAU,SAACzhB,GAC/B0gB,GAAUA,EAASqC,OAAOvC,EAAOC,MAGvC3W,EAAOrI,SAAQ,SAAA4iB,GAAK,OAAI7D,EAAM1V,IAAN,MAAA0V,EAAK,YAAQ6D,OAGrCvS,KAAK/F,SAAS,CACZE,MAAQJ,EACRtW,cAAgBsU,EAChBkR,QAAW,EAAElR,EACbgR,QAAW,EAAEhR,EACbiR,UAAY,EAAEjR,GACdvU,eACA8Q,QAASiL,EAAUjL,QACnB3Q,MAAO4b,EAAU5b,MACjB4B,QAASga,EAAUha,QACnBwB,YAAa,QACb0I,iBAAkB5L,GAAKyT,mBAAmB0I,KAAKuO,oBAC9C,WAGD,IAAI,IAAIhqB,EAAI,EAAGA,EAAIf,EAAaY,OAAQG,IAEC,IAAnC,EAAKyV,MAAMG,MAAM5V,GAAGoI,SAASlF,GAAW,EAAKuS,MAAMG,MAAM5V,GAAGoI,SAASlF,IAAM,EAAKuS,MAAMvW,cAAc,GAChE,IAAnC,EAAKuW,MAAMG,MAAM5V,GAAGoI,SAASjF,GAAW,EAAKsS,MAAMG,MAAM5V,GAAGoI,SAASjF,IAAM,EAAKsS,MAAMvW,cAAc,GACjE,IAAnC,EAAKuW,MAAMG,MAAM5V,GAAGoI,SAAShF,GAAW,EAAKqS,MAAMG,MAAM5V,GAAGoI,SAAShF,IAAM,EAAKqS,MAAMvW,cAAc,GACvGirB,EAAM1V,IAAK,EAAKgB,MAAMG,MAAM5V,IAMhCoqB,EAAOhiB,SAAShF,EAAI,EAAKqS,MAAMiP,QAC/B0F,EAAOhiB,SAASjF,EAAI,EAAKsS,MAAMgP,QAC/B2F,EAAOhiB,SAASlF,EAAI,EAAKuS,MAAM+O,QAE/B6F,EAASqC,OAAQvC,EAAOC,GACxB6D,OAIF,IAAIA,EAAU,SAAVA,IAEFC,sBAAuBD,GAEvB,IAAI,IAAIjuB,EAAI,EAAGA,EAAIyT,EAAO5T,OAAOG,IAC/ByT,EAAOzT,GAAGoL,SAAQ,SAAA4iB,GAAK,OAAIA,EAAMtZ,SAAU,KAG7C,GAAG,EAAKe,MAAMK,OAAO,EAAKL,MAAMkB,IAC9B,EAAKjB,SAASpW,GAAKgW,aAAahW,GAAKsV,YAAYY,EAAU,EAAKC,YAI7D,CAGH,IAA8B,iBAA3B,EAAKA,MAAMjT,aAA6D,SAA3B,EAAKiT,MAAMjT,aAAoD,YAA3B,EAAKiT,MAAMjT,aAAuD,eAA3B,EAAKiT,MAAMjT,cAIjI,EAAKiT,MAAMuQ,UAAU,CACtB,kBAAiC,EAAKvQ,MAAMmH,UAA5C,GAAKuR,EAAL,KAAWC,EAAX,KAAgBC,EAAhB,KAAuBC,EAAvB,KACA,GAAGH,EAAM,EACP,IAAa,IAAVC,EACD,GAAIE,EAIF,IAAI,IAAItuB,EAAI,EAAGA,GAAKquB,EAAO,EAAGruB,IAC5ByT,EAAO0a,GAAOnuB,GAAG0U,SAAQ,OAJ3BjB,EAAO0a,GAAOE,EAAO,GAAG3Z,SAAQ,OAQlC,GAAI4Z,EAIJ,IAAI,IAAItuB,EAAI,EAAGA,GAAKquB,EAAO,EAAGruB,IAC5ByT,EAAO0a,EAAM,GAAGnuB,GAAG0U,SAAQ,OAJ3BjB,EAAO0a,EAAM,GAAGE,EAAO,GAAG3Z,SAAQ,OAatC,GAJW,IAARyZ,IAAWA,EAAM,GACT,IAARA,IAAWA,EAAM,GACT,IAARA,IAAWA,EAAM,IAEP,IAAVC,EACD,GAAIE,EAIF,IAAI,IAAItuB,EAAIyT,EAAO0a,EAAM,GAAGtuB,OAAO,EAAGG,GAAMyT,EAAO0a,EAAM,GAAGtuB,OAAO,GAAIwuB,EAAO,GAAIruB,IAChFyT,EAAO0a,EAAM,GAAGnuB,GAAG0U,SAAQ,OAJ7BjB,EAAO0a,EAAM,GAAI1a,EAAO0a,EAAM,GAAGtuB,OAAO,GAAIwuB,EAAO,IAAI3Z,SAAQ,OAQjE,GAAI4Z,EAIF,IAAI,IAAItuB,EAAIyT,EAAO0a,GAAOtuB,OAAO,EAAGG,GAAMyT,EAAO0a,EAAM,GAAGtuB,OAAO,GAAIwuB,EAAO,GAAIruB,IAC9EyT,EAAO0a,GAAOnuB,GAAG0U,SAAQ,OAJ3BjB,EAAO0a,GAAQ1a,EAAO0a,GAAOtuB,OAAO,GAAIwuB,EAAO,IAAI3Z,SAAQ,EAYrE,GADG,EAAKe,MAAM1P,QAAQ,EAAKqhB,mBAAmB,EAAK3R,MAAM3K,MAC3B,SAA3B,EAAK2K,MAAMjT,YAAuB,CAGnC,GAA8B,SAA3B,EAAKiT,MAAMjT,aACgB,SAA3B,EAAKiT,MAAMjT,iBAET,CACH,IAAID,EAAU,EAAKkT,MAAMlT,QACrBK,EAAQ,EAAK6S,MAAM2P,UAEvB,GAAGxiB,EAAQ,EAAE,CACX,IAAI9B,EAAY+V,GAAU1X,kBAAkBoD,GAE5C,GAA+B,MAA5B,EAAKkT,MAAMjT,YAAY,IAAwC,MAA5B,EAAKiT,MAAMjT,YAAY,IAC9B,MAA5B,EAAKiT,MAAMjT,YAAY,IAAwC,MAA5B,EAAKiT,MAAMjT,YAAY,IAAwC,MAA5B,EAAKiT,MAAMjT,YAAY,GAAS,CAEvG,IADA,IAAI+rB,EAAUztB,EAAUA,EAAUjB,OAAO,GACjCG,EAAI,EAAGA,GAAK4C,EAAO5C,IACzBc,EAAU2N,MAEZ3N,EAAUb,KAAKsuB,QAIf,IAAI,IAAIvuB,EAAI,EAAGA,EAAI4C,EAAO5C,IACxBc,EAAU2N,MAIdlM,EAAUzB,EAAU+C,KAAK,KACzB,EAAK6R,SAAS,CAAC0P,UAAU,EAAE7iB,aAK/B,GAA6B,eAAzB,EAAKkT,MAAMjT,YACb,GAAG,EAAKiT,MAAM1U,SAAS,EAAK0U,MAAM1U,QAAQlB,OAAO,CAC/C,IAAI2T,EAAK,EAAKiC,MAAMvW,cAChBsvB,EAAa,EAAK/Y,MAAMxW,aACxByX,EAAe,EAAKjB,MAAMiB,aAC1BnU,EAAU,EAAKkT,MAAMlT,QACrBH,EAAa,EAAKqT,MAAMrT,WACxB3C,EAAa,EAAKgW,MAAMhW,WACxBkX,EAAM,EAAKlB,MAAMkB,IAGrB,GAAsC,kBAA5B,EAAKlB,MAAM1U,QAAQ,GAAG,GAAgB,CAE9C,IAAIA,EAAQ,EAAK0U,MAAM1U,QACvB,EAAK6lB,YAAL,QAAI,YAAgB7lB,EAAQ,IAAxB,SAA2B,KAC/BA,EAAQiW,QACR,EAAKtB,SAAS,CAAC3U,gBAEb,CACF,IAAImY,EAAWrC,GAAUC,eAAe,EAAKrB,MAAM1U,SAGnD,GAAGmY,EAAS,CACV,IAAI5W,EAAMhD,GAAKmX,eAAL,MAAAnX,GAAI,YAAmB4Z,GAAnB,QAA4BxC,EAAanU,EAAQH,EAAWuU,EAAIlX,KAE9E6C,EAAIrD,aAAeK,GAAK8W,WAAW9T,EAAIwI,KAAKxI,EAAIuT,cAAcvT,EAAIyT,UAAUzT,EAAI0T,QAAQxC,EAAGgb,GAE3F,EAAK9Y,SAASpT,UAKlB,EAAKoT,SAAS,CAAClT,YAAc,OAAOoB,MAAQ,SAI3C,GAA6B,YAAzB,EAAK6R,MAAMjT,aAAkD,eAAzB,EAAKiT,MAAMjT,YAGtD,IAAG,EAAKiT,MAAM8E,YAAe,EAAK9E,MAAM0E,UAAa,EAAK1E,MAAM2E,YAK3D,GAAG,EAAK3E,MAAM6E,QAAQ,CACzB,IAAI9G,EAAK,EAAKiC,MAAMvW,cAChBsvB,EAAa,EAAK/Y,MAAMxW,aACxByX,EAAe,EAAKjB,MAAMiB,aAC1BnU,EAAU,EAAKkT,MAAMlT,QACrBH,EAAa,EAAKqT,MAAMrT,WACxBrB,EAAU,EAAK0U,MAAM1U,QACrB4V,EAAM,EAAKlB,MAAMkB,IACjBlX,EAAa,EAAKgW,MAAMhW,WACxB6C,EAAM,GAEV,GAA2B,kBAAjBvB,EAAQ,GAAG,GACnB,EAAK6lB,YAAL,QAAI,YAAgB7lB,EAAQ,IAAxB,SAA2B,KAC/BA,EAAQiW,QACR1U,EAAIvB,QAAQA,MAEV,CAGF,IAAImY,EAAWrC,GAAUC,eAAe/V,GAIrCmY,IACD5W,EAAMhD,GAAKmX,eAAL,MAAAnX,GAAI,YAAmB4Z,GAAnB,QAA4BxC,EAAanU,EAAQH,EAAWuU,EAAIlX,MAIzE,EAAKgW,MAAM6E,UAAShY,EAAIgY,SAAU,GAGrC,EAAKxO,aAGFoN,IACD5W,EAAIrD,aAAeK,GAAK8W,WAAW9T,EAAIwI,KAAKxI,EAAIuT,cAAcvT,EAAIyT,UAAUzT,EAAI0T,QAAQxC,EAAGgb,GAC3FlsB,EAAIwX,eAAiB,EAAKrE,MAAMqE,eAAe,GAKnD,EAAKpE,SAASpT,QAGX,GAAG,EAAKmT,MAAM1U,QAAQlB,OAAO,CAChC,IAAIkB,EAAU,EAAK0U,MAAM1U,QACrBuB,EAAM,GACV,GAA2B,kBAAjBvB,EAAQ,GAAG,GAEnB,EAAK6lB,YAAL,QAAI,YAAgB7lB,EAAQ,IAAxB,SAA2B,KAC/BA,EAAQiW,QACR1U,EAAIvB,QAAQA,MAEV,CACF,IAAI2K,EAAOmL,GAAUY,kBAAkB1W,EAAQ,IAC5C2K,GACD,EAAK4c,UAAU,EAAK7S,MAAM1U,QAAQ,GAAG2K,GAGtCpJ,EAAIzC,QACL,EAAK6V,SAAS,CAACpT,cAhEjB,EAAKoT,SAAS,CAAC6E,YAAW,IAAO,kBAAI,EAAK6M,mBAAmB,iBAqE5D,GAA4B,iBAAzB,EAAK3R,MAAMjT,kBAGd,GAA4B,UAAzB,EAAKiT,MAAMjT,YACjB,EAAKilB,aAGL,GAAG,EAAKhS,MAAM1U,QAAQlB,OAAO,CAC3B,IAAI2T,EAAK,EAAKiC,MAAMvW,cAChBsvB,EAAa,EAAK/Y,MAAMxW,aACxByX,EAAe,EAAKjB,MAAMiB,aAC1BnU,EAAU,EAAKkT,MAAMlT,QACrBH,EAAa,EAAKqT,MAAMrT,WACxB3C,GAAa,EAAKgW,MAAMhW,WACxBkX,GAAM,EAAKlB,MAAMkB,IAGrB,GAAsC,kBAA5B,EAAKlB,MAAM1U,QAAQ,GAAG,GAAgB,CAE9C,IAAIA,GAAQ,EAAK0U,MAAM1U,QACvB,EAAK6lB,YAAL,QAAI,YAAgB7lB,GAAQ,IAAxB,SAA2B,KAC/BA,GAAQiW,QACR,EAAKtB,SAAS,CAAC3U,iBAEb,CACF,IAAImY,GAAWrC,GAAUC,eAAe,EAAKrB,MAAM1U,SAGnD,GAAGmY,GAAS,CACV,IAAI5W,GAAMhD,GAAKmX,eAAL,MAAAnX,GAAI,YAAmB4Z,IAAnB,QAA4BxC,EAAanU,EAAQH,EAAWuU,GAAIlX,MAE9E6C,GAAIrD,aAAeK,GAAK8W,WAAW9T,GAAIwI,KAAKxI,GAAIuT,cAAcvT,GAAIyT,UAAUzT,GAAI0T,QAAQxC,EAAGgb,GAE3F,EAAK9Y,SAASpT,WAMlB,EAAKoT,SAAS,CAAClT,YAAY,UAMnCwpB,EAASyC,SACTpE,EAASqC,OAAQvC,EAAOC,M,oBAK5B,WAAU,IAAD,OAEP,OACE,yBAAK/jB,UAAU,MAAMC,MAAO,CAACe,MAAM,gBAEjC,kBAAC,EAAD,CACEb,MAAM,eACNM,eAAgB2U,KAAK3U,eAAeilB,KAAKtQ,MACzC0K,QAAS1K,KAAKuO,gBAAe,GAC7BvU,MAAOgG,KAAKhG,QAGY,iBAAzBgG,KAAKhG,MAAMjT,YAA6B,qCAAM,uBAAG8D,MAAO,CAAC8B,SAAS,QAASC,IAAK,QAASC,KAAM,OAAO/B,MAAO,YAAYmB,SAAS,SAApF,UAAqG+T,KAAKhG,MAAMmP,cAC/J,yBAAKte,MAAO,CAACe,MAAM,OAAOe,SAAS,WAAYC,IAAK,OAAOd,OAAO,OAAOmV,QAAQ,SAC/E,yBAAKpW,MAAO,CAACiB,OAAO,OAAQmV,QAAQ,gBACV,SAAzBjB,KAAKhG,MAAMjT,aAA+C,SAAzBiZ,KAAKhG,MAAMjT,aAA+C,SAAzBiZ,KAAKhG,MAAMjT,aAA+C,cAAzBiZ,KAAKhG,MAAMjT,YAC/G,CAAC,4BAAQ0D,IAAI,OAAOG,UAAU,WAAWC,MAAO,CAAC4B,YAAY,MAAMR,SAAS,OAAQnB,MAAO,YAAY+Z,WAAW,QAASla,QAAS,kBAAM,EAAKqgB,SAAQ,uBAAGpgB,UAAU,uBACpK,4BAAQH,IAAI,OAAOG,UAAU,WAAWC,MAAO,CAAC6V,WAAW,MAAMzU,SAAS,OAAQnB,MAAO,YAAY+Z,WAAW,QAASla,QAAS,kBAAM,EAAKsgB,SAAQ,uBAAGrgB,UAAU,yBACjK,KAKuB,iBAAzBoV,KAAKhG,MAAMjT,YAA6B,GAAG,kBAAC,EAAD,CAC1CqG,eAAgB4S,KAAK5S,eACrBH,MAAO+S,KAAKhG,MAAM2Q,cAElB3K,KAAKhG,MAAM6P,cACX,kBAAC,EAAD,CACE1b,UAAa6R,KAAK7R,UAClBN,WAAcmS,KAAKuM,gBACnB7e,QAAWsS,KAAK2M,aAChB7e,OAAUkS,KAAK4M,cACZ,GAEmB,YAAzB5M,KAAKhG,MAAMjT,YACR,kBAAC,EAAD,CACE4H,gBAAiBqR,KAAKhG,MAAMmD,UAAU/Y,OACtCwK,cAAeoR,KAAKhG,MAAMkF,QAAQ9a,SACjC,GAEmB,iBAAzB4b,KAAKhG,MAAMjT,YACR,kBAAC,EAAD,CACE+H,YAAakR,KAAKhG,MAAMlL,cACvB,GAGP,kBAAC,GAAD,CACEkL,MAASgG,KAAKhG,MACdC,SAAY+F,KAAK8M,aACjBjJ,cAAiB7D,KAAK6D,cACtBoP,aAAcjT,KAAKhG,MAAMgQ,gBAGzBva,iBAAkBuQ,KAAKhG,MAAMvK,iBAC7BD,KAAMwQ,KAAKuO,iBACXze,cAAekQ,KAAKlQ,cACpBK,WAAa6P,KAAK6M,UAClBxc,WAAa2P,KAAK3P,WAGlByT,iBAAkB9D,KAAK8D,iBACvBT,eAAgBrD,KAAKqD,eACrBvU,YAAakR,KAAKhG,MAAMlL,YACxB2T,YAAazC,KAAKyC,YAClBrB,cAAepB,KAAKhG,MAAMoH,cAC1B8B,mBAAoBlD,KAAKkD,mBACzBC,SAAUnD,KAAKhG,MAAMmJ,SACrBC,eAAgBpD,KAAKoD,eAGrBE,WAAYtD,KAAKsD,WACjB1B,UAAW5B,KAAK4B,UAChB/C,QAASmB,KAAKnB,QACdkB,UAAWC,KAAK+K,YAChBzgB,OAAQ0V,KAAK2L,0B,GAnxCL3J,aCjBZkR,GAAcC,QACW,cAA7B/oB,OAAOC,SAAS+oB,UAEe,UAA7BhpB,OAAOC,SAAS+oB,UAEhBhpB,OAAOC,SAAS+oB,SAASC,MAAM,2DAqCnC,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/Z,QACfyZ,UAAUC,cAAcQ,YAI1BpsB,QAAQC,IACN,+GAKEyrB,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlB/rB,QAAQC,IAAI,sCAGRyrB,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAC9W,GACNzV,QAAQyV,MAAM,4CAA6CA,M,uBCvF3D+W,GACF,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,KAAK,IAAI3kB,QAAS,kBAAC,GAAD,UAIjC4kB,IAASvD,OAAOqD,GAASlmB,SAASC,eAAe,SDM1C,SAAkBmlB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,iBAAwBtqB,OAAOC,SAASK,MACpDiqB,SAAWvqB,OAAOC,SAASsqB,OAIvC,OAGFvqB,OAAOulB,iBAAiB,QAAQ,WAC9B,IAAM4D,EAAK,UAAMmB,iBAAN,sBAEPxB,KAgEV,SAAiCK,EAAOC,GAEtCoB,MAAMrB,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BjB,MAAK,SAACkB,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYtgB,QAAQ,cAG5Cgf,UAAUC,cAAcwB,MAAMtB,MAAK,SAACC,GAClCA,EAAasB,aAAavB,MAAK,WAC7BxpB,OAAOC,SAASC,eAKpBgpB,GAAgBC,EAAOC,MAG1Ba,OAAM,WACLvsB,QAAQC,IAAI,oEAtFVqtB,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAMtB,MAAK,WACjC9rB,QAAQC,IACN,+GAMJurB,GAAgBC,EAAOC,OC7B/B6B,I","file":"static/js/main.ceb94054.chunk.js","sourcesContent":["function inMiddle(coord,maxCoord,minCoord){\r\n  return coord>minCoord&&coord<maxCoord;\r\n}\r\n\r\nfunction sectionSpliter(edges){\r\n  let splitEdges = [];\r\n  let edgeSegments = edges.length/3;\r\n  const edgeSections = 4;\r\n  let segmentsPerSection = edgeSegments/edgeSections;\r\n\r\n  let temp = [];\r\n  for(let i = 0; i < edgeSegments;i++){\r\n    temp.push(edges[i]);\r\n    if(temp.length===segmentsPerSection){\r\n      splitEdges.push(temp);\r\n      temp=[];\r\n    }\r\n  }\r\n\r\n  return splitEdges;\r\n}\r\n\r\nfunction solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray,edges){\r\n\r\n    let moveString = \"\";\r\n    let cube = rubiksObject;\r\n    let space = \"\";\r\n    let solvedEdges = 0;\r\n\r\n    let dim = cubeDimension;\r\n    const maxCoord = dim-1;\r\n    const minCoord = 0;\r\n\r\n    if(dim === 2) {return {solveState : 2};}\r\n\r\n    let fourEdgeSections = sectionSpliter(edges);\r\n\r\n    let pieceOne = fourEdgeSections[0][0];\r\n    let pieceTwo = fourEdgeSections[3][0];\r\n    let pieceThree = fourEdgeSections[1][0];\r\n    let pieceFour = fourEdgeSections[2][0];\r\n\r\n    for(let i = 0; i < cube.length; i++){\r\n      if(moveString.length) space = \" \";\r\n      if(cube[i].includes(\"white\")){\r\n\r\n        let emptyCount = 0;\r\n        let whiteSide = -1;\r\n        let cubeX = cube[i][6];\r\n        let cubeY = cube[i][7];\r\n        let cubeZ = cube[i][8];\r\n        \r\n\r\n        for(let j = 0; j < 6; j++){\r\n          if (cube[i][j] === \"black\") emptyCount++;\r\n          else {\r\n            if(cube[i][j] === \"white\") whiteSide = j;\r\n          }\r\n        }\r\n\r\n        // If edge piece\r\n        if(emptyCount === 4) {\r\n          if(i===pieceOne && solvedEdges === 0 ){\r\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===maxCoord)\r\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01U' 01R' 01F'\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              !whiteSide ? moveString+= space + \"01F'\" : moveString+= space + \"01R 01U\";\r\n            \r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\r\n              !whiteSide ? moveString+= space + \"01F2\" : moveString+= space + \"01D 01R 01F'\";\r\n\r\n            else if(cubeX===minCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              !whiteSide ? moveString+= space + \"01F\" : moveString+= space + \"01L' 01U'\";\r\n\r\n            //If piece one is in y section 1\r\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01L 01F\" : moveString+= space + \"01U'\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01R' 01F'\" : moveString+= space + \"01U\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===2 ? moveString+= space + \"01D' 01F2\" : moveString+= space + \"01R 01F'\";\r\n            \r\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===4 ? moveString+= space + \"01D 01F2\" : moveString+= space + \"01L' 01F\";\r\n            \r\n\r\n            //If piece one is in y section 2\r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\r\n              whiteSide===3 ? moveString+= space + \"01U2\" : moveString+= space + \"01B 01L 01U'\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01R2 01F'\" : moveString+= space + \"01R' 01U\";\r\n            \r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\r\n              whiteSide===3 ? moveString+= space + \"01B2 01U2\" : moveString+= space + \"01B' 01L 01U'\";\r\n            \r\n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01B' 01U2\" : moveString+= space + \"01L 01U'\";\r\n            \r\n          }\r\n          if(i===pieceTwo && solvedEdges === 1){\r\n            \r\n            if(cubeX===minCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01L' 01R 01U' 01R'\";\r\n            \r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\r\n              !whiteSide ? moveString+= space + \"01D' 01F' 01D 01F\" : moveString+= space + \"01D' 01L'\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              !whiteSide ? moveString+= space + \"01R 01F2 01R' 01F2\" : moveString+= space + \"01R 01F 01U 01F'\";\r\n            \r\n\r\n            //If piece two is in y section 1\r\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01L\" : moveString+= space + \"01F 01U' 01F'\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01F2 01R' 01F2\" : moveString+= space + \"01U 01F' 01U'\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===2 ? moveString+= space + \"01F' 01D' 01F\" : moveString+= space + \"01F2 01R 01F2\";\r\n            \r\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===4 ? moveString+= space + \"01F' 01D 01F\" : moveString+= space + \"01L'\";\r\n            \r\n\r\n            //If piece two is in y section 2\r\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\r\n              whiteSide===3 ? moveString+= space + \"01F 01U2 01F'\" : moveString+= space + \"01U' 01L 01U\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01B2 01L2\" : moveString+= space + \"01R' 01F 01U 01F'\";\r\n            \r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\r\n              whiteSide===3 ? moveString+= space + \"01F' 01D2 01F\" : moveString+= space + \"01D 01L'\";\r\n            \r\n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01L2\" : moveString+= space + \"01B' 01U' 01L 01U\";\r\n            \r\n          }\r\n          if(i===pieceThree && solvedEdges === 2){\r\n  \r\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\r\n              !whiteSide ? moveString+= space + \"01D 01F 01D' 01F'\" : moveString+= space + \"01D 01R\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01R 01F' 01U 01F\";\r\n            \r\n            \r\n            //If piece three is in y section 1\r\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01F2 01L 01F2\" : moveString+= space + \"01F' 01U' 01F\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01R'\" : moveString+= space + \"01F' 01U 01F\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===2 ? moveString+= space + \"01F 01D' 01F'\" : moveString+= space + \"01R\";\r\n            \r\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===4 ? moveString+= space + \"01F 01D 01F'\" : moveString+= space + \"01F2 01L' 01F2\";\r\n            \r\n\r\n            //If piece three is in y section 2\r\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\r\n              whiteSide===3 ? moveString+= space + \"01F' 01U2 01F\" : moveString+= space + \"01U 01R' 01U'\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01R2\" : moveString+= space + \"01R' 01F' 01U 01F\";\r\n            \r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\r\n              whiteSide===3 ? moveString+= space + \"01F 01D2 01F'\" : moveString+= space + \"01D' 01L\";\r\n            \r\n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01B2 01R2\" : moveString+= space + \"01B' 01U 01R' 01U'\";\r\n            \r\n          }\r\n          if(i===pieceFour && solvedEdges === 3){\r\n  \r\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\r\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01D 01F' 01R 01F\";\r\n            \r\n            //If piece four is in y section 1\r\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01F 01L 01F'\" : moveString+= space + \"01F2 01U' 01F2\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\r\n              whiteSide===1 ? moveString+= space + \"01F' 01R' 01F\" : moveString+= space + \"01F2 01U 01F2\";\r\n            \r\n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===2 ? moveString+= space + \"01D'\" : moveString+= space + \"01F' 01R 01F\";\r\n            \r\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\r\n              whiteSide===4 ? moveString+= space + \"01D\" : moveString+= space + \"01F 01L' 01F'\";\r\n            \r\n\r\n            //If piece four is in y section 2\r\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\r\n              whiteSide===3 ? moveString+= space + \"01F2 01U2 01F2\" : moveString+= space + \"01B 01L' 01D 01L\";\r\n            \r\n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01F' 01R2 01F\" : moveString+= space + \"01R 01D' 01R'\";\r\n            \r\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\r\n              whiteSide===3 ? moveString+= space + \"01D2\" : moveString+= space + \"01D' 01F' 01R 01F\";\r\n            \r\n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\r\n              whiteSide===3 ? moveString+= space + \"01F 01L2 01F'\" : moveString+= space + \"01L' 01D 01L\";\r\n            \r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    const moveArray = moveStringToArray(moveString);\r\n\r\n    if(solvedEdges < 4){\r\n        return {moveSet : moveArray};\r\n    } else{\r\n        return {solveState : 2}\r\n    }\r\n}\r\n\r\nmodule.exports = solveWhiteCross;","  // Solves white (front) corners\r\n  function solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray,corners){\r\n    let moveString = \"\";\r\n    let cube = rubiksObject;\r\n    let solvedCorners = 0;\r\n\r\n    let dim = cubeDimension;\r\n\r\n    let maxCoord = dim-1;\r\n    let minCoord = 0;\r\n\r\n    let pieceOne = corners[0]\r\n    let pieceTwo = corners[1]\r\n    let pieceThree = corners[2]\r\n    let pieceFour = corners[3]\r\n\r\n    for(let i = 0; i < cube.length; i++){\r\n      let whiteSide = -1;\r\n      let cubeX = cube[i][6];\r\n      let cubeY = cube[i][7];\r\n      let cubeZ = cube[i][8];\r\n\r\n      for(let j = 0; j < 6; j++){\r\n        if(cube[i][j] === \"white\") whiteSide = j;\r\n      }\r\n\r\n      if(i===pieceOne && solvedCorners === 0 ){\r\n        //Front\r\n        if(cubeX===minCoord && cubeY===minCoord && cubeZ===maxCoord){\r\n          if(whiteSide===0){solvedCorners++}\r\n          else if(whiteSide===1) moveString=\"01L' 01B 01L 01B' 01L' 01B 01L\";\r\n          else moveString=\"01L' 01B' 01L 01B2 01U 01B' 01U'\";\r\n        }\r\n        else if(cubeX===maxCoord && cubeY===minCoord && cubeZ===maxCoord) moveString=\"01R 01L' 01B 01L 01R'\"\r\n        else if(cubeX===maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01R' 01B' 01R 01U 01B' 01U'\";\r\n        else if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01D' 01U 01B 01U' 01D\"\r\n        //Back\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01U 01B 01U'\"\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01L' 01B 01L\"\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01L' 01B2 01L\"\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01U 01B' 01U'\"\r\n      }\r\n\r\n      if(i===pieceTwo && solvedCorners === 1 ){\r\n        if(cubeX===maxCoord && cubeY===minCoord && cubeZ===maxCoord){\r\n          if(whiteSide === 0){solvedCorners++}\r\n          else if(whiteSide===1) moveString =\"01R 01B' 01R' 01B 01R 01B' 01R'\";\r\n          else moveString =\"01U' 01B 01U 01B' 01U' 01B 01U\";\r\n        }\r\n        else if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01U' 01D 01B 01D' 01U\";\r\n        else if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01L 01R 01B2 01R' 01L'\";\r\n        //Back\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01R 01B' 01R'\";\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01B 01R 01B' 01R'\";\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01B2 01R 01B' 01R'\";\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01R 01B2 01R'\";\r\n      }\r\n      \r\n      if(i===pieceThree && solvedCorners === 2 ){\r\n        if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord){\r\n          if(whiteSide === 0){solvedCorners++}\r\n          else if(whiteSide === 4) moveString =\"01D' 01B 01D 01B' 01D' 01B 01D\";\r\n          else moveString =\"01L 01B' 01L' 01B 01L 01B' 01L'\";\r\n        }\r\n        else if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01R' 01L 01B' 01L' 01R\";\r\n        //Back\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01D' 01B 01D\";\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01D' 01B2 01D\";\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01B' 01D' 01B' 01D\";\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01D' 01B' 01D\";\r\n      }\r\n      if(i===pieceFour && solvedCorners === 3 ){ \r\n        if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord){\r\n          if(whiteSide === 0){solvedCorners++}\r\n          else if(whiteSide === 2) moveString =\"01D 01B' 01D' 01B 01D 01B' 01D'\";\r\n          else moveString =\"01R' 01B 01R 01B' 01R' 01B 01R\";\r\n        }\r\n        //Back\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) {moveString=\" 01R' 01B2 01R\";}\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) {moveString=\"01D 01B' 01D'\";}\r\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) {moveString=\"01B 01D 01B' 01D'\";}\r\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) {moveString=\"01R' 01B 01R\";}\r\n      }\r\n\r\n\r\n    }\r\n\r\n    const moveArray = moveStringToArray(moveString);\r\n\r\n    if(solvedCorners < 4){\r\n        return {moveSet : moveArray};\r\n    }\r\n    else{\r\n      if(dim === 2){\r\n        return {solveState : 6};\r\n      }\r\n      else{\r\n        return {solveState : 3};\r\n      }\r\n    }\r\n  }\r\n\r\n  module.exports = solveWhiteCorners;","function inMiddle(coord,maxCoord,minCoord){\r\n  return coord>minCoord&&coord<maxCoord;\r\n}\r\n\r\nfunction sectionSpliter(edges){\r\n  let splitEdges = [];\r\n  let edgeSegments = edges.length/3;\r\n  const edgeSections = 4;\r\n  let segmentsPerSection = edgeSegments/edgeSections;\r\n\r\n  let temp = [];\r\n  for(let i = edgeSegments*2; i < edgeSegments*3;i++){\r\n    temp.push(edges[i]);\r\n    if(temp.length===segmentsPerSection){\r\n      splitEdges.push(temp);\r\n      temp=[];\r\n    }\r\n  }\r\n\r\n  return splitEdges;\r\n}\r\n\r\nfunction solveMiddleEdges(rubiksObject,moveStringToArray,edges,dim){\r\n  let moveString = \"\";\r\n  let cube = rubiksObject;\r\n  let space = \"\";\r\n  let solvedEdges = 0;\r\n  let moveFromMiddle012 = \"01B 01U 01B' 01U' 01B' 01L' 01B 01L\";\r\n  let moveFromMiddle212 = \"01B 01R 01B' 01R' 01B' 01U' 01B 01U\";\r\n  let moveFromMiddle210 = \"01B 01D 01B' 01D' 01B' 01R' 01B 01R\";\r\n  let moveFromMiddle010 = \"01B 01L 01B' 01L' 01B' 01D' 01B 01D\";\r\n\r\n  let minCoord = 0;\r\n  let maxCoord = dim-1;\r\n\r\n  let fourEdgeSections = sectionSpliter(edges);\r\n\r\n  let edgeOne = fourEdgeSections[0][0];\r\n  let edgeTwo = fourEdgeSections[1][0];\r\n  let edgeThree = fourEdgeSections[3][0];\r\n  let edgeFour = fourEdgeSections[2][0];\r\n\r\n\r\n  // console.log(\"\\n\\n\",fourEdgeSections);\r\n  for(let i = 0; i < cube.length; i++){\r\n    if(moveString.length) space = \" \";\r\n    //if(cube[i].includes(\"green\") || cube[i].includes(\"blue\")){\r\n      //let emptyCount = 0;\r\n      let blueSide = -1;\r\n      let greenSide = -1;\r\n      let cubeX = cube[i][6];\r\n      let cubeY = cube[i][7];\r\n      let cubeZ = cube[i][8];\r\n\r\n      for(let j = 0; j < 6; j++){\r\n        if (cube[i][j] === \"black\");\r\n        else {\r\n          if(cube[i][j] === \"blue\") blueSide = j;\r\n          else if(cube[i][j] === \"green\") greenSide = j;\r\n        }\r\n      }\r\n\r\n      // //if(emptyCount === 4){\r\n      //   console.log(\"Cube:\",cube[i]);\r\n      //   console.log(\"i:\",i);\r\n      //   console.log(\"Solved Edges:\",solvedEdges);\r\n        if(i===edgeOne && solvedEdges === 0){\r\n          //Front\r\n          if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord)\r\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle012;\r\n          \r\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord) moveString+= space + moveFromMiddle212;\r\n          else if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle010;\r\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\r\n          //Back\r\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) {\r\n            blueSide === 3 ? moveString+= space + moveFromMiddle012 : moveString+= space + \"01B2 01L' 01B' 01L 01B 01U 01B 01U'\";\r\n          }\r\n          else if(inMiddle(cubeX,maxCoord,minCoord)&& cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B\";\r\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B2\";\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B'\";\r\n        }\r\n        if(i===edgeTwo && solvedEdges === 1){\r\n          //Front\r\n          if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord){\r\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle212;\r\n          }\r\n          else if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle010;\r\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\r\n          //Back\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) {\r\n            blueSide === 1 ? moveString+= space + moveFromMiddle212 : moveString+= space + \"01B2 01U' 01B' 01U 01B 01R 01B 01R'\";\r\n          }\r\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B\";\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B2\";\r\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B'\";\r\n        }\r\n        if(i===edgeThree && solvedEdges === 2){\r\n          //Front\r\n          if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord){\r\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle010;\r\n          }\r\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\r\n          //Back\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord){\r\n            greenSide === 5 ? moveString+= space + moveFromMiddle010 : moveString+= space + \"01B2 01D' 01B' 01D 01B 01L 01B 01L'\";\r\n          }\r\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B\";\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B2\";\r\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B'\";\r\n        }\r\n        if(i===edgeFour && solvedEdges === 3){\r\n          //Front\r\n          if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord){\r\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle210;\r\n          }\r\n          //Back\r\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)){\r\n            greenSide === 3 ? moveString+= space + moveFromMiddle210 : moveString+= space + \"01B2 01R' 01B' 01R 01B 01D 01B 01D'\";\r\n          }\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B\";\r\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B2\";\r\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B'\"; \r\n        }\r\n      //}\r\n    //}\r\n  }\r\n\r\n  const moveArray = moveStringToArray(moveString);\r\n\r\n  if(solvedEdges < 4 ) return {moveSet : moveArray};\r\n  else return {solveState : 4};\r\n}\r\n\r\nmodule.exports = solveMiddleEdges;","function sectionSpliter(edges){\r\n  let splitEdges = [];\r\n  let edgeSegments = edges.length/3;\r\n  const edgeSections = 4;\r\n  let segmentsPerSection = edgeSegments/edgeSections;\r\n\r\n  let temp = [];\r\n  for(let i = edgeSegments; i < edgeSegments*2;i++){\r\n    temp.push(edges[i]);\r\n    if(temp.length===segmentsPerSection){\r\n      splitEdges.push(temp);\r\n      temp=[];\r\n    }\r\n  }\r\n\r\n  return splitEdges;\r\n}\r\n\r\nfunction inMiddle(coord,maxCoord,minCoord){\r\n  return coord>minCoord&&coord<maxCoord;\r\n}\r\n\r\nfunction move(depth,side){\r\n  return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nfunction solveYellowCross(rubiksObject,moveStringToArray,edges,dim){\r\n\r\n    if(dim === 2) {return {solveState : 5};}\r\n\r\n    let moveString = \"\";\r\n    let cube = rubiksObject;\r\n    let recipe = \"01U 01R 01B 01R' 01B' 01U'\";\r\n\r\n    let maxCoord = dim-1;\r\n    let minCoord = 0;\r\n\r\n    let fourEdgeSections = sectionSpliter(edges);\r\n    //console.log(edges);\r\n    let cubeIndex = [fourEdgeSections[0][0],fourEdgeSections[3][0],fourEdgeSections[1][0],fourEdgeSections[2][0]];\r\n    //console.log(cubeIndex);\r\n    let cubeAtIndex = [];\r\n\r\n    for(let i = 0; i < 4; i++){\r\n      if(inMiddle(cube[cubeIndex[i]][6],maxCoord,minCoord) && \r\n         cube[cubeIndex[i]][7] === maxCoord &&\r\n         cube[cubeIndex[i]][8] === maxCoord) cubeAtIndex[0] = cube[cubeIndex[i]][3];\r\n      else if (cube[cubeIndex[i]][6] === minCoord && \r\n        cube[cubeIndex[i]][7] === maxCoord &&\r\n        inMiddle(cube[cubeIndex[i]][8],maxCoord,minCoord)) cubeAtIndex[1] = cube[cubeIndex[i]][3];\r\n      else if (cube[cubeIndex[i]][6] === maxCoord && \r\n        cube[cubeIndex[i]][7] === maxCoord &&\r\n        inMiddle(cube[cubeIndex[i]][8],maxCoord,minCoord)) cubeAtIndex[2] = cube[cubeIndex[i]][3];\r\n      else if (inMiddle(cube[cubeIndex[i]][6],maxCoord,minCoord) && \r\n        cube[cubeIndex[i]][7] === maxCoord &&\r\n        cube[cubeIndex[i]][8] === minCoord) cubeAtIndex[3] = cube[cubeIndex[i]][3];\r\n    }\r\n\r\n    let skip = false;\r\n\r\n    if(dim%2===0&&dim>=4){\r\n      let counter = 0;\r\n      for(let i = 0; i < 4; i++){\r\n        if(cube[cubeIndex[i]][3] === \"yellow\") counter++;\r\n      }\r\n      if(counter%2){\r\n        skip=true;\r\n        moveString=\r\n          `${move(dim/2,\"r\")} 01B2 ${move(dim/2,\"r'\")} 01B2 \r\n          ${move(dim/2,\"r\")} 01B2 ${move(dim/2,\"r\")} 01B2 \r\n          ${move(dim/2,\"l'\")} 01B2 ${move(dim/2,\"r\")} 01B2 \r\n          ${move(dim/2,\"r'\")} 01B2 01D2 \r\n          ${move(dim/2,\"r2\")} 01D2 ${move(dim,\"r'\")}`;\r\n      };\r\n    }\r\n\r\n    if(!skip){\r\n      if(cube[cubeIndex[0]][3] === \"yellow\" &&\r\n        cube[cubeIndex[1]][3] === \"yellow\" &&\r\n        cube[cubeIndex[2]][3] === \"yellow\" &&\r\n        cube[cubeIndex[3]][3] === \"yellow\" \r\n        ); \r\n\r\n      //Line\r\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = \"01B \" + recipe; }\r\n      else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = recipe;}\r\n\r\n      //L-Shape\r\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = \"01B2 \" + recipe + \" \" + recipe;}\r\n      else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = recipe + \" \" + recipe;}\r\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[1] === \"yellow\" ) {moveString = \"01B \" + recipe + \" \" + recipe;}\r\n      else if (cubeAtIndex[2] === \"yellow\" && cubeAtIndex[3] ) {moveString = \"01B' \" + recipe + \" \" + recipe;}\r\n\r\n      else {moveString = recipe;}\r\n    }\r\n    const moveArray = moveStringToArray(moveString);\r\n\r\n    if(moveString.length) return {moveSet : moveArray}; \r\n    else return {solveState:5};\r\n  }\r\n\r\n  module.exports = solveYellowCross;","function sectionSpliter(edges){\r\n    let splitEdges = [];\r\n    let edgeSegments = edges.length/3;\r\n    const edgeSections = 4;\r\n    let segmentsPerSection = edgeSegments/edgeSections;\r\n  \r\n    let temp = [];\r\n    for(let i = edgeSegments; i < edgeSegments*2;i++){\r\n      temp.push(edges[i]);\r\n      if(temp.length===segmentsPerSection){\r\n        splitEdges.push(temp);\r\n        temp=[];\r\n      }\r\n    }\r\n  \r\n    return splitEdges;\r\n}\r\n\r\nfunction inMiddle(coord,maxCoord,minCoord){\r\n    return coord>minCoord&&coord<maxCoord;\r\n}\r\n\r\nfunction alignYellowCross(rubiksObject,moveStringToArray,edges,dim){\r\n\r\n    if(dim === 2) {return {solveState : 6};}\r\n\r\n    let moveString = \"\";\r\n    let cube = rubiksObject;\r\n\r\n    let maxCoord = dim-1;\r\n    let minCoord = 0;\r\n\r\n    let fourEdgeSections = sectionSpliter(edges);\r\n    let cubeIndex = [fourEdgeSections[0][0],fourEdgeSections[3][0],fourEdgeSections[1][0],fourEdgeSections[2][0]];\r\n\r\n    if(inMiddle(cube[cubeIndex[0]][6],maxCoord,minCoord) && cube[cubeIndex[0]][7] === maxCoord && cube[cubeIndex[0]][8] === maxCoord){\r\n        //Check if other pieces are in place\r\n        if(cube[cubeIndex[1]][6] === minCoord && inMiddle(cube[cubeIndex[1]][8],maxCoord,minCoord)&&\r\n            cube[cubeIndex[2]][6] === maxCoord && inMiddle(cube[cubeIndex[2]][8],maxCoord,minCoord));\r\n\r\n        else if(cube[cubeIndex[1]][6] === maxCoord && inMiddle(cube[cubeIndex[2]][8],maxCoord,minCoord) &&\r\n        inMiddle(cube[cubeIndex[3]][6],maxCoord,minCoord) && cube[cubeIndex[3]][8] === minCoord) moveString = \"01D 01B 01D' 01B 01D 01B2 01D' 01B2 01L 01B 01L' 01B 01L 01B2 01L' 01B\";\r\n\r\n        else if(cube[cubeIndex[3]][6] === maxCoord && inMiddle(cube[cubeIndex[3]][8],maxCoord,minCoord)) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\r\n\r\n        else if(cube[cubeIndex[3]][6] === minCoord && inMiddle(cube[cubeIndex[3]][8],maxCoord,minCoord)) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\r\n\r\n\r\n        //Make moves\r\n    }\r\n    else if(cube[cubeIndex[0]][6] === maxCoord && cube[cubeIndex[0]][7] === maxCoord && inMiddle(cube[cubeIndex[0]][8],maxCoord,minCoord)){\r\n        moveString = \"01B\";\r\n    }\r\n    else moveString = \"01B'\"\r\n\r\n    const moveArray = moveStringToArray(moveString);\r\n\r\n    if(moveString.length) return {moveSet : moveArray};\r\n    else return{solveState:6};\r\n}\r\n\r\nmodule.exports = alignYellowCross;","function move(depth,side){\r\n  return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nfunction solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves,corners){\r\n    let moveString = \"\";\r\n    let cube = rubiksObject;\r\n    let solveAlgo = \"01U' 01F' 01U 01F 01U' 01F' 01U 01F\";\r\n    let dim = cubeDimension;\r\n\r\n    let maxCoord = dim-1;\r\n    let minCoord = 0;\r\n\r\n    let pieceOne = corners[4];\r\n    let pieceTwo = corners[5];\r\n    let pieceThree = corners[6];\r\n    let pieceFour = corners[7];\r\n\r\n    let moveArray;\r\n\r\n    if(cube[pieceOne][3] === \"yellow\" &&\r\n       cube[pieceTwo][3] === \"yellow\" &&\r\n       cube[pieceThree][3] === \"yellow\" &&\r\n       cube[pieceFour][3] === \"yellow\"){\r\n      if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord);\r\n      else moveString = \"01B\";\r\n    }\r\n\r\n    else if(cube[pieceOne][3]!== \"yellow\"){\r\n      //console.log(cube[pieceOne]);\r\n      moveString = solveAlgo;\r\n    }\r\n\r\n    else if(cube[pieceTwo][3]!== \"yellow\"){\r\n      if(cube[pieceTwo][6] === minCoord && cube[pieceTwo][8] === maxCoord) {\r\n        //console.log(cube[pieceTwo]);\r\n        moveString = solveAlgo;\r\n      }\r\n      else {\r\n        moveString = \"01B\";\r\n      }\r\n    }\r\n    else if(cube[pieceFour][3]!== \"yellow\"){\r\n      if(cube[pieceFour][6] === minCoord && cube[pieceFour][8] === maxCoord) {\r\n        //console.log(cube[pieceFour]);\r\n        moveString = solveAlgo;\r\n      }\r\n      else{\r\n        moveString = \"01B\";\r\n      }\r\n    }\r\n    else if(cube[pieceThree][3]!== \"yellow\"){\r\n      if(cube[pieceThree][6] === minCoord && cube[pieceThree][8] === maxCoord) {\r\n        //console.log(cube[pieceThree]);\r\n        moveString = solveAlgo;\r\n      }\r\n      else {\r\n        moveString = \"01B\";\r\n      }\r\n    }\r\n\r\n    moveArray = moveStringToArray(moveString);\r\n\r\n    if(moveString.length){\r\n      return {moveSet:moveArray};\r\n    }\r\n    else{\r\n      //check for anomoly\r\n      if(dim === 2) {\r\n\r\n        if(cube[pieceOne][6]===minCoord && cube[pieceOne][8]===maxCoord) {\r\n          if(cube[pieceTwo][6]===maxCoord && cube[pieceTwo][8]===maxCoord){\r\n            if(cube[pieceThree][6]===minCoord && cube[pieceThree][8]===minCoord){\r\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\r\n              if(solveMoves.length){\r\n                obj.solveMoves = \"\";\r\n                return obj;\r\n              }\r\n              return obj;\r\n            }\r\n            else {\r\n              moveString = \"01R 01D' 01R' 01F' 01R' 01F 01D\";\r\n              moveArray = moveStringToArray(moveString);\r\n              return {moveSet:moveArray};\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          moveString = \"01B\";\r\n          moveArray = moveStringToArray(moveString);\r\n          return {moveSet:moveArray};\r\n        }\r\n      }\r\n      else if(dim>3){\r\n        if(cube[pieceOne][6]===minCoord && cube[pieceOne][8]===maxCoord) {\r\n          if(cube[pieceTwo][6]===maxCoord && cube[pieceTwo][8]===maxCoord){\r\n            if(cube[pieceThree][6]===minCoord && cube[pieceThree][8]===minCoord){\r\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\r\n              if(solveMoves.length){\r\n                obj.solveMoves = \"\";\r\n                return obj;\r\n              }\r\n              return obj;\r\n            }\r\n            else {\r\n              //console.log(\"last parity brother\");\r\n              moveString = \"02R2 01B2 02R2 01B2 02B2 02R2 02B2\";\r\n              moveString = `${move(dim/2,\"r2\")} 01R2 01B2 ${move(dim/2,\"r2\")} 01R2 01B2 ${move(dim/2,\"b2\")} 01B2 ${move(dim/2,\"r2\")} 01R2 ${move(dim/2,\"b2\")} 01B2`;\r\n              moveArray = moveStringToArray(moveString);\r\n              return {moveSet:moveArray,solveState:4};\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\r\n        if(solveMoves.length){\r\n          obj.solveMoves = \"\";\r\n          return obj;\r\n        }\r\n        \r\n        return obj;\r\n      }\r\n    }\r\n  }\r\n  module.exports = solveYellowCorners;\r\n","function move(depth,side){\r\n   return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nfunction alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray,corners){\r\n    let moveString = \"\";\r\n    let cube = rubiksObject;\r\n\r\n    let dim = cubeDimension;\r\n\r\n    let maxCoord = dim-1;\r\n    let minCoord = 0;\r\n\r\n    let pieceOne = corners[4];\r\n    let pieceTwo = corners[5];\r\n    let pieceThree = corners[6];\r\n    let pieceFour = corners[7];\r\n\r\n    let solveCount = 0;\r\n\r\n    \r\n    if(cube[pieceOne][6]===cube[pieceOne][9] && cube[pieceOne][7]===cube[pieceOne][10] && cube[pieceOne][8]===cube[pieceOne][11]) solveCount++;\r\n    if(cube[pieceTwo][6]===cube[pieceTwo][9] && cube[pieceTwo][7]===cube[pieceTwo][10] && cube[pieceTwo][8]===cube[pieceTwo][11]) solveCount++;\r\n    if(cube[pieceThree][6]===cube[pieceThree][9] && cube[pieceThree][7]===cube[pieceThree][10] && cube[pieceThree][8]===cube[pieceThree][11]) solveCount++;\r\n    if(cube[pieceFour][6]===cube[pieceFour][9] && cube[pieceFour][7]===cube[pieceFour][10] && cube[pieceFour][8]===cube[pieceFour][11]) solveCount++;\r\n    \r\n\r\n    if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord &&\r\n       cube[pieceTwo][6] === maxCoord && cube[pieceTwo][8] === maxCoord);\r\n\r\n   else if(solveCount === 2 && dim > 3) {\r\n      //console.log(\"another parity encountered brother\");\r\n      moveString = `02D2 01B2 02D2 02b2 02D2 02b2`;\r\n      moveString = `${move(dim/2,\"d2\")} 01D2 01B2 ${move(dim/2,\"d2\")} 01D2 ${move(dim/2,\"b2\")} ${move(dim/2,\"d2\")} 01D2 ${move(dim/2,\"b2\")}`;\r\n\r\n      //04d2 01D2 01B2 04d2 01D2 04b2 04d2 01D2 04b2\r\n      const moveArray = moveStringToArray(moveString);\r\n      if(moveString.length) return {moveSet : moveArray,solveState:5};\r\n   }\r\n\r\n    else if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord) moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\r\n    else if(cube[pieceTwo][6] === maxCoord && cube[pieceTwo][8] === maxCoord) moveString = \"01B 01R 01B' 01L' 01B 01R' 01B' 01L\";\r\n    else if(cube[pieceThree][6] === minCoord && cube[pieceThree][8] === minCoord) moveString = \"01B 01L 01B' 01R' 01B 01L' 01B' 01R\";\r\n    else if(cube[pieceFour][6] === maxCoord && cube[pieceFour][8] === minCoord) moveString = \"01B 01D 01B' 01U' 01B 01D' 01B' 01U\";\r\n\r\n    else moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\r\n\r\n    const moveArray = moveStringToArray(moveString);\r\n\r\n    if(moveString.length) return {moveSet : moveArray};\r\n    else return {solveState:7};\r\n  }\r\n\r\n  module.exports = alignYellowCorners;","/*\r\n *\r\n *\r\n *      ******* Add documentation before you forget how all this works!!! ********\r\n * \r\n * \r\n *      Sasha Peters\r\n *      white.js\r\n *      Started: Friday, December 13, 2019\r\n *      Finished: Saturday, December 14, 2019\r\n *      Note: Redo this function so it works similarly to other solvers (no row or columns)\r\n */\r\n\r\nfunction move(space,depth,side){\r\n    return (space+(depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet solveWhiteMiddle = (current,solved,dim,index) => {\r\n\r\n    let currentSide = \"F\";\r\n    let row = Math.floor(index/(dim-2));\r\n    let column = index%(dim-2);\r\n    let moveString = \"\";\r\n\r\n    if(current.x === 0) currentSide = \"L\";\r\n    else if(current.x === dim-1) currentSide = \"R\";\r\n    else if(current.y === dim-1) currentSide = \"B\";\r\n    else if(current.z === 0) currentSide = \"D\";\r\n    else if(current.z === dim-1) currentSide = \"U\";\r\n    \r\n    if(solved.x===1){\r\n        if(dim-solved.z === 2){\r\n            if(currentSide===\"F\"){\r\n                moveString=\"01F\";\r\n            }\r\n            else if(currentSide!==\"D\"&&currentSide!==\"U\"){\r\n                if(current.z!==dim-2){\r\n                    moveString= \"01\" + currentSide;\r\n                }\r\n                else{\r\n                    moveString= move(\"\",dim-current.z,\"U\");\r\n                }\r\n            }\r\n            else {\r\n                if(current.x!==solved.x){\r\n                    moveString = \"01\" + currentSide;\r\n                }\r\n                else{\r\n                    moveString = \"02L\";\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(currentSide===\"F\"){\r\n                moveString = move(\"\",current.z+1,\"D'\");\r\n            }\r\n            else if(currentSide===\"B\"){\r\n                if(current.z<=solved.z){\r\n                    moveString = move(\"\",current.z+1,\"D\");\r\n                }\r\n                else moveString = \"01B\";\r\n            }\r\n            else if(currentSide===\"L\"){\r\n                if(current.y!==dim-2){\r\n                    moveString= \"01L\";\r\n                }\r\n                else if(current.z!==solved.z){\r\n                    moveString= \"01L\";\r\n                }\r\n                else {\r\n                    moveString = move(\"\",current.z+1,\"D\");\r\n                }\r\n            }\r\n            else moveString = move(\"\",current.y+1,\"F'\");\r\n        }\r\n    }\r\n    else{\r\n        if(row===0){\r\n            if(currentSide===\"F\"){\r\n                if(current.z < solved.z && current.x >=solved.x){\r\n                    moveString = move(\"\",dim-current.x,\"R\");\r\n                }\r\n                else{\r\n                    moveString = move(\"\",current.z+1,\"D\");\r\n                }\r\n            }\r\n            else if(currentSide===\"B\"){\r\n                if(current.x === solved.x && current.z!== solved.z){\r\n                    moveString = move(\"\",column+2,\"L2\");\r\n                }\r\n                else {\r\n                    moveString = \"01B\"\r\n                };\r\n            }\r\n            else{\r\n                if(current.y===dim-2){\r\n                    if(current.z !== dim-1){\r\n                        moveString = move(\"\",row+2,\"B\")\r\n                    }\r\n                    else{\r\n                        if(current.x !== solved.x){\r\n                            moveString = \"01U\";\r\n                        }\r\n                        else {\r\n                            moveString = move(\"\",column+2,\"L\");\r\n                        };\r\n                    }\r\n                }\r\n                else{\r\n                    moveString = \"01\" + currentSide;\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(currentSide===\"F\"){\r\n                if(current.z<solved.z){\r\n                    moveString = move(\"\",dim-current.z,\"U\");\r\n                }\r\n                else {\r\n                    moveString = move(\"\",dim-current.z,\"U\");\r\n                    moveString += move(\" \",dim-current.x,\"F'\");\r\n                    moveString += move(\" \",dim-current.z,\"U'\");\r\n                }\r\n                \r\n            }\r\n            else if(currentSide===\"B\"){\r\n                if(current.z===solved.z){\r\n                    if(solved.x===current.x){\r\n                        moveString = move(\"\",dim-current.z,\"U\");\r\n                        moveString += move(\" \",current.x+1,\"B\");\r\n                        moveString += move(\" \",dim-current.z,\"U'\");\r\n                    }\r\n                    else {\r\n                        moveString = move(\"\",dim-current.z,\"U\");\r\n                        moveString += \" 01R\";\r\n                        moveString += move(\" \",dim-current.z,\"U'\");\r\n                    }\r\n                }\r\n                else moveString = \"01B\";\r\n            }\r\n            else{\r\n                if(currentSide!==\"U\"){\r\n                    //console.log(\"Moving to top\")\r\n                    moveString += move(\" \",current.y+1,\"F\");\r\n                }\r\n                else{\r\n                    if(current.x!==solved.x || current.y!==solved.z){\r\n                        moveString = \"01U\";\r\n                    }\r\n                    else{\r\n                        moveString = \"01U'\";\r\n                        moveString += move(\" \",dim-solved.z,\"U'\");\r\n                        moveString += move(\" \",current.x+1,\"F\");\r\n                        moveString += move(\" \",dim-solved.z,\"U\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return moveString;\r\n}\r\n\r\nmodule.exports = solveWhiteMiddle;","/*\r\n *\r\n *\r\n *      ******* Add documentation before you forget how all this works!!! ********\r\n * \r\n * \r\n *      Sasha Peters\r\n *      yellow.js\r\n *      Started: Saturday, December 14, 2019\r\n *      Finished: Saturday, December 21, 2019\r\n *  \r\n */\r\n\r\nfunction move(space,depth,side){\r\n    return (space+(depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet solveYellowMiddle = (current,solved,dim,index) => {\r\n\r\n    let currentSide = \"F\";\r\n    let middle = Math.floor(dim/2);\r\n    let moveString = \"\";\r\n\r\n    if(current.x === 0) currentSide = \"L\";\r\n    else if(current.x === dim-1) currentSide = \"R\";\r\n    else if(current.y === dim-1) currentSide = \"B\";\r\n    else if(current.z === 0) currentSide = \"D\";\r\n    else if(current.z === dim-1) currentSide = \"U\";\r\n    \r\n    if(currentSide===\"B\"){\r\n        moveString += move(\" \",current.z+1,\"D'\");\r\n\r\n        moveString += (dim%2&&current.z===middle)? \" 01R\" : \" 01R2\";\r\n\r\n        moveString += move(\" \",current.z+1,\"D\");\r\n\r\n        moveString += (dim%2&&current.z===middle)? \" 01R\" : \"\";\r\n\r\n        moveString += move(\" \",current.x+1,\"F\")\r\n\r\n        moveString += (dim%2&&current.z===middle)? \" 01R'\" : \"\";\r\n\r\n        moveString += move(\" \",current.z+1,\"D'\");\r\n\r\n        moveString += (dim%2&&current.z===middle)? \" 01R'\" : \" 01R2\";\r\n\r\n        moveString += move(\" \",current.z+1,\"D\");\r\n    }\r\n    else{\r\n        if(currentSide!==\"R\"){\r\n            moveString= move(\"\",current.y+1,\"F\");\r\n        }\r\n        else {\r\n            if(current.y!==dim-(solved.x+1)||current.z!==solved.z){\r\n                moveString = \"01R\";\r\n            }\r\n            else {\r\n                moveString = move(\"\",current.y+1,\"F'\");\r\n                moveString += move(\" \",current.z+1,\"D'\");\r\n                if((current.y>= middle&&current.z>=middle) ||\r\n                   (current.y< middle&&current.z<middle))\r\n                    moveString += \" 01L\"\r\n                else\r\n                    moveString += \" 01L'\"\r\n\r\n                moveString += move(\" \",current.y+1,\"F\");\r\n                \r\n                if((current.y>= middle&&current.z>=middle) ||\r\n                   (current.y< middle&&current.z<middle))\r\n                    moveString += \" 01L'\"\r\n                else\r\n                    moveString += \" 01L\"\r\n\r\n                moveString += move(\" \",current.z+1,\"D\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return moveString\r\n}\r\n\r\nmodule.exports = solveYellowMiddle;","/*\r\n *\r\n *\r\n *      ******* Add documentation before you forget how all this works!!! ********\r\n * \r\n * \r\n *      Sasha Peters\r\n *      blue.js\r\n * \r\n */\r\n\r\nfunction move(space,depth,side){\r\n    return (space+(depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet solveBlueMiddle = (current,solved,dim) => {\r\n\r\n    let currentSide = \"F\";\r\n    let middle = Math.floor(dim/2);\r\n    let isOddCube = dim%2;\r\n    let moveString = \"\";\r\n\r\n    if(current.x === 0) currentSide = \"L\";\r\n    else if(current.x === dim-1) currentSide = \"R\";\r\n    else if(current.z === 0) currentSide = \"D\";\r\n    else if(current.z === dim-1) currentSide = \"U\";\r\n    \r\n    if(isOddCube && solved.x===middle && solved.y===middle){\r\n        switch(currentSide){\r\n            case \"L\":\r\n                moveString = move(\"\",current.y+1,\"F'\");\r\n                moveString += \" 01L\"; \r\n                moveString += move(\" \",current.y+1,\"F\");\r\n                moveString += \" 01L'\"; \r\n                moveString += move(\" \",current.y+1,\"F\");\r\n                break;\r\n            case \"D\":\r\n                moveString = move(\"\",current.y+1,\"F'\");\r\n                moveString += \" 01L\"; \r\n                moveString += move(\" \",current.y+1,\"F2\");\r\n                moveString += \" 01L'\"; \r\n                moveString += move(\" \",current.y+1,\"F\");\r\n                break;\r\n            case \"R\":\r\n                moveString = move(\"\",current.y+1,\"F\");\r\n                moveString += \" 01R\"; \r\n                moveString += move(\" \",current.y+1,\"F'\");\r\n                moveString += \" 01R'\"; \r\n                moveString += move(\" \",current.y+1,\"F'\");\r\n                break;\r\n            default:\r\n                console.log(\"Shouldn't be checking middle if already in solved location.\");\r\n        }\r\n    }\r\n\r\n    else if(currentSide===\"U\"){\r\n        moveString = move(\"\",current.y+1,\"F\");//1\r\n        moveString += move(\" \",current.x+1,\"U2\");//2\r\n        if( isOddCube && current.y===middle) moveString+= \" 01L'\";//2.1\r\n        moveString += move(\" \",current.y+1,\"F'\");//3\r\n        if( isOddCube && current.y===middle) moveString+= \" 01L\";//3.1\r\n        moveString += move(\" \",current.x+1,\"U2\");//4\r\n    }\r\n\r\n    else if(currentSide===\"R\"){\r\n        if((dim-current.z)===(solved.x+1) && current.y===solved.y){\r\n            moveString = move(\"\",solved.x+1,\"U2\");//6\r\n            if(isOddCube && solved.y===middle) moveString += \" 01L'\";//6.1\r\n            moveString += move(\" \",solved.y+1,\"F\");//7\r\n            if(isOddCube && solved.y===middle) moveString += \" 01L\";//7.1\r\n            moveString += move(\" \",solved.x+1,\"U2\");//8\r\n            moveString += move(\" \",solved.y+1,\"F'\");//9\r\n            \r\n        } else {\r\n            moveString = \"01R'\"//5\r\n        }\r\n    }\r\n\r\n    else if(currentSide===\"L\"){\r\n        if(current.z===solved.x && current.y===solved.y){\r\n            moveString = move(\"\",current.z+1,\"D2\");//6\r\n            if(isOddCube && solved.y===middle) moveString += \" 01R\";//6.1\r\n            moveString += move(\" \",solved.y+1,\"F'\");//7\r\n            if(isOddCube && solved.y===middle) moveString += \" 01R'\";//7.1\r\n            moveString += move(\" \",current.z+1,\"D2\");//8\r\n            moveString += move(\" \",solved.y+1,\"F\");//9\r\n            \r\n        } else {\r\n            moveString = \"01L\"//5\r\n        }\r\n    }\r\n\r\n    else {\r\n        if(current.y!==solved.y){\r\n            moveString = \"01D\";\r\n        }\r\n        else{\r\n            moveString = move(\"\",solved.y+1,\"F'\");\r\n            moveString += \" 01R\";\r\n            moveString += move(\" \",solved.y+1,\"F\");\r\n        }\r\n    }\r\n\r\n    return moveString;\r\n}\r\n\r\nmodule.exports = solveBlueMiddle;","/*\r\n *\r\n *\r\n *      ******* Add documentation before you forget how all this works!!! ********\r\n * \r\n * \r\n *      Sasha Peters\r\n *      green.js\r\n *      Started: Saturday February 8, 2020\r\n *      Finished:Saturday February 8, 2020\r\n *      \r\n */\r\n\r\nfunction move(depth,side){\r\n    return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nfunction checkSide(current,dim){\r\n    let currentSide = \"F\";\r\n    if(current.x === 0) currentSide = \"L\";\r\n    else if(current.x === dim-1) currentSide = \"R\";\r\n    else if(current.y === dim-1) currentSide = \"B\";\r\n    else if(current.z === 0) currentSide = \"D\";\r\n    else if(current.z === dim-1) currentSide = \"U\";\r\n    return currentSide;\r\n}\r\n\r\nlet solveGreenMiddle = (current,solved,dim) => {\r\n\r\n    const currentSide = checkSide(current,dim);\r\n    const middle = Math.floor(dim/2);\r\n    const max = middle+1;\r\n    const min = middle-1;\r\n    const moves = [];\r\n\r\n    // Temp 4x4 solver\r\n    if(dim%2===0){\r\n        if(currentSide === \"D\"){\r\n            if(solved.x === middle-1 && solved.y === middle-1 && solved.z === 0){\r\n                moves.push(\"01D\");\r\n            }\r\n\r\n            else if(solved.x === middle && solved.y === middle-1 && solved.z === 0){\r\n                moves.push(move(current.y+1,\"F'\"));\r\n                moves.push(\"01R2\");\r\n                moves.push(move(current.y+1,\"F\"));\r\n            }\r\n            else if(solved.x === middle-1 && solved.y === middle && solved.z === 0){\r\n                moves.push(move(middle+1,\"F'\"));\r\n                moves.push(\"01R'\");\r\n                moves.push(move(middle+1,\"F\"));\r\n            }\r\n            else {\r\n                if( solved.x===solved.y||\r\n                    solved.x===(dim-1)-solved.y||\r\n                    (dim-1)-solved.x===(dim-1)-solved.y||\r\n                    (dim-1)-solved.x===solved.y){\r\n                        if(solved.y<middle&&solved.x<middle){\r\n                            moves.push(\"01D\");\r\n                        }\r\n                        else if(solved.x>middle&&solved.y<middle){\r\n                            moves.push(\r\n                                move(current.y+1,\"F'\"),\r\n                                \"01R2\",\r\n                                move(current.y+1,\"F\"),\r\n                            )\r\n                        }\r\n                        else if(solved.x<middle&&solved.y>middle){\r\n                            moves.push(\r\n                                move(current.y+1,\"F'\"),\r\n                                \"01R\",\r\n                                move(current.y+1,\"F\"),\r\n                            )\r\n                        }\r\n                }\r\n                else {\r\n                    moves.push(\r\n                        \"01R'\",\r\n                        \"01D'\",\r\n                        move(dim-current.x,\"F\"),\r\n                        \"01D\",\r\n                        move(dim-current.y,\"B'\"),\r\n                        \"01D'\",\r\n                        move(dim-current.x,\"F'\"),\r\n                        \"01D\",\r\n                        move(dim-current.y,\"B\"),\r\n                        \"01R\"\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        if(currentSide === \"R\"){\r\n            if(solved.x === middle-1 && solved.y === middle-1 && solved.z === 0){\r\n                moves.push(move(current.y+1,\"F\"));\r\n                moves.push(\"01D2\");\r\n                moves.push(move(current.y+1,\"F'\"));\r\n            }\r\n            else if(solved.x === middle && solved.y === middle-1 && solved.z === 0){\r\n                if(current.y===middle && current.z===middle){\r\n                    moves.push(\"01D\");\r\n                    moves.push(move(middle+1,\"F\"));\r\n                    moves.push(\"01D'\");\r\n                    moves.push(move(middle+1, \"F'\"));\r\n                    \r\n                }\r\n                else{\r\n                    moves.push(\"01R\")\r\n                }\r\n            }\r\n            \r\n            else if(solved.x === middle-1 && solved.y === middle && solved.z === 0){\r\n                if(current.y===middle && current.z===middle-1){\r\n                    moves.push(\"01R\");\r\n                    moves.push(move(middle+1,\"F'\"));\r\n                    moves.push(\"01R'\");\r\n                    moves.push(move(middle+1,\"F\"));\r\n                }\r\n                else{\r\n                    moves.push(\"01R\");\r\n                }\r\n            }\r\n            else if(solved.x === middle && solved.y === middle && solved.z === 0){\r\n                if(current.y===middle-1 && current.z===middle){\r\n                    moves.push(move(middle+1, \"F'\"));\r\n                    moves.push(\"01R'\");\r\n                    moves.push(move(middle+1, \"F\"));\r\n                    moves.push(\"01R\");\r\n                    moves.push(move(middle+1, \"F'\"));\r\n                    moves.push(\"01R\");\r\n                    moves.push(move(middle+1, \"F\"));\r\n                }\r\n                else{\r\n                    moves.push(\"01R\");\r\n                }\r\n            }\r\n\r\n            else {\r\n                if( solved.x===solved.y||\r\n                    solved.x===(dim-1)-solved.y||\r\n                    (dim-1)-solved.x===(dim-1)-solved.y||\r\n                    (dim-1)-solved.x===solved.y){\r\n                        if(current.y<middle && current.z < middle){\r\n                            if(solved.x<middle&&solved.y<middle){\r\n                                moves.push(\r\n                                    move(current.y+1,\"F\"),\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"F'\"),\r\n                                    \"01D\"\r\n                                )\r\n                            }\r\n                            else if(solved.x>middle&&solved.y<middle){\r\n                                moves.push(\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"F\"),\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"F'\"),\r\n                                    \"01D2\",\r\n                                )\r\n                            }\r\n                            else if(solved.x<middle&&solved.y>middle){\r\n                                moves.push(\r\n                                    move(dim-current.y,\"F'\"),\r\n                                    \"01R'\",\r\n                                    move(dim-current.y,\"F\")\r\n                                )\r\n                            }\r\n                            else if(solved.x>middle&&solved.y>middle){\r\n                                moves.push(\r\n                                    \"01R'\",\r\n                                    move(dim-current.y,\"F\"),\r\n                                    \"01D'\",\r\n                                    move(dim-current.y,\"F'\"),\r\n                                    \"01R2\",\r\n                                    \"01D\",\r\n                                    move(dim-current.y,\"F'\"),\r\n                                    \"01R2\",\r\n                                    move(dim-current.y,\"F\")\r\n                                )\r\n                            }\r\n                        }\r\n                        else {\r\n                            moves.push(\"01R\");\r\n                        }\r\n                }\r\n                else{\r\n                    if(current.y===solved.y&&current.z===solved.x){\r\n                        moves.push(\r\n                            \"01R'\",\r\n                            \"01D'\",\r\n                            move(dim-current.z,\"F\"),\r\n                            \"01D\",\r\n                            move(dim-current.y,\"B'\"),\r\n                            \"01D'\",\r\n                            move(dim-current.z,\"F'\"),\r\n                            \"01D\",\r\n                            move(dim-current.y,\"B\"),\r\n                            \"01R\"\r\n                        )\r\n                    }\r\n                    else{\r\n                        moves.push(\"01R\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    else if(dim%2){\r\n\r\n        switch(currentSide){\r\n            case \"D\":\r\n                if(solved.x>=min&&solved.x<=max&&solved.y>=min&&solved.y<=max){\r\n                    if(solved.y===min){\r\n                        if(solved.x===min) moves.push(\"01D\");\r\n                        else if(solved.x===middle){\r\n                            if(current.x<middle){\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01D\");\r\n                            }\r\n                            else if(current.x>middle){\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01D'\");\r\n                            }\r\n                            else{\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01R'\");\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                            }\r\n                        }\r\n                        else{\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                            moves.push(\"01D\");\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                            moves.push(\"01D'\");\r\n                        }\r\n                    }\r\n                    else if(solved.y===middle){\r\n                        if(solved.x===min){\r\n                            if(current.y===middle){\r\n                                moves.push(move(min+1,\"F\"));\r\n                                moves.push(\"01D2\");\r\n                                moves.push(move(min+1,\"F'\"));\r\n                            }\r\n                            else{\r\n                                moves.push(move(min+1,\"F\"));\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(min+1,\"F'\")); \r\n                            }\r\n                        }\r\n                        else{\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                            moves.push(\"01R\");\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(solved.x===min){\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                            moves.push(\"01R\");\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if( solved.x===solved.y||\r\n                        solved.x===(dim-1)-solved.y||\r\n                        (dim-1)-solved.x===(dim-1)-solved.y||\r\n                        (dim-1)-solved.x===solved.y){\r\n                            if(solved.y<middle&&solved.x<middle){\r\n                                moves.push(\"01D\");\r\n                            }\r\n                            else if(solved.x>middle&&solved.y<middle){\r\n                                moves.push(\r\n                                    move(current.y+1,\"F'\"),\r\n                                    \"01R2\",\r\n                                    move(current.y+1,\"F\"),\r\n                                )\r\n                            }\r\n                            else if(solved.x<middle&&solved.y>middle){\r\n                                moves.push(\r\n                                    move(current.y+1,\"F'\"),\r\n                                    \"01R\",\r\n                                    move(current.y+1,\"F\"),\r\n                                )\r\n                            }\r\n                    }\r\n                    else {\r\n                        moves.push(\r\n                            \"01R'\",\r\n                            \"01D'\",\r\n                            move(dim-current.x,\"F\"),\r\n                            \"01D\",\r\n                            move(dim-current.y,\"B'\"),\r\n                            \"01D'\",\r\n                            move(dim-current.x,\"F'\"),\r\n                            \"01D\",\r\n                            move(dim-current.y,\"B\"),\r\n                            \"01R\"\r\n                        )\r\n                    }\r\n                }\r\n                break;\r\n            case \"R\":\r\n                if(solved.x>=middle-1&&solved.x<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\r\n                    if(solved.y===min){\r\n                        if(solved.x===min){\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                            moves.push(\"01D2\");\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                        }\r\n                        else if(solved.x===middle){\r\n                            if(current.z===max){\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                            }\r\n                            else moves.push(\"01R\");\r\n                        }\r\n                        else{\r\n                            if(current.y===max&&current.z===max){\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                            }\r\n                            else moves.push(\"01R\");\r\n                        }\r\n                    }\r\n                    else if(solved.y===middle){\r\n                        if(solved.x===min){\r\n                            if(current.y===max){\r\n                                moves.push(move(middle+1,\"F'\"));\r\n                                moves.push(\"01R\");\r\n                                moves.push(move(middle+1,\"F\"));\r\n                            }\r\n                            else moves.push(\"01R'\");\r\n                        }\r\n                        else{\r\n                            if(current.z===min){\r\n                                moves.push(move(min+1,\"F\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(min+1,\"F'\"));\r\n                                moves.push(\"01R\");\r\n                                moves.push(move(min+1,\"F\"));\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(min+1,\"F'\"));\r\n                            }\r\n                            else moves.push(\"01R'\");\r\n                        }\r\n                    }\r\n                    else{\r\n                        if(solved.x===min){\r\n                            if(current.z===min&&current.y===min){\r\n                                moves.push(move(max+1,\"F'\"));\r\n                                moves.push(\"01R'\");\r\n                                moves.push(move(max+1,\"F\"));\r\n                            }\r\n                            else{\r\n                                moves.push(\"01R\");\r\n                            }\r\n                        }\r\n                        else if(solved.x===middle){\r\n                            if(current.y===max){\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01R'\");\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01R'\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01R\");\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                            }\r\n                            else{\r\n                                moves.push(\"01R\");\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(current.y===max&&current.z===min){\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D2\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                            }\r\n                            else{\r\n                                moves.push(\"01R\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if( solved.x===solved.y||\r\n                        solved.x===(dim-1)-solved.y||\r\n                        (dim-1)-solved.x===(dim-1)-solved.y||\r\n                        (dim-1)-solved.x===solved.y){\r\n                            if(current.y<middle && current.z < middle){\r\n                                if(solved.x<middle&&solved.y<middle){\r\n                                    moves.push(\r\n                                        move(current.y+1,\"F\"),\r\n                                        \"01D'\",\r\n                                        move(current.y+1,\"F'\"),\r\n                                        \"01D\"\r\n                                    )\r\n                                }\r\n                                else if(solved.x>middle&&solved.y<middle){\r\n                                    moves.push(\r\n                                        \"01D'\",\r\n                                        move(current.y+1,\"F\"),\r\n                                        \"01D'\",\r\n                                        move(current.y+1,\"F'\"),\r\n                                        \"01D2\",\r\n                                    )\r\n                                }\r\n                                else if(solved.x<middle&&solved.y>middle){\r\n                                    moves.push(\r\n                                        move(dim-current.y,\"F'\"),\r\n                                        \"01R'\",\r\n                                        move(dim-current.y,\"F\")\r\n                                    )\r\n                                }\r\n                                else if(solved.x>middle&&solved.y>middle){\r\n                                    moves.push(\r\n                                        \"01R'\",\r\n                                        move(dim-current.y,\"F\"),\r\n                                        \"01D'\",\r\n                                        move(dim-current.y,\"F'\"),\r\n                                        \"01R2\",\r\n                                        \"01D\",\r\n                                        move(dim-current.y,\"F'\"),\r\n                                        \"01R2\",\r\n                                        move(dim-current.y,\"F\")\r\n                                    )\r\n                                }\r\n                            }\r\n                            else {\r\n                                moves.push(\"01R\");\r\n                            }\r\n                    }\r\n                    else {\r\n                        if(current.y===solved.y&&current.z===solved.x){\r\n                            moves.push(\r\n                                \"01R'\",\r\n                                \"01D'\",\r\n                                move(dim-current.z,\"F\"),\r\n                                \"01D\",\r\n                                move(dim-current.y,\"B'\"),\r\n                                \"01D'\",\r\n                                move(dim-current.z,\"F'\"),\r\n                                \"01D\",\r\n                                move(dim-current.y,\"B\"),\r\n                                \"01R\"\r\n                            )\r\n                        }\r\n                        else{\r\n                            moves.push(\"01R\");\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"Woops something broke. Only red and green should be unsolved.\");\r\n        }\r\n    }\r\n\r\n    return moves.join(\" \");\r\n}\r\n\r\nmodule.exports = solveGreenMiddle;\r\n\r\n","/*\r\n *\r\n *\r\n *      ******* Add documentation before you forget how all this works!!! ********\r\n * \r\n * \r\n *      Sasha Peters\r\n *      orange.js\r\n *      Started: \r\n * \r\n *    \r\n */\r\n\r\nfunction move(depth,side){\r\n    return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet solveOrangeMiddle = (current,solved,dim) => {\r\n    let middle = Math.floor(dim/2);\r\n    let oddCube = dim%2;\r\n    let moves = [];\r\n    let currentSide = \"F\";\r\n    if(current.x === 0) currentSide = \"L\";\r\n    else if(current.x === dim-1) currentSide = \"R\";\r\n    else if(current.z === 0) currentSide = \"D\";\r\n    \r\n    // 4x4 Solver for Orange\r\n    if(dim%2===0){\r\n        //console.log(\"4x4 orange middle solver here\");\r\n        switch(currentSide){\r\n            case 'L':\r\n                if(solved.x === 0 && solved.y ===  middle-1&& solved.z === middle){\r\n                    moves.push(\"01L\");\r\n                }\r\n                else if(solved.x === 0 && solved.y === middle-1 && solved.z === middle-1){\r\n                    moves.push(move(current.y+1,\"F'\"));\r\n                    moves.push(\" 01D2\");\r\n                    moves.push(move(current.y+1,\"F\"));\r\n                }\r\n                else if(solved.x === 0 && solved.y === middle && solved.z === middle){\r\n                    moves.push(move(current.y+1,\"F'\"));\r\n                    moves.push(\" 01D2\");\r\n                    moves.push(move(current.y+1,\"F\"));\r\n                }\r\n                else {\r\n                    if( solved.z===solved.y||solved.z===(dim-1)-solved.y||(dim-1)-solved.z===(dim-1)-solved.y||(dim-1)-solved.z===solved.y){\r\n                        if(current.z<middle-1&&current.y<middle-1){\r\n                        //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\r\n                            moves.push(\r\n                                \"01L'\",\r\n                                \"01D'\",\r\n                                move(current.y+1,\"B'\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F'\"),\r\n                                \"01D'\",\r\n                                move(current.y+1,\"B\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F\"),\r\n                                \"01L\"\r\n                            );\r\n                        }\r\n                        else if(current.z>middle&&current.y<middle-1){\r\n                            moves.push(\r\n                                \"01D'\",\r\n                                move(current.y+1,\"B'\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F'\"),\r\n                                \"01D'\",\r\n                                move(current.y+1,\"B\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F\")\r\n                            );\r\n                        }\r\n                        else if(current.z>middle&&current.y>middle){\r\n                            moves.push(\r\n                                \"01L\",\r\n                                \"01D'\",\r\n                                move(dim-(current.y),\"B'\"),\r\n                                \"01D\",\r\n                                move(dim-(current.y),\"F'\"),\r\n                                \"01D'\",\r\n                                move(dim-(current.y),\"B\"),\r\n                                \"01D\",\r\n                                move(dim-(current.y),\"F\"),\r\n                                \"01L'\"\r\n                            );\r\n                        }\r\n                        else if(current.z<middle-1&&current.y>middle){\r\n                            moves.push(\r\n                                \"01L2\",\r\n                                \"01D'\",\r\n                                move(dim-(current.y),\"B'\"),\r\n                                \"01D\",\r\n                                move(dim-(current.y),\"F'\"),\r\n                                \"01D'\",\r\n                                move(dim-(current.y),\"B\"),\r\n                                \"01D\",\r\n                                move(dim-(current.y),\"F\"),\r\n                                \"01L2\"\r\n                            );\r\n                        }\r\n                        \r\n                    }\r\n                    else {\r\n                        moves.push(\r\n                            \"01D'\",\r\n                            move((dim-1)-current.z+1,\"B'\"),\r\n                            \"01D\",\r\n                            move(current.y+1,\"F'\"),\r\n                            \"01D'\",\r\n                            move((dim-1)-current.z+1,\"B\"),\r\n                            \"01D\",\r\n                            move(current.y+1,\"F\")\r\n                        );\r\n                    }\r\n                }\r\n                break;\r\n            case 'D':\r\n                if(solved.x === 0 && solved.y === middle-1 && solved.z === middle){\r\n                    moves.push(move(current.y+1,\"F\"));\r\n                    moves.push(\" 01L2\");\r\n                    moves.push(move(current.y+1,\"F'\"));\r\n                }\r\n                else if(solved.x === 0 && solved.y === middle-1 && solved.z === middle-1){\r\n                    if(current.x===middle && current.y===middle){\r\n                        moves.push(\r\n                            \"01L\",\r\n                            move(middle,\"F'\")/*\"02F'\"*/,\r\n                            \"01D'\",\r\n                            move(middle,\"F\")/*\"02F\"*/\r\n                        );\r\n                    }\r\n                    else{\r\n                        moves.push(\"01D\");\r\n                    }\r\n                }\r\n                else if(solved.x === 0 && solved.y === middle && solved.z === middle){\r\n                    if(current.y===middle-1 && current.x===middle-1){\r\n                        moves.push(\r\n                            move(middle+1,\"F'\")/*\"03F'\"*/,\r\n                            \"01D'\",\r\n                            move(middle+1,\"F\")/*\"03F\"*/\r\n                        );\r\n                    }\r\n                    else {\r\n                        moves.push(\"01D\");\r\n                    }\r\n                }\r\n                else if(solved.x === 0 && solved.y === middle && solved.z === middle-1){\r\n                    if(current.y===middle-1 && current.x===middle){\r\n                        moves.push(\r\n                            move(middle+1,\"F'\")/*\"03F'\"*/,\r\n                            \"01D'\",\r\n                            move(middle+1,\"F\")/*\"03F\"*/,\r\n                            \"01D\",\r\n                            move(middle+1,\"F'\")/*\"03F'\"*/,\r\n                            \"01D\",\r\n                            move(middle+1,\"F\")/*\"03F\"*/\r\n                        );\r\n                    }\r\n                    else{\r\n                        moves.push(\"01D\");\r\n                    }\r\n                }\r\n                else {\r\n                    if( solved.x===solved.y||\r\n                        solved.x===(dim-1)-solved.y||\r\n                        (dim-1)-solved.z===(dim-1)-solved.y||\r\n                        (dim-1)-solved.z===solved.y){\r\n                            // solve from green to orange middles\r\n                            if(current.x<middle-1&&current.y<middle-1){\r\n                                if(solved.z<middle-1&&solved.y<middle-1){\r\n                                //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\r\n                                    moves.push(\r\n                                        \"01L'\",\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B'\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F\"),\r\n                                        \"01L\"\r\n                                    );\r\n                                }\r\n                                else if(solved.z>middle&&solved.y<middle-1){\r\n                                    moves.push(\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B'\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F\")\r\n                                    );\r\n                                }\r\n                                else if(solved.z>middle&&solved.y>middle){\r\n                                    moves.push(\r\n                                        \"01L\",\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B'\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F\"),\r\n                                        \"01L'\"\r\n                                    );\r\n                                }\r\n                                else if(solved.z<middle-1&&solved.y>middle){\r\n                                    moves.push(\r\n                                        \"01L2\",\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B'\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F\"),\r\n                                        \"01L2\"\r\n                                    );\r\n                                }\r\n                            }\r\n                            else{\r\n                                moves.push(\"01D\");\r\n                            }\r\n                        }\r\n                    else {\r\n                        if(current.y===solved.y&&current.x===(dim-1)-solved.z){\r\n                            moves.push(\r\n                                \"01D'\",\r\n                                move(current.x+1,\"B'\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F'\"),\r\n                                \"01D'\",\r\n                                move(current.x+1,\"B\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F\")\r\n                            );\r\n                        }\r\n                        else{\r\n                            moves.push(\"01D\");\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case 'R':\r\n                if(solved.x === 0 && solved.y === middle-1 && solved.z === middle){\r\n                    moves.push(move(current.y+1,\"F2\"));\r\n                    moves.push(\"01L2\");\r\n                    moves.push(move(current.y+1,\"F2\"));\r\n                }\r\n                else if(\r\n                    (solved.x === 0 && solved.y === middle-1 && solved.z === middle-1)||\r\n                    (solved.x === 0 && solved.y === middle && solved.z === middle-1)||\r\n                    (solved.x === 0 && solved.y === middle && solved.z === middle)\r\n                ){\r\n                    moves.push(move(current.y+1,\"F\"));\r\n                    moves.push(\"01D2\");\r\n                    moves.push(move(current.y+1,\"F'\"));\r\n                }\r\n                else {\r\n                    moves.push(\r\n                        move(current.y+1,\"F\"),\r\n                        \"01D\",\r\n                        move(current.y+1,\"F'\")\r\n                    );\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"Something broke\");\r\n        }\r\n    }\r\n\r\n    // 5x5 Solver for Orange\r\n    else if(dim%2){\r\n        //console.log(solved);\r\n        // First row\r\n        switch(currentSide){\r\n            case \"L\":\r\n                if(solved.z>=middle-1&&solved.z<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\r\n                // piece 1\r\n                    if(solved.x === 0 && solved.y === middle-1 && solved.z === middle+1){\r\n                        moves.push(\"01L\");\r\n                    }\r\n                    //row 1 solved location\r\n                    else if(solved.y === middle-1){\r\n                        moves.push(move(current.y+1,\"F'\"));\r\n                        middle && oddCube? \r\n                            moves.push(\"01D'\",move(current.y+1,\"F\")):\r\n                            moves.push(\"01D2\",move(current.y+1,\"F\"));\r\n                    }\r\n                    //row 2 solved location\r\n                    else if(solved.y === middle){\r\n                        moves.push(move(current.y+1,\"F'\"));\r\n                        moves.push(\"01D'\");\r\n                        moves.push(move(current.y+1,\"F\"));\r\n                    }\r\n                    //row 3 solved location\r\n                    else if(solved.y === middle+1){\r\n                        if(solved.z === middle+1){\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                            moves.push(\"01D\");\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if( solved.z===solved.y||\r\n                        solved.z===(dim-1)-solved.y||\r\n                        (dim-1)-solved.z===(dim-1)-solved.y||\r\n                        (dim-1)-solved.z===solved.y){\r\n                            if(current.z<middle-1&&current.y<middle-1){\r\n                            //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\r\n                                moves.push(\r\n                                    \"01L'\",\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"B'\"),\r\n                                    \"01D\",\r\n                                    move(current.y+1,\"F'\"),\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"B\"),\r\n                                    \"01D\",\r\n                                    move(current.y+1,\"F\"),\r\n                                    \"01L\"\r\n                                );\r\n                            }\r\n                            else if(current.z>middle&&current.y<middle-1){\r\n                                moves.push(\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"B'\"),\r\n                                    \"01D\",\r\n                                    move(current.y+1,\"F'\"),\r\n                                    \"01D'\",\r\n                                    move(current.y+1,\"B\"),\r\n                                    \"01D\",\r\n                                    move(current.y+1,\"F\")\r\n                                );\r\n                            }\r\n                            else if(current.z>middle&&current.y>middle){\r\n                                moves.push(\r\n                                    \"01L\",\r\n                                    \"01D'\",\r\n                                    move(dim-(current.y),\"B'\"),\r\n                                    \"01D\",\r\n                                    move(dim-(current.y),\"F'\"),\r\n                                    \"01D'\",\r\n                                    move(dim-(current.y),\"B\"),\r\n                                    \"01D\",\r\n                                    move(dim-(current.y),\"F\"),\r\n                                    \"01L'\"\r\n                                );\r\n                            }\r\n                            else if(current.z<middle-1&&current.y>middle){\r\n                                moves.push(\r\n                                    \"01L2\",\r\n                                    \"01D'\",\r\n                                    move(dim-(current.y),\"B'\"),\r\n                                    \"01D\",\r\n                                    move(dim-(current.y),\"F'\"),\r\n                                    \"01D'\",\r\n                                    move(dim-(current.y),\"B\"),\r\n                                    \"01D\",\r\n                                    move(dim-(current.y),\"F\"),\r\n                                    \"01L2\"\r\n                                );\r\n                            }\r\n                    }\r\n                    else {\r\n                        moves.push(\r\n                            \"01D'\",\r\n                            move((dim-1)-current.z+1,\"B'\"),\r\n                            \"01D\",\r\n                            move(current.y+1,\"F'\"),\r\n                            \"01D'\",\r\n                            move((dim-1)-current.z+1,\"B\"),\r\n                            \"01D\",\r\n                            move(current.y+1,\"F\")\r\n                        );\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"D\":\r\n                if(solved.z>=middle-1&&solved.z<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\r\n                    if(solved.x === 0 && solved.y === middle-1 && solved.z === middle+1){\r\n                        moves.push(move(current.y+1,\"F\"),\"01L2\",move(current.y+1,\"F'\"));\r\n                    }\r\n                    // row 1\r\n                    else if(solved.y === middle-1){\r\n                        if(current.x<middle+1||current.y===middle-1){\r\n                            moves.push(\"01D\");\r\n                        }\r\n                        else{\r\n                            moves.push(\"01L\",move(current.y+1,\"F\"),\"01L'\",move(current.y+1,\"F'\"));\r\n                        }\r\n                    }\r\n                    // row 2 (rework)\r\n                    else if(solved.y === middle){\r\n                        // first piece row 2\r\n                        if(solved.z === middle+1){\r\n                            if(current.y !== middle-1){\r\n                                moves.push(\"01D\");\r\n                            }\r\n                            else{\r\n                                moves.push(move(middle+1,\"F'\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(middle+1,\"F\"));\r\n                            }\r\n                        }\r\n                        // last piece row 2\r\n                        else if(solved.z === middle-1){\r\n                            if(current.y !== middle+1){\r\n                                moves.push(\"01D\");\r\n                            }\r\n                            else{\r\n                                moves.push(move(middle+1,\"F'\"));\r\n                                moves.push(move(current.y+1,\"F\"));\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(current.y+1,\"F'\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(middle+1,\"F\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    // row 3\r\n                    else if(solved.y === middle+1){\r\n                        // piece 1\r\n                        if(solved.z === middle+1){\r\n                            if(current.x === middle-1 && current.y === middle-1){\r\n                                moves.push(move(middle+1+1,\"F'\"));\r\n                                moves.push(\"01D'\");\r\n                                moves.push(move(middle+1+1,\"F\"));\r\n                            }\r\n                            else{\r\n                                moves.push(\"01D\");\r\n                            }\r\n                        }\r\n                        // piece 2\r\n                        else if(solved.z === middle){\r\n                            if(current.x === middle+1){\r\n                                moves.push(move(middle+1+1,\"F2\"));\r\n                                moves.push(\"01R'\");\r\n                                moves.push(move(middle+1+1,\"F\"));\r\n                                moves.push(\"01D\");\r\n                                moves.push(move(middle+1+1,\"F\"));\r\n                            }\r\n                            else {\r\n                                moves.push(\"01D'\");\r\n                            }\r\n                        }\r\n                        else if(solved.z === middle-1){\r\n                            if(current.x === middle-1 && current.y === middle+1){\r\n                                //04F' 05R' 04F 05R 04F'\r\n                                moves.push(move(middle+1+1,\"F\"));\r\n                                moves.push(\"01L'\");\r\n                                moves.push(move(middle+1+1,\"F'\"));\r\n                                moves.push(\"01L\");\r\n                                moves.push(\"01D2\");\r\n                                moves.push(move(middle+1+1,\"F'\"));\r\n                                moves.push(\"01D2\");\r\n                                moves.push(move(middle+1+1,\"F\"));\r\n                            }\r\n                            else{\r\n                                moves.push(\"01D\");\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if( solved.z===solved.y||\r\n                        solved.z===(dim-1)-solved.y||\r\n                        (dim-1)-solved.z===(dim-1)-solved.y||\r\n                        (dim-1)-solved.z===solved.y){\r\n                            if(current.x<middle-1&&current.y<middle-1){\r\n                                if(solved.z<middle-1&&solved.y<middle-1){\r\n                                //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\r\n                                    moves.push(\r\n                                        \"01L'\",\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B'\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F\"),\r\n                                        \"01L\"\r\n                                    );\r\n                                }\r\n                                else if(solved.z>middle&&solved.y<middle-1){\r\n                                    moves.push(\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B'\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(solved.y+1,\"B\"),\r\n                                        \"01D\",\r\n                                        move(solved.y+1,\"F\")\r\n                                    );\r\n                                }\r\n                                else if(solved.z>middle&&solved.y>middle){\r\n                                    moves.push(\r\n                                        \"01L\",\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B'\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F\"),\r\n                                        \"01L'\"\r\n                                    );\r\n                                }\r\n                                else if(solved.z<middle-1&&solved.y>middle){\r\n                                    \r\n                                    moves.push(\r\n                                        \"01L2\",\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B'\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F'\"),\r\n                                        \"01D'\",\r\n                                        move(dim-(solved.y),\"B\"),\r\n                                        \"01D\",\r\n                                        move(dim-(solved.y),\"F\"),\r\n                                        \"01L2\"\r\n                                    );\r\n                                }\r\n                            }\r\n                            else{\r\n                                moves.push(\"01D\");\r\n                            }\r\n                        }\r\n                    else {\r\n                        if(current.y===solved.y&&current.x===(dim-1)-solved.z){\r\n                            moves.push(\r\n                                \"01D'\",\r\n                                move(current.x+1,\"B'\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F'\"),\r\n                                \"01D'\",\r\n                                move(current.x+1,\"B\"),\r\n                                \"01D\",\r\n                                move(current.y+1,\"F\")\r\n                            );\r\n                        }\r\n                        else{\r\n                            moves.push(\"01D\");\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case \"R\":\r\n                if(solved.z>=middle-1&&solved.z<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\r\n                    if(solved.x === 0 && solved.y === middle-1 && solved.z === middle+1){\r\n                        moves.push(move(current.y+1,\"F2\"),\"01L2\",move(current.y+1,\"F2\"));\r\n                    }\r\n                    // row 1\r\n                    else if(solved.y === middle-1){\r\n                        if(current.z!==middle+1||current.y===middle-1){\r\n                            moves.push(\"01R\");\r\n                        }\r\n                        else{\r\n                            moves.push(\"01L\",move(current.y+1,\"F2\"),\"01L'\",move(current.y+1,\"F2\"))\r\n                        }\r\n                    }\r\n                    // row 2 (rework)\r\n                    else if(solved.y === middle){\r\n                        moves.push(move(current.y+1,\"F\"));\r\n                        moves.push(\"01D\");\r\n                        moves.push(move(current.y+1,\"F'\"));\r\n                    }\r\n                    // row 3\r\n                    else if(solved.y === middle+1){\r\n                        // piece 1\r\n                        if(solved.z === middle+1){\r\n                            if(current.y===middle-1&&current.z===middle-1){\r\n                                moves.push(move(middle+1+1,\"F2\"));\r\n                                moves.push(\"01R'\");\r\n                                moves.push(move(middle+1+1,\"F2\"));\r\n                            }\r\n                            else{\r\n                                moves.push(\"01R\");\r\n                            }\r\n                        }\r\n                        // piece 2\r\n                        else if(solved.z === middle){\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                            moves.push(\"01D\");\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                        }\r\n                        else if(solved.z === middle-1){\r\n                            moves.push(move(current.y+1,\"F\"));\r\n                            moves.push(\"01D2\");\r\n                            moves.push(move(current.y+1,\"F'\"));\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    moves.push(\r\n                        move(current.y+1,\"F\"),\r\n                        \"01D\",\r\n                        move(current.y+1,\"F'\")\r\n                    );\r\n                }\r\n                break;\r\n            default:\r\n                console.log(\"Something broke\");\r\n                return \"\";\r\n        }\r\n\r\n        return moves.join(\" \");\r\n    }\r\n\r\n    return moves.join(\" \");\r\n\r\n}\r\n\r\nmodule.exports = solveOrangeMiddle;","function move(space,depth,side){\r\n    return (space+(depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nfunction extractFromFront(current,maxCoord,minCoord){\r\n    if(current.z===maxCoord){\r\n        return `${move(\"\",current.x+1,\"L'\")} 01B' 01R 01B ${move(\"\",current.x+1,\"L\")} 01R'`\r\n    }\r\n    else if(current.x===maxCoord){\r\n        return `${move(\"\",current.z+1,\"D\")} 01B' 01D 01B ${move(\"\",current.z+1,\"D'\")} 01D'`\r\n    }\r\n    else if(current.z===minCoord){\r\n        return `${move(\"\",current.x+1,\"L\")} 01B' 01L 01B ${move(\"\",current.x+1,\"L'\")} 01L'`\r\n    }\r\n    else if(current.x===minCoord){\r\n        return `${move(\"\",current.z+1,\"D'\")} 01B' 01U 01B ${move(\"\",current.z+1,\"D\")} 01U'`\r\n    }\r\n}\r\n\r\nfunction moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide){\r\n    if(current.x===maxCoord && current.z===maxCoord){// Top Right\r\n        if(whiteSide===1){\r\n            return `01U' 01B 01U`\r\n        }\r\n        else{\r\n            return `01R 01B 01R'`\r\n        }\r\n    }\r\n    if(current.x===minCoord && current.z===maxCoord){// Top Left\r\n        if(whiteSide===1){\r\n            return `01U 01B 01U'`\r\n        }\r\n        else {\r\n            return `01L' 01B 01L`\r\n        }\r\n    }\r\n    if(current.x===maxCoord && current.z===minCoord){// Bottom Right\r\n        if(whiteSide===5){\r\n            return `01D 01B 01D'`\r\n        }\r\n        else {\r\n            return `01R' 01B 01R`\r\n        }\r\n    }\r\n    if(current.x===minCoord && current.z===minCoord){// Bottom Left\r\n        if(whiteSide===1){\r\n            return `01D' 01B 01U`\r\n        }\r\n        else {\r\n            return `01L 01B 01L'`\r\n        }\r\n    }\r\n}\r\n\r\nfunction flipPieceOnBack(current,maxCoord,minCoord){\r\n    if(current.z===maxCoord){//top\r\n        return `01U 01R 01B2 01R' 01U' 01B'`\r\n    }\r\n    else if(current.x===maxCoord){//right\r\n        return `01R 01D 01B2 01D' 01R' 01B'`\r\n    }\r\n    else if(current.z===minCoord){//down\r\n        return `01D 01L 01B2 01L' 01D' 01B'`\r\n    }\r\n    else if(current.x===minCoord){//left\r\n        return `01L 01U 01B2 01U' 01L' 01B'`\r\n    }\r\n}\r\n\r\nfunction solveFromBackToFront(current,solved,maxCoord,minCoord){\r\n    if(current.z===maxCoord&&solved.z===maxCoord){\r\n        return `${move(\"\",current.x+1,\"L\")} 01F 01R' 01F' ${move(\"\",current.x+1,\"L'\")} 01F 01R 01F'`\r\n    }\r\n    else if(current.x===maxCoord && solved.x===maxCoord){\r\n        return `${move(\"\",current.z+1,\"D'\")} 01F 01D' 01F' ${move(\"\",current.z+1,\"D\")} 01F 01D 01F'`\r\n    }\r\n    else if(current.z===minCoord && solved.z===minCoord){\r\n        return `${move(\"\",current.x+1,\"L'\")} 01F 01L' 01F' ${move(\"\",current.x+1,\"L\")} 01F 01L 01F'`\r\n    }\r\n    else if(current.x===minCoord && solved.x===minCoord){\r\n        return `${move(\"\",current.z+1,\"D\")} 01F 01U' 01F' ${move(\"\",current.z+1,\"D'\")} 01F 01U 01F'`\r\n    }\r\n    else return ``\r\n}\r\n\r\n\r\n\r\nlet solveFrontEdgeSegments = (current,solved,dim,whiteSide) => {\r\n    const BACK=3;\r\n    const maxCoord = dim-1;\r\n    const minCoord = 0;\r\n    let moveString = \"\";\r\n    // let solvedPosition = \"top\";\r\n\r\n    // if(solved.x===maxCoord) {solvedPosition = \"right\";}\r\n    // else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\r\n    // else if(solved.x===minCoord) {solvedPosition = \"left\";}\r\n    \r\n    if(current.y===minCoord){\r\n        moveString = extractFromFront(current,maxCoord,minCoord);\r\n    }\r\n    else if(current.y>minCoord&&current.y<maxCoord){\r\n        moveString = moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide);\r\n    }\r\n    else if(current.y===maxCoord && whiteSide===BACK){\r\n        moveString = flipPieceOnBack(current,maxCoord,minCoord);\r\n    }\r\n    else if(current.z===solved.z&&current.x===solved.x){\r\n        moveString = solveFromBackToFront(current,solved,maxCoord,minCoord);\r\n    }\r\n    else {\r\n        moveString = `01B`;\r\n    }\r\n        \r\n    \r\n\r\n    return moveString;\r\n}\r\n\r\nmodule.exports = solveFrontEdgeSegments;","function move(space,depth,side){\r\n    return (space+(depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet solveBackEdgeSegments = (current,solved,dim,yellowSide) => {\r\n    const UP=1,RIGHT=2,LEFT=4,DOWN=5;\r\n    const maxCoord = dim-1;\r\n    const minCoord = 0;\r\n    let moveString = \"\";\r\n    // let solvedPosition = \"top\";\r\n    // let inMiddleSection = current.y > minCoord && current.y < maxCoord;\r\n\r\n    // if(solved.x===maxCoord) {solvedPosition = \"right\";}\r\n    // else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\r\n    // else if(solved.x===minCoord) {solvedPosition = \"left\";}\r\n\r\n    // Solves top back edge\r\n    if(solved.z===maxCoord){\r\n        // top right middle edge\r\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\r\n            // if yellow side is on the right face (red center)\r\n            if(yellowSide===RIGHT){//a.1\r\n                //console.log(\"solve it\");\r\n                moveString = `01L' 01B 01L ${move(\"\",current.y+1,\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",current.y+1,\"F\")}`;\r\n            }\r\n            // if yellow side is on the upward face (blue center)\r\n            else {//a.2\r\n                //console.log(\"flip it\");\r\n                moveString = `01R 01B 01R' 01B' 01U' 01B 01U`;\r\n            }\r\n        }\r\n        // top back edge (wrong position)\r\n        else if(current.z===solved.z && current.y===solved.y){ // b\r\n            //console.log(\"remove it\");\r\n            moveString = `01L' 01B 01L ${move(\"\",dim-(current.x),\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",dim-(current.x),\"F\")}`;\r\n        }\r\n        // back edge that isn't top\r\n        else if(current.y===maxCoord && !(current.z===maxCoord)){ // c\r\n            moveString = `01U' 01B 01U`;\r\n        }\r\n        // middle edge that isn't top right (just places piece on back edges)\r\n        else if(current.y!==maxCoord){ // d\r\n            if(current.z===maxCoord && current.x===minCoord){\r\n                moveString = `01L' 01B' 01L 01B`\r\n            }\r\n            else if(current.z===minCoord && current.x===minCoord){\r\n                moveString = `01L 01B' 01L' 01B`\r\n            }\r\n            else if(current.z===minCoord && current.x===maxCoord){\r\n                moveString = `01R' 01B 01R 01B'`\r\n            }\r\n        }\r\n    }\r\n    // Solves right back edge\r\n    else if(solved.x===maxCoord){\r\n        if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\r\n            // if yellow side is on the down face (green center)\r\n            if(yellowSide===DOWN){//a.1\r\n                //console.log(\"solve it\");\r\n\r\n                // 01U' 01B 01U (02F' c.y+1) 01U' 01B 01U 01B2 (02F c.y+1) // converted\r\n                moveString = `01U' 01B 01U ${move(\"\",current.y+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.y+1,\"F\")} 01R' 01B2 01R`;\r\n            }\r\n            // if yellow side is on the right face (red center)\r\n            else {//a.2\r\n                //console.log(\"flip it\");\r\n                moveString = `01D 01B 01D' 01B' 01R' 01B 01R2 01B' 01R'`;\r\n            }\r\n        }\r\n\r\n        // b // change coords + small mod to algo\r\n        else if(current.x===solved.x && current.y===solved.y){ // b\r\n            //console.log(\"remove it\");\r\n            moveString = `01U' 01B 01U ${move(\"\",current.z+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.z+1,\"F\")} 01R' 01B2 01R`;\r\n        }\r\n\r\n\r\n        // c // hard code those instead of generalizing\r\n        else if(current.y===maxCoord){\r\n            if(current.z===minCoord){\r\n                moveString = `01R' 01B 01R2 01B' 01R'`;\r\n            } else if(current.x===minCoord){\r\n                moveString = `01R' 01B2 01R2 01B2 01R'`;\r\n            }\r\n        }\r\n\r\n        // d // change coords\r\n        else if(current.y!==maxCoord){\r\n            if(current.x===maxCoord && current.z===maxCoord){\r\n                moveString = `01B 01R 01B 01R' 01B2`\r\n            }\r\n            else if(current.x===minCoord && current.z===maxCoord){\r\n                moveString = `01L' 01B' 01L 01B`\r\n            }\r\n            else if(current.x===minCoord && current.z===minCoord){\r\n                moveString = `01D' 01B 01D 01B'`\r\n            }\r\n        }\r\n    }\r\n    // Solves bottom back edge\r\n    else if(solved.z===minCoord){\r\n        if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\r\n            // if yellow side is on the left face (orange center)\r\n            if(yellowSide===LEFT){//a.1\r\n                //console.log(\"solve it\");\r\n                moveString = `01R' 01B 01R ${move(\"\",current.y+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.y+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\r\n            }\r\n            // if yellow side is on the down face (green center)\r\n            else {//a.2\r\n                //console.log(\"flip it\");\r\n                moveString = `01L 01B 01L' 01B' 01D' 01B 01D2 01B' 01D' 01B' 01R' 01B' 01R 01B2`;\r\n            }\r\n        }\r\n\r\n        // b // change coords + small mod to algo\r\n        else if(current.z===solved.z && current.y===solved.y){ // b\r\n            //console.log(\"remove it\");\r\n            moveString = `01R' 01B 01R ${move(\"\",current.x+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.x+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\r\n        }\r\n\r\n        else if(current.y===maxCoord){ // c\r\n            moveString = `01D' 01B 01D2 01B' 01D'`;\r\n        }\r\n        else if(current.y<maxCoord){\r\n            moveString = `01D 01R 01U 01B 01U' 01R' 01D'`;\r\n        }\r\n        // permutations of the original algo should work\r\n    }\r\n    else if(solved.x===minCoord){\r\n        const displace = `01R 01B' 01R' 01B 01U 01B 01U' 01B'`;\r\n        const solve = `01D' 01B 01D ${move(\"\",current.y+1,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",current.y+1,\"F\")} 01L 01R' 01B2 01R 01L'`;\r\n        const replace = `01B 01U 01B' 01U' 01B' 01R 01B 01R'`\r\n        const flip = `01R 01B 01R' 01B' 01U' 01B 01U2 01B' 01U' 01B' 01L' 01B' 01L 01B2`\r\n\r\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\r\n            // if yellow side is on the left face (orange center)\r\n            if(yellowSide===RIGHT){//a.1\r\n                //console.log(\"solve it\");\r\n                moveString = `${displace} ${solve} ${replace}`;\r\n            }\r\n            // if yellow side is on the down face (green center)\r\n            else {//a.2\r\n                //console.log(\"flip it\");\r\n                moveString = `${flip}`;\r\n            }\r\n        }\r\n\r\n        else if(current.y<maxCoord && current.z===maxCoord && current.x===minCoord){ //a\r\n            if(yellowSide===UP){//a.1\r\n                //console.log(\"solve it\");\r\n                moveString = `${move(\"\",dim-1,\"f\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f'\")}`;\r\n            }\r\n            else {//a.2\r\n                //console.log(\"flip it\");\r\n                moveString = `${move(\"\",dim-1,\"f\")} ${flip} ${move(\"\",dim-1,\"f'\")}`;\r\n            }\r\n        }\r\n\r\n        else if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\r\n            if(yellowSide===LEFT){//a.1\r\n                // console.log(\"solve it\");\r\n                moveString = `${move(\"\",dim-1,\"f2\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f2\")}`;\r\n            }\r\n            else {//a.2\r\n                // console.log(\"flip it\");\r\n                moveString = `${move(\"\",dim-1,\"f2\")} ${flip} ${move(\"\",dim-1,\"f2\")}`;\r\n            }\r\n        }\r\n\r\n        else if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\r\n            if(yellowSide===DOWN){//a.1\r\n                // console.log(\"solve it\");\r\n                moveString = `${move(\"\",dim-1,\"f'\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f\")}`;\r\n            }\r\n            else {//a.2\r\n                // console.log(\"flip it\");\r\n                moveString = `${move(\"\",dim-1,\"f'\")} ${flip} ${move(\"\",dim-1,\"f\")}`;\r\n            }\r\n        }\r\n\r\n        else if(current.x===solved.x && current.y===solved.y){ // b\r\n            // console.log(\"remove it\");\r\n            moveString = `${displace} 01D' 01B 01D ${move(\"\",dim-current.z,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",dim-current.z,\"F\")} 01L 01R' 01B2 01L' 01R 01L 01D 01R 01B 01R' 01D' 01L'`;\r\n        }\r\n    }\r\n\r\n\r\n    return moveString;\r\n}\r\n\r\nmodule.exports = solveBackEdgeSegments;","function move(depth,side){\r\n    return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet solveMiddleEdgeSegments = (current,solved,cubeSize) => {\r\n    const maxCoord = cubeSize-1;\r\n    const minCoord = 0;\r\n    const centerEdge = Math.floor(cubeSize/2);\r\n\r\n    let moves = [];\r\n\r\n    // where blue and orange meet\r\n    let firstEdge = (solved.x===minCoord && solved.z===maxCoord);\r\n    // where blue and red meet\r\n    let secondEdge = (solved.x===maxCoord && solved.z===maxCoord);\r\n    // where green and red meet\r\n    let thirdEdge = (solved.x===maxCoord && solved.z===minCoord);\r\n\r\n    // flip edge segment in place\r\n    let flip = [\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\"];\r\n    let flip2 = [\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\"];\r\n    let flip3 = [\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\"];\r\n\r\n    const flipFirstCenterEdge = [\r\n        move(centerEdge+1,\"B'\"),\r\n        \"01R\",\"01B\",\"01R'\",\"01U\",\"01R'\",\"01U'\",\"01R\",\r\n        move(centerEdge+1,\"B\"),\r\n    ];\r\n\r\n    const flipSecondCenterEdge = [\r\n        move(centerEdge+1,\"B'\"),\r\n        \"01D\",\"01B\",\"01D'\",\"01R\",\"01D'\",\"01R'\",\"01D\",\r\n        move(centerEdge+1,\"B\"),\r\n    ];\r\n\r\n    const flipThirdCenterEdge = [\r\n        move(centerEdge+1,\"B'\"),\r\n        \"01L\",\"01B\",\"01L'\",\"01D\",\"01L'\",\"01D'\",\"01L\",\r\n        move(centerEdge+1,\"B\"),\r\n    ];\r\n\r\n    const swapLastTwoCenterEdges = [\r\n        move(centerEdge,\"b2\"),\"01L2\",\"01D2\",\r\n        move(centerEdge,\"b2\"),\"01D2\",\"01L2\",\r\n        move(centerEdge,\"b2\"),\"01D2\"\r\n    ];\r\n\r\n    const flipLastCenterEdge = [\r\n        move(centerEdge,\"f\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\r\n        move(centerEdge,\"f'\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\r\n        move(centerEdge,\"b'\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\r\n        move(centerEdge,\"f'\"),\"01L2\",move(cubeSize,\"f'\"),move(centerEdge,\"f'\"),\r\n        \"01L2\",move(centerEdge,\"f'\"),\"01L2\",move(centerEdge+1,\"F\"),\r\n        \"01L'\",\"01B\",\"01D\"\r\n    ];\r\n\r\n    // solves piece diagonally to solved location\r\n    let solveUp = depth => {\r\n        return [\"01F\",move(depth,\"F\"),\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\",\"01F'\",move(depth,\"F'\")];\r\n    }\r\n    let solveDown = depth => {\r\n        return [move(depth,\"B'\"),\"01B'\",\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\",move(depth,\"B\"),\"01B\"];\r\n    }\r\n    let solveUp2 = depth => {\r\n        return [\"01F\",move(depth,\"F\"),\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\",\"01F'\",move(depth,\"F'\")];\r\n    }\r\n    let solveDown2 = depth => {\r\n        return [move(depth,\"B'\"),\"01B'\",\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\",move(depth,\"B\"),\"01B\"];\r\n    }\r\n    let solveUp3 = depth => {\r\n        return [\"01F\",move(depth,\"F\"),\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\",\"01F'\",move(depth,\"F'\")];\r\n    }\r\n    let solveDown3 = depth => {\r\n        return [move(depth,\"B'\"),\"01B'\",\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\",move(depth,\"B\"),\"01B\"];\r\n    }\r\n\r\n    let solveLastEdge = depth => {\r\n        return [\r\n            move(depth,\"B'\"),\"01D2\",move(depth,\"F\") ,\"01L2\",\r\n            move(depth,\"F'\"),\"01L2\",move(depth,\"B2\"),\"01D2\",\r\n            move(depth,\"B\") ,\"01D2\",move(depth,\"B'\"),\"01D2\",\"01L2\",\r\n            move(depth,\"B2\"),\"01L2\"\r\n        ];\r\n    }\r\n\r\n    if(cubeSize>4&&cubeSize%2&&current.y===centerEdge) {\r\n        if(firstEdge){\r\n            if(current.x===minCoord&&current.z===minCoord){\r\n                moves=[move(centerEdge+1,\"F'\"),\"01D2\",move(centerEdge+1,\"F\")];\r\n            }\r\n            else if(current.x===maxCoord&&current.z===minCoord){\r\n                moves=[\"01D2\"];\r\n            }\r\n            else if(current.x===maxCoord&&current.z===maxCoord){\r\n                moves=[move(centerEdge+1,\"F\"),\"01R2\",move(centerEdge+1,\"F'\")];\r\n            }\r\n            else moves=flipFirstCenterEdge;\r\n        }\r\n        else if(secondEdge){\r\n            if(current.x===minCoord&&current.z===minCoord){\r\n                moves=[\"01D2\"];\r\n            }\r\n            else if(current.x===maxCoord&&current.z===minCoord){\r\n                moves=[move(centerEdge+1,\"F\"),\"01D2\",move(centerEdge+1,\"F'\")];\r\n            }\r\n            else moves=flipSecondCenterEdge;\r\n        }\r\n        else if(thirdEdge){\r\n            if(current.x===maxCoord&&current.z===minCoord){\r\n                moves=flipThirdCenterEdge;\r\n            }\r\n            else {\r\n                moves=swapLastTwoCenterEdges;\r\n            }\r\n        }\r\n        else{\r\n            moves=flipLastCenterEdge;\r\n        }\r\n    }\r\n    else {\r\n        if(firstEdge){\r\n            if(current.x===minCoord&&current.z===maxCoord){\r\n                if(current.y>=centerEdge){\r\n                    moves=solveDown(cubeSize-current.y);\r\n                }\r\n                else{\r\n                    moves=solveUp(current.y+1);\r\n                }\r\n            }\r\n            else if(current.x===maxCoord&&current.z===maxCoord){\r\n                if(current.y===solved.y){\r\n                    moves=flip;\r\n                }\r\n                else{\r\n                    if(current.y>=centerEdge){\r\n                        moves=solveUp(cubeSize-current.y);\r\n                    }\r\n                    else{\r\n                        moves=solveDown(current.y+1);\r\n                    }\r\n                }\r\n            }\r\n            else if(current.x===minCoord&&current.z===minCoord){\r\n                moves.push(\"01D2\",\"01R2\");\r\n            }\r\n            else {\r\n                moves.push(\"01R2\");\r\n            }\r\n        }\r\n        else if(secondEdge){\r\n            if(current.x===maxCoord&&current.z===maxCoord){\r\n                if(current.y>=centerEdge){\r\n                        moves=solveDown2(cubeSize-current.y);\r\n                    }\r\n                    else{\r\n                        moves=solveUp2(current.y+1);\r\n                    }\r\n            }\r\n            else if(current.x===maxCoord&&current.z===minCoord){\r\n                if(current.y===solved.y){\r\n                    moves=flip2;\r\n                }\r\n                else{\r\n                    if(current.y>=centerEdge){\r\n                        moves=solveUp2(cubeSize-current.y);\r\n                    }\r\n                    else{\r\n                        moves=solveDown2(current.y+1);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                moves.push(\"01D2\");\r\n            }\r\n        }\r\n        else if(thirdEdge){\r\n            if(current.x===maxCoord&&current.z===minCoord){\r\n                if(current.y===(maxCoord-1)){\r\n                        moves=solveDown3(cubeSize-current.y);\r\n                    }\r\n                    else{\r\n                        moves=solveUp3(current.y+1);\r\n                    }\r\n            }\r\n            else if(current.x===minCoord&&current.z===minCoord){\r\n                if(current.y===solved.y){\r\n                    moves=flip3;\r\n                }\r\n                else{\r\n                    if(current.y===(maxCoord-1)){\r\n                        moves=solveUp3(cubeSize-current.y);\r\n                    }\r\n                    else{\r\n                        moves=solveDown3(current.y+1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            moves=solveLastEdge(current.y+1);\r\n        }\r\n    }\r\n\r\n    return moves.join(\" \");\r\n}\r\n\r\nmodule.exports = solveMiddleEdgeSegments;","import React from \"react\";\r\nimport \"./Nav.css\";\r\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\r\nimport 'react-dropdown/style.css'\r\nimport Popup from \"reactjs-popup\";\r\n\r\nconst Navbar = props => {\r\n  const navCubes = [];\r\n\r\n  function reloadPage(){\r\n    setTimeout(function(){\r\n      window.location.reload();\r\n    }, 50);\r\n  }\r\n  for (let i = 2; i <= 10; i++) {\r\n    navCubes.push(\r\n      <Dropdown.Item key={i} href={`/RubiksProgram/#id=${i}`} onClick={reloadPage}>{i} X {i}</Dropdown.Item>\r\n    )\r\n  }\r\n  return (\r\n    <nav className=\"navbar navbar-dark fixed-top\">\r\n      <ul className=\"nav nav-justified mr-auto\">\r\n        <li className=\"nav-item nav-fix-for-edge\">\r\n          <p className=\"navbar-brand\" style={{ color: \"lightgray\" }}><b>{props.title}</b></p>\r\n\r\n          {/*Open model here. Show bunch of settings. Pass changeSettings down to component to apply changes*/}\r\n          <div className=\"settingsDropDown\">\r\n            <DropdownButton className=\"settings\" aria-label=\"settings\" id=\"settings\" title={<i className='fa fa-cog'></i>}>\r\n              <ul>\r\n\r\n                <li className=\"settingsDropDownItem\">\r\n                  <div className=\"checkbox-inline\">\r\n                      <input type=\"checkbox\" data-toggle=\"toggle\" onClick={() => props.changeSettings('displayMoveInput')}></input>\r\n                  </div>\r\n              Move Input\r\n            </li>\r\n\r\n                <li className=\"settingsDropDownItem\" onClick={() => props.changeSettings('displayHints')}>\r\n\r\n\r\n                  <div className=\"checkbox-inline\">\r\n                      <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" onClick={() => props.changeSettings('displayHints')}></input>\r\n                  </div>\r\n              Move Hints\r\n\r\n            </li>\r\n\r\n              </ul>\r\n\r\n            </DropdownButton>\r\n          </div>\r\n          <div className=\"cubesDropdown\">\r\n            <DropdownButton title=\"Cubes\" className=\"cubes\">\r\n              {navCubes}\r\n            </DropdownButton>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <div style={{ float: \"right\", height: \"100%\" }} >\r\n        <Popup trigger={<button id=\"infoBtn\">Info</button>}>\r\n          {close => (\r\n            <div style={{ zIndex: \"100\", width: \"100%\", height: \"100%\" }}>\r\n              <div className=\"shadeBackground\" style={{ backgroundColor: \"black\", zIndex: \"101\" }} onClick={close}></div>\r\n              <div style={{ zIndex: \"102\", width: \"max-content\", margin: \"auto\", transform: \"translateX(-50%)\", padding: \"8px\" }} className=\"popupDiv\">\r\n                <b style={{ fontSize: \"2rem\" }}>Instructions</b>\r\n                <div className=\"close\" id=\"closeBtn\" onClick={close}>\r\n                  &times;\r\n                </div>\r\n                <div style={{ backgroundColor: \"rgba(0,0,0,.8)\", height: \"100%\", marginTop: \"0\", color: \"lightgrey\", fontSize: \"1rem\", textAlign: \"center\", borderRadius: \".25rem\", padding: \"8px\" }}>\r\n                  <div style={{ paddingTop: \"\" }}>Click and drag anywhere not on the cube to rotate.</div>\r\n                  <hr style={{ backgroundColor: \"lightgray\", width: \"60%\" }}></hr>\r\n                  <div>Click and drag anywhere on the cube to make a move <br></br>or use the keyboard to make turns:</div>\r\n                  <div>\r\n                    <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n                      <b style={{ color: \"white\", backgroundColor: \"black\" }}> F, </b><b style={{ color: \"white\", backgroundColor: \"black\" }}>f,</b>\r\n                      <b style={{ color: \"blue\", backgroundColor: \"black\" }}> U, </b><b style={{ color: \"blue\", backgroundColor: \"black\" }}>u,</b>\r\n                      <b style={{ color: \"red\", backgroundColor: \"black\" }}> R, </b><b style={{ color: \"red\", backgroundColor: \"black\" }}>r,</b>\r\n                      <b style={{ color: \"yellow\", backgroundColor: \"black\" }}> B, </b><b style={{ color: \"yellow\", backgroundColor: \"black\" }}>b,</b>\r\n                      <b style={{ color: \"orange\", backgroundColor: \"black\" }}> L, </b><b style={{ color: \"orange\", backgroundColor: \"black\" }}>l,</b>\r\n                      <b style={{ color: \"green\", backgroundColor: \"black\" }}> D, </b><b style={{ color: \"green\", backgroundColor: \"black\" }}>d </b>\r\n                      <p style={{ width: \"100%\", textAlign: \"center\" }}>(lower case is clockwise, upper case is counterclockwise)</p>\r\n                    </div>\r\n                  </div>\r\n                  <hr style={{ backgroundColor: \"lightgray\", width: \"60%\" }}></hr>\r\n                  <div style={{}}>\r\n                  <div style={{ marginBottom: \"0\", paddingBottom: \"\" }}>Author: Sasha Peters <br></br> <a target=\"#\" href=\"https://www.github.com/merpig\"><i className=\"fa fa-github\" style={{ fontSize: \"36px\", marginRight: \"10px\" }}></i></a><a target=\"#\" href=\"https://www.linkedin.com/in/alexandr-sasha-peters-8a2489168/\"><i className=\"fa fa-linkedin\" style={{ fontSize: \"36px\" }}></i></a></div>\r\n                  <hr style={{ backgroundColor: \"lightgrey\" }}></hr>\r\n                  <div style={{ color: \"white\", backgroundColor: \"\", textAlign: \"center\" }}>\r\n                      site design / cube © 2020 RubiksProgram\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Popup> {\" \"}\r\n        <button id=\"fullscreenBtn\" value=\"true\">Fullscreen</button>\r\n      </div>\r\n    </nav>)\r\n};\r\n\r\nexport default Navbar;\r\n","import 'rc-slider/assets/index.css';\r\nimport './Speeds.css';\r\nimport React from 'react';\r\nimport Slider from 'rc-slider'\r\n\r\nconst style = { width: \"20%\", position: \"fixed\", top: \"85px\", left: \"10px\",fontSize:\"1rem\"};\r\n\r\nconst Speeds = props => (\r\n\r\n    <div className=\"sliderDiv\" style = {style}>\r\n\r\n        {props.isDisabled ?\r\n        <Slider \r\n            defaultValue={40} \r\n            value={props.speed}\r\n            min={props.speed} max={props.speed} \r\n            step={10}\r\n        />\r\n        :\r\n        <Slider \r\n            defaultValue={40} \r\n            value={props.speed}\r\n            min={0} max={70} \r\n            step={10}\r\n            onChange={props.onSliderChange}\r\n        />}\r\n\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport default Speeds;","import React from \"react\";\r\nimport Draggable from 'react-draggable';\r\n\r\nconst MoveInput = (props) => {\r\n    const instructTurn = (e) => {\r\n        if(e.key==='Enter'){\r\n            props.algorithm(document.getElementById('moveInput').value,'Custom');\r\n        }\r\n        e.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <div style={{position: \"absolute\", zIndex: \"99\"}}>\r\n            <Draggable\r\n                handle=\".handle\"\r\n                defaultPosition={{x:/*window.innerWidth-220*/0 , y: 150}}\r\n                position={null}\r\n                grid={[50, 50]}\r\n                scale={1}\r\n                onStart={props.handleStart}\r\n                onDrag={props.handleDrag}\r\n                onStop={props.handleStop}>\r\n                <div>\r\n                    <div className=\"handle\" style={{color:\"grey\"}}>Drag from here</div>\r\n                    <div>\r\n                        <input placeholder=\"type moves here\" id=\"moveInput\" onKeyDown={instructTurn} style={{borderRadius: \"4px\", margin: \"1px\",border: \"1.5px solid #007bff\",width:\"200px\"}}></input>\r\n                        <button id=\"moveSubmit\" onClick={() => props.algorithm(document.getElementById('moveInput').value,'Custom')}>Enter</button>\r\n                    </div>\r\n                </div>\r\n            </Draggable>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoveInput;","import React from 'react';\r\nimport \"./SolverInfo.css\"\r\n\r\nconst SolverInfo = (props) => (\r\n    <div className={(window.innerWidth > 900&&window.innerHeight>580)?\"sideSolverInfo\":\"solverInfo\"}>\r\n        <div className=\"setLengthWrapper\">\r\n            Total Moves: <div className=\"setLength\">{props.solvedSetLength}</div>\r\n        </div>\r\n        <div className=\"setLengthWrapper\">\r\n            Current Move: <div className=\"setLength\">{props.prevSetLength}</div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default SolverInfo;","import React from 'react';\r\nimport \"./ColorPickerInfo.css\"\r\n\r\nconst ColorPickerInfo = (props) => (\r\n    <div className={(window.innerWidth > 900&&window.innerHeight>580)?\"sideSolverInfo\":\"solverInfo\"}>\r\n        <div className=\"setLengthWrapper\">\r\n            Current Color: <div className=\"setLength\" style={{backgroundColor:props.colorPicked}}></div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ColorPickerInfo;","import React from 'react';\r\nimport \"./Controls.css\";\r\n\r\n\r\nlet centerButtons=[];\r\nlet singleButtons=[];\r\nlet multiButtons=[];\r\nlet singleCols=[];\r\nlet multiCols=[];\r\nlet key=0;\r\n\r\nfunction namesToColors(face){\r\n    switch(face){\r\n        case 'F':\r\n            return {\r\n                bgc: 'white',\r\n                color: 'black',\r\n            }\r\n        case 'U':\r\n            return {\r\n                bgc: 'blue',\r\n                color: 'white',\r\n            }\r\n        case 'R':\r\n            return {\r\n                bgc: 'red',\r\n                color: 'white',\r\n            }\r\n        case 'B':\r\n            return {\r\n                bgc: 'yellow',\r\n                color: 'black',\r\n            }\r\n        case 'L':\r\n            return {\r\n                bgc: 'orange',\r\n                color: 'black',\r\n            }\r\n        case 'D':\r\n            return {\r\n                bgc: 'green',\r\n                color: 'white',\r\n            }\r\n        default:\r\n    }\r\n\r\n}\r\n\r\n//generate data for buttons and pass down to props. Better than trying to do in here\r\nconst Controls = props => {\r\n    centerButtons=[];\r\n    singleButtons=[];\r\n    multiButtons=[];\r\n    singleCols=[];\r\n    multiCols=[];\r\n\r\n    return (\r\n        <div id=\"controlsDiv\">\r\n            {\r\n                props.size%2 ? \r\n                <div className=\"centerMoves\" style={{marginRight: \"5px\"}}>\r\n                    <div className='centerLayerColumns'>\r\n                    {\r\n                        props.generatedButtons.center.forEach(element => {\r\n                            centerButtons.push(\r\n                                <div className=\"moveBtn\" \r\n                                        key={key} \r\n                                        onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \r\n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\r\n                                        onMouseEnter={(e)=>props.mouseEnter(element.clockwise.name,element.clockwise.data,e)}\r\n                                        onMouseLeave={()=>props.mouseLeave()}\r\n                                        >\r\n                                        \r\n                                    {element.clockwise.name}\r\n                                </div>\r\n                            );\r\n                            key+=1\r\n                            centerButtons.push(\r\n                                <div className=\"moveBtn\" \r\n                                        key={key} \r\n                                        onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \r\n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\r\n                                        onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\r\n                                        onMouseLeave={()=>props.mouseLeave()}\r\n                                        >\r\n                                    {element.counter.name}\r\n                                </div>\r\n                            );\r\n                            key+=1\r\n                        })\r\n                    }\r\n                    {centerButtons}\r\n                    </div>\r\n                </div> : \"\"\r\n            }\r\n            <div className=\"singleLayerMoves\" style={{marginRight: \"5px\"}}>\r\n                {\r\n                    props.generatedButtons.single.forEach(element => {\r\n                        let colors = namesToColors(element.counter.face);\r\n                        if(element.counter.face === 'F') singleButtons.push([],[]);\r\n                        let lengthBtns = singleButtons.length-2;\r\n                        let lengthBtns1 = singleButtons.length-1;\r\n                        singleButtons[lengthBtns].push(\r\n                            <div className=\"moveBtn\" \r\n                                    key={key} \r\n                                    onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \r\n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\r\n                                    onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\r\n                                    onMouseLeave={()=>props.mouseLeave()}\r\n                                    >\r\n                                {element.counter.name}\r\n                            </div>\r\n                        )\r\n                        key+=1;\r\n                        singleButtons[lengthBtns1].push(\r\n                            <div className=\"moveBtn\" \r\n                                key={key} \r\n                                onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \r\n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\r\n                                onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\r\n                                onMouseLeave={()=>props.mouseLeave()}\r\n                                >\r\n                                {element.clockwise.name}\r\n                            </div>\r\n                        )\r\n                        key+=1;\r\n                    })\r\n\r\n                }\r\n                {\r\n                    singleButtons.forEach(element =>{\r\n                        key+=1;\r\n                        singleCols.push(\r\n                            <div key={key} className='singleLayerColumns'>\r\n                                {element}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    singleCols\r\n                }\r\n            </div>\r\n            <div className=\"multiLayerMoves\">\r\n            {\r\n                    props.generatedButtons.multi.forEach(element => {\r\n                        let colors = namesToColors(element.counter.face);\r\n                        if(element.counter.face === 'F') multiButtons.push([],[]);\r\n                        let lengthBtns = multiButtons.length-2;\r\n                        let lengthBtns1 = multiButtons.length-1;\r\n                        multiButtons[lengthBtns].push(\r\n                            <div className=\"moveBtn\" \r\n                                key={key} \r\n                                onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \r\n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\r\n                                onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\r\n                                onMouseLeave={()=>props.mouseLeave()}\r\n                                >\r\n                                {element.counter.name}\r\n                            </div>\r\n                        )\r\n                        key+=1;\r\n                        multiButtons[lengthBtns1].push(\r\n                            <div className=\"moveBtn\" \r\n                                key={key} \r\n                                onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \r\n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\r\n                                onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\r\n                                onMouseLeave={()=>props.mouseLeave()}\r\n                                >\r\n                                {element.clockwise.name}\r\n                            </div>\r\n                        )\r\n                        key+=1;\r\n                    })\r\n\r\n                }\r\n                {\r\n                    multiButtons.forEach(element =>{\r\n                        key+=1;\r\n                        multiCols.push(\r\n                            <div key={key} className='multiLayerColumns'>\r\n                                {element}\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {\r\n                    multiCols\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls;","const sizeLimit = 30;\r\n\r\nconst cross = \"01R 01R 01L' 01D 01F 01F 01R' 01D' 01R' 01L 01U' 01D 01R 01D 01B 01B 01R' 01U 01D 01D\";\r\nconst checkerboard = \"01U 01U 01D 01D 01R 01R 01L 01L 01F 01F 01B 01B\";\r\nconst checkerboard1 = \"01U' 01R 01R 01L 01L 01F 01F 01B 01B 01U' 01R 01L 01F 01B' 01U 01F 01F 01D 01D 01R 01R 01L 01L 01F 01F 01U 01U 01F 01F 01U' 01F 01F\";\r\nconst anaconda = \"01L 01U 01B' 01U' 01R 01L' 01B 01R' 01F 01B' 01D 01R 01D' 01F'\";\r\nconst python = \"01F 01F 01R' 01B' 01U 01R' 01L 01F' 01L 01F' 01B 01D' 01R 01B 01L 01L\";\r\nconst sixSpots = \"01U 01D' 01R 01L' 01F 01B' 01U 01D'\";\r\nconst cubex3 = \"01U' 01L' 01U' 01F' 01R 01R 01B' 01R 01F 01U 01B 01B 01U 01B' 01L 01U' 01F 01U 01R 01F'\";\r\nconst rings = \"02R 03R 04R 05R 02B' 03B' 04B' 01L 01L 02F 02B 01L 01L 02B' 02D' 03D' 04D' 05D' 02F' 01L 01L 02F 02B 01L 01L 02B' 02D 02D 03D 03D 04D 04D 05D 05D 03R 04R 01U' 03R' 04R' 02D' 03D' 04D' 05D' 03R 04R 01U 02R' 03R' 04R' 05R' 03F' 04F' 03R' 04R' 03F 04F 02F 03F 04F 05F 02L 02L 03L 03L 04L 04L 02F 02F 03R 03R 04R 04R 02B 02B 03B 03B 04B 04B 02L 02L\";\r\nconst cubex4Twisted = \"01B' 02R 02R 02L 02L 01U 01U 02R 02R 02L 02L 01B 01F 01F 01R 01U' 01R 01U 01R 01R 01U 01R 01R 01F' 01U 01F' 01U 02U 01L 02L 01U' 02U' 01F 01F 02F 02F 01D 02D 01R' 02R' 01U 02U 01F 02F 01D 01D 02D 02D 01R 01R 02R 02R\";\r\nconst cubex2 = \"01F 01L 01F 01U' 01R 01U 01F 01F 01L 01L 01U' 01L' 01B 01D' 01B' 01L 01L 01U\";\r\n\r\n//convertRuwixAlgo(\"\".split(' ').join(''));\r\nconst checkboardInCube = convertRuwixAlgo(\"BDF'B'DL2ULU'BD'RBRD'RL'FU2D\");\r\nconst wire = convertRuwixAlgo(\"R L F B R L F B R L F B R2 B2 L2 R2 B2 L2\".split(' ').join(''));\r\nconst perpendicularLines = convertRuwixAlgo(\"R2 U2 R2 U2 R2 U2 L2 D2 L2 D2 L2 D2 L2 R2\".split(' ').join(''));\r\nconst verticalStripes = convertRuwixAlgo(\"F U F R L2 B D' R D2 L D' B R2 L F U F\".split(' ').join(''));\r\nconst giftBox = convertRuwixAlgo(\"U B2 R2 B2 L2 F2 R2 D' F2 L2 B F' L F2 D U' R2 F' L' R'\".split(' ').join(''));\r\nconst twister = convertRuwixAlgo(\"F R' U L F' L' F U' R U L' U' L F'\".split(' ').join(''));\r\nconst spiral = convertRuwixAlgo(\"L' B' D U R U' R' D2 R2 D L D' L' R' F U\".split(' ').join(''));\r\nconst fourCrosses = convertRuwixAlgo(\"U2 R2 L2 F2 B2 D2 L2 R2 F2 B2\".split(' ').join(''));\r\nconst unionJack = convertRuwixAlgo(\"U F B' L2 U2 L2 F' B U2 L2 U\".split(' ').join(''));\r\nconst displaceMotif = convertRuwixAlgo(\"L2 B2 D' B2 D L2 U R2 D R2 B U R' F2 R U' B' U'\".split(' ').join(''));\r\nconst viaduct = convertRuwixAlgo(\"R2 U2 L2 D B2 L2 B2 R2 D' U L' D F' U' R2 F' U B2 U2 R'\".split(' ').join(''));\r\nconst staircase = convertRuwixAlgo(\"L2 F2 D' L2 B2 D' U' R2 B2 U' L' B2 L D L B' D L' U\".split(' ').join(''));\r\nconst wrapped2x2 = convertRuwixAlgo(\"D' B2 F2 L2 U' F2 R2 D F2 U2 L' B R' U' L' F D' F L D2\".split(' ').join(''));\r\nconst exchangedDuckFeet = convertRuwixAlgo(\"U F R2 F' D' R U B2 U2 F' R2 F D B2 R B'\".split(' ').join(''));\r\nconst pyraminx = convertRuwixAlgo(\"D L' U R' B' R B U2 D B D' B' L U D'\".split(' ').join(''));\r\nconst twinPeaks = convertRuwixAlgo(\"U L2 B2 R2 U R2 D' U L F' U L' D B' U L B' L R' U'\".split(' ').join(''));\r\nconst cornerPyramid = convertRuwixAlgo(\"U' D B R' F R B' L' F' B L F R' B' R F' U' D\".split(' ').join(''));\r\nconst sixTwoOne = convertRuwixAlgo(\"U B2 D2 L B' L' U' L' B D2 B2\".split(' ').join(''));\r\nconst yinYang = convertRuwixAlgo(\"R L B F R L U' D' F' B' U D\".split(' ').join(''));\r\nconst snakeEyes = convertRuwixAlgo(\"R2 U2 R2 U2 R2 U2\".split(' ').join(''));\r\nconst weirdo = convertRuwixAlgo(\"R' F' U F2 U' F R' F2 D2 F2 D2 F2 D F2 R2 U2\".split(' ').join(''));\r\n\r\nfunction convertRuwixAlgo(algoStr){\r\n    return algoStr\r\n        .split('')\r\n        .map((char,i)=>\r\n            (char!==\"'\"&&char!==\"2\")?\r\n                \" 01\"+char:\r\n                char===\"2\"?\r\n                \" 01\"+algoStr[i-1]:\r\n                char\r\n                )\r\n        .join('')\r\n        .trim();\r\n}\r\n\r\nlet bundle = (name,moveSet,rangeLow,rangeHigh) => {\r\n    let sets = [];\r\n    sets.push(\r\n        {\r\n            name : name,\r\n            moves : moveSet,\r\n            worksFor: []\r\n        }\r\n    );\r\n    for (let i = rangeLow; i <= rangeHigh; i++){\r\n            sets[0].worksFor.push(i);\r\n    }\r\n    return sets;\r\n}\r\n\r\nlet blankBundle = (name) => {\r\n    let cubeSizes = [];\r\n    for(let i = 2; i<=sizeLimit;i++) cubeSizes.push(i);\r\n    return {\r\n        name : name,\r\n        worksFor: cubeSizes\r\n    }\r\n}\r\n\r\nlet generalizedBundle = (name,moveSet,moveSet2) => {\r\n    let sets = [];\r\n    for (let i = 3; i <= sizeLimit; i++){\r\n        let algoName = name;\r\n        if(name === \"Cube x3\"){\r\n            algoName=algoName.split('');\r\n            algoName.pop();\r\n            algoName.push(i);\r\n            algoName=algoName.join('');\r\n        }\r\n        sets.push(\r\n            {\r\n                name : algoName,\r\n                moves : generalizerLower(i,moveSet,moveSet2),\r\n                worksFor: [i]\r\n            }\r\n        );\r\n        // Interesting filter but all look the same, so disbaled\r\n        if(i<-1){\r\n            sets.push({\r\n                name : algoName+\" (Inverse)\",\r\n                moves : generalizerUpper(i,moveSet),\r\n                worksFor: [i]\r\n            });\r\n        }\r\n    }\r\n    return sets;\r\n}\r\n\r\nlet generalizerLower = (size,moveSet,moveSet2) => {\r\n    const moveParts = [];\r\n    for(let i = 1; i<=Math.floor(size/2); i++){\r\n        if(moveSet2 && i%2) moveParts.push(baseLower(i,moveSet2));\r\n        else moveParts.push(baseLower(i,moveSet));\r\n    }\r\n    return moveParts.join(\" \");\r\n}\r\n\r\nlet baseLower = (depth,moveSet) => {\r\n    const moves = [];\r\n    if (depth>1){\r\n        moveSet.split(\" \").forEach(e=>moves.push(move(depth,e.substring(2).toLowerCase())));\r\n    }\r\n    else moveSet.split(\" \").forEach(e=>moves.push(move(depth,e.substring(2).toUpperCase())));\r\n    return moves.join(\" \");\r\n}\r\n\r\nlet generalizerUpper = (size,moveSet) => {\r\n    const moveParts = [];\r\n    for(let i = 1; i<=Math.floor(size/2); i++){\r\n        moveParts.push(baseUpper(i,moveSet));\r\n    }\r\n    return moveParts.join(\" \");\r\n}\r\n\r\nlet baseUpper = (depth,moveSet) => {\r\n    const moves = [];\r\n    moveSet.split(\" \").forEach(e=>moves.push(move(depth,e.substring(2).toUpperCase())));\r\n    return moves.join(\" \");\r\n}\r\n\r\nfunction move(depth,side){\r\n    return ((depth<10? \"0\":\"\") + depth + side);\r\n}\r\n\r\nlet algorithms = [\r\n    blankBundle(\"None Selected\"),\r\n    ...generalizedBundle(\"Anaconda\",anaconda),\r\n    ...generalizedBundle(\"Cross\",cross),\r\n    ...bundle(\"Cube x2\",cubex2,2,4),\r\n    ...generalizedBundle(\"Cube x3\",cubex3),\r\n    ...bundle(\"Cube x4 Twisted\",cubex4Twisted,4,4),\r\n    ...generalizedBundle(\"Checkerboard\",checkerboard),\r\n    ...generalizedBundle(\"Checkerboard1\",checkerboard1),\r\n    ...generalizedBundle(\"Checkerboard In Cube\",checkboardInCube),\r\n    ...generalizedBundle(\"Corner Pyramid\",cornerPyramid),\r\n    ...generalizedBundle(\"Displaced Motif\",displaceMotif),\r\n    ...generalizedBundle(\"Exchanged Duck Feet\",exchangedDuckFeet),\r\n    ...generalizedBundle(\"Four Crosses\",fourCrosses),\r\n    ...generalizedBundle(\"Gift Box\",giftBox),\r\n    ...generalizedBundle(\"Perpendicular Lines\",perpendicularLines),\r\n    ...generalizedBundle(\"Pyraminx\",pyraminx),\r\n    ...generalizedBundle(\"Python\",python),\r\n    ...bundle(\"Rings\",rings,6,6),\r\n    ...generalizedBundle(\"Six Spots\",sixSpots),\r\n    ...generalizedBundle(\"Six Spots + Cross\",sixSpots,cross),\r\n    ...generalizedBundle(\"Six-Two-One\",sixTwoOne),\r\n    ...bundle(\"Snake Eyes\",snakeEyes,3,3),\r\n    ...generalizedBundle(\"Spiral\",spiral),\r\n    ...generalizedBundle(\"Staircase\",staircase),\r\n    ...generalizedBundle(\"Twin Peaks\",twinPeaks),\r\n    ...generalizedBundle(\"Twister\",twister),\r\n    ...generalizedBundle(\"Union Jack\",unionJack),\r\n    ...generalizedBundle(\"Vertical Stripes\",verticalStripes),\r\n    ...generalizedBundle(\"Viaduct\",viaduct),\r\n    ...generalizedBundle(\"Weirdo\",weirdo),\r\n    ...bundle(\"Wire\",wire,3,3),\r\n    ...generalizedBundle(\"Wrapped 2x2\",wrapped2x2),\r\n    ...generalizedBundle(\"Yin Yang\",yinYang),\r\n]\r\n\r\nexport default algorithms;","/* \r\n * \r\n *      Sasha Peters\r\n *      Created working function: Saturday, December 14, 2019\r\n *      \r\n */\r\n\r\nimport whiteSolver from \"./middles/white\"\r\nimport yellowSolver from \"./middles/yellow\"\r\nimport blueSolver from \"./middles/blue\"\r\nimport greenSolver from \"./middles/green\"\r\nimport orangeSolver from \"./middles/orange\"\r\n\r\nfunction solveMiddleLogic(cubeDimensions,rubiksObjectAtIndex,index){\r\n    \r\n    let dim = cubeDimensions;\r\n    let faceColor = Math.floor((index)/((dim-2)*(dim-2)));\r\n\r\n    // Coordinates organized\r\n    let current = {\r\n        x:rubiksObjectAtIndex[6],\r\n        y:rubiksObjectAtIndex[7],\r\n        z:rubiksObjectAtIndex[8]\r\n    };\r\n    let solved = {\r\n        x:rubiksObjectAtIndex[9],\r\n        y:rubiksObjectAtIndex[10],\r\n        z:rubiksObjectAtIndex[11]\r\n    };\r\n\r\n    function solve(faceColor){\r\n        switch(faceColor){\r\n            case 0:\r\n                // Solved for all sizes\r\n                return whiteSolver(current,solved,dim,index);\r\n            case 1:\r\n                // Solved for all sizes\r\n                return yellowSolver(current,solved,dim,index);\r\n            case 2:\r\n                // Solved for all sizes\r\n                return blueSolver(current,solved,dim);\r\n            case 3:\r\n                // In Progress. Solved for 4x4\r\n                return orangeSolver(current,solved,dim);\r\n            case 4:\r\n                // In Progress. Solved for 4x4\r\n                return greenSolver(current,solved,dim,index);\r\n            default:\r\n                console.log(\"Should never reach here\");\r\n        }\r\n    }\r\n\r\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\r\n        \r\n    }\r\n\r\n    else{\r\n        return solve(faceColor);\r\n    }\r\n\r\n    return \"\";\r\n}\r\n\r\nexport default solveMiddleLogic;","import solveMiddleLogic from './solveMiddleLogic';\r\n\r\nfunction solveMiddles(cube,dim,moveStringToArray,index,middles){\r\n\r\n    // End function if 2x2\r\n    if(dim===2) return {solveState : 1};\r\n\r\n    const numberOfMiddles= ((dim-2)*(dim-2))*5;\r\n    const obj = {};\r\n    let moveString = \"\";\r\n\r\n    // Position middles for 3x3\r\n    if(dim===3){\r\n      if(cube[4][7] === 0 && cube[10][8] === 2){\r\n      }\r\n      else{\r\n        if(cube[4][8]===2){ //U\r\n          cube[12][6]===0 ? moveString+=\"02R'\" : moveString+=\"02U'\";\r\n        }\r\n        else if(cube[4][6]===0){//L\r\n          cube[10][8]===2 ? moveString+=\"02U'\" : moveString+=\"02R'\";\r\n        }\r\n        else if(cube[4][6]===2){//R\r\n          cube[10][8]===2 ? moveString+=\"02U\" : moveString+=\"02R'\";\r\n        }\r\n        else if(cube[4][8]===0){//D\r\n          cube[12][6]===0 ? moveString+=\"02R\" : moveString+=\"02U'\";\r\n        }\r\n        else if(cube[4][7]===2){//B\r\n          cube[10][8]===2 ? moveString+=\"02U2\" : moveString+=\"02F'\";\r\n        }\r\n        else moveString+=\"02B'\"//F\r\n      }\r\n\r\n      const moveArray = moveStringToArray(moveString);\r\n      moveString.trim().length ? obj.moveSet = moveArray : obj.solveState = 1;\r\n    }\r\n\r\n    // Solve logic for 4x4 and greater\r\n    else{\r\n      \r\n      if(index<numberOfMiddles){ \r\n        moveString = solveMiddleLogic(dim,cube[middles[index]],index);\r\n        const moveArray = moveStringToArray(moveString);\r\n        moveString.trim().length ? obj.moveSet = moveArray : obj.rubiksIndex = index+1;\r\n      }\r\n\r\n      else{\r\n        obj.solveState = .1;\r\n        obj.rubiksIndex = 0;\r\n        obj.currentFunc = \"Solving\";\r\n        obj.moveSet = ['stop'];\r\n      }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport default solveMiddles;","import frontEdges from \"./edges/solveFrontEdgeSegments\";\r\nimport backEdges from \"./edges/solveBackEdgeSegments\";\r\nimport middleEdges from \"./edges/solveMiddleEdgeSegements\";\r\n\r\nfunction side(rubiksObject,color){\r\n    return rubiksObject.indexOf(color);\r\n}\r\n\r\nfunction solveEdgeLogic(cubeDimensions,rubiksObjectAtIndex,index,cube,edges){\r\n\r\n    const dim = cubeDimensions;\r\n    const edgesPerSection = 4;\r\n    const edgeLength = dim-2\r\n    const section = Math.floor(index/(edgeLength*edgesPerSection));\r\n    const whiteSide = side(rubiksObjectAtIndex,'white');\r\n    const yellowSide = side(rubiksObjectAtIndex,'yellow');\r\n    const blueSide = side(rubiksObjectAtIndex,'blue');\r\n    const greenSide = side(rubiksObjectAtIndex,'green');\r\n\r\n    let moveString = \"\";\r\n\r\n    // Coordinates organized\r\n    let current = {\r\n        x:rubiksObjectAtIndex[6],\r\n        y:rubiksObjectAtIndex[7],\r\n        z:rubiksObjectAtIndex[8]\r\n    };\r\n    let solved = {\r\n        x:rubiksObjectAtIndex[9],\r\n        y:rubiksObjectAtIndex[10],\r\n        z:rubiksObjectAtIndex[11]\r\n    };\r\n\r\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\r\n        //console.log(rubiksObjectAtIndex);\r\n        if( (whiteSide === 0  && section === 0)||\r\n            (yellowSide === 3 && section === 1)||\r\n            (blueSide === 1   && section === 2)||\r\n            (greenSide === 5  && section === 2)){\r\n            //console.log(\"SOLVED\");\r\n            return \"\";\r\n        }      \r\n    }\r\n    switch(section){\r\n        case 0: \r\n            // Finished for now\r\n            moveString = frontEdges(current,solved,dim,whiteSide);\r\n            break;\r\n        case 1:\r\n            // Finished for now\r\n            moveString = backEdges(current,solved,dim,yellowSide);\r\n            break;\r\n        case 2:\r\n            // Not started\r\n            moveString = middleEdges(current,solved,dim);\r\n            break;\r\n        default:\r\n            console.log(\"Should never reach here\");\r\n    }\r\n\r\n    return moveString;\r\n}\r\n\r\nexport default solveEdgeLogic;","import solveEdgeLogic from './solveEdgeLogic';\r\n\r\nfunction solveEdges(cube,dim,moveStringToArray,edges,index){\r\n    const numCubeEdges = 12;\r\n    const innerEdgeLength = dim-2;\r\n    const numEdges = innerEdgeLength * numCubeEdges;\r\n    let moveString = \"\";\r\n    const obj = {};\r\n\r\n    if (index < numEdges){\r\n        moveString = solveEdgeLogic(dim,cube[edges[index]],index,cube,edges);\r\n        moveString.trim().length ? \r\n          obj.moveSet = moveStringToArray(moveString) :\r\n          obj.rubiksIndex = index+1;\r\n    }\r\n\r\n    else {\r\n      obj.solveState = 1;\r\n      obj.rubiksIndex = 0;\r\n      obj.currentFunc = \"Solving\";\r\n      obj.moveSet = ['stop'];\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nexport default solveEdges;","import solveWhiteCross from \"./edges/solveWhiteCross\"\r\nimport solveWhiteCorners from \"./corners/solveWhiteCorners\"\r\nimport solveMiddleEdges from \"./edges/solveMiddleEdges\"\r\nimport solveYellowCross from \"./edges/solveYellowCross\"\r\nimport alignYellowCross from \"./edges/alignYellowCross\"\r\nimport solveYellowCorners from \"./corners/solveYellowCorners\"\r\nimport alignYellowCorners from \"./corners/alignYellowCorners\"\r\nimport solveMiddles from \"./solveMiddles\"\r\nimport solveEdges from \"./solveEdges\"\r\n\r\nconst CONSTANTS = {\r\n    SOLVE_MIDDLES: 0,\r\n    SOLVE_EDGES: 0.1,\r\n    SOLVE_WHITE_CROSS: 1,\r\n    SOLVE_WHITE_CORNERS: 2,\r\n    SOLVE_MIDDLE_EDGES: 3,\r\n    SOLVE_YELLOW_CROSS: 4,\r\n    ALIGN_YELLOW_CROSS: 5,\r\n    ALIGN_YELLOW_CORNERS: 6,\r\n    SOLVE_YELLOW_CORNERS: 7\r\n}\r\n\r\nfunction solver(solveState,rubiksObject,cubeDimension,moveStringToArray,solveMoves,rubiksIndex,middles,edges,corners){\r\n    switch(solveState){\r\n        case CONSTANTS.SOLVE_MIDDLES:\r\n            return solveMiddles(rubiksObject,cubeDimension,moveStringToArray,rubiksIndex,middles);\r\n        case CONSTANTS.SOLVE_EDGES:\r\n            return solveEdges(rubiksObject,cubeDimension,moveStringToArray,edges,rubiksIndex);\r\n        case CONSTANTS.SOLVE_WHITE_CROSS:\r\n            return solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray,edges);\r\n        case CONSTANTS.SOLVE_WHITE_CORNERS:\r\n            return solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray,corners);\r\n        case CONSTANTS.SOLVE_MIDDLE_EDGES:\r\n            return solveMiddleEdges(rubiksObject,moveStringToArray,edges,cubeDimension);\r\n        case CONSTANTS.SOLVE_YELLOW_CROSS:\r\n            return solveYellowCross(rubiksObject,moveStringToArray,edges,cubeDimension);\r\n        case CONSTANTS.ALIGN_YELLOW_CROSS:\r\n            return alignYellowCross(rubiksObject,moveStringToArray,edges,cubeDimension);\r\n        case CONSTANTS.ALIGN_YELLOW_CORNERS:\r\n            return alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray,corners);\r\n        case CONSTANTS.SOLVE_YELLOW_CORNERS:\r\n            return solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves,corners);\r\n        default:\r\n            console.log(\"invalid solve state\");\r\n    }\r\n}\r\n\r\nexport default solver;","import * as THREE from \"three\";\r\n\r\n// Functions to generate/manipulate cube\r\nconst cube = {\r\n    // Generates the inital solved state of rubiksObject\r\n    generateSolved : function (_x,_y,_z){\r\n        const size = _z;\r\n        const half = Math.floor(size/2);\r\n        const tempArr = [];\r\n        const middles = [];\r\n        const edges = [];\r\n        const corners = [];\r\n        const tempMiddles = [\r\n          [], // white\r\n          [], // yellow\r\n          [], // blue\r\n          [], // green\r\n          [], // orange\r\n          []  // red\r\n        ];\r\n        const tempEdges = [\r\n          [[],[],[],[]], // white edges\r\n          [[],[],[],[]], // middle edges\r\n          [[],[],[],[]]\r\n        ]\r\n    \r\n        for(let j = 0; j < _y; j++){      // Move back along the y-axis\r\n          for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\r\n            for(let i = 0; i < _x; i++){  // Traverse across the x-axis\r\n              let side0 = \"black\";\r\n              let side1 = \"black\";\r\n              let side2 = \"black\";\r\n              let side3 = \"black\";\r\n              let side4 = \"black\";\r\n              let side5 = \"black\";\r\n              let edgeType = null;\r\n              let middleType = null;\r\n              if(i===_x-1) side2 = \"red\";\r\n              else if (i===0) side4 =\"orange\";\r\n              if(j===_y-1) side3 = \"yellow\";\r\n              else if (j===0) side0 =\"white\";\r\n              if(k===_z-1) side1 = \"blue\";\r\n              else if (k===0) side5 =\"green\";\r\n              let tempCount = 0;\r\n              if(j===0 || j === _y-1) tempCount++;\r\n              if(k===0 || k === _z-1) tempCount++;\r\n              if(i===0 || i === _x-1) tempCount ++;\r\n              let tempType = \"none\";\r\n    \r\n              if(tempCount===1) {\r\n                tempType = \"middle\";\r\n                if(size%2){\r\n                  if((j===half&&k===half)||\r\n                     (j===half&&i===half)||\r\n                     (i===half&&k===half)){\r\n                    middleType=\"center\"\r\n                  }\r\n                }\r\n                if(j===0) {tempMiddles[0].push(tempArr.length);middleType=tempMiddles[0].length+1}\r\n                if(j===_y-1) {tempMiddles[1].push(tempArr.length);middleType=tempMiddles[1].length+1}\r\n                if(k===_z-1) {tempMiddles[2].push(tempArr.length);middleType=tempMiddles[2].length+1}\r\n                if(i===0) {tempMiddles[3].push(tempArr.length);middleType=tempMiddles[3].length+1}\r\n                if(k===0) {tempMiddles[4].push(tempArr.length);middleType=tempMiddles[4].length+1}\r\n                if(i===_x-1) {tempMiddles[5].push(tempArr.length);middleType=tempMiddles[5].length+1}\r\n              }\r\n    \r\n              else if(tempCount===2) {\r\n                // do stuff in here to populate edges\r\n                tempType = \"edge\";\r\n                if(j === 0){\r\n                  if(k===_z-1){\r\n                    if(_x%2&&tempEdges[0][0].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][0].push(tempArr.length);\r\n                  }\r\n                  else if(i===_x-1){\r\n                    if(_x%2&&tempEdges[0][1].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][1].push(tempArr.length);\r\n                  }\r\n                  else if(k===0){\r\n                    if(_x%2&&tempEdges[0][2].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][2].push(tempArr.length);\r\n                  }\r\n                  else if(i===0){\r\n                    if(_x%2&&tempEdges[0][3].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][3].push(tempArr.length);\r\n                  }\r\n                } else if(j === _y-1){\r\n                  if(k===_z-1){\r\n                    if(_x%2&&tempEdges[1][0].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][0].push(tempArr.length);\r\n                  }\r\n                  else if(i===_x-1){\r\n                    if(_x%2&&tempEdges[1][1].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][1].push(tempArr.length);\r\n                  }\r\n                  else if(k===0){\r\n                    if(_x%2&&tempEdges[1][2].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][2].push(tempArr.length);\r\n                  }\r\n                  else if(i===0){\r\n                    if(_x%2&&tempEdges[1][3].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][3].push(tempArr.length);\r\n                  }\r\n                } else {\r\n                  if(k===_z-1 && i===0){\r\n                    if(_x%2&&tempEdges[2][0].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][0].push(tempArr.length);\r\n                  }\r\n                  else if(k===_z-1 && i===_x-1){\r\n                    if(_x%2&&tempEdges[2][1].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][1].push(tempArr.length);\r\n                  }\r\n                  else if(k===0 && i===_x-1){\r\n                    if(_x%2&&tempEdges[2][2].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][2].push(tempArr.length);\r\n                  }\r\n                  else if(k===0 && i===0){\r\n                    if(_x%2&&tempEdges[2][3].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][3].push(tempArr.length);\r\n                  }\r\n                }\r\n              }\r\n              else if(tempCount===3) {\r\n                tempType = \"corner\";\r\n                corners.push(tempArr.length);\r\n              }\r\n    \r\n              tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\r\n                            i,j,k, // Current position x,y,z\r\n                            i,j,k, // Solved position x,y,z\r\n                            tempType,\r\n                            edgeType,\r\n                            middleType\r\n                          ]);\r\n            }\r\n          }\r\n        }\r\n\r\n        // for(let i = 0; i < size-2; i++){\r\n        //   let row = [];\r\n        //   for(let j = 0; j < size-2; j++){\r\n        //     row.push(tempMiddles[3][i*(size-2)+j])\r\n        //   }\r\n        //   console.log(row);\r\n        // }\r\n        // Restructure last 3 middles for cubes 6x6 and greater\r\n        if(size >= 6){\r\n          let middleEdgeLength = size-2-1;\r\n          // loop through last 3 middles\r\n          for(let k = 3; k < 6; k++){\r\n            let middleCorners = [];\r\n            let middleRestructure = [];\r\n            let middleIndex = 0;\r\n\r\n            // generate empty arrays for each ring layer in middle\r\n            for(let i = 0; i < (half-1); i++) {\r\n              middleRestructure.push([]);\r\n            }\r\n            \r\n            // loop through each empty layer and populate\r\n            middleRestructure.forEach((layer,index) =>{\r\n              // treat 1d array as 2d matrix\r\n              for(let i = 0; i<= middleEdgeLength; i++){\r\n                for (let j = 0; j<= middleEdgeLength; j++){\r\n                  if((i===index||middleEdgeLength-i===index)\r\n                  &&(j>=index&&j<=middleEdgeLength-index)\r\n                  ){\r\n                    // pushes top row of ring\r\n                    ((j===0+index||j===middleEdgeLength-index)&&\r\n                      ((j<Math.ceil(middleEdgeLength/2)-1)||\r\n                      (j>Math.ceil(middleEdgeLength/2)+(size%2?1:0))))?\r\n                    middleCorners.push(tempMiddles[k][middleIndex]):\r\n                    layer.push(tempMiddles[k][middleIndex]);\r\n                  }\r\n                  else if((i>index&&middleEdgeLength-i>index)\r\n                  &&(j===index||j===middleEdgeLength-index)\r\n                  ){\r\n                    // pushes sides of ring\r\n                    layer.push(tempMiddles[k][middleIndex]);\r\n                  }\r\n                  else if(index===half-2&&i===j&&i===middleEdgeLength/2){\r\n                    // pushes last middle into center ring\r\n                    layer.push(tempMiddles[k][middleIndex]);\r\n                  }\r\n                  middleIndex+=1;\r\n                }\r\n              }\r\n              middleIndex=0;\r\n            });\r\n            let temp = middleRestructure[middleRestructure.length-1];\r\n            middleRestructure[middleRestructure.length-1]=middleCorners;\r\n            middleRestructure.push(temp);\r\n            middleRestructure.reverse();\r\n            //console.log(middleRestructure.flat(2));\r\n            tempMiddles[k] = middleRestructure.flat(2);\r\n          }\r\n        }\r\n\r\n        \r\n        for(let i = 0; i < 6; i++){\r\n          for(let j = 0; j < (_x-2)*(_x-2); j++){\r\n            middles.push(tempMiddles[i][j]);\r\n          }\r\n        }\r\n\r\n        for(let i = 0; i < 3; i++){\r\n          for(let j = 0; j < 4; j++){\r\n            edges.push(...tempEdges[i][j]);\r\n          }\r\n        }\r\n        return {tempArr,middles,edges,corners};\r\n    },\r\n\r\n    generateBlank : function (_x,_y,_z){\r\n      const size = _x;\r\n      const half = Math.floor(size/2);\r\n      const tempArr = [];\r\n      // const middles = [];\r\n      // const edges = [];\r\n      const corners = [];\r\n      const tempMiddles = [\r\n        [], // white\r\n        [], // yellow\r\n        [], // blue\r\n        [], // green\r\n        [], // orange\r\n        []  // red\r\n      ];\r\n      const tempEdges = [\r\n        [[],[],[],[]], // white edges\r\n        [[],[],[],[]], // middle edges\r\n        [[],[],[],[]]\r\n      ]\r\n  \r\n      for(let j = 0; j < _y; j++){      // Move back along the y-axis\r\n        for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\r\n          for(let i = 0; i < _x; i++){  // Traverse across the x-axis\r\n            let side0 = \"black\";\r\n            let side1 = \"black\";\r\n            let side2 = \"black\";\r\n            let side3 = \"black\";\r\n            let side4 = \"black\";\r\n            let side5 = \"black\";\r\n            let edgeType = null;\r\n            let middleType = null;\r\n              // if(i===_x-1) side2 = \"white\";\r\n              // else if (i===0) side4 =\"white\";\r\n              // if(j===_y-1) side3 = \"white\";\r\n              // else if (j===0) side0 =\"white\";\r\n              // if(k===_z-1) side1 = \"white\";\r\n              // else if (k===0) side5 =\"white\";\r\n              if(i===_x-1) side2 = \"red\";\r\n              else if (i===0) side4 =\"orange\";\r\n              if(j===_y-1) side3 = \"yellow\";\r\n              else if (j===0) side0 =\"white\";\r\n              if(k===_z-1) side1 = \"blue\";\r\n              else if (k===0) side5 =\"green\";\r\n              let tempCount = 0;\r\n              if(j===0 || j === _y-1) tempCount++;\r\n              if(k===0 || k === _z-1) tempCount++;\r\n              if(i===0 || i === _x-1) tempCount ++;\r\n              let tempType = \"none\";\r\n    \r\n              if(tempCount===1) {\r\n                tempType = \"middle\";\r\n                if(size%2){\r\n                  if((j===half&&k===half)||\r\n                     (j===half&&i===half)||\r\n                     (i===half&&k===half)){\r\n                    middleType=\"center\"\r\n                  }\r\n                }\r\n                if(j===0) {tempMiddles[0].push(tempArr.length);middleType=tempMiddles[0].length+1}\r\n                if(j===_y-1) {tempMiddles[1].push(tempArr.length);middleType=tempMiddles[1].length+1}\r\n                if(k===_z-1) {tempMiddles[2].push(tempArr.length);middleType=tempMiddles[2].length+1}\r\n                if(i===0) {tempMiddles[3].push(tempArr.length);middleType=tempMiddles[3].length+1}\r\n                if(k===0) {tempMiddles[4].push(tempArr.length);middleType=tempMiddles[4].length+1}\r\n                if(i===_x-1) {tempMiddles[5].push(tempArr.length);middleType=tempMiddles[5].length+1}\r\n              }\r\n    \r\n              else if(tempCount===2) {\r\n                // do stuff in here to populate edges\r\n                tempType = \"edge\";\r\n\r\n                if(j === 0){\r\n                  if(k===_z-1){\r\n                    if(_x%2&&tempEdges[0][0].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][0].push(tempArr.length);\r\n                  }\r\n                  else if(i===_x-1){\r\n                    if(_x%2&&tempEdges[0][1].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][1].push(tempArr.length);\r\n                  }\r\n                  else if(k===0){\r\n                    if(_x%2&&tempEdges[0][2].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][2].push(tempArr.length);\r\n                  }\r\n                  else if(i===0){\r\n                    if(_x%2&&tempEdges[0][3].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[0][3].push(tempArr.length);\r\n                  }\r\n                } else if(j === _y-1){\r\n                  if(k===_z-1){\r\n                    if(_x%2&&tempEdges[1][0].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][0].push(tempArr.length);\r\n                  }\r\n                  else if(i===_x-1){\r\n                    if(_x%2&&tempEdges[1][1].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][1].push(tempArr.length);\r\n                  }\r\n                  else if(k===0){\r\n                    if(_x%2&&tempEdges[1][2].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][2].push(tempArr.length);\r\n                  }\r\n                  else if(i===0){\r\n                    if(_x%2&&tempEdges[1][3].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[1][3].push(tempArr.length);\r\n                  }\r\n                } else {\r\n                  if(k===_z-1 && i===0){\r\n                    if(_x%2&&tempEdges[2][0].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][0].push(tempArr.length);\r\n                  }\r\n                  else if(k===_z-1 && i===_x-1){\r\n                    if(_x%2&&tempEdges[2][1].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][1].push(tempArr.length);\r\n                  }\r\n                  else if(k===0 && i===_x-1){\r\n                    if(_x%2&&tempEdges[2][2].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][2].push(tempArr.length);\r\n                  }\r\n                  else if(k===0 && i===0){\r\n                    if(_x%2&&tempEdges[2][3].length+1===Math.floor(_x/2)){\r\n                      edgeType=\"center\";\r\n                    }\r\n                    tempEdges[2][3].push(tempArr.length);\r\n                  }\r\n                }\r\n              }\r\n              else if(tempCount===3) {\r\n                tempType = \"corner\";\r\n                corners.push(tempArr.length);\r\n              }\r\n  \r\n            tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\r\n                          i,j,k, // Current position x,y,z\r\n                          i,j,k, // solved position x,y,z\r\n                          tempType,\r\n                          edgeType,\r\n                          middleType\r\n                        ]);\r\n          }\r\n        }\r\n      }\r\n      //console.log(tempArr);\r\n      return tempArr;\r\n    },\r\n\r\n    generateButtonData : function(size){\r\n        let numLayers = Math.floor(size/2);\r\n        let centerLayer = Math.ceil(size/2);\r\n        const faces = ['F','U','R','B','L','D'];\r\n        const buttons = {\r\n          center : [], // Center rotations\r\n          single : [], // Single layer\r\n          multi : []  // Multi layer\r\n        };\r\n\r\n        if(size%2)\r\n          buttons.center.push(\r\n            {clockwise: {name:\"C1\",data:[0,-1,centerLayer,false]},\r\n             counter: {name:\"C1'\",data:[0,0,centerLayer,false]}},\r\n            {clockwise: {name:\"C2\",data:[1,-1,centerLayer,false]},\r\n            counter: {name:\"C2'\",data:[1,0,centerLayer,false]}},\r\n            {clockwise: {name:\"C3\",data:[2,-1,centerLayer,false]},\r\n            counter: {name:\"C3'\",data:[2,0,centerLayer,false]}}\r\n          )\r\n\r\n        for (let i = 0; i < numLayers; i++){\r\n          for(let j = 0; j < faces.length; j++){\r\n            let baseNameSingle = ((i<10? \"0\" : \"\") + (i+1) + faces[j]);\r\n            let baseNameMulti = ((i<10? \"0\" : \"\") + (i+1) + faces[j].toLowerCase());\r\n\r\n            buttons.single.push({\r\n              clockwise: {face:faces[j], name:baseNameSingle, data:[j,-1,i+1,false]},\r\n              counter: {face:faces[j], name:baseNameSingle+\"'\",data:[j,0,i+1,false]}\r\n            });\r\n            if(i>0){\r\n              buttons.multi.push({\r\n                clockwise: {face:faces[j],name:baseNameMulti, data:[j,-1,i+1,true]},\r\n                counter: {face:faces[j],name:baseNameMulti+\"'\",data:[j,0,i+1,true]}\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        return buttons;\r\n    },\r\n\r\n    generateMoveHints : function(image,cD){\r\n      const groups = [[],[],[],[],[],[]];\r\n      const geometry = new THREE.PlaneGeometry(1,1);\r\n      const material = new THREE.MeshBasicMaterial( {\r\n        map:image,\r\n        transparent: true,\r\n        color: 'black',\r\n        opacity:'.8',\r\n        side: THREE.DoubleSide\r\n      });\r\n\r\n      for(let k = 0; k < cD; k++){\r\n        let tempGroup = new THREE.Group();\r\n        let tempGroupOther = new THREE.Group();\r\n        for(let i = 0; i < 4; i++){\r\n          for(let j = 0; j<cD;j++){\r\n            let tempPlane = new THREE.Mesh( geometry, material );\r\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\r\n            if(i===0){\r\n              tempPlane.translateX(cD-1-k);\r\n              tempPlane.translateZ((cD-1)+.51);\r\n              tempPlane.translateY((cD-1)-j);\r\n  \r\n              tempPlaneOther.translateX(cD-1-k);\r\n              tempPlaneOther.translateZ((cD-1)+.51);\r\n              tempPlaneOther.translateY((cD-1)-j);\r\n              tempPlaneOther.rotateZ(Math.PI);\r\n            }\r\n            else if(i===1){\r\n              tempPlane.translateX(cD-1-k);\r\n              tempPlane.translateZ((cD-1)-j);\r\n              tempPlane.translateY((cD-1)+.51);\r\n              tempPlane.rotateX(Math.PI/2);\r\n              tempPlane.rotateZ(Math.PI);\r\n  \r\n              tempPlaneOther.translateX(cD-1-k);\r\n              tempPlaneOther.translateZ((cD-1)-j);\r\n              tempPlaneOther.translateY((cD-1)+.51);\r\n              tempPlaneOther.rotateX(Math.PI/2);\r\n            }\r\n            else if(i===2){\r\n              tempPlane.translateX(cD-1-k);\r\n              tempPlane.translateZ(-.51);\r\n              tempPlane.translateY((cD-1)-j);\r\n              tempPlane.rotateX(Math.PI);\r\n  \r\n              tempPlaneOther.translateX(cD-1-k);\r\n              tempPlaneOther.translateZ(-.51);\r\n              tempPlaneOther.translateY((cD-1)-j);\r\n            }\r\n            else if(i===3){\r\n              tempPlane.translateX(cD-1-k);\r\n              tempPlane.translateZ((cD-1)-j);\r\n              tempPlane.translateY(-.51);\r\n              tempPlane.rotateX(-Math.PI/2);\r\n              tempPlane.rotateZ(Math.PI);\r\n  \r\n              tempPlaneOther.translateX(cD-1-k);\r\n              tempPlaneOther.translateZ((cD-1)-j);\r\n              tempPlaneOther.translateY(-.51);\r\n              tempPlaneOther.rotateX(-Math.PI/2);\r\n            }\r\n            tempGroup.add(tempPlane)\r\n            tempGroupOther.add(tempPlaneOther)\r\n          }\r\n        }\r\n        tempGroup.visible = false;\r\n        tempGroupOther.visible = false;\r\n        groups[2].push(tempGroup);\r\n        groups[5].push(tempGroupOther);\r\n      }\r\n  \r\n      // generate side 0 and 3 move hints\r\n      for(let k = 0; k < cD; k++){\r\n        let tempGroup = new THREE.Group();\r\n        let tempGroupOther = new THREE.Group();\r\n        for(let i = 0; i < 4; i++){\r\n          for(let j = 0; j<cD;j++){\r\n            let tempPlane = new THREE.Mesh( geometry, material );\r\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\r\n            if(i===0){\r\n              tempPlane.translateX((cD-1)-j);\r\n              tempPlane.translateZ((cD-1)+.51);\r\n              tempPlane.translateY(k);\r\n              tempPlane.rotateZ(-Math.PI/2);\r\n              \r\n  \r\n              tempPlaneOther.translateX((cD-1)-j);\r\n              tempPlaneOther.translateZ((cD-1)+.51);\r\n              tempPlaneOther.translateY(k);\r\n              tempPlaneOther.rotateX(Math.PI);\r\n              tempPlaneOther.rotateZ(Math.PI/2);\r\n            }\r\n            else if(i===1){\r\n              tempPlane.translateX((cD-1)+.51);\r\n              tempPlane.translateZ((cD-1)-j);\r\n              tempPlane.translateY(k);\r\n              tempPlane.rotateX(Math.PI/2);\r\n              tempPlane.rotateZ(Math.PI);\r\n              tempPlane.rotateY(Math.PI/2);\r\n  \r\n              tempPlaneOther.translateX((cD-1)+.51);\r\n              tempPlaneOther.translateZ((cD-1)-j);\r\n              tempPlaneOther.translateY(k);\r\n              tempPlaneOther.rotateX(Math.PI/2);\r\n              tempPlaneOther.rotateY(Math.PI/2);\r\n            }\r\n            else if(i===2){\r\n              tempPlane.translateX((cD-1)-j);\r\n              tempPlane.translateZ(-.51);\r\n              tempPlane.translateY(k);\r\n              tempPlane.rotateX(Math.PI);\r\n              tempPlane.rotateZ(Math.PI/2);\r\n  \r\n              tempPlaneOther.translateX((cD-1)-j);\r\n              tempPlaneOther.translateZ(-.51);\r\n              tempPlaneOther.translateY(k);\r\n              tempPlaneOther.rotateZ(-Math.PI/2);\r\n            }\r\n            else if(i===3){\r\n              tempPlane.translateX(-.51);\r\n              tempPlane.translateZ((cD-1)-j);\r\n              tempPlane.translateY(k);\r\n              tempPlane.rotateX(-Math.PI/2);\r\n              tempPlane.rotateZ(Math.PI);\r\n              tempPlane.rotateY(-Math.PI/2);\r\n  \r\n              tempPlaneOther.translateX(-.51);\r\n              tempPlaneOther.translateZ((cD-1)-j);\r\n              tempPlaneOther.translateY(k);\r\n              tempPlaneOther.rotateX(-Math.PI/2);\r\n              tempPlaneOther.rotateY(Math.PI/2);\r\n              //tempPlaneOther.rotateZ(Math.PI);\r\n            }\r\n            tempGroup.add(tempPlane)\r\n            tempGroupOther.add(tempPlaneOther)\r\n          }\r\n        }\r\n        tempGroup.visible = false;\r\n        tempGroupOther.visible = false;\r\n        \r\n        groups[0].push(tempGroup);     //Clockwise for white, counter for yellow\r\n        groups[3].push(tempGroupOther);//Counter for white, clockwise for yellow\r\n      }\r\n  \r\n      // generate side 1 and 5 move hints\r\n      for(let k = 0; k < cD; k++){\r\n        let tempGroup = new THREE.Group();\r\n        let tempGroupOther = new THREE.Group();\r\n        for(let i = 0; i < 4; i++){\r\n          for(let j = 0; j<cD;j++){\r\n            let tempPlane = new THREE.Mesh( geometry, material );\r\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\r\n            if(i===0){\r\n              tempPlane.translateX((cD-1)-j);\r\n              tempPlane.translateZ((cD-1)-k);\r\n              tempPlane.translateY((cD-1)+.51);\r\n              tempPlane.rotateZ(-Math.PI/2);\r\n              tempPlane.rotateY(Math.PI/2);\r\n              \r\n  \r\n              tempPlaneOther.translateX((cD-1)-j);\r\n              tempPlaneOther.translateZ((cD-1)-k);\r\n              tempPlaneOther.translateY((cD-1)+.51);\r\n              tempPlaneOther.rotateX(Math.PI);\r\n              tempPlaneOther.rotateZ(Math.PI/2);\r\n              tempPlaneOther.rotateY(Math.PI/2);\r\n            }\r\n            else if(i===1){\r\n              tempPlane.translateX((cD-1)+.51);\r\n              tempPlane.translateZ((cD-1)-k);\r\n              tempPlane.translateY((cD-1)-j);\r\n              //tempPlane.rotateX(Math.PI/2);\r\n              tempPlane.rotateZ(Math.PI);\r\n              tempPlane.rotateY(Math.PI/2);\r\n  \r\n              tempPlaneOther.translateX((cD-1)+.51);\r\n              tempPlaneOther.translateZ((cD-1)-k);\r\n              tempPlaneOther.translateY((cD-1)-j);\r\n              //tempPlaneOther.rotateX(Math.PI);\r\n              tempPlaneOther.rotateY(Math.PI/2);\r\n            }\r\n            else if(i===2){\r\n              tempPlane.translateX((cD-1)-j);\r\n              tempPlane.translateZ((cD-1)-k);\r\n              tempPlane.translateY(-.51);\r\n              tempPlane.rotateX(Math.PI/2);\r\n              tempPlane.rotateZ(Math.PI/2);\r\n  \r\n              tempPlaneOther.translateX((cD-1)-j);\r\n              tempPlaneOther.translateZ((cD-1)-k);\r\n              tempPlaneOther.translateY(-.51);\r\n              tempPlaneOther.rotateX(Math.PI/2);\r\n              tempPlaneOther.rotateZ(-Math.PI/2);\r\n            }\r\n            else if(i===3){\r\n              tempPlane.translateX(-.51);\r\n              tempPlane.translateZ((cD-1)-k);\r\n              tempPlane.translateY((cD-1)-j);\r\n              tempPlane.rotateX(Math.PI);\r\n              tempPlane.rotateZ(Math.PI);\r\n              tempPlane.rotateY(-Math.PI/2);\r\n  \r\n              tempPlaneOther.translateX(-.51);\r\n              tempPlaneOther.translateZ((cD-1)-k);\r\n              tempPlaneOther.translateY((cD-1)-j);\r\n              tempPlaneOther.rotateX(-Math.PI);\r\n              tempPlaneOther.rotateY(Math.PI/2);\r\n              //tempPlaneOther.rotateZ(Math.PI);\r\n            }\r\n            tempGroup.add(tempPlane)\r\n            tempGroupOther.add(tempPlaneOther)\r\n          }\r\n        }\r\n        tempGroup.visible = false;\r\n        tempGroupOther.visible = false;\r\n        \r\n        groups[1].push(tempGroup);     //Clockwise for white, counter for yellow\r\n        groups[4].push(tempGroupOther);//Counter for white, clockwise for yellow\r\n      }\r\n      return groups;\r\n    },\r\n\r\n    // For visual cube\r\n    rotatePoint : function (c1,c2,direction,p1,p2,rotation){\r\n        let theta = rotation*Math.PI/180;\r\n        if(direction < 0) theta*=-1; \r\n        return { p1 : (Math.cos(theta) * (p1-c1) - Math.sin(theta) * (p2-c2) + c1),\r\n                 p2 : (Math.sin(theta) * (p1-c1) + Math.cos(theta) * (p2-c2) + c2)}\r\n    },\r\n\r\n    // rotate pieces attached to face (visual cube)\r\n    /**\r\n     * \r\n     * Possible Optimization!\r\n     * \r\n     * Instead of turning each piece individually,\r\n     * group the pieces to be turned and then turn the group.\r\n     * - Pros\r\n     *    - Less Code\r\n     *    - Easier on the renderer\r\n     * \r\n     * - Cons\r\n     *    - Not sure where to attempt implementation\r\n     * \r\n     * Development Stage: Trial\r\n     * \r\n     * - Resources\r\n     *    - https://jsfiddle.net/of1vfhzz/1/\r\n     *    - https://stackoverflow.com/questions/37779104/how-can-i-rotate-around-the-center-of-a-group-in-three-js\r\n     */\r\n    rotatePieces : function (rotate,tempCubes,state,setState){\r\n\r\n      // state variables asigned for shorter names\r\n      let centerPoint = state.cubeDimension/2-.5;\r\n      let cubes = state.cubes;\r\n      let turnDirection = state.turnDirection;\r\n      let speed = state.speed;\r\n      let start = state.start;\r\n      let face = state.face;\r\n      let cubeDepth = state.cubeDepth;\r\n      let isMulti = state.isMulti;\r\n\r\n      \r\n      //Rotate white center piece Face\r\n      if(face === 0){\r\n        for(let i = 0; i<state.rubiksObject.length;i++){\r\n\r\n          //implement isMulti for all of these comparisons\r\n          if((isMulti || cubes[i].position.y > cubeDepth-2) && cubes[i].position.y < cubeDepth){\r\n            \r\n            // Turn piece based on rotation direction\r\n            turnDirection<0 ? cubes[i].rotation.y += .1745*speed/10 : cubes[i].rotation.y -= .1745*speed/10;\r\n\r\n            // Calculate circular movement\r\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.z,speed);\r\n\r\n            // corrects rounding errors\r\n            if(start % 90 === 0){\r\n              newPoint.p1 = Math.round(newPoint.p1);\r\n              newPoint.p2 = Math.round(newPoint.p2);\r\n            }\r\n            \r\n            // set new locations for face 0\r\n            cubes[i].position.x = newPoint.p1;\r\n            cubes[i].position.z = newPoint.p2;\r\n          }\r\n        }     \r\n      }\r\n      // blue\r\n      if(face === 1){\r\n        for(let i = 0; i<state.rubiksObject.length;i++){\r\n          if((isMulti || cubes[i].position.z < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.z > state.cubeDimension - 1 - cubeDepth){\r\n            turnDirection<0 ? cubes[i].rotation.z -= .1745*speed/10 : cubes[i].rotation.z += .1745*speed/10;\r\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.y,10*speed/10);\r\n            if(start % 90 === 0){\r\n              newPoint.p1 = Math.round(newPoint.p1);\r\n              newPoint.p2 = Math.round(newPoint.p2);\r\n            }\r\n            cubes[i].position.x = newPoint.p1;\r\n            cubes[i].position.y = newPoint.p2;\r\n          }\r\n        }\r\n      }\r\n      // red\r\n      if(face === 2){\r\n        for(let i = 0; i<state.rubiksObject.length;i++){\r\n          if((isMulti || tempCubes[i].position.x < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.x > state.cubeDimension - 1 - cubeDepth){\r\n            turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\r\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);\r\n            if(start % 90 === 0){\r\n              newPoint.p1 = Math.round(newPoint.p1);\r\n              newPoint.p2 = Math.round(newPoint.p2);\r\n            }\r\n            tempCubes[i].position.y = newPoint.p1;\r\n            tempCubes[i].position.z = newPoint.p2;\r\n          }\r\n        }\r\n      }\r\n      // yellow\r\n      if(face === 3){\r\n        for(let i = 0; i<state.rubiksObject.length;i++){\r\n          if((isMulti || tempCubes[i].position.y < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.y > state.cubeDimension - 1 - cubeDepth){\r\n            turnDirection<0 ? tempCubes[i].rotation.y += .1745*speed/10 : tempCubes[i].rotation.y -= .1745*speed/10;\r\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.z,10*speed/10);\r\n            if(start % 90 === 0){\r\n              newPoint.p1 = Math.round(newPoint.p1);\r\n              newPoint.p2 = Math.round(newPoint.p2);\r\n            }\r\n            tempCubes[i].position.x = newPoint.p1;\r\n            tempCubes[i].position.z = newPoint.p2;\r\n          }\r\n        }\r\n      }\r\n      // orange\r\n      if(face === 4){\r\n        for(let i = 0; i<state.rubiksObject.length;i++){\r\n          if((isMulti || tempCubes[i].position.x > cubeDepth-2) && cubes[i].position.x < cubeDepth){\r\n            turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\r\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);              \r\n            if(start % 90 === 0){\r\n              newPoint.p1 = Math.round(newPoint.p1);\r\n              newPoint.p2 = Math.round(newPoint.p2);\r\n            }\r\n            tempCubes[i].position.y = newPoint.p1;\r\n            tempCubes[i].position.z = newPoint.p2;\r\n          }\r\n        }\r\n      }\r\n      // green\r\n      if(face === 5){\r\n        for(let i = 0; i<state.rubiksObject.length;i++){\r\n          if((isMulti || tempCubes[i].position.z > cubeDepth-2) && cubes[i].position.z < cubeDepth){\r\n            turnDirection<0 ? tempCubes[i].rotation.z -= .1745*speed/10 : tempCubes[i].rotation.z += .1745*speed/10;\r\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.y,10*speed/10);\r\n            if(start % 90 === 0){\r\n              newPoint.p1 = Math.round(newPoint.p1);\r\n              newPoint.p2 = Math.round(newPoint.p2);\r\n            }\r\n            tempCubes[i].position.x = newPoint.p1;\r\n            tempCubes[i].position.y = newPoint.p2;\r\n          }\r\n        }\r\n      } \r\n\r\n      return {start : start+speed,reload : true};\r\n    },\r\n    \r\n    // For memory cube\r\n    rotatePoint2 : function (c1,c2,direction,p1,p2){\r\n        let theta = Math.PI/2;\r\n        if(direction < 0) theta*=-1; \r\n        return { p1 : (- Math.sin(theta) * (p2-c2) + c1),\r\n                 p2 :   (Math.sin(theta) * (p1-c1) + c2)}\r\n    },\r\n\r\n    // Memory cube rotation (only rotates by 90 degrees at a time)\r\n    rotateFace : function (cubeFace,direction,cubeDepth,isMulti,cD,object){\r\n      let cubeDimension = cD;\r\n      let centerPoint = cD/2-.5;\r\n      let rubiksObject = [...object];\r\n      let degrees = 90;\r\n  \r\n      if(direction < 0)  degrees *=-1;\r\n  \r\n      // Side 0 (white center piece)\r\n      if (cubeFace === 0){ \r\n          for(let i = 0; i < rubiksObject.length; i++){\r\n  \r\n              // white side is y===0.\r\n              if ((isMulti || rubiksObject[i][7] > cubeDepth-2) &&\r\n                  rubiksObject[i][7] < cubeDepth){\r\n  \r\n                  // Rotate rubiksObject pieces to new location generated by rotatePoint2\r\n                  let newPoint = cube.rotatePoint2(centerPoint,\r\n                                                   centerPoint,\r\n                                                   degrees,\r\n                                                   rubiksObject[i][6],\r\n                                                   rubiksObject[i][8]);\r\n                  rubiksObject[i][6] = newPoint.p1;\r\n                  rubiksObject[i][8] = newPoint.p2;\r\n  \r\n                  // Unfortunately chunky\r\n                  // Swaps colors around on the face to match rotations\r\n                  if(direction === 0){\r\n                      let tempFace = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = tempFace;\r\n                  } else {\r\n                      let tempFace = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = tempFace;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  \r\n      // Side 1 (blue center piece)\r\n      if (cubeFace === 1){\r\n          for(let i = 0; i < rubiksObject.length; i++){\r\n              if ((isMulti || rubiksObject[i][8] < cubeDimension+1-cubeDepth) &&\r\n                  rubiksObject[i][8]>cubeDimension-1-cubeDepth){\r\n                  let newPoint = cube.rotatePoint2(centerPoint,\r\n                                                   centerPoint,\r\n                                                   degrees,\r\n                                                   rubiksObject[i][6],\r\n                                                   rubiksObject[i][7]);\r\n                  rubiksObject[i][6] = newPoint.p1;\r\n                  rubiksObject[i][7] = newPoint.p2;\r\n                  if(direction === 0){\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = tempFace;\r\n                  } else {\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = tempFace;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      // Side 2 (red center piece)\r\n      if (cubeFace === 2){\r\n          for(let i = 0; i < rubiksObject.length; i++){\r\n              if ((isMulti || rubiksObject[i][6] < cubeDimension+1-cubeDepth) &&\r\n                  rubiksObject[i][6]>cubeDimension-1-cubeDepth){\r\n                  let newPoint = cube.rotatePoint2(centerPoint,\r\n                                                   centerPoint,\r\n                                                   degrees,\r\n                                                   rubiksObject[i][7],\r\n                                                   rubiksObject[i][8]);\r\n                  rubiksObject[i][7] = newPoint.p1;\r\n                  rubiksObject[i][8] = newPoint.p2;\r\n                  if(direction === 0){\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = tempFace;\r\n                  } else {\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = tempFace;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      // Side 3 (yellow center piece)\r\n      if (cubeFace === 3){\r\n          for(let i = 0; i < rubiksObject.length; i++){\r\n              if ((isMulti || rubiksObject[i][7] < cubeDimension+1-cubeDepth) && rubiksObject[i][7]>cubeDimension-1-cubeDepth){\r\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][8]);\r\n                  rubiksObject[i][6] = newPoint.p1;\r\n                  rubiksObject[i][8] = newPoint.p2;\r\n                  if(direction === -1){\r\n                      let tempFace = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = tempFace;\r\n                  } else {\r\n                      let tempFace = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = tempFace;\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      // Side 4 (orange center piece)\r\n      if (cubeFace === 4){\r\n          for(let i = 0; i < rubiksObject.length; i++){\r\n              if ((isMulti || rubiksObject[i][6] > cubeDepth-2) && rubiksObject[i][6] < cubeDepth){\r\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][7],rubiksObject[i][8]);\r\n                  rubiksObject[i][7] = newPoint.p1;\r\n                  rubiksObject[i][8] = newPoint.p2;\r\n                  if(direction === -1){\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = tempFace;\r\n                  } else {\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][5];\r\n                      rubiksObject[i][5] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][1];\r\n                      rubiksObject[i][1] = tempFace;\r\n                  }\r\n              }\r\n          } \r\n      }\r\n      // Side 5 (green center piece)\r\n      if (cubeFace === 5){\r\n          for(let i = 0; i < rubiksObject.length; i++){\r\n              if ((isMulti || rubiksObject[i][8] > cubeDepth-2) && rubiksObject[i][8] < cubeDepth){\r\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][7]);\r\n                  rubiksObject[i][6] = newPoint.p1;\r\n                  rubiksObject[i][7] = newPoint.p2;\r\n                  if(direction === -1){\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = tempFace;\r\n                  } else {\r\n                      let tempFace = rubiksObject[i][3];\r\n                      rubiksObject[i][3] = rubiksObject[i][2];\r\n                      rubiksObject[i][2] = rubiksObject[i][0];\r\n                      rubiksObject[i][0] = rubiksObject[i][4];\r\n                      rubiksObject[i][4] = tempFace;\r\n                  }\r\n              }\r\n          } \r\n      }\r\n  \r\n      return rubiksObject;\r\n    },\r\n\r\n    // Changes values in state to trigger face rotation\r\n    rotateCubeFace : function (face,direction,cubeDepth,isMulti,blockMoveLog,moveLog,solveMoves,end,solveState) {\r\n    let obj = {};\r\n    if(!blockMoveLog){\r\n      \r\n      let tempMove = \"\";\r\n      cubeDepth<10 ? tempMove+=\"0\"+cubeDepth : tempMove += cubeDepth;\r\n      if(face === 0) !isMulti ? tempMove += \"F\" : tempMove += \"f\";\r\n      else if(face === 1) !isMulti ? tempMove += \"U\" : tempMove += \"u\";\r\n      else if(face === 2) !isMulti ? tempMove += \"R\" : tempMove += \"r\";\r\n      else if(face === 3) !isMulti ? tempMove += \"B\" : tempMove += \"b\";\r\n      else if(face === 4) !isMulti ? tempMove += \"L\" : tempMove += \"l\";\r\n      else if(face === 5) !isMulti ? tempMove += \"D\" : tempMove += \"d\";\r\n      if(direction === -1) tempMove += \"'\";\r\n\r\n      moveLog&&moveLog.length > 0 ?\r\n        obj.moveLog = (moveLog + \" \" + tempMove) :\r\n        obj.moveLog = (tempMove);\r\n      \r\n      // Keeps tracks of solver's moves\r\n      if(solveState > -1) \r\n        obj.solveMoves = (solveMoves.length ? solveMoves + \" \" + tempMove : solveMoves + tempMove);\r\n    }\r\n\r\n    // Faces on opposite side of cube rotate backwards\r\n    if(face>2 && direction === -1) direction = 0;\r\n\r\n    else if (face>2 && direction === 0) direction = -1;\r\n\r\n    obj.blockMoveLog = false;\r\n    obj.face = face; // used\r\n    obj.turnDirection = direction; // used\r\n    obj.end = end + 90; \r\n    obj.cubeDepth = cubeDepth; // used\r\n    obj.isMulti = isMulti; // used\r\n    \r\n\r\n    return obj;\r\n  }\r\n}\r\n\r\nexport default cube;","// Generalized move function. Takes in array of moves and parse the moves\r\nconst moveFuncs = {\r\n    parseMoveArray : function(moveArray) {\r\n        //if(typeof moveArray === 'string') moveArray = [moveArray];\r\n        let shifted = moveArray.shift();\r\n\r\n        let tempFace = 0;\r\n        let tempDirection = -1;\r\n        let tempDepth = 1;\r\n        let tempIsMulti = false;\r\n\r\n        if(shifted){\r\n        if(shifted.length === 4) tempDirection=0;\r\n        tempDepth = parseInt(shifted.slice(0,2));\r\n\r\n        if(shifted.slice(2,3) === shifted.slice(2,3).toLowerCase()){\r\n            tempIsMulti = true;\r\n        }\r\n\r\n        if(shifted.slice(2,3).toUpperCase() === \"U\") tempFace = 1;\r\n        else if(shifted.slice(2,3).toUpperCase() === \"F\") tempFace = 0;\r\n        else if(shifted.slice(2,3).toUpperCase() === \"B\") tempFace = 3;\r\n        else if(shifted.slice(2,3).toUpperCase() === \"R\") tempFace = 2;\r\n        else if(shifted.slice(2,3).toUpperCase() === \"L\") tempFace = 4;\r\n        else if(shifted.slice(2,3).toUpperCase() === \"D\") tempFace = 5;\r\n\r\n        return [tempFace,tempDirection,tempDepth,tempIsMulti];\r\n        }\r\n    },\r\n\r\n    convertDataToMove : function(data) {\r\n        let move = \"\";\r\n        let face = ['F','U','R','B','L','D']\r\n        move+=data[2].toString().length<2?\"0\".concat(data[2]):data[2];\r\n        move+=(data[3]?face[data[0]].toLowerCase():face[data[0]])\r\n        data[1]===-1?move+=\"\":move+=\"'\"\r\n        return move;\r\n    },\r\n\r\n    convertMoveToData : function (move) {\r\n        if(move.length < 2) return false;\r\n        let data = [];\r\n        let face = ['F','U','R','B','L','D']\r\n        data.push(face.indexOf(move[2].toUpperCase()));\r\n        move.length < 4 ? data.push(-1) : data.push(0);\r\n        move[0]==='0' ? data.push(parseInt(move[1])) : data.push(parseInt(move.substring(0, 2)))\r\n        move[2].toUpperCase() === move[2] ? data.push(false) : data.push(true);\r\n        return data;\r\n    },\r\n\r\n    // Converts move string to move array\r\n    // handle move short hand characters. ex: fx => 01Fx 02Fx; x = \"\" or \"'\" or \"2\"\r\n    moveStringToArray : function (str) {\r\n        let tempArray = str.split(\" \");\r\n        let moveArray = [];\r\n\r\n        // Run through split string and create duplicates where needed\r\n        // Handle other short hands\r\n        for(let i = 0; i < tempArray.length;i++){\r\n            if(tempArray[i].length === 4 && tempArray[i].slice(3,4)===\"2\") {\r\n                let tempMove = tempArray[i].slice(0,3);\r\n                moveArray.push(tempMove);\r\n                moveArray.push(tempMove);\r\n            }\r\n            else {\r\n                moveArray.push(tempArray[i]);\r\n            }\r\n        }\r\n        return moveArray;\r\n    },\r\n\r\n    // generate a random move\r\n    generateMove : function (size) {\r\n        let maxDepth = Math.ceil(size/2);\r\n        let randFace = Math.floor(Math.random() * 6);\r\n        let randTurn = Math.floor((Math.random() * 2)-1);\r\n        let randIsMulti = Math.floor(Math.random() * 2);\r\n        let randDepth = 1;\r\n    \r\n        if(randFace>2&&size%2) maxDepth-=1;\r\n    \r\n        if(size>2) \r\n          randDepth = Math.floor((Math.random() * maxDepth)) + 1;\r\n    \r\n        if(randDepth===1) randIsMulti = 0;\r\n    \r\n        if(randDepth === Math.ceil(size/2) && size%2)\r\n          randIsMulti=0;\r\n    \r\n        return moveFuncs.convertDataToMove([randFace, randTurn,randDepth,randIsMulti]);\r\n    },\r\n\r\n    // returns a move's equivalent other move, \r\n    // ex: (on a 3x3) 03F === 01B'\r\n    // equivalentMove(\"03F\") => \"01B'\"\r\n    equivalentMove(_move,size){\r\n        const move =_move.split('');\r\n        let inverted = '';\r\n        let depth;\r\n        if(move[0]==='0'){\r\n          depth = size - parseInt(move[1]) + 1;\r\n        }\r\n        else{\r\n          depth = size - parseInt(move[0]+move[1]) + 1;\r\n        }\r\n    \r\n        if(depth<10){\r\n          inverted+=`0${depth}`\r\n        }\r\n        else{\r\n          inverted+=`${depth}`\r\n        }\r\n    \r\n        switch(move[2]){\r\n          case 'F':\r\n            inverted+='B';\r\n            break;\r\n          case 'f':\r\n            inverted+='b';\r\n            break;\r\n          case 'U':\r\n            inverted+='D';\r\n            break;\r\n          case 'u':\r\n            inverted+='d';\r\n            break;\r\n          case 'R':\r\n            inverted+='L';\r\n            break;\r\n          case 'r':\r\n            inverted+='l';\r\n            break;\r\n          case 'B':\r\n            inverted+='F';\r\n            break;\r\n          case 'b':\r\n            inverted+='f';\r\n            break;\r\n          case 'L':\r\n            inverted+='R';\r\n            break;\r\n          case 'l':\r\n            inverted+='r';\r\n            break;\r\n          case 'D':\r\n            inverted+='U';\r\n            break;\r\n          case 'd':\r\n            inverted+='u';\r\n            break;\r\n          default:\r\n        }\r\n    \r\n        if(move.length<4) inverted+=\"'\";\r\n        return inverted;\r\n        \r\n    },\r\n\r\n    // Compares dragged move with the next move in algorithm or solver\r\n    checkMoveEquivalence(dragMove,nextMove,size){\r\n        if(nextMove.toLowerCase()===nextMove){\r\n            if(dragMove.toLowerCase().slice(2)===nextMove.slice(2)){\r\n                if(parseInt(dragMove.slice(0,2))<=parseInt(nextMove.slice(0,2)))\r\n                return true;\r\n            }\r\n            else if(moveFuncs.equivalentMove(dragMove,size).toLowerCase().slice(2)===nextMove.slice(2)){\r\n                if(parseInt(moveFuncs.equivalentMove(dragMove,size).slice(0,2))<=parseInt(nextMove.slice(0,2)))\r\n                return true;\r\n            }\r\n        }\r\n        if(dragMove===nextMove||moveFuncs.equivalentMove(dragMove,size)===nextMove){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default moveFuncs;","import solver from '../solvers/solver';\r\nimport cube from '../cubeFunctions/cube';\r\nimport moveFuncs from '../cubeFunctions/move';\r\n\r\nfunction generateAllSolveMoves(state,rubiksObject){\r\n    let beforeObject = rubiksObject.map(e=>[...e]);\r\n    let tempState = {...state}, solvedSet = \"\";\r\n    let currentIndex = null;\r\n    let previousIndex = null;\r\n    let indexOccurence = 0;\r\n    let error = false;\r\n    let counter = 0;\r\n    let threeByThreeCounter = 0;\r\n    if(tempState.currentFunc === 'Color Picker'){\r\n      tempState.solveState = 0;\r\n      tempState.currentFunc = \"Solving\";\r\n      tempState.rubiksObject = rubiksObject.map(e=>[...e]);\r\n    }\r\n    while(tempState.currentFunc===\"Solving\"){\r\n      \r\n      if(!tempState.moveSet || !tempState.moveSet.length) {\r\n        //console.log(tempState.rubiksIndex);\r\n        currentIndex=tempState.rubiksIndex;\r\n        if(currentIndex===previousIndex) indexOccurence = indexOccurence+1;\r\n        else indexOccurence = 0;\r\n        if(tempState.solveState>=1) threeByThreeCounter++;\r\n        let moves;\r\n\r\n        moves = solver(tempState.solveState,tempState.rubiksObject,tempState.cubeDimension,moveFuncs.moveStringToArray,\r\n          tempState.solveMoves,tempState.rubiksIndex,tempState.middles,tempState.edges,tempState.corners);\r\n        if (!moves) moves = {};\r\n        if(moves.moveSet && moves.moveSet[0]==='stop'){\r\n          if(tempState.currentFunc===\"Solving\"){\r\n            moves.solveMoves = tempState.solveMoves + ` ${moves.moveSet[0]}`;\r\n            moves.moveSet.pop();\r\n          }\r\n          else moves.moveSet.pop();\r\n        }\r\n        \r\n        if(moves.moveSet){\r\n          let temp = [];\r\n          for(let i = 0; i<moves.moveSet.length; i++){\r\n            \r\n            if(moves.moveSet[i]===''||moves.moveSet[i]===' '||moves.moveSet[i][0]===\"N\"||moves.moveSet[i]===\"'\");\r\n            else temp.push(moves.moveSet[i]);\r\n          }\r\n          moves.moveSet = temp;\r\n        }\r\n        if(threeByThreeCounter>500) {\r\n          error = true;\r\n          //console.log(tempState.solveState);\r\n          moves.currentFunc=\"None\";\r\n        }\r\n        else if((indexOccurence>10 && tempState.solveState<1)||counter>10000||(moves.moveSet&&moves.moveSet[0]==='error')) {\r\n\r\n          console.log(\r\n            \"Solve State: \",tempState.solveState,\r\n            \"\\nPiece attempts: \",indexOccurence,\r\n            \"\\nPiece: \",tempState.rubiksObject[tempState.middles[tempState.rubiksIndex]]\r\n          );\r\n          \r\n          console.log(moves);\r\n          error = true;\r\n          //console.log(JSON.stringify({beforeObject}));\r\n          moves.currentFunc=\"None\";\r\n        }\r\n        if(moves.currentFunc && moves.currentFunc===\"None\") solvedSet = tempState.solveMoves;\r\n        counter++;\r\n        tempState = {...tempState,...moves};\r\n        previousIndex=currentIndex;\r\n      }\r\n      else{\r\n        let cD = tempState.cubeDimension;\r\n        let blockMoveLog = tempState.blockMoveLog;\r\n        let moveLog = tempState.moveLog;\r\n        let solveMoves = tempState.solveMoves;\r\n        let rubiksObject = tempState.rubiksObject;\r\n        let end = tempState.end;\r\n        let solveState = tempState.solveState;\r\n        let moveData = moveFuncs.parseMoveArray(tempState.moveSet); // generates data for next move\r\n        let obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\r\n        obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\r\n        tempState = {...tempState,...obj};\r\n      }\r\n    }\r\n    let splitSet = solvedSet.split(\" \");\r\n    if(splitSet[0][0]===\"N\"||splitSet[0][0]===\"'\") splitSet.shift();\r\n    let moveSet = []\r\n    splitSet.forEach(e => e[e.length-1]===\"'\"? moveSet.push(e.replace(\"'\",\"\")):moveSet.push(e+\"'\"));\r\n\r\n    for(let i = 0; i<moveSet.length; i++){\r\n      if(moveSet[i]===''||moveSet[i]===' '||moveSet[i][0]===\"N\"||moveSet[i]===\"'\"||moveSet[i]===undefined){\r\n        moveSet.splice(i,1);\r\n      }\r\n    }\r\n\r\n    let maxDepth = Math.floor(tempState.cubeDimension/2);\r\n    moveSet = moveSet.map(move=>{\r\n      if(move===\"stop'\") return move;\r\n      //console.log(move);\r\n      let dataMove = moveFuncs.convertMoveToData(move);\r\n      if(parseInt(dataMove[2])>maxDepth&&!dataMove[3]){\r\n        //console.log(\"Found over reaching move: [ \" + move + \" ]\");\r\n        dataMove[2]=(tempState.cubeDimension-dataMove[2])+1\r\n        if(parseInt(dataMove[0])===0) dataMove[0] = 3;\r\n        else if(parseInt(dataMove[0])===1) dataMove[0] = 5;\r\n        else if(parseInt(dataMove[0])===2) dataMove[0] = 4;\r\n        else if(parseInt(dataMove[0])===3) dataMove[0] = 0;\r\n        else if(parseInt(dataMove[0])===4) dataMove[0] = 2;\r\n        else if(parseInt(dataMove[0])===5) dataMove[0] = 1;\r\n        dataMove[1]===0?dataMove[1]=-1:dataMove[1]=0;\r\n\r\n        //console.log(\"Converted to: [ \" + moveFuncs.convertDataToMove(dataMove) + \" ]\");\r\n        return moveFuncs.convertDataToMove(dataMove);\r\n      }\r\n      return moveFuncs.convertDataToMove(dataMove);\r\n    })\r\n\r\n    let moveSetLength = 0;\r\n    while(moveSet.length!==moveSetLength){\r\n      moveSetLength = moveSet.length;\r\n      for(let i = 0; i < moveSet.length-2; i++){\r\n        if(moveSet[i].substring(0,3)===moveSet[i+1].substring(0,3) && moveSet[i].length!==moveSet[i+1].length){\r\n          moveSet.splice(i,2);\r\n        }\r\n      }\r\n      for(let i = 0; i < moveSet.length-2; i++){\r\n        if(moveSet[i]===moveSet[i+1] && moveSet[i]===moveSet[i+2]){\r\n          if(moveSet[i].length===3){moveSet[i]+=\"'\"}\r\n          else{moveSet[i]=moveSet[i].substring(0,3)}\r\n          moveSet.splice(i+1,2);\r\n        }\r\n      }\r\n    }\r\n\r\n    if(moveSet[0]===\"stop'\"&&moveSet[1]===\"stop'\"&&moveSet.length===2) moveSet = [];\r\n  \r\n    // let invalidAlignment = 0;\r\n    // let invalidPlacement = 0;\r\n\r\n    if(state.cubeDimension<6){\r\n      tempState.rubiksObject.forEach(piece => {\r\n        if(piece.includes(\"middle\")) return;\r\n        let tempPiece = piece.slice(0,6);\r\n        let tempFiltered = tempPiece.filter(side=>side!==\"black\");\r\n        let validCount = 0\r\n        if([piece[6],piece[7],piece[8]].join(\"\")!==[piece[9],piece[10],piece[11]].join(\"\")){\r\n          if(tempFiltered.length>1) {/*invalidPlacement++;*/ error=true;}\r\n        }\r\n        if(tempPiece[0]===\"white\"||tempPiece[0]===\"black\") validCount++;\r\n        if(tempPiece[1]===\"blue\"||tempPiece[1]===\"black\") validCount++;\r\n        if(tempPiece[2]===\"red\"||tempPiece[2]===\"black\") validCount++;\r\n        if(tempPiece[3]===\"yellow\"||tempPiece[3]===\"black\") validCount++;\r\n        if(tempPiece[4]===\"orange\"||tempPiece[4]===\"black\") validCount++;\r\n        if(tempPiece[5]===\"green\"||tempPiece[5]===\"black\") validCount++;\r\n        if(validCount<6) {/*invalidAlignment++;*/ error=true;}\r\n      });    \r\n    }\r\n\r\n    if(error) {\r\n      //console.log(invalidAlignment,invalidPlacement);\r\n      return {moveSet:[...moveSet],rubiksObject : beforeObject,solveable:false,solvedSet:[...moveSet],solvedSetIndex:0};\r\n    }\r\n    return {moveSet:[...moveSet],rubiksObject : beforeObject,solveable:true,solvedSet:[...moveSet],solvedSetIndex:0,tempObject:tempState.rubiksObject};\r\n}\r\n\r\nexport default generateAllSolveMoves;","import cube from \"../../cubeFunctions/cube\";\r\nimport moveFuncs from \"../../cubeFunctions/move\";\r\nimport algorithms from \"../../cubeFunctions/algorithms\";\r\n\r\nconst SolverUIFunctions = {\r\n\r\n    // Jump to selected move\r\n    autoJump : function (state,moves){\r\n        let tempState = {...state};\r\n        tempState.moveSet = moves;\r\n        \r\n        while(tempState.moveSet.length){\r\n            //console.log(tempState.rubiksObject);\r\n            let cD = tempState.cubeDimension;\r\n            let blockMoveLog = tempState.blockMoveLog;\r\n            let moveLog = tempState.moveLog;\r\n            let solveMoves = tempState.solveMoves;\r\n            let rubiksObject = tempState.rubiksObject;\r\n            let end = tempState.end;\r\n            let solveState = tempState.solveState;\r\n            let moveData = \r\n              moveFuncs.parseMoveArray(tempState.moveSet); // generates data for next move\r\n            let obj = \r\n              cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\r\n            obj.rubiksObject = \r\n              cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\r\n            tempState = {...tempState,...obj};\r\n        }\r\n        return [...tempState.rubiksObject];\r\n    },\r\n\r\n    // Sets target to jump to\r\n    setTarget : function (e,props){\r\n        //e.stopPropagation();\r\n        if(props.state.autoPlay||props.state.autoRewind){\r\n    \r\n        }\r\n        else if(parseInt(e.target.id)-props.state.solvedSetIndex===1){\r\n            props.setState({targetSolveIndex:parseInt(e.target.id)});\r\n            props.playOne(props);\r\n        }\r\n        else if(props.state.solvedSetIndex<=parseInt(e.target.id)){\r\n            props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\r\n            let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\r\n            let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\r\n            let forwardMoves = props.state.solvedSet.slice(props.state.solvedSetIndex,parseInt(e.target.id));\r\n    \r\n            props.setState({\r\n                solvedSetIndex:parseInt(e.target.id),\r\n                prevSet:prevSetNew,\r\n                moveSet:moveSetNew,\r\n                rubiksObject:SolverUIFunctions.autoJump(props.state,forwardMoves)})\r\n        }\r\n        else if(props.state.solvedSetIndex>parseInt(e.target.id)) {\r\n            props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\r\n            let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\r\n            let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\r\n            let backwardMoves= props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSetIndex)\r\n                .map(move=>move.length===4?move.slice(0,3):(move+\"'\"));\r\n    \r\n            props.setState({\r\n                solvedSetIndex:parseInt(e.target.id),\r\n                prevSet:prevSetNew,\r\n                moveSet:moveSetNew,\r\n                rubiksObject:SolverUIFunctions.autoJump(props.state,backwardMoves.reverse())})\r\n        }\r\n    },\r\n\r\n    // Initiate selected pattern set\r\n    algoStart : function (name,props){\r\n        let cD = props.state.cubeDimension;\r\n        let algo = name;\r\n        let algoSet = [];\r\n        let generated = cube.generateSolved(cD,cD,cD);\r\n        if(algo!==\"None Selected\")\r\n            algoSet = algorithms\r\n                .find(\r\n                    set=>set.name===algo&&\r\n                    set.worksFor.includes(cD)).moves.split(\" \");\r\n        props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[],jumpToEnd:true});\r\n    }\r\n}\r\n\r\nexport default SolverUIFunctions;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{Component} from \"react\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport \"./SolverUI.css\";\r\nimport algorithms from \"../../cubeFunctions/algorithms\";\r\nimport LazyLoad from 'react-lazyload';\r\nimport solverMain from '../../solvers/solverMain';\r\n\r\nimport UI from './SolverUIFunctions';\r\nlet {setTarget, algoStart} = UI;\r\n\r\nclass SolverUI extends Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\r\n            //console.log(\"attempting rewind\");\r\n            if(nextProps.state.moveSet[0]===\"stop'\"){\r\n                nextProps.setState({autoRewind:false});\r\n            }\r\n            nextProps.rewindOne();\r\n        }\r\n        else if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex){\r\n            //console.log(\"ending rewind\");\r\n            nextProps.setState({autoRewind:false});\r\n        }\r\n\r\n        if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\r\n            //console.log(\"attempting rewind\");\r\n            if(nextProps.state.moveSet[0]===\"stop'\"){\r\n                nextProps.setState({autoPlay:false});\r\n            }\r\n            nextProps.playOne(nextProps);\r\n        }\r\n        else if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex){\r\n            //console.log(\"ending rewind\");\r\n            nextProps.setState({autoPlay:false});\r\n        }\r\n        if(nextProps.state.jumpToEnd){\r\n            nextProps.setState({jumpToEnd:false},setTarget({target:{id:nextProps.state.moveSet.length}},nextProps));\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let setState = this.props.setState;\r\n        let state = this.props.state;\r\n        if(state.solveOnce){\r\n            setTimeout(function(){\r\n                    setState({...solverMain(state,state.rubiksObject),solveOnce:false});\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        let solverSet = [];\r\n        let prevSet = this.props.state.prevSet;\r\n        let moveSet = this.props.state.moveSet;\r\n        let defaultSolver = this.props.state.solveOnce?\"Loading, please wait...\":\"Already Solved\";\r\n        let defaultMessage = this.props.state.currentFunc===\"Solving\"?defaultSolver:\"None Selected\";\r\n        let jumperButtons = [<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={0} className=\"solveMoveDiv jumper\" key={-1}>Top</div>];\r\n\r\n        const buttonClassColor = e => {\r\n            e=e.toLowerCase();\r\n            if(e.includes(\"f\")) return \"white\";\r\n            //if(e.includes(\"u\")) return \"blue\";\r\n            if(e.includes(\"r\")) return \"red\";\r\n            if(e.includes(\"b\")) return \"yellow\";\r\n            if(e.includes(\"l\")) return \"orange\";\r\n            if(e.includes(\"d\")) return \"green\";\r\n        }\r\n\r\n        !this.props.state.solvedSet.length?\r\n        solverSet.push(defaultMessage):\r\n        this.props.state.solvedSet.forEach((el,i)=>el===this.props.state.solvedSet[i+1]?\r\n            <></>:\r\n            el===\"stop'\"? \r\n            (solverSet.push(<div key={i} style={{width:\"100%\"}}><hr key={i} style={{border:\"1px solid lightblue\",marginLeft:\"5px\"}}></hr>{jumperButtons.length===1?\"Edges: \":\"3x3: \"}</div>),jumperButtons.push(\r\n                jumperButtons.length===1?<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>Edge</div>:\r\n                <div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>3x3</div>\r\n            )):\r\n            el===this.props.state.solvedSet[i-1]?\r\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\r\n                    solverSet.push(<div \r\n                        id={i-1} \r\n                        className={`solveMoveDiv nextSolveIndex ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0`+el[1],el[1]).replace(\"'\",\"\")+\"2\"}\r\n                    </div>):\r\n                    solverSet.push(<div \r\n                        onClick={(e)=>setTarget(e,this.props)} \r\n                        id={i-1} \r\n                        className={`solveMoveDiv ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0`+el[1],el[1]).replace(\"'\",\"\")+\"2\"}\r\n                    </div>):\r\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\r\n                    solverSet.push(<div \r\n                        id={i} \r\n                        className={`solveMoveDiv nextSolveIndex ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0`+el[1],el[1])}\r\n                    </div>):\r\n                    solverSet.push(<div \r\n                        onClick={(e)=>setTarget(e,this.props)} \r\n                        id={i} className={`solveMoveDiv ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0`+el[1],el[1])}</div>)\r\n        )\r\n\r\n        solverSet.map(el=><LazyLoad height=\"2rem\">el</LazyLoad>);\r\n\r\n\r\n        let previousMove = \r\n            <div className=\"previousMove\">\r\n                {prevSet.length-1>=0?\r\n                    prevSet[prevSet.length-1]===\"stop'\"?\r\n                        prevSet[prevSet.length-2]?\r\n                            prevSet[prevSet.length-2]===prevSet[prevSet.length-3]?\r\n                                prevSet[prevSet.length-2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1]).replace(\"'\",\"\")+2\r\n                            :\r\n                                prevSet[prevSet.length-2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1])\r\n                        :\r\n                            \"-\"\r\n                    :\r\n                        prevSet[prevSet.length-1]===prevSet[prevSet.length-2]?\r\n                            prevSet[prevSet.length-1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1]).replace(\"'\",\"\")+2\r\n                        :\r\n                            prevSet[prevSet.length-1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1])\r\n                :\r\n                    \"-\"}\r\n            </div>\r\n\r\n        let nextMove = \r\n            <div className=\"nextMove\">\r\n                {moveSet[0]&&typeof(moveSet[0][0])==='string'&&moveSet[0]!==\"'\"?\r\n                    moveSet[0]===\"stop'\"?\r\n                        moveSet[1]?\r\n                            moveSet[1]===moveSet[2]?\r\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1]).replace(\"'\",\"\")+2\r\n                            :\r\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1])\r\n                        :\r\n                            \"-\"\r\n                    :\r\n                        moveSet[0]===moveSet[1]?\r\n                            moveSet[0].replace(`0`+moveSet[0][1],moveSet[0][1]).replace(\"'\",\"\")+2\r\n                        :\r\n                            moveSet[0].replace(`0`+moveSet[0][0],moveSet[0][1])\r\n                :\r\n                    \"-\"\r\n                }\r\n            </div>;\r\n\r\n\r\n\r\n        function stay(){\r\n            document.querySelector(\".warningPopupSolver\").style.visibility=\"hidden\";\r\n            document.querySelector(\".solverInterface\").style.display=\"block\";\r\n            document.querySelector(\".exitDiv\").style.display=\"block\";\r\n        }\r\n\r\n        function leave(e,props){\r\n            e.stopPropagation();\r\n            props.stopSolve();\r\n\r\n            if( document.querySelector(\".activeMenu\")){\r\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\r\n            }\r\n\r\n            if(document.querySelector(\"#solverChangeData\").data){\r\n                let data = document.querySelector(\"#solverChangeData\").data.split(\",\");\r\n                if(data[0]===\"ColorPicker\"){\r\n                    props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\r\n                    document.querySelector(\"#solverChangeData\").data=\"\";\r\n                    return;\r\n                }\r\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\r\n                props.setState({activeMenu:data[0],currentFunct:data[1],isValidConfig:false});\r\n                document.querySelector(\"#solverChangeData\").data=\"\";\r\n                \r\n            }\r\n            else{\r\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\r\n            }\r\n        }\r\n\r\n        function fastforward(props){\r\n            if(!props.state.moveSet.length) return;\r\n            props.state.moveSet.length===1 ? \r\n                props.playOne(props):\r\n                props.setState({\r\n                    autoPlay:true,\r\n                    autoRewind:false,\r\n                    targetSolveIndex:props.state.solvedSet.length});\r\n        }\r\n\r\n        function fastrewind(props){\r\n            props.setState({autoPlay:false,autoRewind:true,targetSolveIndex:0});\r\n        }\r\n\r\n        function pauseSolver(props){\r\n            props.setState({autoPlay:false,autoRewind:false});\r\n        }\r\n\r\n        function preSetTarget(e,props,setTarget){\r\n            props.setState({autoScroll:true});\r\n            setTarget(e,props);\r\n        }\r\n\r\n        function optionClick(e,props){\r\n            switch(props.state.currentFunc){\r\n                case \"Solving\":\r\n                    document.querySelector(\".warningPopupSolver\").style.visibility=\"visible\";\r\n                    document.querySelector(\".warningPopupSolver\").style.width=\"100%\";\r\n                    document.querySelector(\".solverInterface\").style.display=\"none\";\r\n                    document.querySelector(\".exitDiv\").style.display=\"none\"\r\n                    break;\r\n                case \"Algorithms\":\r\n                    //this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [], moveSet : [],targetSolveIndex:-1,solvedSet:[]});\r\n                    props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\r\n                    break;\r\n                default:\r\n                    props.setState({activeMenu:\"\",currentFunct:\"None\"});\r\n            }\r\n\r\n        }\r\n\r\n        return(<div className=\"solverUIWrapper\">\r\n            <Row style={{width:\"100%\",height:\"100%\",margin:0}}>\r\n                <Col id={(!this.props.mobile&&this.props.state.currentFunc===\"Algorithms\")?\"centerControls2\":\"\"} style={{paddingLeft:\"0px\"}}> \r\n                    {!this.props.mobile?<>\r\n                    <div className=\"solverMoves\">\r\n                        \r\n                        {solverSet}\r\n                        \r\n                    </div></>:<>\r\n                    {this.props.state.currentFunc===\"Algorithms\"?<><Row style={{paddingLeft:\"15px\"}}>\r\n                        {/* <label htmlFor=\"patterns\" style={{color:\"lightgrey\"}}>Choose a Pattern:</label> */}\r\n\r\n                        <select style={{color:\"lightgrey\",backgroundColor:\"#343a40\"}} id=\"patterns\" onChange={(e) => algoStart(e.target.value,this.props)}>\r\n                        {algorithms.map(algo=>algo.worksFor.includes(this.props.state.cubeDimension)?\r\n                            <option className=\"mobileAlgo\" id={algo.name} value={algo.name} key={algo.name}>{algo.name}</option>\r\n                                :\"\")}\r\n                        </select>\r\n                    </Row>\r\n                    <Row style={{paddingLeft:\"15px\"}}>\r\n                        <div className=\"algoMoves\">\r\n                            \r\n                            {solverSet}\r\n                            \r\n                        </div>\r\n                        \r\n                    </Row></>:<>\r\n                    <div className=\"solverMovesMobile\">\r\n                            \r\n                            {solverSet}\r\n                            \r\n                        </div>\r\n                    </>\r\n                    }</>\r\n                    }\r\n                </Col>\r\n                <Col id={(!this.props.mobile&&this.props.state.currentFunc===\"Algorithms\")?\"centerControls\":\"centerControlsOther\"} style={{paddingRight:0,paddingLeft:0,maxWidth:\"300px\"}}>\r\n                        <div className=\"warningPopupSolver\">\r\n                                    <div id=\"solverChangeData\" data=\"\"></div>\r\n                                    {this.props.mobile?\r\n                                        <div className=\"solverMessage\"> Progress will not be saved.</div>:\r\n                                        <div className=\"solverMessage\"> Are you sure you want to leave Solver? Progress will not be saved.</div>\r\n                                    }\r\n                                    <button onClick={stay} className=\"solverLeaveStay\">Stay</button><button onClick={(e)=>leave(e,this.props)} className=\"solverLeaveStay\">Leave</button>\r\n                        </div>\r\n                    <div className=\"solverInterface\">\r\n                        \r\n                        <div className=\"solverButtonDiv rewindOne\">\r\n                            <button \r\n                                className={`solverButton`}\r\n                                onClick={() => this.props.rewindOne(this.props)}> \r\n                            Previous {previousMove}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"solverButtonDiv playOne\">\r\n                            <button \r\n                                className={`solverButton`}\r\n                                onClick={() => this.props.playOne(this.props)}> \r\n                            Next {nextMove}\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"solverButtonDiv rewindAll\">\r\n                            {this.props.state.autoRewind?\r\n                            <button \r\n                                className={`solverButton`}\r\n                                onClick={() => pauseSolver(this.props)}> \r\n                            <div style={{width:\"100%\"}}>Pause</div> Solver\r\n                            </button>\r\n                            :\r\n                            <button \r\n                                className={`solverButton`}\r\n                                onClick={() => fastrewind(this.props)}> \r\n                            <div style={{width:\"100%\"}}>Auto</div> Rewind\r\n                            </button>\r\n                            }\r\n                        </div>\r\n                        <div className=\"solverButtonDiv fastforward\">\r\n                           {this.props.state.autoPlay?\r\n                            <button \r\n                                className={`solverButton`}\r\n                                onClick={() => pauseSolver(this.props)}> \r\n                            <div style={{width:\"100%\"}}>Pause</div> Solver\r\n                            </button>\r\n                            :\r\n                            <button \r\n                                className={`solverButton`}\r\n                                onClick={() => fastforward(this.props)}> \r\n                            <div style={{width:\"100%\"}}>Auto</div> Forward\r\n                            </button>\r\n                            } \r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div className=\"exitDiv\" style={{width:\"100%\",height:\"25%\"}}>\r\n                        {/* <button id=\"blankExit\"></button> */}\r\n                    {this.props.state.currentFunc===\"Solving\"?<>\r\n                        <button id=\"Solver\" data=\"Solving\" onClick={(e)=>optionClick(e,this.props)} className=\"exitButton\">Exit</button></>:\r\n                        <button id=\"Algorithms\" data=\"Algorithms\" onClick={(e)=>optionClick(e,this.props)} className=\"exitButton\">Exit</button>}\r\n                    </div>\r\n\r\n                </Col>\r\n                \r\n            </Row>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default React.memo(SolverUI);","import React from \"react\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n\r\n    let colors = {\r\n        'white':[255,255,255],\r\n        'blue':[0,0,255],\r\n        'red':[255,0,0],\r\n        'yellow':[255,255,0],\r\n        'orange':[255,165,0],\r\n        'green':[0,255,0]\r\n    }\r\n\r\n    const capitalized = props.color.charAt(0).toUpperCase() + props.color.slice(1);\r\n    const unselected = props.color===props.colorPicked?\"\":props.color;\r\n    \r\n    return(\r\n        <div \r\n            onClick={e=>{e.stopPropagation();e.nativeEvent.stopImmediatePropagation();}}\r\n            className={`${props.side?\"bottomColorButtonDiv\":\"colorButtonDiv\"} ${props.index%2?\"leftCp\":\"rightCp\"}`}>\r\n        <button\r\n            className={`colorPicker ${unselected}`}\r\n            style={{\r\n                backgroundColor:unselected?`rgba(0,0,255,.10)`:`rgba(${colors[props.color]},.5)`,\r\n                color:props.color\r\n            }} \r\n            onClick={(e)=>\r\n                {e.stopPropagation();\r\n                e.nativeEvent.stopImmediatePropagation();\r\n                props.changeColor(props.color);\r\n            }}>\r\n                {props.isMobile?capitalized:`${props.index}. ${capitalized}`}\r\n        </button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ColorPicker;","import React, {useState} from \"react\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport ColorButton from \"./ColorButton\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst ColorPicker = (props) => {\r\n    const [solveBtnText,setSolveBtnText] = useState(\"Solve\");\r\n    const [checkBtnText,setCheckBtnText] = useState(\"Check\");\r\n\r\n    const colors = [\"white\",\"blue\",\"red\",\"yellow\",\"orange\",\"green\"];\r\n\r\n    const onSolveClick = () => {\r\n        setSolveBtnText(\"Configuring...\");\r\n        setTimeout(function(){\r\n            props.setColorPickedCube();\r\n        }, 100);  \r\n    };\r\n\r\n    const onCheckClick = () => {\r\n        setCheckBtnText(\"Checking...\");\r\n        setTimeout(function(){\r\n            props.runCheckColors();\r\n            setCheckBtnText(\"Check\");\r\n        }, 100);  \r\n    };\r\n\r\n    function leave(){\r\n        props.endColorPicker();\r\n\r\n        if( document.querySelector(\".activeMenu\")){\r\n            document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\r\n        }\r\n\r\n        if(document.querySelector(\"#cpChangeData\").data){\r\n            let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\r\n            if(data[0]===\"Solver\") {\r\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\r\n                document.querySelector(\"#cpChangeData\").data=\"\";\r\n                return;\r\n            }\r\n            document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\r\n            document.querySelector(\"#cpChangeData\").data=\"\";\r\n\r\n            props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>props.beginSolve());\r\n        }\r\n        else{\r\n            props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\r\n        }\r\n    }\r\n    function stay(){\r\n        document.querySelector(\".warningPopup\").style.display=\"none\";\r\n        document.querySelector(\".colorButtonContainer\").style.visibility=\"visible\";\r\n    }\r\n\r\n    function optionClick(e){\r\n        document.querySelector(\".warningPopup\").style.display=\"block\";\r\n        document.querySelector(\".warningPopup\").style.width=\"100%\";\r\n        document.querySelector(\".colorButtonContainer\").style.visibility=\"hidden\";\r\n    }\r\n\r\n    return (\r\n        <Row className=\"cp-container\" style={{height:\"98%\",width:\"100%\", overflowX:\"hidden!important\",overflowY:\"hidden!important\",margin:\"0px\"}}>\r\n            <Col>\r\n                <div className=\"cpInfo\">\r\n                    {\r\n                        props.isValidConfig?\r\n                        <div className=\"solveCpDiv\"><button className=\"solveCp\" onClick={()=>onSolveClick()}>\r\n                            <strong style={{color:'green',fontSize:'1rem'}}>{solveBtnText}</strong>\r\n                        </button></div>:!props.cpErrors.length?\r\n                        <div className=\"checkCpDiv\"><button className=\"checkCp\" onClick={()=>onCheckClick()}>\r\n                            <strong style={{color:'blue',fontSize:'1rem'}}>{checkBtnText}</strong>\r\n                        </button></div>:[]\r\n                    }\r\n                    <div style={{fontSize:\".5rem\"}}>\r\n                        {props.state.cpErrors.map((error,i)=>\r\n                            <p key={i} className=\"cpErrorMessage\">{\"- \"+error}</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col style={{padding:\"0px\"}}>\r\n                <div className=\"warningPopup\">\r\n                    <div id=\"cpChangeData\" data=\"\"></div>\r\n                    {props.isMobile?\r\n                        <div className=\"cpMessage\">Progress will not be saved.</div>:\r\n                        <div className=\"cpMessage\">Are you sure you want to leave Color Picker? Progress will not be saved.</div>}\r\n                    <button onClick={stay} className=\"cpLeaveStay\">Stay</button><button onClick={leave} className=\"cpLeaveStay\">Leave</button>\r\n                </div>\r\n                <div className=\"colorButtonContainer\">\r\n                    \r\n                    {colors.map((color,i)=><ColorButton\r\n                        index={i+1} \r\n                        key={color}\r\n                        color={color}\r\n                        colorPicked={props.colorPicked}\r\n                        changeColor={props.changeColor}\r\n                        isMobile={props.isMobile}\r\n                    />)}\r\n                    <div className=\"colorButtonDiv\" style={{paddingBottom:\"0px\",width:\"100%\"}}>\r\n                        <button id=\"ColorPicker\" data=\"Color Picker\" onClick={optionClick} className=\"colorPicker activeMenu colorPickerExit\">Exit</button>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        );\r\n\r\n};\r\n\r\nexport default ColorPicker;","import React, {Component} from \"react\";\r\nimport \"../MenuWrapper/MenuWrapper.css\";\r\nimport \"./MobileView.css\"\r\nimport Controls from \"../Controls\";\r\nimport SolverUI from \"../SolverUI/SolverUI\";\r\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport algorithms from \"../../cubeFunctions/algorithms\";\r\n\r\nconst optionLimitCP = 100;\r\n\r\nclass Mobile extends Component {\r\n\r\n    // eslint-disable-next-line\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n\r\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\r\n            //console.log(nextProps.state.solvedSet);\r\n            return true;\r\n        }\r\n\r\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\r\n\r\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\r\n\r\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\r\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\r\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\r\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\r\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\r\n\r\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\r\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\r\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\r\n\r\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\r\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\r\n\r\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\r\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\r\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\r\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\r\n           this.props.cpErrors===nextProps.cpErrors&&\r\n           this.props.state.solveTime===nextProps.state.solveTime&&\r\n           this.props.state.playOne===nextProps.state.playOne&&\r\n           !this.props.state.autoPlay) return false;\r\n\r\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\r\n\r\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    render(){\r\n\r\n        const algoLength = algorithms.filter(set=>set.worksFor.includes(this.props.state.cubeDimension)).length;\r\n\r\n        function otherOptionClick(e,props){\r\n            switch(e.target.id){\r\n                case 'Reset':\r\n                    props.setState({activeMenu:\"\",currentFunc:\"Reset\"});\r\n                    break;\r\n                case 'Scramble':\r\n                    if(props.state.currentFunc===\"None\"){\r\n                        props.beginScramble();\r\n                    }\r\n                    break;\r\n                default:\r\n                    props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\r\n            }\r\n        }\r\n\r\n        function optionClick(e,props){\r\n            if(props.state.currentFunc===\"None\") {\r\n                if(e.target.id===\"ColorPicker\"){\r\n                    \r\n                    props.setState({activeMenu:e.target.id,isValidConfig:true});\r\n                    props.beginColorPicker();\r\n                }\r\n                else if(e.target.id===\"Solver\"){\r\n                    props.setState({activeMenu:e.target.id});\r\n                    props.beginSolve();\r\n                }\r\n                else if(e.target.id===\"Algorithms\"){\r\n                    //props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\r\n                    props.setState({activeMenu:e.target.id,currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[]});\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n        <div className=\"menuWrapper\">\r\n            {(this.props.state.currentFunc === \"None\"||this.props.state.currentFunc === \"Drag Turn\"||this.props.state.currentFunc === \"Undo\"||this.props.state.currentFunc === \"Redo\"||this.props.state.currentFunc === \"Scrambling\")&&this.props.state.activeMenu!==\"Moves\"?\r\n                <Row style={{width:\"100%\", height:\"100%\", margin: 0}}>\r\n                    <Col xs={6} style={{paddingRight:\"7.5px\"}}>\r\n                        {this.props.state.cubeDimension<=optionLimitCP?\r\n                            <><button className=\"mobileButton\" id=\"ColorPicker\" data=\"Color Picker\" onClick={(e)=>optionClick(e,this.props)} key={1}>Color Picker</button> \r\n                            <button className=\"mobileButton\" id=\"Solver\" data=\"Solving\" onClick={(e)=>optionClick(e,this.props)} key={2}>Solver</button></>\r\n                            :<>\r\n                            <button className=\"blankButton\" key={1}></button>\r\n                            <button className=\"blankButton\" key={2}></button></>\r\n                        } \r\n                        {algoLength?\r\n                            <button className=\"mobileButton\" id=\"Algorithms\" data=\"Algorithms\" onClick={(e)=>optionClick(e,this.props)} key={3}>Patterns</button>:\"\"\r\n                        }\r\n                    </Col>\r\n                    <Col xs={6} style={{paddingLeft:\"7.5px\"}}>\r\n                        {this.props.state.cubeDimension<1?\r\n                            <button className=\"mobileButton\" onClick={()=>otherOptionClick} key={0}>Moves</button>:\r\n                            <button className=\"blankButton\" key={0}></button>\r\n                        }    \r\n                        <button className=\"mobileButton\" id=\"Scramble\" onClick={(e)=>otherOptionClick(e,this.props)} key={2}>Scramble</button>\r\n                        <button className=\"mobileButton\" id=\"Reset\" onClick={(e)=>otherOptionClick(e,this.props)}  key={3}>Reset</button>\r\n                    </Col>\r\n                </Row>\r\n            :\r\n                this.props.state.currentFunc === \"Color Picker\"?\r\n                <ColorPicker {...this.props} isMobile={true}></ColorPicker>:\r\n                this.props.state.currentFunc === \"Solving\"?\r\n                <SolverUI {...this.props} mobile={true}/>:\r\n                this.props.state.currentFunc === \"Algorithms\"?\r\n                <><SolverUI {...this.props} mobile={true}/></>\r\n                :\r\n                this.props.state.activeMenu===\"Moves\"?\r\n                    <Row style={{height: \"100%\"}}>\r\n                        <Col xs={2}>\r\n                            <div id=\"infoBtn\" style={{fontSize:\"2rem\",padding:0,display:\"inline\"}} onClick={()=>{this.props.setState({activeMenu:\"\"})}}>←</div>\r\n                        </Col>\r\n                        <Col xs={10}>\r\n                            <Controls {...this.props}/>\r\n                        </Col>\r\n                    </Row>\r\n                :<></>\r\n            }\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React from \"react\";\r\nimport \"./MenuOptions.css\"\r\nimport algorithms from \"../../cubeFunctions/algorithms\";\r\nimport cube from '../../cubeFunctions/cube';\r\n\r\nconst optionLimitCP = 100;\r\nconst optionLimitSOLVER = 100;\r\n\r\nconst MenuOptions = props => {\r\n        let algorithmSet = \r\n            algorithms\r\n                .filter(algo=>algo.worksFor.includes(props.state.cubeDimension))\r\n                .map(algo=>\r\n                    <button \r\n                        id={algo.name} \r\n                        key={algo.name}\r\n                        className={\r\n                            props.state.activeAlgo===algo.name?\r\n                                \"algoButton algoActive\":\"algoButton\"\r\n                        }\r\n                        onClick={(e)=>algoStart(e,props)}>\r\n                        {algo.name}\r\n                    </button>\r\n                    );\r\n\r\n        const baseOptions = <>\r\n           {props.state.cubeDimension<=optionLimitCP?<button id=\"ColorPicker\" key=\"Color Picker\" data=\"Color Picker\" onClick={optionClick} className=\"leftButton\">Color Picker</button>:<button className=\"leftButton invis\"></button>}\r\n           {props.state.cubeDimension<=optionLimitSOLVER?<button id=\"Solver\" key=\"Soler\" data=\"Solving\" onClick={optionClick} className=\"leftButton\">Solver</button>:<button className=\"leftButton invis\"></button>}\r\n           {algorithmSet.length?<button id=\"Algorithms\" key=\"Algorithms\" data=\"None\" onClick={optionClick} className=\"leftButton\">Patterns</button>:<button className=\"leftButton invis\"></button>}\r\n        </>\r\n\r\n        \r\n\r\n        function algoStart(e,props){\r\n            if(props.state.autoPlay||props.state.autoRewind||props.state.playOne) return;\r\n            let cD = props.state.cubeDimension;\r\n            let algo = e.target.id;\r\n            let algoSet = [];\r\n            let generated = cube.generateSolved(cD,cD,cD);\r\n            algorithms.forEach(e=>{\r\n                if(e.moves&&e.name===algo&&e.worksFor.includes(cD)) algoSet.push(...e.moves.split(\" \"));\r\n            })\r\n            //console.log(algoSet);\r\n            props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[],autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,jumpToEnd:true});\r\n        }\r\n\r\n        function optionClick(e){\r\n            if(props.state.currentFunc===\"None\") {\r\n                if(e.target.id===\"ColorPicker\"){\r\n                    \r\n                    props.setState({activeMenu:e.target.id,isValidConfig:true});\r\n                    props.beginColorPicker();\r\n                }\r\n                else if(e.target.id===\"Solver\"){\r\n                    props.setState({activeMenu:e.target.id},props.beginSolve());\r\n                    \r\n                }\r\n                else if(e.target.id===\"Algorithms\"){\r\n                    console.log(props.state.currentFunc);\r\n                    //props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\r\n                    props.setState({activeMenu:e.target.id,currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[],activeAlgo:\"\"});\r\n                }\r\n                else props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\r\n            }\r\n        }\r\n        return (\r\n        <div className=\"menuOptionsWrapper\">\r\n            {props.state.currentFunc===\"Solving\"?[]:\r\n            props.state.currentFunc===\"Color Picker\"?<><div style={{paddingTop:\"45%\"}}></div>\r\n            <button id=\"ColorPicker\" data=\"Color Picker\" key=\"Color Picker\" onClick={optionClick} className=\"cpButton activeMenu\">Exit</button></>:\r\n            props.state.currentFunc===\"Algorithms\"?\r\n            <div className=\"algoList\">\r\n                {algorithmSet}  \r\n            </div>:baseOptions}\r\n        </div>)\r\n\r\n}\r\n\r\nexport default React.memo(MenuOptions);","import React from \"react\";\r\nimport \"../MenuOptions/MenuOptions.css\"\r\n\r\nconst MenuOptionsOther = props => {\r\n\r\n    const baseOptions = <>\r\n        {/* <button id=\"Moves\" key=\"Moves\" data=\"None\" onClick={otherOptionClick} className=\"rightButton\">Moves</button> */}\r\n        <button className=\"rightButton invis\" key=\"Blank\"></button>\r\n        <button id=\"Scramble\" key=\"Scramble\" onClick={otherOptionClick} className=\"rightButton scramble\">\r\n            Scramble\r\n        </button>\r\n        <button id=\"Reset\" key=\"Reset\" onClick={otherOptionClick} className=\"rightButton reset\">\r\n            Reset\r\n        </button>\r\n    </>\r\n\r\n    function otherOptionClick(e){\r\n        switch(e.target.id){\r\n            case 'Reset':\r\n                props.setState({activeMenu:\"\",currentFunc:\"Reset\"});\r\n                break;\r\n            case 'Scramble':\r\n                if(props.state.currentFunc===\"None\"){\r\n                    props.beginScramble();\r\n                }\r\n                break;\r\n            default:\r\n                props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"menuOptionsWrapper\" style={{float:\"right\"}}>\r\n            {props.state.currentFunc===\"Solving\"||props.state.currentFunc===\"Color Picker\"||props.state.currentFunc===\"Algorithms\"?<><div style={{paddingTop:\"45%\"}}></div>\r\n                </>:baseOptions}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(MenuOptionsOther);","import React,{Component} from \"react\";\r\nimport \"./MenuWrapper/MenuWrapper.css\";\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport MenuOptions from \"./MenuOptions/MenuOptions\";\r\nimport MenuOptionsOther from \"./MenuOptionsOther/MenuOptionsOther\";\r\nimport Controls from \"./Controls\";\r\nimport ColorPicker from \"./ColorPicker/ColorPicker\";\r\nimport SolverUI from \"./SolverUI/SolverUI\";\r\n\r\n\r\nclass View extends Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.props.state.upDateCp!==nextProps.state.upDateCp){\r\n            return true;\r\n        }\r\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\r\n            //console.log(nextProps.state.solvedSet);\r\n            return true;\r\n        }\r\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\r\n\r\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\r\n\r\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\r\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\r\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\r\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\r\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\r\n\r\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\r\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\r\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\r\n\r\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\r\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\r\n\r\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\r\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\r\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\r\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\r\n           this.props.cpErrors===nextProps.cpErrors&&\r\n           this.props.state.solveTime===nextProps.state.solveTime&&\r\n           this.props.state.playOne===nextProps.state.playOne&&\r\n           !this.props.state.autoPlay) return false;\r\n\r\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\r\n\r\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\r\n\r\n        return true;\r\n    }\r\n    render(){\r\n        //const props = this.props;\r\n        let activeMenu;\r\n        switch(this.props.state.activeMenu){\r\n            case 'Moves':\r\n                activeMenu = <Controls {...this.props}/>\r\n                break;\r\n            case 'ColorPicker':\r\n                activeMenu = <ColorPicker {...this.props}/>\r\n                break;\r\n            case 'Solver':\r\n                activeMenu=<SolverUI {...this.props}/>\r\n                break;\r\n            case 'Algorithms':\r\n                activeMenu=<SolverUI {...this.props}/>\r\n                break;\r\n            default:\r\n                activeMenu=\"\";\r\n        }\r\n\r\n        \r\n        //console.log(\"hi\")\r\n        return (\r\n        <div className=\"menuWrapper\" style={{pointerEvents: \"none\"}}>\r\n            <Row style={{height: \"100%\",margin:\"0px\"}}>\r\n                 {(this.props.state.activeMenu===\"ColorPicker\"||this.props.state.activeMenu===\"Solver\")?\r\n                []:\r\n                [<Col key=\"MenuOptions\" style={{paddingLeft:\"0px\"}}>\r\n                    <MenuOptions {...this.props}/>\r\n                </Col>,\r\n                <Col key=\"MenuOptionsPadding\" style={{padding:0, color:\"black\",opacity:0}} xs={.5}>\r\n                    .    \r\n                </Col>]}\r\n                <Col \r\n                    id=\"menuBox\" \r\n                    style={{position:\"relative\",bottom:\"0\",height:\"100%\"}} \r\n                    xs={\r\n                        this.props.state.currentFunc===\"Color Picker\"||this.props.state.activeMenu===\"Solver\"?\r\n                        12:this.props.state.currentFunc===\"None\"||this.props.state.currentFunc===\"Scrambling\"||this.props.state.currentFunc===\"Reset\"?4:8}>\r\n                    {activeMenu}  \r\n                </Col>\r\n                {(this.props.state.activeMenu===\"ColorPicker\"||this.props.state.activeMenu===\"Solver\"||this.props.state.activeMenu===\"Algorithms\")?\r\n                []:\r\n                [<Col key=\"MenuOptionsOther\" style={{padding:0, color:\"black\",opacity:0}} xs={.5}>\r\n                    .    \r\n                </Col>,\r\n                <Col key=\"MenuOptionsOtherPadding\" style={{paddingLeft:\"0px\",minWidth: \"150px\",paddingRight:\"0px\"}}>\r\n                    <MenuOptionsOther {...this.props}/>\r\n                </Col>]}\r\n            </Row>\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default React.memo(View);","import React, {useState} from \"react\";\r\nimport \"./ColorPicker.css\";\r\nimport \"../SideView/SideView.css\"\r\n\r\nconst SideColorPicker = (props) => {\r\n    const [solveBtnText,setSolveBtnText] = useState(\"Solve\");\r\n    const [checkBtnText,setCheckBtnText] = useState(\"Check\");\r\n\r\n    const onSolveClick = () => {\r\n        setSolveBtnText(\"Configuring...\");\r\n        setTimeout(function(){\r\n            document.querySelector(\".warningPopup\").style.display = \"none\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\r\n            props.setColorPickedCube();\r\n        }, 100);  \r\n    };\r\n\r\n    const onCheckClick = () => {\r\n        setCheckBtnText(\"Checking...\");\r\n        setTimeout(function(){\r\n            props.runCheckColors();\r\n            setCheckBtnText(\"Check\");\r\n        }, 100);  \r\n        \r\n    };\r\n    \r\n    return (\r\n        <div className=\"sideMenuBox0 sideLimit\">\r\n          <div className=\"sideMenuBox1\">\r\n            <div className=\"cpInfo\" style={{width:\"100%\"}}>\r\n                    {\r\n                        props.isValidConfig?\r\n                        <div className=\"solveCpDiv\"><button className=\"solveCp\" onClick={onSolveClick}>\r\n                            <strong style={{color:'green',fontSize:'1rem'}}>{solveBtnText}</strong>\r\n                        </button></div>:!props.cpErrors.length?\r\n                        <div className=\"checkCpDiv\"><button className=\"checkCp\" onClick={onCheckClick}>\r\n                            <strong style={{color:'blue',fontSize:'1rem'}}>{checkBtnText}</strong>\r\n                        </button></div>:[]\r\n                    }\r\n                    <div style={{fontSize:\".5rem\"}}>\r\n                        {props.state.cpErrors.map((error,i)=>\r\n                            <p key={i} className=\"cpErrorMessage\">{\"- \"+error}</p>\r\n                        )}\r\n                    </div>\r\n                </div>   \r\n            </div>  \r\n        </div>        \r\n    );\r\n};\r\n\r\nexport default SideColorPicker;","import \"../SideView/SideView.css\";\r\nimport React,{Component} from \"react\";\r\nimport \"./SideSolverUI.css\";\r\nimport \"./SolverUI.css\";\r\nimport algorithms from \"../../cubeFunctions/algorithms\";\r\nimport LazyLoad from 'react-lazyload';\r\nimport solverMain from '../../solvers/solverMain';\r\n\r\nimport UI from './SolverUIFunctions';\r\nlet {setTarget,algoStart} = UI;\r\n\r\nclass SolverUI extends Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\r\n            //console.log(\"attempting rewind\");\r\n            if(nextProps.state.moveSet[0]===\"stop'\"){\r\n                nextProps.setState({autoRewind:false});\r\n            }\r\n            nextProps.rewindOne();\r\n        }\r\n        else if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex){\r\n            //console.log(\"ending rewind\");\r\n            nextProps.setState({autoRewind:false});\r\n        }\r\n\r\n        if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\r\n            //console.log(\"attempting rewind\");\r\n            if(nextProps.state.moveSet[0]===\"stop'\"){\r\n                nextProps.setState({autoPlay:false});\r\n            }\r\n            nextProps.playOne(nextProps);\r\n        }\r\n        else if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex){\r\n            //console.log(\"ending rewind\");\r\n            nextProps.setState({autoPlay:false});\r\n        }\r\n        if(nextProps.state.jumpToEnd){\r\n            nextProps.setState({jumpToEnd:false},setTarget({target:{id:nextProps.state.moveSet.length}},nextProps));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let setState = this.props.setState;\r\n        let state = this.props.state;\r\n        if(state.solveOnce){\r\n            setTimeout(function(){\r\n                    setState({...solverMain(state,state.rubiksObject),solveOnce:false});\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        let solverSet = [];\r\n        let defaultSolver = this.props.state.solveOnce?\"Loading, please wait...\":\"Already Solved\";\r\n        let defaultMessage = this.props.state.currentFunc===\"Solving\"?defaultSolver:\"None Selected\";\r\n        let jumperButtons = [<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={0} className=\"solveMoveDiv jumper\" key={-1}>Top</div>];\r\n        \r\n        const buttonClassColor = e => {\r\n            e=e.toLowerCase();\r\n            if(e.includes(\"f\")) return \"white\";\r\n            //if(e.includes(\"u\")) return \"blue\";\r\n            if(e.includes(\"r\")) return \"red\";\r\n            if(e.includes(\"b\")) return \"yellow\";\r\n            if(e.includes(\"l\")) return \"orange\";\r\n            if(e.includes(\"d\")) return \"green\";\r\n        }\r\n\r\n        !this.props.state.solvedSet.length?\r\n        solverSet.push(defaultMessage):\r\n        this.props.state.solvedSet.forEach((el,i)=>el===this.props.state.solvedSet[i+1]?\r\n            <></>:\r\n            el===\"stop'\"? \r\n            (solverSet.push(<div key={i} style={{width:\"100%\"}}><hr key={i} style={{border:\"1px solid lightblue\",marginLeft:\"5px\"}}></hr>{jumperButtons.length===1?\"Edges: \":\"3x3: \"}</div>),jumperButtons.push(\r\n                jumperButtons.length===1?<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>Edge</div>:\r\n                <div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>3x3</div>\r\n            )):\r\n            el===this.props.state.solvedSet[i-1]?\r\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\r\n                    solverSet.push(<div \r\n                        id={i-1} \r\n                        className={`solveMoveDiv nextSolveIndex ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0${el[1]}`,el[1]).replace(\"'\",\"\")+\"2\"}\r\n                    </div>):\r\n                    solverSet.push(<div \r\n                        onClick={(e)=>setTarget(e,this.props)} \r\n                        id={i-1} \r\n                        className={`solveMoveDiv ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0${el[1]}`,el[1]).replace(\"'\",\"\")+\"2\"}\r\n                    </div>):\r\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\r\n                    solverSet.push(<div \r\n                        id={i} \r\n                        className={`solveMoveDiv nextSolveIndex ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0${el[1]}`,el[1])}\r\n                    </div>):\r\n                    solverSet.push(<div \r\n                        onClick={(e)=>setTarget(e,this.props)} \r\n                        id={i} className={`solveMoveDiv ${buttonClassColor(el)}`} \r\n                        key={i}>{el.replace(`0${el[1]}`,el[1])}</div>)\r\n        )\r\n\r\n        solverSet.map(el=><LazyLoad height=\"2rem\">el</LazyLoad>);\r\n        \r\n        let algorithmSet = \r\n            algorithms\r\n                .filter(algo=>algo.worksFor.includes(this.props.state.cubeDimension))\r\n                .map(algo=>\r\n                    <button \r\n                        id={algo.name} \r\n                        key={algo.name}\r\n                        className={\r\n                            this.props.state.activeAlgo===algo.name?\r\n                                \"algoButton algoActive\":\"algoButton\"\r\n                        }\r\n                        onClick={()=>algoStart(algo.name,this.props)}>\r\n                        {algo.name}\r\n                    </button>\r\n                    );\r\n\r\n        function preSetTarget(e,props,setTarget){\r\n            props.setState({autoScroll:true});\r\n            setTarget(e,props);\r\n        }\r\n\r\n        return(\r\n            <div className=\"sideMenu\">\r\n                <div className=\"sideMenuBox0 sideLimit\">\r\n                    {this.props.state.currentFunc===\"Solving\"?\r\n                    <div className=\"sideMovesBox\">\r\n                        \r\n                        {solverSet}\r\n                        \r\n                    </div>:\r\n                    [\r\n                    <div className=\"sideMenuBox1\" key=\"sideMenuBox1\">\r\n                        <div className=\"algoList\" style={{maxWidth:\"400px\"}}>\r\n                            {algorithmSet}  \r\n                        </div>\r\n                    </div>,\r\n                    <div className=\"sideMenuBox2\" key=\"sideMenuBox2\">\r\n                        <div className=\"sideMovesBox\">\r\n                        \r\n                            {solverSet}\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    ]\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default React.memo(SolverUI);","import \"../SideView/SideView.css\";\r\nimport React, { Component } from \"react\";\r\nimport \"./SideSolverUI.css\";\r\nimport \"../SolverUI/SolverUI.css\";\r\n\r\nclass SideSolverControls extends Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.state.autoRewind === true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\r\n            //console.log(\"attempting rewind\");\r\n            if (nextProps.state.moveSet[0] === \"stop'\") {\r\n                nextProps.setState({ autoRewind: false });\r\n            }\r\n            nextProps.rewindOne();\r\n        }\r\n        else if (nextProps.state.autoRewind === true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex) {\r\n            //console.log(\"ending rewind\");\r\n            nextProps.setState({ autoRewind: false });\r\n        }\r\n\r\n        if (nextProps.state.autoPlay === true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\r\n            //console.log(\"attempting rewind\");\r\n            if (nextProps.state.moveSet[0] === \"stop'\") {\r\n                nextProps.setState({ autoPlay: false });\r\n            }\r\n            nextProps.playOne(nextProps);\r\n        }\r\n        else if (nextProps.state.autoPlay === true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\r\n            //console.log(\"ending rewind\");\r\n            nextProps.setState({ autoPlay: false });\r\n        }\r\n        // if(nextProps.state.jumpToEnd){\r\n        //     nextProps.setState({jumpToEnd:false},setTarget({target:{id:nextProps.state.moveSet.length}},nextProps));\r\n        // }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (document.querySelector(\".nextSolveIndex\") && this.props.state.autoScroll) {\r\n            document.querySelector(\".nextSolveIndex\").scrollIntoView(true);\r\n            this.props.setState({ autoScroll: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let prevSet = this.props.state.prevSet;\r\n        let moveSet = this.props.state.moveSet;\r\n\r\n        let previousMove =\r\n            <div className=\"previousMove\">\r\n                {prevSet.length - 1 >= 0 ?\r\n                    prevSet[prevSet.length - 1] === \"stop'\" ?\r\n                        prevSet[prevSet.length - 2] ?\r\n                            prevSet[prevSet.length - 2] === prevSet[prevSet.length - 3] ?\r\n                                prevSet[prevSet.length - 2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1]).replace(\"'\", \"\") + 2\r\n                                :\r\n                                prevSet[prevSet.length - 2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1])\r\n                            :\r\n                            \"-\"\r\n                        :\r\n                        prevSet[prevSet.length - 1] === prevSet[prevSet.length - 2] ?\r\n                            prevSet[prevSet.length - 1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1]).replace(\"'\", \"\") + 2\r\n                            :\r\n                            prevSet[prevSet.length - 1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1])\r\n                    :\r\n                    \"-\"}\r\n            </div>\r\n\r\n        let nextMove =\r\n            <div className=\"nextMove\">\r\n                {moveSet[0] && typeof (moveSet[0][0]) === 'string' && moveSet[0] !== \"'\" ?\r\n                    moveSet[0] === \"stop'\" ?\r\n                        moveSet[1] ?\r\n                            moveSet[1] === moveSet[2] ?\r\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1]).replace(\"'\", \"\") + 2\r\n                                :\r\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1])\r\n                            :\r\n                            \"-\"\r\n                        :\r\n                        moveSet[0] === moveSet[1] ?\r\n                            moveSet[0].replace(`0`+moveSet[0][1],moveSet[0][1]).replace(\"'\", \"\") + 2\r\n                            :\r\n                            moveSet[0].replace(`0`+moveSet[0][1],moveSet[0][1])\r\n                    :\r\n                    \"-\"\r\n                }\r\n            </div>;\r\n\r\n\r\n        function fastforward(props) {\r\n            if (!props.state.moveSet.length) return;\r\n            props.state.moveSet.length === 1 ?\r\n                props.playOne(props) :\r\n                props.setState({\r\n                    autoPlay: true,\r\n                    autoRewind: false,\r\n                    targetSolveIndex: props.state.solvedSet.length\r\n                });\r\n        }\r\n\r\n        function fastrewind(props) {\r\n            props.setState({ autoPlay: false, autoRewind: true, targetSolveIndex: 0 });\r\n        }\r\n\r\n        function pauseSolver(props) {\r\n            props.setState({ autoPlay: false, autoRewind: false });\r\n        }\r\n\r\n\r\n        return <div className=\"controllerBox\" style={{ width: `30vw` }}>\r\n            <div className=\"buttonWrapper\">\r\n\r\n            <div className=\"solverButtonDiv rewindOne\">\r\n                <button\r\n                    className={`solverButton`}\r\n                    onClick={() => this.props.rewindOne(this.props)}>\r\n                    Previous {previousMove}\r\n                </button>\r\n            </div>\r\n            <div className=\"solverButtonDiv playOne\">\r\n                <button\r\n                    className={`solverButton`}\r\n                    onClick={() => this.props.playOne(this.props)}>\r\n                    Next {nextMove}\r\n                </button>\r\n            </div>\r\n            <div className=\"solverButtonDiv rewindAll\">\r\n                {this.props.state.autoRewind ?\r\n                    <button\r\n                        className={`solverButton`}\r\n                        onClick={() => pauseSolver(this.props)}>\r\n                        <div style={{ width: \"100%\" }}>Pause</div> Solver\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        className={`solverButton`}\r\n                        onClick={() => fastrewind(this.props)}>\r\n                        <div style={{ width: \"100%\" }}>Auto</div> Rewind\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className=\"solverButtonDiv fastforward\">\r\n                {this.props.state.autoPlay ?\r\n                    <button\r\n                        className={`solverButton`}\r\n                        onClick={() => pauseSolver(this.props)}>\r\n                        <div style={{ width: \"100%\" }}>Pause</div> Solver\r\n                    </button>\r\n                    :\r\n                    <button\r\n                        className={`solverButton`}\r\n                        onClick={() => fastforward(this.props)}>\r\n                        <div style={{ width: \"100%\" }}>Auto</div> Forward\r\n                    </button>\r\n                }\r\n            </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default React.memo(SideSolverControls);","import React from \"react\";\r\nimport ColorButton from \"./ColorButton\";\r\nimport \"./ColorPicker.css\";\r\n\r\nconst SideColorPickerController = (props) => {\r\n    const colors = [\"white\",\"blue\",\"red\",\"yellow\",\"orange\",\"green\"];\r\n    const li = [];\r\n    props.cpErrors.forEach(function(error,i){\r\n        li.push(<p key={i} style={{color:\"red\",fontSize:\".8rem\",textAlign:\"left\",listStyle:\"none\",margin:\"2px\",lineHeight: \"15px\"}}>\r\n            {\"- \"+error}\r\n        </p>);\r\n    });\r\n\r\n    return (\r\n        <div className=\"controllerBox\" style={{ width: `30vw` }}>\r\n            <div className=\"colorButtonContainer\">\r\n                {colors.map((color,i)=><ColorButton\r\n                    index={i+1} \r\n                    key={color}\r\n                    height={1/3*100}\r\n                    color={color}\r\n                    side={true}\r\n                    colorPicked={props.colorPicked}\r\n                    changeColor={props.changeColor}\r\n                    isMobile={props.isMobile}\r\n                />)}\r\n            </div>\r\n        </div>\r\n    )     \r\n\r\n};\r\n\r\nexport default SideColorPickerController;","import React from \"react\";\r\nimport \"./MainSideMenu.css\";\r\nimport \"../SideView/SideView.css\";\r\n\r\nconst MainSideMenuButton = props => {\r\n    return (\r\n        <div className=\"mainSideMenuButton\" style={{height:`${1/6*100}%`}}>\r\n            <button className=\"sideMenuButton\" onClick={props.onClick}>\r\n                {props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainSideMenuButton;","import React from \"react\";\r\nimport \"./MainSideMenu.css\";\r\nimport \"../SideView/SideView.css\";\r\nimport algs from \"../../cubeFunctions/algorithms\"\r\nimport MainSideMenuButton from \"./MainSideMenuButton\";\r\n\r\nconst MainSideMenu = props => {\r\n\r\n    let algorithmSet = algs.filter(algo=>algo.worksFor.includes(props.state.cubeDimension));\r\n\r\n    function colorPicker(){\r\n        if(props.state.currentFunc===\"None\"){\r\n            props.setState({activeMenu:\"ColorPicker\",isValidConfig:true});\r\n            props.beginColorPicker();\r\n        }\r\n    }\r\n\r\n    function solver(){\r\n        if(props.state.currentFunc===\"None\")\r\n            props.setState({activeMenu:\"Solver\"},props.beginSolve());\r\n    }\r\n\r\n    function scramble(){\r\n        if(props.state.currentFunc===\"None\"){\r\n            props.setState({activeMenu:\"Scrambling\"},props.beginScramble());\r\n        }\r\n    }\r\n\r\n    function reset(){\r\n        props.setState({activeMenu:\"\",currentFunc:\"Reset\"})\r\n    }\r\n\r\n    function algorithms(){\r\n        if(props.state.currentFunc===\"None\")\r\n            props.setState({activeMenu:\"Algorithms\",currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[]});\r\n    }\r\n    \r\n    return (\r\n        <div className=\"sideMenuBox0 sideLimit\">\r\n            {props.state.cubeDimension<=100?<MainSideMenuButton \r\n                name=\"Color Picker\"\r\n                onClick={colorPicker}\r\n            />:[]}\r\n            {props.state.cubeDimension<=100?\r\n            <MainSideMenuButton \r\n                name=\"Solver\"\r\n                onClick={solver}\r\n            />:[]}  \r\n            {algorithmSet.length>0?<MainSideMenuButton \r\n                name=\"Patterns\"\r\n                onClick={algorithms}\r\n            />:[]}\r\n            {/* <MainSideMenuButton\r\n                name=\"Moves\" \r\n            /> */}\r\n            <MainSideMenuButton \r\n                name=\"Scramble\"\r\n                onClick={scramble}\r\n            />\r\n            <MainSideMenuButton \r\n                name=\"Reset\"\r\n                onClick={reset}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainSideMenu;","import React,{Component} from \"react\";\r\nimport Controls from \"../Controls\";\r\nimport ColorPicker from \"../ColorPicker/SideColorPicker\";\r\nimport SideSolverUI from \"../SolverUI/SideSolverUI\";\r\nimport SideSolverControls from \"../SolverUI/SideSolverControls\";\r\nimport SideColorPickerController from \"../ColorPicker/SideColorPickerController\";\r\nimport MainSideMenu from \"../MainSideMenu/MainSideMenu\";\r\nimport \"./SideView.css\";\r\n\r\n\r\nclass SideView extends Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.props.state.upDateCp!==nextProps.state.upDateCp){\r\n            return true;\r\n        }\r\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\r\n            //console.log(nextProps.state.solvedSet);\r\n            return true;\r\n        }\r\n\r\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\r\n\r\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\r\n\r\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\r\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\r\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\r\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\r\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\r\n\r\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\r\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\r\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\r\n\r\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\r\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\r\n\r\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\r\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\r\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\r\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\r\n           this.props.cpErrors===nextProps.cpErrors&&\r\n           this.props.state.solveTime===nextProps.state.solveTime&&\r\n           this.props.state.playOne===nextProps.state.playOne&&\r\n           !this.props.state.autoPlay) return false;\r\n\r\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\r\n\r\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\r\n\r\n        return true;\r\n    }\r\n    render(){\r\n        let activeMenu;\r\n        let activeMenuBottom;\r\n        let activeMenuExit;\r\n\r\n\r\n        let exitConfirm = () =>{\r\n            document.querySelector(\".warningPopupSolver\").style.visibility=\"visible\";\r\n            document.querySelector(\".controllerBox\").style.visibility=\"hidden\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"hidden\";\r\n        }\r\n\r\n        let exitCpConfirm = () => {\r\n            document.querySelector(\".warningPopup\").style.display=\"block\";\r\n            document.querySelector(\".colorButtonContainer\").style.visibility=\"hidden\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"hidden\";\r\n        }\r\n\r\n        let exitAlgo = () => {\r\n            this.props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\r\n        }\r\n\r\n        function stay() {\r\n            document.querySelector(\".warningPopupSolver\").style.visibility = \"hidden\";\r\n            document.querySelector(\".controllerBox\").style.visibility=\"visible\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\r\n        }\r\n\r\n        function stayCp(){\r\n            document.querySelector(\".warningPopup\").style.display = \"none\";\r\n            document.querySelector(\".colorButtonContainer\").style.visibility=\"visible\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\r\n        }\r\n\r\n        function leave(e, props) {\r\n            document.querySelector(\".warningPopupSolver\").style.visibility = \"hidden\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\r\n            e.stopPropagation();\r\n            props.stopSolve();\r\n\r\n            if (document.querySelector(\".activeMenu\")) {\r\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\r\n            }\r\n\r\n            if (document.querySelector(\"#solverChangeData\").data) {\r\n                let data = document.querySelector(\"#solverChangeData\").data.split(\",\");\r\n                if (data[0] === \"ColorPicker\") {\r\n                    props.setState({ activeMenu: \"\", currentFunct: \"None\", isValidConfig: false });\r\n                    document.querySelector(\"#solverChangeData\").data = \"\";\r\n                    return;\r\n                }\r\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\r\n                props.setState({ activeMenu: data[0], currentFunct: data[1], isValidConfig: false });\r\n                document.querySelector(\"#solverChangeData\").data = \"\";\r\n\r\n            }\r\n            else {\r\n                props.setState({ activeMenu: \"\", currentFunct: \"None\", isValidConfig: false });\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        let  leaveCp = () => {\r\n            document.querySelector(\".warningPopup\").style.display = \"none\";\r\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\r\n            this.props.endColorPicker();\r\n\r\n            if( document.querySelector(\".activeMenu\")){\r\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\r\n            }\r\n\r\n            if(document.querySelector(\"#cpChangeData\").data){\r\n                let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\r\n                if(data[0]===\"Solver\") {\r\n                    this.props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\r\n                    document.querySelector(\"#cpChangeData\").data=\"\";\r\n                    return;\r\n                }\r\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\r\n                document.querySelector(\"#cpChangeData\").data=\"\";\r\n\r\n                this.props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>this.props.beginSolve());\r\n            }\r\n            else{\r\n                this.props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\r\n            }\r\n        }\r\n\r\n        let solverLeaveButton = \r\n            <button \r\n                id=\"Solver\" \r\n                data=\"Solving\" \r\n                onClick={exitConfirm} \r\n                className=\"exitButton\">Exit</button>\r\n\r\n        let algoLeaveButton =\r\n            <button \r\n                id=\"Algorithms\" \r\n                data=\"Algorithms\" \r\n                onClick={exitAlgo} \r\n                className=\"exitButton\">Exit</button>\r\n        \r\n        let cpLeaveButton =\r\n            <button \r\n                id=\"ColorPicker\" \r\n                data=\"Color Picker\" \r\n                onClick={exitCpConfirm} \r\n                className=\"exitButton\">Exit</button>\r\n\r\n        let confirmLeavePopup =\r\n            <div id=\"controlsPopup\" className=\"warningPopupSolver\" style={{position:\"absolute\", left:\"35vw\", width:\"30vw\", bottom: \"8px\"}}>\r\n                <div id=\"solverChangeData\" data=\"\"></div>\r\n                <div className=\"solverMessage\">Are you sure you want to leave Solver? Progress will not be saved.</div>\r\n                <button onClick={stay} className=\"solverLeaveStay\">Stay</button><button onClick={(e) => leave(e, this.props)} className=\"solverLeaveStay\">Leave</button>\r\n            </div>\r\n        \r\n        let confirmLeavePopupCp=\r\n            <div id=\"controlsPopup\" className=\"warningPopup\" style={{position:\"absolute\", left:\"35vw\", width:\"30vw\", bottom: \"8px\"}}>\r\n                <div id=\"cpChangeData\" data=\"\"></div>\r\n                <div className=\"cpMessage\">Are you sure you want to leave Color Picker? Progress will not be saved.</div>\r\n                <button onClick={stayCp} className=\"cpLeaveStay\">Stay</button><button onClick={leaveCp} className=\"cpLeaveStay\">Leave</button>\r\n            </div>\r\n\r\n        switch(this.props.state.activeMenu){\r\n            case 'Moves':\r\n                activeMenu = <Controls {...this.props}/>\r\n                break;\r\n            case 'ColorPicker':\r\n                activeMenu = <ColorPicker {...this.props}/>\r\n                activeMenuBottom = <SideColorPickerController {...this.props} />\r\n                activeMenuExit = cpLeaveButton;\r\n                break;\r\n            case 'Solver':\r\n                activeMenu=<SideSolverUI {...this.props}/>\r\n                activeMenuBottom=<SideSolverControls {...this.props}/>\r\n                activeMenuExit=solverLeaveButton;\r\n                break;\r\n            case 'Algorithms':\r\n                activeMenu=<SideSolverUI {...this.props}/>\r\n                activeMenuBottom=<SideSolverControls {...this.props}/>\r\n                activeMenuExit=algoLeaveButton;\r\n                break;\r\n            default:\r\n                activeMenu=<MainSideMenu {...this.props}/>;\r\n                activeMenuBottom=\"\";\r\n        }\r\n\r\n        \r\n        //console.log(\"hi\")\r\n        return (\r\n        [<div className=\"sideMenuWrapper\" key=\"sideMenuWrapper\" style={{pointerEvents: \"none\"}}>\r\n            {activeMenu}\r\n        </div>,\r\n        <div className=\"bottomMenuWrapper\" key=\"bottomMenuWrapper\" style={{pointerEvents: \"none\"}}>\r\n            {confirmLeavePopupCp}\r\n            {confirmLeavePopup}\r\n            {activeMenuBottom}\r\n            <div className=\"bottomExitDiv\">\r\n                {activeMenuExit}\r\n            </div>\r\n            \r\n        </div>])\r\n    }\r\n}\r\n\r\nexport default React.memo(SideView);","import React,{Component} from \"react\";\r\nimport MobileView from \"../MobileView/MobileView\";\r\nimport View from \"../View\";\r\nimport SideView from \"../SideView/SideView\";\r\nclass Menu extends Component {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        \r\n        if(this.props.state.resized===true){\r\n            this.props.setState({resized:false});\r\n            return true;\r\n        }\r\n\r\n        if(this.props.state.upDateCp!==nextProps.state.upDateCp){\r\n            return true;\r\n        }\r\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\r\n            //console.log(nextProps.state.solvedSet);\r\n            return true;\r\n        }\r\n\r\n        if(this.props.state.currentFunc===\"Scrambling\") return true;\r\n\r\n        if(this.props.state.activeMenu===nextProps.state.activeMenu&&this.props.state.activeMenu===\"none\") return false;\r\n\r\n        if(\r\n            (this.props.state.currentFunc===\"Algorithms\"||this.props.state.currentFunc===\"Solving\")&&\r\n            this.props.state.moveSet===nextProps.state.moveSet&&\r\n            this.props.state.playOne===false&&\r\n            this.props.state.autoPlay===false&&\r\n            this.props.state.autoRewind===false&&\r\n            nextProps.state.autoRewind===false\r\n            ) \r\n            return false;\r\n        return true;\r\n    }\r\n    render(){\r\n        const props = this.props;\r\n        return (window.innerWidth > 900&&window.innerHeight>580)? \r\n            <SideView {...props}/> \r\n                : window.innerWidth > 600?\r\n            <View {...props}/>:\r\n            <MobileView {...props}/>;  \r\n    } \r\n}\r\n\r\nexport default React.memo(Menu);","import cube from \"../../cubeFunctions/cube\";\r\nimport solverMain from \"../../solvers/solverMain\";\r\n\r\nconst ColorPickerUIFunctions = {\r\n    alignQuadrant(_piece,size){\r\n        let pos = _piece.position;\r\n        let piece = {colors:_piece.colors}\r\n        const max = size-1;\r\n        const X = 0, Y = 1, Z = 2;\r\n        if(pos[X] < Math.floor(size/2) && pos[Y] >= Math.floor(size/2)){\r\n          piece.position = [ (max - pos[Y]), pos[X], pos[Z] ].join(\"\");\r\n        }\r\n        else if(pos[X] >= Math.floor(size/2) && pos[Y] >= Math.ceil(size/2)){\r\n          piece.position = [ (max - pos[X]), max - pos[Y], pos[Z] ].join(\"\");\r\n        }\r\n        else if(pos[X] >= Math.ceil(size/2) && pos[Y] < Math.ceil(size/2)){\r\n          piece.position = [ pos[Y], (max-pos[X]), pos[Z]].join(\"\");\r\n        }\r\n        else piece.position=pos.join(\"\");\r\n        return piece;\r\n    },\r\n\r\n    checkOccurences : function (a1, a2) {\r\n        let success = true;\r\n        let amount = 0;\r\n        let failedColors = [];\r\n        for(var i = 0; i < a1.length; i++) {\r\n          var count = 0;\r\n          for(var z = 0; z < a2.length; z++) {\r\n            if (a2[z] === a1[i]) count++;\r\n          }\r\n          if(count>1) {\r\n            success = false;\r\n            if(!failedColors.includes(a1[i])) failedColors.push(a1[i])\r\n          }\r\n    \r\n        }\r\n        return {success,failedColors,amount}\r\n    },\r\n\r\n    convertToBlueMiddle : function (_piece,size) {\r\n        const piece = [..._piece];\r\n        const max = size-1;\r\n        const white=0,blue=size-1,red=size-1,yellow=size-1,orange=0,green=0;\r\n    \r\n        if(piece[7]===white) {\r\n          return {\r\n            colors:[\r\n              piece[5], // color on bottom(face 5) is now on front(index 0)\r\n              piece[0], // color on front(0) is now on top(1)\r\n              piece[2], // color on right(2) is still on right(2)\r\n              piece[1], // color on top(1) is now on back(3)\r\n              piece[4], // color on left(4) is now on left(4)\r\n              piece[3]  // color on back(3) is now on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[6],\r\n              piece[8],\r\n              max // becomes top\r\n            ]\r\n          }\r\n        }\r\n    \r\n        if(piece[8]===blue) {\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is now on front(0)\r\n              piece[1], // piece on top(1) is still on top(1)\r\n              piece[2], // piece on right(2) is now on right(2)\r\n              piece[3], // piece on back(3) is now on back(3)\r\n              piece[4], // piece on left(4) is now on left(4)\r\n              piece[5] // piece on bottom(5) is still on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[6], // stays same\r\n              piece[7],  // stays same\r\n              max // becomes top\r\n            ]\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===red) {\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(index 0) remains the same\r\n              piece[2], // piece on right(2) is still on top(1)\r\n              piece[5], // piece on bottom(5) is now on right(2)\r\n              piece[3], // piece on back(3) remains the same\r\n              piece[1], // piece on top(1) is now on left(4)\r\n              piece[4]  // piece on left(4) is still on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[8], \r\n              piece[7],  \r\n              max // becomes top\r\n            ]\r\n          }\r\n        }\r\n    \r\n        if(piece[7]===yellow) {\r\n          return {\r\n            colors:[\r\n              piece[1], // piece on front(0) is now on bottom(5)\r\n              piece[3], // piece on top(1) is still on front(0)\r\n              piece[2], // piece on right(2) is now on right(2)\r\n              piece[5], // piece on back(3) is now on top(1)\r\n              piece[4], // piece on left(4) is now on left(4)\r\n              piece[0] // piece on bottom(5) is still on back(3)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[6], // inverse y becomes x\r\n              max-piece[8],  // y becomes 0\r\n              max // becomes top\r\n            ]\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===orange) {\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is now on front(0)\r\n              piece[4], // piece on top(1) is still on right(2)\r\n              piece[1], // piece on right(2) is now on bottom(5)\r\n              piece[3], // piece on back(3) is now on back(3)\r\n              piece[5], // piece on left(4) is now on top(1)\r\n              piece[2] // piece on bottom(5) is still on left(4)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[8], // inverse y becomes x\r\n              piece[7],  // y becomes 0\r\n              max // becomes top\r\n            ]\r\n          }\r\n        }\r\n    \r\n        if(piece[8]===green) {\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is now on front(0)\r\n              piece[5], // piece on top(1) is still on bottom(5)\r\n              piece[4], // piece on right(2) is now on left(4)\r\n              piece[3], // piece on back(3) is now on back(3)\r\n              piece[2], // piece on left(4) is now on right(2)\r\n              piece[1] // piece on bottom(5) is still on top(1)\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[6], // inverse y becomes x\r\n              piece[7],  // y becomes 0\r\n              max // becomes top\r\n            ]\r\n          }\r\n        }\r\n    \r\n    },\r\n\r\n    checkValidMatchMiddle(validPiece,manualPiece,size){\r\n        let newValidPiece = ColorPickerUIFunctions.alignQuadrant(ColorPickerUIFunctions.convertToBlueMiddle(validPiece,size),size);\r\n        let newManualPiece = ColorPickerUIFunctions.alignQuadrant(ColorPickerUIFunctions.convertToBlueMiddle(manualPiece,size),size);\r\n        if(newValidPiece.colors===newManualPiece.colors&&newValidPiece.position===newManualPiece.position){\r\n          return true;\r\n        }\r\n        return false;\r\n    },\r\n    \r\n    convertToBlueWhiteEdge : function (_piece,size) {\r\n        const piece = [..._piece];\r\n        const max = size-1;\r\n        const white=0,blue=size-1,red=size-1,yellow=size-1,orange=0,green=0;\r\n    \r\n        // colors according to the solved cube\r\n        if(piece[7]===white&&piece[8]===blue) {\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is now on front(0)\r\n              piece[1], // piece on top(1) is still on top(1)\r\n              piece[2], // piece on right(2) is now on right(2)\r\n              piece[3], // piece on back(3) is now on back(3)\r\n              piece[4], // piece on left(4) is now on left(4)\r\n              piece[5] // piece on bottom(5) is still on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[6], // inverse y becomes x\r\n              0,  // y becomes 0\r\n              max // becomes top\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===orange&&piece[8]===blue) {\r\n          return {\r\n            colors:[\r\n              piece[4], // piece on left(4) is now on front(0)\r\n              piece[1], // piece on top(1) is still on top(1)\r\n              piece[0], // piece on front(0) is now on right(2)\r\n              piece[2], // piece on right(2) is now on back(3)\r\n              piece[3], // piece on back(3) is now on left(4)\r\n              piece[5] // piece on bottom(5) is still on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[7], // inverse y becomes x\r\n              0,  // y becomes 0\r\n              max // becomes top\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[7]===yellow&&piece[8]===blue){\r\n          return {\r\n            colors:[\r\n              piece[3], // piece on back(3) is now on front(0)\r\n              piece[1], // piece on top(1) is still on top(1)\r\n              piece[4], // piece on left(4) is now on right(2)\r\n              piece[0], // piece on front(0) is now on back(3)\r\n              piece[2], // piece on right(2) is now on left(4)\r\n              piece[5] // piece on bottom(5) is still on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              size-(piece[6]+1), // inverse x becomes x\r\n              0,  // y becomes 0\r\n              max // becomes top\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===red&&piece[8]===blue){\r\n          return {\r\n            colors:[\r\n              piece[2], // piece on right(2) is now on front(0)\r\n              piece[1], // piece on top(1) is still on top(1)\r\n              piece[3], // piece on back(3) is now on right(2)\r\n              piece[4], // piece on left(4) is now on back(3)\r\n              piece[0], // piece on front(0) is now on left(4)\r\n              piece[5] // piece on bottom(5) is still on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[7], // inverse y becomes x\r\n              0,  // y becomes 0\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===orange&&piece[7]===white){\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is still on front(0)\r\n              piece[4], // piece on left(4) is now on top(1)\r\n              piece[1], // piece on top(1) is now on right(2)\r\n              piece[3], // piece on back(3) is still on back(3)\r\n              piece[5], // piece on bottom(5) is now on left(4)\r\n              piece[2] // piece on right(2) is now on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[8], // z becomes x\r\n              0,  // y 0\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===red&&piece[7]===white){\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is still on front(0)\r\n              piece[2], // piece on right(2) is now on top(1)\r\n              piece[5], // piece on bottom(5) is now on right(2)\r\n              piece[3], // piece on back(3) is still on back(3)\r\n              piece[1], // piece on top(1) is now on left(4)\r\n              piece[4] // piece on left(4) is now on bottom(5)\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[8], // inverse z becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===orange&&piece[7]===yellow){\r\n          return {\r\n            colors:[\r\n              piece[4], // piece on left(4) is now on front(0)\r\n              piece[3], // piece on back(3) is now on top(1)\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[8], // z becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===red&&piece[7]===yellow){\r\n          return {\r\n            colors:[\r\n              piece[2], // piece on right(2) is now on front(0)\r\n              piece[3], // piece on back(1) is still on top(1)\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[8], // inverse z becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[7]===white&&piece[8]===green){\r\n          return {\r\n            colors:[\r\n              piece[0], // piece on front(0) is still on front(0)\r\n              piece[5], // piece on bottom(5) is now on top(1)\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[6], // inverse x becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===orange&&piece[8]===green){\r\n          return {\r\n            colors:[\r\n              piece[4], // piece on left(4) is now on front(0)\r\n              piece[5], // piece on bottom(5) is now on top(1)\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[7], // y becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[7]===yellow&&piece[8]===green){\r\n          return {\r\n            colors:[\r\n              piece[3], // piece on back(3) is now on front(0)\r\n              piece[5], // piece on bottom(5) is now on top(1)\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n            ].join(\"\"),\r\n            position:[\r\n              piece[6], // x becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n    \r\n        if(piece[6]===red&&piece[8]===green){\r\n          return {\r\n            colors:[\r\n              piece[2], // piece on right(2) is now on front(0)\r\n              piece[5], // piece on bottom(5) is now on top(1)\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n              \"black\",\r\n            ].join(\"\"),\r\n            position:[\r\n              max-piece[7], // inverse y becomes x\r\n              0,  // y remains the same\r\n              max // becomes tops\r\n            ].join(\"\")\r\n          }\r\n        }\r\n        \r\n        console.log(\"failed to register piece\",piece);\r\n        return null;\r\n    },\r\n\r\n    checkValidMatchEdge : function(validPiece,manualPiece,size) {\r\n        let max = size-1;\r\n        let newValidPiece = ColorPickerUIFunctions.convertToBlueWhiteEdge([...validPiece],size);\r\n        let newManualPiece = ColorPickerUIFunctions.convertToBlueWhiteEdge([...manualPiece],size); \r\n        if((newValidPiece.colors===newManualPiece.colors&&newValidPiece.position===newManualPiece.position)||validPiece.includes(\"center\")){\r\n          return true;\r\n        }\r\n        else if(newValidPiece.colors!==newManualPiece.colors&&parseInt(newValidPiece.position[0])===max-parseInt(newManualPiece.position[0])){\r\n          //console.log(\"valid\");\r\n          //console.log(newValidPiece,newManualPiece)\r\n          return true;\r\n        }\r\n        else return false;\r\n    },\r\n\r\n    checkColors : function (state) {\r\n        let size = state.cubeDimension;\r\n        let rubiksLength = state.rubiksObject.length;\r\n        let whiteCount = 0,blueCount = 0,redCount = 0,yellowCount = 0,orangeCount = 0,greenCount = 0;\r\n        let duplicateFace = false;\r\n        let duplicateColors = [];\r\n        let matchedCount = 0;\r\n        let obj = {error:[]};\r\n        let validAmount = size*size;\r\n        let rubiks = [...state.rubiksObject];\r\n        let generated = cube.generateSolved(size,size,size);\r\n        let newGenerated = [];\r\n        let invalidMiddleConfig;\r\n        let invalidEdgeConfig;\r\n        for(let i = 0; i < rubiks.length; i++){\r\n          let rubik = [...rubiks[i]];\r\n          const colors = ['white','blue','red','yellow','orange','green'];\r\n          if(rubik.includes('white')) whiteCount+=1;\r\n          if(rubik.includes('blue')) blueCount+=1;\r\n          if(rubik.includes('red')) redCount+=1;\r\n          if(rubik.includes('yellow')) yellowCount+=1;\r\n          if(rubik.includes('orange')) orangeCount+=1;\r\n          if(rubik.includes('green')) greenCount+=1;\r\n    \r\n          let res = ColorPickerUIFunctions.checkOccurences(colors,rubik);\r\n          if(!res.success){\r\n            duplicateFace = true;\r\n            let tempColors = []\r\n            res.failedColors.forEach(color => {\r\n              if(!tempColors.includes(color)) {\r\n                tempColors.push(color);\r\n              }\r\n            })\r\n            duplicateColors=tempColors;\r\n          }\r\n        }\r\n    \r\n        let checked = [];\r\n        let otherChecked = [];\r\n        //For each cube piece in the generated solved cube, find the matching\r\n        //manually inputted piece and overwrite the solved position from the unsolved\r\n        //piece with the solved piece's solved position to a new generated cube. For \r\n        //edge pieces, an extra check was needed to ensure first half segments weren't\r\n        //getting assigned or assigning to second half segments(becomes unsolvable).\r\n        generated.tempArr.forEach(([...piece],pieceIndex) =>{\r\n          newGenerated.push([]);\r\n          let tempInvalidMatch = [];\r\n          rubiks.forEach(([...rubik],i) => {\r\n            \r\n            let validPiece = 0;\r\n            piece.slice(0,6).sort().forEach((face,index) =>{\r\n              if(rubik.slice(0,6).sort()[index]===face) {validPiece++;}\r\n            });\r\n            if(validPiece===6&&!checked.includes(pieceIndex)&&!otherChecked.includes(i)){\r\n              let validEdgePlacement = false;\r\n              let validMiddlePlacement = false;\r\n              if(piece.includes(\"edge\")){\r\n                validEdgePlacement = ColorPickerUIFunctions.checkValidMatchEdge(piece,rubik,size);\r\n                // A center edge cannot match with a non center edge\r\n                if((piece[13]===\"center\"&&rubik[13]!==\"center\")||\r\n                  (rubik[13]===\"center\"&&piece[13]!==\"center\")){\r\n                    validEdgePlacement = false;\r\n                }\r\n                else if (piece[13]===\"center\"&&rubik[13]===\"center\"){\r\n                  validEdgePlacement = true;\r\n                }\r\n              }\r\n              else if(piece.includes(\"middle\")){\r\n                validMiddlePlacement = ColorPickerUIFunctions.checkValidMatchMiddle(piece,rubik,size);\r\n                if(!validMiddlePlacement) tempInvalidMatch.push([piece,rubik]);\r\n              }\r\n              else{\r\n                validEdgePlacement = true;\r\n                validMiddlePlacement = true;\r\n              }\r\n              if(validEdgePlacement||validMiddlePlacement){\r\n                matchedCount++;\r\n                checked.push(pieceIndex);\r\n                otherChecked.push(i);\r\n                newGenerated[pieceIndex]=[\r\n                  ...rubik.slice(0,9),\r\n                  ...piece.slice(9,15)\r\n                ];\r\n              }\r\n            }\r\n          })\r\n          if(newGenerated[pieceIndex].length===0)\r\n            if(piece[12]===\"edge\")\r\n              invalidEdgeConfig=\"Invalid edge configuration.\";\r\n            else if(piece[12]===\"middle\"){\r\n              invalidMiddleConfig = \"Invalid middle configuration.\";\r\n            }\r\n        });\r\n    \r\n        let invalidAmounts = [];\r\n        if(whiteCount!==validAmount){\r\n          invalidAmounts.push(\"white\");\r\n        }\r\n        if(blueCount!==validAmount){\r\n          invalidAmounts.push(\"blue\");\r\n        }\r\n        if(redCount!==validAmount){\r\n          invalidAmounts.push(\"red\");\r\n        }\r\n        if(yellowCount!==validAmount){\r\n          invalidAmounts.push(\"yellow\");\r\n        }\r\n        if(orangeCount!==validAmount){\r\n          invalidAmounts.push(\"orange\");\r\n        }\r\n        if(greenCount!==validAmount){\r\n          invalidAmounts.push(\"green\");\r\n        }\r\n        if(invalidAmounts.length){\r\n          invalidAmounts=invalidAmounts.join(', ');\r\n          obj.error.push(`Invalid ${invalidAmounts} sticker count.`);\r\n        }\r\n    \r\n        if(duplicateFace){\r\n          duplicateColors=duplicateColors.join(', ');\r\n          obj.error.push(`More than one occurence of ${duplicateColors} found on a piece.`);\r\n        }\r\n    \r\n        if(matchedCount!==rubiksLength&&state.cubeDimension<4){\r\n          obj.error.push(`[${matchedCount-1}] out of [${rubiksLength-1}] matched. Missing [${(rubiksLength-1)-(matchedCount-1)}]`);\r\n        }\r\n    \r\n        if(invalidEdgeConfig){\r\n          obj.error.push(invalidEdgeConfig);\r\n        }\r\n        if(invalidMiddleConfig){\r\n          obj.error.push(invalidMiddleConfig);\r\n        }\r\n    \r\n        if(!obj.error.length){\r\n          const solveData = {...solverMain(state,newGenerated)};\r\n          if(solveData.solveable===false){\r\n            //console.log(newGenerated);\r\n            obj.error.push(`This configuration of the cube is not solveable,\r\n            please check that you've entered all pieces correctly.`);\r\n          }\r\n          else{\r\n            obj.error = undefined;\r\n          }\r\n        }\r\n    \r\n        if(!obj.error) {obj.success = true;obj.newGenerated = newGenerated}\r\n        return obj;\r\n    }\r\n}\r\n\r\nexport default ColorPickerUIFunctions;","import React, { Component } from 'react';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Speeds from \"./components/Speeds/Speeds\";\r\nimport MoveInput from \"./components/MoveInput\";\r\nimport SolverInfo from \"./components/SolverInfo/SolverInfo\";\r\nimport ColorPickerInfo from \"./components/ColorPickerInfo/ColorPickerInfo\";\r\nimport Menu from \"./components/MenuWrapper/MenuWrapper\";\r\n\r\nimport * as THREE from \"three\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap';\r\nimport cube from './cubeFunctions/cube';\r\nimport moveFuncs from './cubeFunctions/move';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport ColorPickerUIFunctions from \"./components/ColorPicker/ColorPickerUIFunctions\";\r\n\r\n// TODO:\r\n/*\r\n * 1. Start moving functions to other files: STARTED\r\n * \r\n * 2. UI Rework: Started\r\n * \r\n * 3. Continue working on solvers.\r\n * \r\n * 4. ISSUES:\r\n *  - Fix issue is yellow solver\r\n */\r\n\r\nclass App extends Component {\r\n  state = {\r\n    cubes : [],           // Contains visual cube\r\n    rubiksObject : [],    // Contains memory cube\r\n    blackObject: [],\r\n    speed : 7.5,          // Control individual piece rotation speed (don't change)\r\n    rotationSpeed : 350,  // Controls visual rotation speed\r\n    start : 7.5,          // Start value for a rotation or set of rotations\r\n    end : 0,              // End value for a roation or set of rotations\r\n    turnDirection : 0,    // Dictates whether the rotation is clockwise or counterclockwise\r\n    face : 0,             // The face being turned\r\n    cameraX : 5,          // Camera position x\r\n    cameraY : -5,         // Camera position y\r\n    cameraZ : 2,          // Camera position z\r\n    currentFunc : \"None\", // Variable used to display current function\r\n    moveLog : \"\",         // Keeps a log of all moves\r\n    moveSet : [],         // Algorithms queue moves through this variable\r\n    prevSet : [],\r\n    angle : 3.9,          // Camera angle\r\n    cubeDimension : null, // Cube dimensions. Ex: 3 => 3x3x3 cube\r\n    cubeDepth : 1,        // Used to determine rotation depth on cubes greater than 3\r\n    currentSpeed:\"Medium\",// Displays which speed is selected\r\n    moves : 0,            // Used by scramble functions\r\n    reload : false,       // Lets animate know when to reload the cube (after every move)\r\n    solveState : -1,      // Dictates progression of solve function\r\n    solveMoves : \"\",      // Keeps track of moves used during solve\r\n    solvedSet: [],\r\n    solvedSetIndex: 0,\r\n    facePosX : null,\r\n    facePosY : null,\r\n    facePosZ : null,\r\n    faceSide : null,\r\n    colorPicked: 'white',\r\n    mouseFace : null,\r\n    mouseDown : false,\r\n    mousePos : null,\r\n    undoIndex : 0,        // Index to keep track of where undo/redo is\r\n    blockMoveLog : false, // Blocks adding move when undoing/redoing a move\r\n    previousPiece : null, // Keeps track of hovered face to not redraw\r\n    rubiksIndex : 0,      // Index to keep track of middles while solving\r\n    middles : [],         // Contains all middle segments\r\n    corners : [],         // Contains all corner segments         \r\n    // showStats: false,     // Setting for stats\r\n    showMoveInput: false,  // Setting for custom move input\r\n    showControls: false,   // Setting for move controls\r\n    showHints: true,\r\n    showGuideArrows: true,\r\n    activeDragsInput: 0,  // Keeps track of draggable input\r\n    deltaPositionInput: {\r\n      x: 100, y: 100\r\n    },\r\n    controlledPositionInput: {\r\n      x: 0, y: 0\r\n    },\r\n    activeDragsControls: 0,// Keeps track of draggable buttons\r\n    deltaPositionControls: {\r\n      x: 100, y: 100\r\n    },\r\n    controlledPositionControls: {\r\n      x: 0, y: 0\r\n    },\r\n    isMulti : false,\r\n    isVisible : false,\r\n    isValidConfig : true,\r\n    hoverData : [],\r\n    showSolveController : false,\r\n    autoPlay : false,\r\n    autoRewind: false,\r\n    autoTarget: false,\r\n    playOne : false,\r\n    generateAllMoves: false,\r\n    isLocal : null,\r\n    cpErrors : [],\r\n    activeMenu : \"\",\r\n    solveTime:0,\r\n    targetSolveIndex: -1,\r\n    activeAlgo:\"None Selected\",\r\n    sliderSpeed:40,\r\n    jumpToEnd: false,\r\n    algoUp: false,\r\n    algoDown: false,\r\n    upDateCp: 0\r\n  };\r\n\r\n  // Bind keys to functions\r\n  keyBinds = key => {\r\n    switch (key){\r\n\r\n      case 'R':\r\n        this.rotateOneFace(key+\"'\",[2,0,1]);\r\n        break;\r\n      case 'r':\r\n        this.rotateOneFace(key.toUpperCase(),[2,-1,1]);\r\n        break;\r\n\r\n      case 'L':\r\n        this.rotateOneFace(key+\"'\",[4,0,1]);\r\n        break;\r\n      case 'l':\r\n        this.rotateOneFace(key.toUpperCase(),[4,-1,1]);\r\n        break;\r\n\r\n      case 'F':\r\n        this.rotateOneFace(key+\"'\",[0,0,1]);\r\n        break;\r\n      case 'f':\r\n        this.rotateOneFace(key.toUpperCase(),[0,-1,1]);\r\n        break;\r\n\r\n      case 'U':\r\n        this.rotateOneFace(key+\"'\",[1,0,1]);\r\n        break;\r\n      case 'u':\r\n        this.rotateOneFace(key.toUpperCase(),[1,-1,1]);\r\n        break;\r\n\r\n      case 'D':\r\n        this.rotateOneFace(key+\"'\",[5,0,1]);\r\n        break;\r\n      case 'd':\r\n        this.rotateOneFace(key.toUpperCase(),[5,-1,1]);\r\n        break;\r\n\r\n      case 'B':\r\n        this.rotateOneFace(key+\"'\",[3,0,1]);\r\n        break;\r\n      case 'b':\r\n        this.rotateOneFace(key.toUpperCase(),[3,-1,1]);\r\n        break;\r\n\r\n      case '1':\r\n        if(this.state.currentFunc==='Color Picker'){\r\n          this.changeColor('white');\r\n        }\r\n        break;\r\n      case '2':\r\n        if(this.state.currentFunc==='Color Picker'){\r\n          this.changeColor('blue');\r\n        }\r\n        break;\r\n      case '3':\r\n        if(this.state.currentFunc==='Color Picker'){\r\n          this.changeColor('red');\r\n        }\r\n        break;\r\n      case '4':\r\n        if(this.state.currentFunc==='Color Picker'){\r\n          this.changeColor('yellow');\r\n        }\r\n        break;\r\n      case '5':\r\n        if(this.state.currentFunc==='Color Picker'){\r\n          this.changeColor('orange');\r\n        }\r\n        break;\r\n      case '6':\r\n        if(this.state.currentFunc==='Color Picker'){\r\n          this.changeColor('green');\r\n        }\r\n        break;\r\n      case 'ArrowLeft':\r\n        if(this.state.currentFunc==='Solving'||this.state.currentFunc==='Algorithms'){\r\n          this.rewindSolve();\r\n        }\r\n        else if(this.state.currentFunc==='None'){\r\n          this.undo();\r\n        }\r\n        break;\r\n      case 'ArrowRight':\r\n        if(this.state.currentFunc==='Solving'||this.state.currentFunc==='Algorithms'){\r\n          if(!this.state.moveSet.length) return;\r\n          if((this.state.moveSet[0]===this.state.moveSet[1]||this.state.moveSet[1]===\"stop'\")&&!this.state.autoPlay){\r\n            this.setState({\r\n                  autoPlay:true,\r\n                  autoRewind:false,\r\n                  targetSolveIndex:this.state.solvedSetIndex+2});\r\n          }\r\n          else{\r\n              if(this.state.playOne===true) return;\r\n              if(this.state.moveSet[0]&&typeof(this.state.moveSet[0][0])==='string'&&this.state.moveSet[0]!==\"'\"){\r\n                this.setState({playOne:true,prevSet:[...this.state.prevSet,this.state.moveSet[0]]});\r\n              }\r\n          }\r\n        }\r\n        else if(this.state.currentFunc==='None'){\r\n          this.redo();\r\n        }\r\n        break;\r\n      case 'ArrowDown':\r\n        if(this.state.currentFunc===\"Algorithms\"){\r\n          this.setState({algoDown:true,resized:true});\r\n        }\r\n        break;\r\n      case 'ArrowUp':\r\n        if(this.state.currentFunc===\"Algorithms\"){\r\n          this.setState({algoUp:true,resized:true});\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  // Handles key press event\r\n  keyHandling = e => {\r\n    this.keyBinds(e.key);\r\n  }\r\n\r\n  onMouseUp( event ) {\r\n    this.setState({mouseDown : false});  \r\n  }\r\n\r\n  onSliderChange = (value) => {\r\n    this.setState({sliderSpeed:value})\r\n    switch(value){\r\n      case 0:\r\n        this.changeSpeed(1.5,1050,\"Slowest\");\r\n        break;\r\n      case 10:\r\n        this.changeSpeed(3,750,\"Slower\")\r\n        break;\r\n      case 20:\r\n        this.changeSpeed(5,500,\"Slow\")\r\n        break;\r\n      case 30:\r\n        this.changeSpeed(7.5,350,\"Medium\")\r\n        break;\r\n      case 40:\r\n        this.changeSpeed(10,250,\"Fast\")\r\n        break;\r\n      case 50:\r\n        this.changeSpeed(15,175,\"Faster\")\r\n        break;\r\n      case 60:\r\n        this.changeSpeed(30,100,\"Fastest\")\r\n        break;\r\n      case 70:\r\n        this.changeSpeed(90,20,\"Zoomin\")\r\n        break;\r\n      default:\r\n        console.log(\"unexpected behavior\");\r\n    }\r\n  }\r\n\r\n  // Functions to change speed\r\n  changeSpeed = (_speed,_rotationSpeed,_name,bypass) => {\r\n    this.state.currentFunc!==\"None\"&&!bypass ?\r\n      this.setState({moveSet:[[_speed,_rotationSpeed,_name],...this.state.moveSet]}):\r\n      this.setState({currentSpeed: _name,speed: _speed, start: _speed, end: 0, rotationSpeed: _rotationSpeed});\r\n  }\r\n\r\n  changeColor = (color) => {\r\n    this.setState({colorPicked:color});\r\n  }\r\n\r\n  changeFaceColor = (pos,side,color) => {\r\n    let tempObj = [...this.state.rubiksObject]\r\n    for(let i = 0; i < tempObj.length; i++){\r\n      let tempCube = [...tempObj[i]];\r\n      if(tempCube[6]===pos.x && tempCube[7]===pos.y && tempCube[8]===pos.z){\r\n        tempCube[side]=color;\r\n        tempObj[i] = [...tempCube];\r\n        i = tempObj.length;\r\n      }  \r\n    }\r\n    this.setState({rubiksObject:[...tempObj],isValidConfig:false,upDateCp:this.state.upDateCp+1,cpErrors: []},()=>{\r\n      this.reloadTurnedPieces('cp');\r\n    });\r\n  }\r\n\r\n  runCheckColors(){\r\n    let obj = ColorPickerUIFunctions.checkColors(this.state);\r\n    if(obj.error) this.setState({cpErrors:[...obj.error]});\r\n    else if(obj.success) this.setState({isValidConfig:true,cpErrors:[]});\r\n  }\r\n\r\n  setColorPickedCube = () => {\r\n    let rubiks = [...this.state.rubiksObject];\r\n    let size = this.state.cubeDimension;\r\n    let generated = cube.generateSolved(size,size,size);\r\n    let newGenerated = [];\r\n    let checked = [];\r\n    let otherChecked = [];\r\n\r\n    generated.tempArr.forEach(([...piece],pieceIndex) =>{\r\n      newGenerated.push([]);\r\n      rubiks.forEach(([...rubik],i) => {\r\n        let validPiece = 0;\r\n        piece.slice(0,6).sort().forEach((face,index) =>{\r\n          if(rubik.slice(0,6).sort()[index]===face) {validPiece++;}\r\n        }); \r\n        if(validPiece===6&&!checked.includes(pieceIndex)&&!otherChecked.includes(i)){\r\n          let validEdgePlacement = false;\r\n          let validMiddlePlacement = false;\r\n          if(piece.includes(\"edge\")){\r\n            validEdgePlacement = ColorPickerUIFunctions.checkValidMatchEdge(piece,rubik,size);\r\n            // A center edge cannot match with a non center edge\r\n            if((piece[13]===\"center\"&&rubik[13]!==\"center\")||\r\n              (rubik[13]===\"center\"&&piece[13]!==\"center\")){\r\n              validEdgePlacement = false;\r\n            }\r\n            else if (piece[13]===\"center\"&&rubik[13]===\"center\"){\r\n              validEdgePlacement = true;\r\n            }\r\n          }\r\n          else if(piece.includes(\"middle\")){\r\n            validMiddlePlacement = ColorPickerUIFunctions.checkValidMatchMiddle(piece,rubik,size);\r\n          }\r\n          else{\r\n            validEdgePlacement = true;\r\n            validMiddlePlacement = true;\r\n          }\r\n          if(validEdgePlacement||validMiddlePlacement){\r\n            checked.push(pieceIndex);\r\n            otherChecked.push(i);\r\n            newGenerated[pieceIndex]=[\r\n              ...rubik.slice(0,9),\r\n              ...piece.slice(9,15)\r\n            ];\r\n          }\r\n        }\r\n      }) \r\n    });\r\n\r\n    this.setState({rubiksObject:newGenerated,currentFunc : \"None\",activeMenu:\"\"},()=>{\r\n      this.reloadTurnedPieces('check');\r\n      this.setState({activeMenu:'Solver'});\r\n      this.beginSolve();\r\n    });\r\n  }\r\n\r\n  // Allows the user to undo a move\r\n  undo = () => {\r\n    let undoIndex = this.state.undoIndex;\r\n    let moveString = this.state.moveLog;\r\n    const moveArray = moveFuncs.moveStringToArray(moveString);\r\n    if(moveString === \"\") return;\r\n\r\n    else if(this.state.currentFunc !== \"None\") return;\r\n\r\n    else if(moveArray.length-1-undoIndex >= 0)\r\n      this.setState({blockMoveLog : true,\r\n                     currentFunc : \"Undo\",\r\n                     moveSet : [moveArray[moveArray.length-1-undoIndex]],\r\n                     undoIndex : undoIndex + 1});\r\n  }\r\n\r\n  // Allows the user to redo a move\r\n  redo = () => {\r\n    if(this.state.currentFunc !== \"None\") return;\r\n    let undoIndex = this.state.undoIndex;\r\n    let moveString = this.state.moveLog;\r\n    if(moveString === \"\") return;\r\n    \r\n    const moveArray = moveFuncs.moveStringToArray(moveString);\r\n    \r\n    let backwardsMove = moveArray[moveArray.length-undoIndex];\r\n    try{\r\n      backwardsMove.includes(\"'\") ? backwardsMove = backwardsMove.substring(0,3) : backwardsMove += \"'\";\r\n    }catch(err){\r\n      return;\r\n    }\r\n\r\n    if(undoIndex > 0)\r\n      this.setState({blockMoveLog : true,\r\n                     currentFunc : \"Redo\",\r\n                     moveSet : [backwardsMove],\r\n                     undoIndex : undoIndex - 1});\r\n  }\r\n\r\n  // Control when single buttons can be clicked\r\n  rotateOneFace = (e,vals) => {\r\n    if (vals.length < 4) vals.push(false);\r\n\r\n    if(this.state.currentFunc === \"None\") {\r\n\r\n      let cD = this.state.cubeDimension;\r\n      let rubiksObject = this.state.rubiksObject;\r\n      let blockMoveLog = this.state.blockMoveLog;\r\n      let moveLog = this.state.moveLog;\r\n      let solveMoves = this.state.solveMoves;\r\n      let solveState = this.state.solveState;\r\n      let end = this.state.end;\r\n      let obj = cube.rotateCubeFace(vals[0],vals[1],vals[2],vals[3],blockMoveLog,moveLog,solveMoves,end,solveState);\r\n\r\n      obj.currentFunc = e;\r\n      obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\r\n\r\n      this.setState(obj);\r\n    }\r\n  }\r\n\r\n  // Small bug, account for double turns\r\n  algorithm = (moveString,moveName) => {\r\n    if(this.state.currentFunc === \"Solving\"||this.state.currentFunc === \"Algorithms\"){\r\n      if(this.state.moveSet[0]){\r\n        if(moveFuncs.checkMoveEquivalence(moveString,this.state.moveSet[0],this.state.cubeDimension)){\r\n          this.playOne(this);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    if(this.state.currentFunc !== \"None\") return;\r\n    const moveArray = moveFuncs.moveStringToArray(moveString);\r\n    this.setState({currentFunc : moveName, moveSet : moveArray});\r\n  }\r\n\r\n  // Resets the cube and the move log\r\n  reset = () => {\r\n    let cD = this.state.cubeDimension;\r\n    let generated = cube.generateSolved(cD,cD,cD);\r\n    let rubiksObject = generated.tempArr;\r\n    this.setState({rubiksObject,moveSet: [],moveLog: \"\",currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [],cpErrors:[],activeMenu:\"none\"},()=>{\r\n      this.reloadTurnedPieces('all');\r\n    });\r\n  }\r\n\r\n  // Changes state active function to begin scrambling\r\n  beginScramble = () => {\r\n    \r\n    if(this.state.currentFunc === \"None\") {\r\n      let moveSet = [];\r\n      while (moveSet.length<25){\r\n        let temp = moveFuncs.generateMove(this.state.cubeDimension);\r\n        if(moveSet[moveSet.length-1]&&\r\n           moveSet[moveSet.length-1].slice(0,3)===temp.slice(0,3)&&\r\n           moveSet[moveSet.length-1].length!==temp.length);\r\n        else if(moveSet[moveSet.length-2]&&\r\n                moveSet[moveSet.length-1]&&\r\n                moveSet[moveSet.length-2]===temp&&\r\n                moveSet[moveSet.length-1]===temp);\r\n        else moveSet.push(temp);\r\n      }\r\n      this.setState({currentFunc : \"Scrambling\",moveSet});\r\n    }\r\n  }\r\n\r\n  // Starts the solve process\r\n  beginSolve = () => {\r\n    if(this.state.currentFunc !== \"None\") return;\r\n    this.setState({currentFunc : \"Solving\",solveState : 0,autoPlay : false, playOne : false, solveOnce : true});\r\n  }\r\n\r\n  stopSolve = () => {\r\n    this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [], moveSet : [],targetSolveIndex:-1,solvedSet:[]});\r\n  }\r\n\r\n  beginColorPicker = () => {\r\n    let cD = this.state.cubeDimension;\r\n    if(this.state.currentFunc !== \"None\") return;\r\n    const blank = [...cube.generateBlank(cD,cD,cD)];\r\n    this.setState({currentFunc : \"Color Picker\",rubiksObject: [...blank]},()=>{\r\n      this.reloadTurnedPieces('cp');\r\n    });\r\n  }\r\n\r\n  endColorPicker = () => {\r\n    this.reset();\r\n    this.setState({currentFunc : \"None\",cpErrors:[]});\r\n  }\r\n\r\n  playOne = props => {\r\n    if(!props.state.moveSet.length) return;\r\n    if((props.state.moveSet[0]===props.state.moveSet[1]||props.state.moveSet[1]===\"stop'\")&&!props.state.autoPlay){\r\n        props.setState({\r\n            autoPlay:true,\r\n            autoRewind:false,\r\n            targetSolveIndex:props.state.solvedSetIndex+2});\r\n    }\r\n    else{\r\n        if(props.state.playOne===true) return;\r\n        if(props.state.moveSet[0]&&typeof(props.state.moveSet[0][0])==='string'&&props.state.moveSet[0]!==\"'\"){\r\n            props.setState({playOne:true,prevSet:[...props.state.prevSet,props.state.moveSet[0]]});\r\n        }\r\n    }\r\n  }\r\n\r\n  rewindSolve = () => {\r\n    if(this.state.playOne) return;\r\n    if((this.state.prevSet[this.state.prevSet.length-1]===this.state.prevSet[this.state.prevSet.length-2]||this.state.prevSet[this.state.prevSet.length-1]===\"stop'\")&&!this.state.autoRewind){\r\n      this.setState({\r\n        autoPlay:false,autoRewind:true,targetSolveIndex:this.state.solvedSetIndex-2\r\n      });\r\n      return;\r\n    }\r\n    let newMoveSet = [];\r\n    let tempMoveSet = [...this.state.moveSet];\r\n    let tempPrev = [...this.state.prevSet];\r\n    let lastEl = tempPrev[tempPrev.length-1];\r\n    let popped = tempPrev.pop();\r\n    if(!popped) {\r\n      this.setState({autoRewind:false});\r\n      return;\r\n    }\r\n    popped[popped.length-1]===\"'\" ? popped=popped.slice(0,3) : popped+=\"'\";\r\n    newMoveSet.push(popped,lastEl,...tempMoveSet);\r\n    this.setState({\r\n      playOne:true,\r\n      prevSet:tempPrev,\r\n      moveSet:newMoveSet,\r\n      solvedSetIndex:this.state.solvedSetIndex-2\r\n    })\r\n  }\r\n\r\n  handleDragInput = (e, ui) => {\r\n    const {x, y} = this.state.deltaPositionInput;\r\n    this.setState({\r\n      deltaPositionInput: {\r\n        x: x + ui.deltaX,\r\n        y: y + ui.deltaY,\r\n      }\r\n    });\r\n  };\r\n\r\n  onStartInput = () => {\r\n    this.setState({activeDragsInput: this.state.activeDragsInput+1});\r\n  };\r\n\r\n  onStopInput = () => {\r\n    this.setState({activeDragsInput: this.state.activeDragsInput-1});\r\n  };\r\n\r\n  mouseOver = (name,data,e) => {\r\n    if(this.state.showHints)\r\n      this.setState({\r\n        isVisible: true,\r\n        hoverData: data\r\n      });\r\n  }\r\n\r\n  mouseLeave = () => {\r\n    this.setState({\r\n      isVisible: false,\r\n      hoverData: []\r\n    });\r\n  }\r\n\r\n  /* Each piece that's rotated has its rotation disrupted on other planes.\r\n   *\r\n   * This function solves that issue by setting all piece rotations back to zero\r\n   * and then placing colors to look as though the piece were still rotated.\r\n   * \r\n   * Some optimizations have been added. Undersides and insides of some pieces\r\n   * appear white instead of black initially but does not disrupt the rest of\r\n   * the cube. Likely won't be changed since that optimization greatly improves\r\n   * run time.\r\n   */\r\n  reloadTurnedPieces = (pos) => {\r\n    let cubes = [...this.state.cubes];\r\n    \r\n    for(let i = 0; i<this.state.rubiksObject.length;i++){\r\n      \r\n      let tempCube = {...cubes[i]};\r\n      let rotation = tempCube.rotation;\r\n\r\n\r\n      if(pos === tempCube.position){\r\n        tempCube.opacity=1;\r\n        cubes[i] = tempCube;\r\n      }\r\n\r\n      else if((rotation.x !== 0 || rotation.y !== 0 ||rotation.z !== 0) || \r\n           (pos==='all'||pos==='cp'||pos==='check')){\r\n        if(pos==='all'||pos==='cp') {\r\n          tempCube.position.x=this.state.rubiksObject[i][9];\r\n          tempCube.position.y=this.state.rubiksObject[i][10];\r\n          tempCube.position.z=this.state.rubiksObject[i][11];\r\n        }\r\n        if(pos==='check') {\r\n          tempCube.position.x=this.state.rubiksObject[i][6];\r\n          tempCube.position.y=this.state.rubiksObject[i][7];\r\n          tempCube.position.z=this.state.rubiksObject[i][8];\r\n        }\r\n        tempCube.material[0].color = new THREE.Color(this.state.rubiksObject[i][2]);\r\n        tempCube.material[1].color = new THREE.Color(this.state.rubiksObject[i][4]);\r\n        tempCube.material[2].color = new THREE.Color(this.state.rubiksObject[i][3]);\r\n        tempCube.material[3].color = new THREE.Color(this.state.rubiksObject[i][0]);\r\n        tempCube.material[4].color = new THREE.Color(this.state.rubiksObject[i][1]);\r\n        tempCube.material[5].color = new THREE.Color(this.state.rubiksObject[i][5]);\r\n        \r\n        tempCube.rotation.x = 0; tempCube.rotation.y = 0; tempCube.rotation.z = 0;\r\n        cubes[i] = tempCube;\r\n        \r\n      }\r\n    }\r\n\r\n    this.setState({cubes,reload : false});\r\n  }\r\n\r\n  // Changes the settings by passing setting to change and new val for the setting\r\n  changeSettings (settingToChange,newVals) {\r\n    switch(settingToChange){\r\n      // case 'displayStats':\r\n      //   this.state.showStats ? document.body.children[9].style.display = \"none\" : document.body.children[9].style.display = \"\";\r\n      //   this.setState({showStats : !this.state.showStats});\r\n      //   break;\r\n      case 'displayMoveInput':\r\n        this.setState({showMoveInput:!this.state.showMoveInput});\r\n        break;\r\n      case 'displayControls':\r\n        this.setState({showControls:!this.state.showControls});\r\n        break;\r\n      case 'displayHints':\r\n        this.setState({showHints:!this.state.showHints});\r\n        break;\r\n      default:\r\n        console.log(\"Invalid Setting\");\r\n    }\r\n  }\r\n  \r\n  // Remove event listener on compenent unmount\t\r\n  componentWillUnmount() {    \r\n    window.removeEventListener(\"keydown\", this.keyHandling);\r\n  }\r\n\r\n  // Gets the url to be parsed\r\n  getSizeFromUrl(checkLocal) {\r\n    let limit = 75;\r\n    let size;\r\n    let parts = window.location.href.split('/');\r\n    let checkID = parts[parts.length-1].slice(0,4);\r\n\r\n    if(checkLocal){\r\n      if(parts[2].substr(0,9)==='localhost'){\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if(checkID === '#id='){\r\n      size = parseInt(parts[parts.length-1].substr(4));\r\n    }\r\n\r\n    if (size <= limit && size >= 1) return size; else return 3;\r\n  }\r\n\r\n  calculateTurn(current,previous,piece,pieceFace,cD){\r\n\r\n    let calculated = null;\r\n    let depth = null;\r\n    let turn = null;\r\n\r\n    // difference in initial mouse down location and current mouse down\r\n    const dif = { \r\n      x: (previous.x-current.x), \r\n      y: (previous.y-current.y), \r\n      z: (previous.z-current.z)\r\n    }\r\n\r\n    if(current.x===previous.x && current.y === previous.y && current.z===previous.z){\r\n      return null;\r\n    }\r\n\r\n    function calculateTurnAtFace(coord1,compare1,coord2,compare2,piece1,piece2,dir1,dir2){\r\n      if(Math.abs(coord1)>=Math.abs(coord2)&&(Math.abs(coord1)>.05)) \r\n        return {calculated : compare1?dir1:(dir1+\"'\"),depth : piece2}\r\n        \r\n      if(Math.abs(coord2)>Math.abs(coord1)&&(Math.abs(coord2)>.05)) {\r\n        return {calculated : compare2?dir2:(dir2+\"'\"),depth : piece1}\r\n      }\r\n      return {calculated:null,depth:null};\r\n    }\r\n\r\n    //determines the move based on mouse difference from click to new position\r\n    switch(pieceFace){\r\n      case 0:\r\n        turn = calculateTurnAtFace(dif.z,dif.z<0,dif.x,dif.x>=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\r\n        calculated = turn.calculated; depth = turn.depth;\r\n        break;\r\n      case 1:\r\n        turn = calculateTurnAtFace(dif.x,dif.x<=0,dif.y,dif.y<0,cD-piece.x,piece.y+1,\"F\",\"R\");\r\n        calculated = turn.calculated; depth = turn.depth;\r\n        break;\r\n      case 2:\r\n        turn = calculateTurnAtFace(dif.z,dif.z>0,dif.y,dif.y>0,cD-piece.z,piece.y+1,\"F\",\"U\");\r\n        calculated = turn.calculated; depth = turn.depth;\r\n        break;\r\n      case 3:\r\n        turn = calculateTurnAtFace(dif.z,dif.z>0,dif.x,dif.x<=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\r\n        calculated = turn.calculated; depth = turn.depth;\r\n        break;\r\n      case 4:\r\n        turn = calculateTurnAtFace(dif.z,dif.z<0,dif.y,dif.y<0,cD-piece.z,piece.y+1,\"F\",\"U\");\r\n        calculated = turn.calculated; depth = turn.depth;\r\n        break;\r\n      case 5:\r\n        turn = calculateTurnAtFace(dif.x,dif.x>=0,dif.y,dif.y>0,cD-piece.x,piece.y+1,\"F\",\"R\");\r\n        calculated = turn.calculated; depth = turn.depth;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    //console.log(\"{ turn: \" + calculated + \" } , { depth: \" + depth + \" }\");\r\n    return ((depth<10? \"0\" : \"\") + depth+calculated);\r\n  }\r\n\r\n  // Proto function for feature to be built later\r\n  calculateTheta(){\r\n\r\n  }\r\n\r\n  menuSetState = (obj) =>{\r\n    //console.log(obj);\r\n    this.setState(obj,()=>{\r\n      if(obj.activeAlgo){\r\n        this.reloadTurnedPieces('all');\r\n      }\r\n    });\r\n  }\r\n\r\n  windowResized = () => {\r\n    this.setState({resized:true});\r\n  }\r\n\r\n  // Initialization and animation functions\r\n  componentDidMount() {\r\n\r\n    // Initial set up variables\r\n    let cD = this.getSizeFromUrl();\r\n    let generated = cube.generateSolved(cD,cD,cD);\r\n    let rubiksObject = generated.tempArr;\r\n    let tempCubes = [];\r\n    \r\n    let previousPiece = null;\r\n    let previousPieceIndex = null;\r\n    let ignoreChange = false;\r\n\r\n    // === THREE.JS VARIABLES ===\r\n    let scene = new THREE.Scene();\r\n    let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, .1, 1000 );\r\n    let renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    let raycaster = new THREE.Raycaster();\r\n    let mouse = new THREE.Vector2();\r\n    let cubeGeometry = new THREE.BoxGeometry(  );\r\n    let loader = new THREE.TextureLoader().load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQW92XE-j1aJzRMI9kvvMZIf2VikZzzdEI87zl4rWgHMJBNJ9iw7A&s');\r\n    let moveHintImage = new THREE.TextureLoader().load('https://cdn2.iconfinder.com/data/icons/communication-language/100/Up_Arrow-01-512.png');\r\n    let tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\r\n    let windowHeight = window.innerHeight;\r\n\r\n    const groups = cube.generateMoveHints(moveHintImage,cD);\r\n\r\n    let calculateTurn = this.calculateTurn;\r\n    let algorithmFunc = this.algorithm;\r\n\r\n    function onWindowResize(resized) {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      \r\n      // adjust the FOV\r\n      camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( window.innerHeight / windowHeight ) );\r\n      \r\n      camera.updateProjectionMatrix();\r\n      camera.lookAt( scene.position );\r\n\r\n      renderer.setSize( window.innerWidth, window.innerHeight-10 );\r\n      renderer.render( scene, camera );\r\n      resized();\r\n    }\r\n\r\n    function onmousedown( event ){\r\n      controls.enabled = true;\r\n      ignoreChange = false;\r\n      \r\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n      // Projects mouse onto scene to find intersected objects\r\n      raycaster.setFromCamera( mouse, camera );\r\n      \r\n      // Calculate objects intersecting the picking ray\r\n      let intersects = raycaster.intersectObjects( scene.children );\r\n      \r\n      // Check if anything is intersected\r\n      if(intersects.length){\r\n        ignoreChange = true;\r\n        controls.saveState();\r\n        controls.enabled = false;\r\n        let faceInteresected = intersects[0].faceIndex;\r\n        let tempIndex = -1;\r\n        for(let i = 0; i < 6; i++){\r\n          if(faceInteresected===i*2 || faceInteresected=== i*2+1) {\r\n            tempIndex = i;\r\n            //this.setState({mouseFace : i});\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if(this.state.currentFunc===\"Color Picker\"){\r\n          \r\n          let toFace = [2,4,3,0,1,5];\r\n          this.changeFaceColor({x:intersects[0].object.position.x,y:intersects[0].object.position.y,z:intersects[0].object.position.z},toFace[tempIndex],this.state.colorPicked)\r\n        }\r\n        if(intersects[0].object.material[tempIndex] && tempIndex > -1){\r\n          if(intersects[0].object.material[tempIndex].color){\r\n            previousPiece = intersects[0];\r\n            previousPieceIndex = tempIndex;\r\n            intersects[0].object.material[tempIndex].opacity=.8;\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        controls.enabled = true;\r\n        previousPiece = null;\r\n        previousPieceIndex = null;\r\n      }\r\n    }\r\n\r\n    function onMouseMove( event ) {\r\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n\r\n      // Projects mouse onto scene to find intersected objects\r\n      raycaster.setFromCamera( mouse, camera );\r\n\r\n      // calculate objects intersecting the picking ray\r\n      let intersects = raycaster.intersectObjects( scene.children );\r\n\r\n      if(previousPiece){\r\n        if(intersects.length){\r\n          let current = intersects[0].point;\r\n          let toFace = [2,4,3,0,1,5];\r\n          let tempPrev = {...previousPiece.point};\r\n          let tempPos = {...previousPiece.object.position};\r\n          let intersected = Math.floor(previousPiece.faceIndex/2);\r\n          let calculated = calculateTurn(current,tempPrev,tempPos,toFace[intersected],cD);\r\n          //console.log(calculated);\r\n          if(calculated!==null&&!calculated.includes(\"null\")){\r\n\r\n            // if(this.state.currentFunc===\"Solving\"){\r\n            //   console.log(\"attempted move during solve state\");\r\n            // }\r\n\r\n            algorithmFunc(calculated,\"Drag Turn\");\r\n            previousPiece.object.material[previousPieceIndex].opacity=1;\r\n            previousPiece = null;\r\n            previousPieceIndex = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function ontouchend( event ){\r\n      if(previousPiece) previousPiece.object.material[previousPieceIndex].opacity=1;\r\n      if(ignoreChange) controls.reset();\r\n      ignoreChange = false;\r\n      previousPiece = null;\r\n      controls.enabled = true;\r\n    }\r\n\r\n    // Bind event listeners to window\r\n    window.addEventListener(\"keydown\", this.keyHandling, false);\r\n    window.addEventListener(\"pointermove\", onMouseMove.bind(this), false );\r\n    window.addEventListener(\"pointerdown\", onmousedown.bind(this), false );\r\n    // window.addEventListener(\"touchstart\", ontouchstart.bind(this), false);\r\n    // window.addEventListener(\"pointermove\", ontouchmove.bind(this), false);\r\n    // window.addEventListener(\"touchend\", ontouchend, false);\r\n    window.addEventListener(\"pointerup\", ontouchend, false );\r\n    window.addEventListener(\"resize\", () => onWindowResize(this.windowResized), false );\r\n    \r\n    // Set background color and size\r\n    renderer.setClearColor(new THREE.Color(\"black\"),0);\r\n    renderer.domElement.className = \"canvas\";\r\n    renderer.setSize( window.innerWidth, window.innerHeight);\r\n    document.body.children[5].appendChild( renderer.domElement );\r\n\r\n    // Prevents bluring\r\n    loader.anisotropy = renderer.capabilities.getMaxAnisotropy();\r\n    moveHintImage.anisotropy = renderer.capabilities.getMaxAnisotropy();\r\n\r\n    // generate cubes with face colors based off memory cube\r\n    for(let i = 0; i < rubiksObject.length; i++){\r\n\r\n      // Store x,y,z of memory cube in easier to read variables\r\n      let cubeX = rubiksObject[i][6];\r\n      let cubeY = rubiksObject[i][7];\r\n      let cubeZ = rubiksObject[i][8];\r\n\r\n      // Map textures to each face to look nice and then color over\r\n      const cubeMaterials = [\r\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][2], side: THREE.FrontSide}),\r\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][4], side: THREE.FrontSide}), \r\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][3], side: THREE.FrontSide}),\r\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1,}), \r\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][1], side: THREE.FrontSide}), \r\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][5], side: THREE.FrontSide}), \r\n      ];\r\n    \r\n      // Add the new cube to temp cubes\r\n      tempCubes[i] = new THREE.Mesh(cubeGeometry, cubeMaterials);\r\n      //group.add( tempCubes[i] );\r\n      // position piece based off memory cube\r\n      tempCubes[i].translateX(cubeX);\r\n      tempCubes[i].translateY(cubeY);\r\n      tempCubes[i].translateZ(cubeZ); \r\n    }\r\n\r\n    // Translate cube so center of cube is 0,0,0\r\n    scene.translateX(.5-cD/2);\r\n    scene.translateY(.5-cD/2);\r\n    scene.translateZ(.5-cD/2);\r\n\r\n    // Allows for drag to rotate camera\r\n    let controls = new OrbitControls( camera , renderer.domElement);\r\n    controls.enabled = true;\r\n    controls.enableDamping = true;   //damping \r\n    controls.dampingFactor = 0.15;   //damping inertia\r\n    controls.enableZoom = true;      //Zooming\r\n    controls.autoRotate = false;     //Enable auto rotation\r\n    controls.minDistance = (2+cD);\r\n    controls.maxDistance = (2+cD)+20;\r\n    controls.enablePan = false;\r\n    controls.keys = {\r\n      LEFT: null, //left arrow\r\n      UP: null, // up arrow\r\n      RIGHT: null, // right arrow\r\n      BOTTOM: null // down arrow\r\n    };\r\n\r\n    controls.addEventListener(\"change\", (e) => {\r\n      if (renderer) renderer.render(scene, camera);\r\n    });\r\n\r\n    groups.forEach(group => scene.add(...group));\r\n\r\n    // add cubes to state and then render\r\n    this.setState({\r\n      cubes : tempCubes,\r\n      cubeDimension : cD,\r\n      cameraZ : (2+cD),\r\n      cameraX : (2+cD),\r\n      cameraY : -(2+cD),\r\n      rubiksObject,\r\n      middles: generated.middles,\r\n      edges: generated.edges,\r\n      corners: generated.corners,\r\n      currentFunc: 'Reset',\r\n      generatedButtons: cube.generateButtonData(this.getSizeFromUrl())\r\n    }, () => {\r\n      //let cubeGroup = new THREE.Group();\r\n      // Callback required to wait for setState to finish\r\n      for(let i = 0; i < rubiksObject.length; i++){\r\n        // Logic to only render outer pieces since inside pieces aren't ever used\r\n        if((this.state.cubes[i].position.x === 0 || this.state.cubes[i].position.x === this.state.cubeDimension-1) ||\r\n            (this.state.cubes[i].position.y === 0 || this.state.cubes[i].position.y === this.state.cubeDimension-1)||\r\n            (this.state.cubes[i].position.z === 0 || this.state.cubes[i].position.z === this.state.cubeDimension-1)){\r\n          scene.add( this.state.cubes[i] );\r\n        } \r\n      }\r\n\r\n      //scene.add( cubeGroup);\r\n\r\n      camera.position.z = this.state.cameraZ;// * Math.sin( this.state.angle );\r\n      camera.position.y = this.state.cameraY;\r\n      camera.position.x = this.state.cameraX;// * Math.cos( this.state.angle );\r\n\r\n      renderer.render( scene, camera );\r\n      animate();\r\n    });\r\n\r\n    // Function runs continuously to animate cube\r\n    let animate = () => {\r\n\r\n      requestAnimationFrame( animate );\r\n\r\n      for(let i = 0; i < groups.length;i++){\r\n        groups[i].forEach(group => group.visible = false)\r\n      }\r\n      // Animate queued rotation\r\n      if(this.state.start<=this.state.end){\r\n        this.setState(cube.rotatePieces(cube.rotatePoint,tempCubes,this.state));\r\n      }\r\n\r\n      // Handles move queueing based on function\r\n      else {\r\n        \r\n\r\n        if(this.state.currentFunc === \"Color Picker\" || this.state.currentFunc === \"None\"|| this.state.currentFunc === \"Solving\"|| this.state.currentFunc === \"Algorithms\") {\r\n\r\n          //check here that data isn't the same as previous so not running this every time\r\n          // Data on move button triggers visual move hints\r\n          if(this.state.isVisible){\r\n            let [hFace,hDir,hDepth,hMulti] = this.state.hoverData;\r\n            if(hFace<3){\r\n              if(hDir === -1){\r\n                if(!hMulti){\r\n                  groups[hFace][hDepth-1].visible=true;\r\n                }\r\n                else\r\n                  for(let i = 0; i <= hDepth-1; i++){\r\n                    groups[hFace][i].visible=true;\r\n                  }\r\n              }\r\n              else {\r\n                if(!hMulti){\r\n                  groups[hFace+3][hDepth-1].visible=true;\r\n                }\r\n                else\r\n                for(let i = 0; i <= hDepth-1; i++){\r\n                  groups[hFace+3][i].visible=true;\r\n                }\r\n              }\r\n            }\r\n            else{\r\n              if(hFace===3) hFace=0;\r\n              if(hFace===4) hFace=2;\r\n              if(hFace===5) hFace=1;\r\n\r\n              if(hDir === -1){\r\n                if(!hMulti){\r\n                  groups[hFace+3][(groups[hFace+3].length-1)-(hDepth-1)].visible=true;\r\n                }\r\n                else\r\n                  for(let i = groups[hFace+3].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\r\n                    groups[hFace+3][i].visible=true;\r\n                  }\r\n              }\r\n              else {\r\n                if(!hMulti){\r\n                  groups[hFace][(groups[hFace].length-1)-(hDepth-1)].visible=true;\r\n                }\r\n                else\r\n                  for(let i = groups[hFace].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\r\n                    groups[hFace][i].visible=true;\r\n                  }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        if(this.state.reload) this.reloadTurnedPieces(this.state.face);\r\n        if(this.state.currentFunc !== \"None\"){\r\n\r\n          // Doesn't work with !==\r\n          if(this.state.currentFunc === \"Undo\" ||\r\n             this.state.currentFunc === \"Redo\"){}\r\n\r\n          else {\r\n            let moveLog = this.state.moveLog;\r\n            let index = this.state.undoIndex;\r\n\r\n            if(index > 0){\r\n              let moveArray = moveFuncs.moveStringToArray(moveLog);\r\n\r\n              if(this.state.currentFunc[0]==='0' || this.state.currentFunc[0]==='1' ||\r\n                 this.state.currentFunc[1]==='1' || this.state.currentFunc[1]==='2' || this.state.currentFunc[1]==='3'){\r\n                let tempVal = moveArray[moveArray.length-1];\r\n                for(let i = 0; i <= index; i++){\r\n                  moveArray.pop();\r\n                }\r\n                moveArray.push(tempVal);\r\n              }\r\n\r\n              else{\r\n                for(let i = 0; i < index; i++){\r\n                  moveArray.pop();\r\n                }\r\n              }\r\n\r\n              moveLog = moveArray.join(\" \");\r\n              this.setState({undoIndex:0,moveLog});\r\n            }\r\n          }\r\n\r\n          // Moves based on active function\r\n          if (this.state.currentFunc===\"Scrambling\"){\r\n            if(this.state.moveSet&&this.state.moveSet.length){\r\n              let cD = this.state.cubeDimension;\r\n              let tempRubiks = this.state.rubiksObject;\r\n              let blockMoveLog = this.state.blockMoveLog;\r\n              let moveLog = this.state.moveLog;\r\n              let solveMoves = this.state.solveMoves;\r\n              let solveState = this.state.solveState;\r\n              let end = this.state.end;\r\n\r\n\r\n              if(typeof(this.state.moveSet[0][0])==='number') {\r\n                //console.log(\"changing speed\");\r\n                let moveSet=this.state.moveSet;\r\n                this.changeSpeed(...moveSet[0],true);\r\n                moveSet.shift();\r\n                this.setState({moveSet});\r\n              }\r\n              else{\r\n                let moveData = moveFuncs.parseMoveArray(this.state.moveSet);\r\n\r\n\r\n                if(moveData){\r\n                  let obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\r\n      \r\n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\r\n\r\n                  this.setState(obj);\r\n                }\r\n              }\r\n            }\r\n            else{\r\n              this.setState({currentFunc : \"None\",moves : 0});\r\n            }\r\n            \r\n          }\r\n          else if (this.state.currentFunc===\"Solving\"||this.state.currentFunc===\"Algorithms\"){\r\n            \r\n            // Place holder for full solve testing\r\n            if(this.state.autoTarget && !this.state.autoPlay && !this.state.autoRewind) {\r\n              this.setState({autoTarget:false},()=>this.reloadTurnedPieces('check'))\r\n            }\r\n\r\n            // If playone or autoplay is true, progress accordingly\r\n            else if(this.state.playOne){\r\n              let cD = this.state.cubeDimension;\r\n              let tempRubiks = this.state.rubiksObject;\r\n              let blockMoveLog = this.state.blockMoveLog;\r\n              let moveLog = this.state.moveLog;\r\n              let solveMoves = this.state.solveMoves;\r\n              let moveSet = this.state.moveSet;\r\n              let end = this.state.end;\r\n              let solveState = this.state.solveState;\r\n              let obj = {};\r\n\r\n              if(typeof(moveSet[0][0])==='number') {\r\n                this.changeSpeed(...moveSet[0],true);\r\n                moveSet.shift();\r\n                obj.moveSet=moveSet;\r\n              }\r\n              else{\r\n\r\n                // generates data for next move\r\n                let moveData = moveFuncs.parseMoveArray(moveSet);\r\n\r\n                // takes next move data and queues changes to be made to state\r\n                \r\n                if(moveData){\r\n                  obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\r\n                }\r\n\r\n                // Turn off play one so only runs once\r\n                if(this.state.playOne) obj.playOne = false;\r\n\r\n                // hides move the hint during the move\r\n                this.mouseLeave();\r\n                \r\n                // store the object here\r\n                if(moveData){\r\n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\r\n                  obj.solvedSetIndex = this.state.solvedSetIndex+1;\r\n                }\r\n\r\n                //console.log(obj);\r\n              }\r\n              this.setState(obj);\r\n            }\r\n            // Show hint over next move\r\n            else if(this.state.moveSet.length){\r\n              let moveSet = this.state.moveSet;\r\n              let obj = {};\r\n              if(typeof(moveSet[0][0])==='number') {\r\n                //console.log(\"changing speed\");\r\n                this.changeSpeed(...moveSet[0],true);\r\n                moveSet.shift();\r\n                obj.moveSet=moveSet;\r\n              }\r\n              else{\r\n                let data = moveFuncs.convertMoveToData(moveSet[0]);\r\n                if(data){\r\n                  this.mouseOver(this.state.moveSet[0],data);\r\n                }\r\n              }\r\n              if(obj.length){\r\n                this.setState({obj});\r\n              }   \r\n            }\r\n          }\r\n\r\n          else if(this.state.currentFunc===\"Color Picker\"){\r\n            // Code here for color picker interface\r\n          }\r\n          else if(this.state.currentFunc==='Reset'){\r\n            this.reset();\r\n          }\r\n          else {\r\n            if(this.state.moveSet.length){\r\n              let cD = this.state.cubeDimension;\r\n              let tempRubiks = this.state.rubiksObject;\r\n              let blockMoveLog = this.state.blockMoveLog;\r\n              let moveLog = this.state.moveLog;\r\n              let solveMoves = this.state.solveMoves;\r\n              let solveState = this.state.solveState;\r\n              let end = this.state.end;\r\n\r\n\r\n              if(typeof(this.state.moveSet[0][0])==='number') {\r\n                //console.log(\"changing speed\");\r\n                let moveSet=this.state.moveSet;\r\n                this.changeSpeed(...moveSet[0],true);\r\n                moveSet.shift();\r\n                this.setState({moveSet});\r\n              }\r\n              else{\r\n                let moveData = moveFuncs.parseMoveArray(this.state.moveSet);\r\n\r\n\r\n                if(moveData){\r\n                  let obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\r\n      \r\n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\r\n\r\n                  this.setState(obj);\r\n                }\r\n              }\r\n\r\n            } \r\n            else{\r\n              this.setState({currentFunc:\"None\"}); \r\n            }\r\n          }\r\n        }\r\n      }\r\n      \r\n      controls.update();\r\n      renderer.render( scene, camera );\r\n    };\r\n  }\r\n\r\n  // Renders html to the index.html page\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"App\" style={{width:\"max-content\"}}>\r\n        \r\n        <Navbar\r\n          title=\"Rubik's Cube\"\r\n          changeSettings={this.changeSettings.bind(this)}\r\n          isLocal={this.getSizeFromUrl(true)}\r\n          state={this.state}\r\n        />\r\n\r\n        {this.state.currentFunc===\"Color Picker\"?<></>:<p style={{position:\"fixed\", top: \"110px\", left: \"10px\",color: \"lightgrey\",fontSize:\"1rem\"}}>Speed: {this.state.currentSpeed}</p>}\r\n        <div style={{width:\"100%\",position:\"absolute\", top: \"85px\",margin:\"auto\",display:\"flex\"}}>\r\n          <div style={{margin:\"auto\", display:\"inline-flex\",}}>\r\n          {this.state.currentFunc===\"None\"||this.state.currentFunc===\"Undo\"||this.state.currentFunc===\"Redo\"||this.state.currentFunc===\"Drag Turn\"?\r\n          [<button key=\"undo\" className=\"redoUndo\" style={{marginRight:\"8px\",fontSize:\"2rem\", color: \"lightgrey\",lineHeight:\"2rem\"}} onClick={() => this.undo()}><i className=\"fas fa-arrow-left\"></i></button>,\r\n          <button key=\"redo\" className=\"redoUndo\" style={{marginLeft:\"8px\",fontSize:\"2rem\", color: \"lightgrey\",lineHeight:\"2rem\"}} onClick={() => this.redo()}><i className=\"fas fa-arrow-right\"></i></button>]\r\n          :\"\"\r\n          }\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.currentFunc===\"Color Picker\"?[]:<Speeds //Top left with slider\r\n          onSliderChange={this.onSliderChange}\r\n          speed={this.state.sliderSpeed}\r\n        />}\r\n        { this.state.showMoveInput? \r\n          <MoveInput\r\n            algorithm = {this.algorithm}\r\n            handleDrag = {this.handleDragInput}\r\n            onStart = {this.onStartInput}\r\n            onStop = {this.onStopInput}\r\n          /> : []\r\n        }\r\n        {this.state.currentFunc===\"Solving\"?\r\n            <SolverInfo\r\n              solvedSetLength={this.state.solvedSet.length}\r\n              prevSetLength={this.state.prevSet.length}\r\n            />:[]\r\n        }\r\n        {this.state.currentFunc===\"Color Picker\"?\r\n            <ColorPickerInfo\r\n              colorPicked={this.state.colorPicked}\r\n            />:[]\r\n        }\r\n\r\n        <Menu \r\n          state = {this.state}\r\n          setState = {this.menuSetState}\r\n          beginScramble = {this.beginScramble}\r\n          disableHover={this.state.showGuideArrows}\r\n\r\n          //Controls\r\n          generatedButtons={this.state.generatedButtons}\r\n          size={this.getSizeFromUrl()}\r\n          rotateOneFace={this.rotateOneFace}\r\n          mouseEnter= {this.mouseOver}\r\n          mouseLeave= {this.mouseLeave}\r\n\r\n          //Color Picker\r\n          beginColorPicker={this.beginColorPicker}\r\n          endColorPicker={this.endColorPicker}\r\n          colorPicked={this.state.colorPicked}\r\n          changeColor={this.changeColor}\r\n          isValidConfig={this.state.isValidConfig}\r\n          setColorPickedCube={this.setColorPickedCube}\r\n          cpErrors={this.state.cpErrors}\r\n          runCheckColors={this.runCheckColors}\r\n\r\n          //Solver\r\n          beginSolve={this.beginSolve}\r\n          stopSolve={this.stopSolve}\r\n          playOne={this.playOne}\r\n          rewindOne={this.rewindSolve}\r\n          reload={this.reloadTurnedPieces}\r\n        />\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport { Route, Routes,BrowserRouter as Router } from 'react-router-dom'\r\n\r\nconst routing = (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"*\" element={<App/>} />\r\n      </Routes>\r\n    </Router>\r\n  )\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}