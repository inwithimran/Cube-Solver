{"version":3,"sources":["solvers/edges/solveWhiteCross.js","solvers/corners/solveWhiteCorners.js","solvers/edges/solveMiddleEdges.js","solvers/edges/solveYellowCross.js","solvers/edges/alignYellowCross.js","solvers/corners/solveYellowCorners.js","solvers/corners/alignYellowCorners.js","solvers/middles/white.js","solvers/middles/yellow.js","solvers/middles/blue.js","solvers/middles/green.js","solvers/middles/orange.js","solvers/edges/solveFrontEdgeSegments.js","solvers/edges/solveBackEdgeSegments.js","components/Navbar/Navbar.js","cubeFunctions/algorithms.js","components/Patterns.js","components/Speeds.js","components/Controls.js","components/MoveInput.js","cubeFunctions/cube.js","solvers/solveMiddleLogic.js","solvers/solveMiddles.js","solvers/solveEdgeLogic.js","solvers/solveEdges.js","solvers/solver.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","rubiksObject","cubeDimension","moveStringToArray","moveString","cube","space","solvedEdges","dim","pieceOne","Math","floor","pieceTwo","pieceThree","pieceFour","ceil","i","length","includes","emptyCount","whiteSide","cubeX","cubeY","cubeZ","j","moveArray","moveSet","solveState","solvedCorners","moveFromMiddle212","moveFromMiddle210","moveFromMiddle010","blueSide","greenSide","recipe","cubeIndex","cubeAtIndex","solveMoves","solveAlgo","obj","moveLog","currentFunc","temp","split","console","log","move","depth","side","current","solved","index","currentSide","row","column","x","y","z","concat","JSON","stringify","middle","opposite","isOddCube","maxCoord","minCoord","extractFromFront","moveFromMiddleToBack","flipPieceOnBack","solveFromBackToFront","yellowSide","displace","solve","replace","flip","Navbar","props","react_default","a","createElement","className","style","width","color","title","DropdownButton","type","data-toggle","onClick","changeSettings","state","showStats","showMoveInput","showControls","defaultChecked","showHints","Dropdown","Item","href","backgroundColor","float","reactjs_popup_es","trigger","id","close","zIndex","fontSize","marginBottom","marginTop","paddingTop","paddingBottom","value","algorithms","name","moves","worksFor","position","buttons","Patterns","bottom","left","border","forEach","e","size","push","algorithm","key","top","Speeds","isDisabled","es","defaultValue","min","max","step","disabled","onChange","onSliderChange","centerButtons","singleButtons","multiButtons","singleCols","multiCols","namesToColors","face","bgc","React","memo","react_draggable_min_default","handle","defaultPosition","window","innerHeight","grid","scale","onStart","handleStart","onDrag","handleDrag","onStop","handleStop","marginRight","generatedButtons","center","element","rotateOneFace","clockwise","data","onMouseEnter","mouseEnter","onMouseLeave","mouseLeave","counter","single","colors","lengthBtns","lengthBtns1","multi","MoveInput","innerWidth","placeholder","onKeyDown","document","getElementById","stopPropagation","borderRadius","margin","generateSolved","_x","_y","_z","tempArr","middles","edges","tempMiddles","tempEdges","k","side0","side1","side2","side3","side4","side5","tempCount","tempType","apply","Object","toConsumableArray","generateButtonData","numLayers","centerLayer","faces","baseNameSingle","baseNameMulti","toLowerCase","rotatePoint","c1","c2","direction","p1","p2","rotation","theta","PI","cos","sin","rotatePoint2","solveMiddleLogic","cubeDimensions","rubiksObjectAtIndex","faceColor","whiteSolver","yellowSolver","blueSolver","orangeSolver","greenSolver","solveMiddles","oddTopMiddleIndex","trim","rubiksIndex","indexOf","solveEdgeLogic","edgeLength","section","frontEdges","backEdges","solveEdges","CONSTANTS","SOLVE_MIDDLES","SOLVE_EDGES","SOLVE_WHITE_CROSS","SOLVE_WHITE_CORNERS","SOLVE_MIDDLE_EDGES","SOLVE_YELLOW_CROSS","ALIGN_YELLOW_CROSS","ALIGN_YELLOW_CORNERS","SOLVE_YELLOW_CORNERS","solver","solveWhiteCross","solveWhiteCorners","solveMiddleEdges","solveYellowCross","alignYellowCross","alignYellowCorners","solveYellowCorners","App","cubes","speed","rotationSpeed","start","end","turnDirection","cameraX","cameraY","cameraZ","angle","cubeDepth","currentSpeed","reload","facePosX","facePosY","facePosZ","mouseFace","mouseDown","mousePos","undoIndex","blockMoveLog","previousPiece","showGuideArrows","activeDragsInput","deltaPositionInput","controlledPositionInput","activeDragsControls","deltaPositionControls","controlledPositionControls","isMulti","isVisible","hoverData","showSolveController","autoPlay","playOne","generateAllMoves","rotateFace","cubeFace","centerPoint","_this","degrees","newPoint","tempFace","setState","rotatePieces","rotate","tempCubes","round","keyBinds","toUpperCase","keyHandling","keyCode","changeSpeed","_speed","_rotationSpeed","_name","undo","redo","backwardsMove","substring","err","vals","rotateCubeFace","rotateCamera","tempMove","moveName","reset","cD","reloadTurnedPieces","scramble","maxDepth","randFace","random","randTurn","randIsMulti","randDepth","beginScramble","beginSolve","stopSolve","handleDragInput","ui","_this$state$deltaPosi","deltaX","deltaY","onStartInput","onStopInput","handleDragControls","_this$state$deltaPosi2","onStartControls","onStopControls","convertMoveToData","parseInt","convertDataToMove","mouseOver","str","tempArray","slice","parseMoveArray","tempDepth","shifted","shift","tempDirection","tempIsMulti","pos","tempCube","objectSpread","material","THREE","solveMultipleEdges","event","this","settingToChange","newVals","body","children","display","removeEventListener","vars","parts","location","m","coord1","compare1","coord2","compare2","piece1","piece2","dir1","dir2","abs","calculated","previous","piece","pieceFace","turn","dif","calculateTurnAtFace","_this2","getSizeFromUrl","generated","stats","Stats","groups","previousMousePos","piecePos","intersected","scene","camera","renderer","antialias","alpha","raycaster","mouse","cubeGeometry","geometry","loader","load","loader1","map","transparent","opacity","tanFOV","tan","fov","windowHeight","addEventListener","clientX","clientY","onMouseDown","bind","onMouseUp","aspect","atan","updateProjectionMatrix","lookAt","setSize","render","setClearColor","domElement","appendChild","showPanel","dom","anisotropy","capabilities","getMaxAnisotropy","cubeMaterials","translateX","translateY","translateZ","controls","OrbitControls","enableDamping","dampingFactor","enableZoom","autoRotate","minDistance","maxDistance","keys","LEFT","UP","RIGHT","BOTTOM","tempGroup","tempGroupOther","tempPlane","tempPlaneOther","rotateZ","rotateX","add","visible","rotateY","group","animate","enabled","begin","requestAnimationFrame","_this2$state$hoverDat","slicedToArray","hFace","hDir","hDepth","hMulti","setFromCamera","intersects","intersectObjects","object","faceInteresected","faceIndex","tempIndex","parseFloat","r","g","b","set","point","calculateTurn","tempVal","pop","join","update","_this3","solveBtn","right","solveInterface","components_Navbar_Navbar","marginLeft","components_Speeds","components_MoveInput","components_Patterns","components_Controls","disableHover","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","URL","process","origin","fetch","response","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.edc54e7a.chunk.js","sourcesContent":["function solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray){\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let space = \"\";\n    let solvedEdges = 0;\n\n    let dim = cubeDimension;\n\n    if(dim === 2) solvedEdges = 4;\n\n    let pieceOne = Math.floor(dim/2);\n    let pieceTwo = dim * pieceOne;\n    let pieceThree = pieceTwo + (dim -1);\n    let pieceFour = dim * dim - Math.ceil(dim/2);\n\n    for(let i = 0; i < cube.length; i++){\n      if(moveString.length) space = \" \";\n      if(cube[i].includes(\"white\")){\n\n        let emptyCount = 0;\n        let whiteSide = -1;\n        let cubeX = cube[i][6];\n        let cubeY = cube[i][7];\n        let cubeZ = cube[i][8];\n        \n\n        for(let j = 0; j < 6; j++){\n          if (cube[i][j] === \"black\") emptyCount++;\n          else {\n            if(cube[i][j] === \"white\") whiteSide = j;\n          }\n        }\n\n        // If edge piece\n        if(emptyCount === 4) {\n          if(i===pieceOne && solvedEdges === 0 ){\n            if(cubeX===1 && cubeY===0 && cubeZ===2)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01U' 01R' 01F'\";\n            \n            else if(cubeX===2 && cubeY===0 && cubeZ===1)\n              !whiteSide ? moveString+= space + \"01F'\" : moveString+= space + \"01R 01U\";\n            \n            else if(cubeX===1 && cubeY===0 && cubeZ===0)\n              !whiteSide ? moveString+= space + \"01F2\" : moveString+= space + \"01D 01R 01F'\";\n\n            else if(cubeX===0 && cubeY===0 && cubeZ===1)\n              !whiteSide ? moveString+= space + \"01F\" : moveString+= space + \"01L' 01U'\";\n\n            //If piece one is in y section 1\n            else if(cubeX===0 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01L 01F\" : moveString+= space + \"01U'\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01R' 01F'\" : moveString+= space + \"01U\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===0)\n              whiteSide===2 ? moveString+= space + \"01D' 01F2\" : moveString+= space + \"01R 01F'\";\n            \n            else if(cubeX===0 && cubeY===1 && cubeZ===0)\n              whiteSide===4 ? moveString+= space + \"01D 01F2\" : moveString+= space + \"01L' 01F\";\n            \n\n            //If piece one is in y section 2\n            else if(cubeX===1 && cubeY===2 && cubeZ===2)\n              whiteSide===3 ? moveString+= space + \"01U2\" : moveString+= space + \"01B 01L 01U'\";\n            \n            else if(cubeX===2 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01R2 01F'\" : moveString+= space + \"01R' 01U\";\n            \n            else if(cubeX===1 && cubeY===2 && cubeZ===0)\n              whiteSide===3 ? moveString+= space + \"01B2 01U2\" : moveString+= space + \"01B' 01L 01U'\";\n            \n            else if(cubeX===0 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01B' 01U2\" : moveString+= space + \"01L 01U'\";\n            \n          }\n          if(i===pieceTwo && solvedEdges === 1){\n            \n            if(cubeX===0 && cubeY===0 && cubeZ===1)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01L' 01R 01U' 01R'\";\n            \n            else if(cubeX===1 && cubeY===0 && cubeZ===0)\n              !whiteSide ? moveString+= space + \"01D' 01F' 01D 01F\" : moveString+= space + \"01D' 01L'\";\n            \n            else if(cubeX===2 && cubeY===0 && cubeZ===1)\n              !whiteSide ? moveString+= space + \"01R 01F2 01R' 01F2\" : moveString+= space + \"01R 01F 01U 01F'\";\n            \n\n            //If piece two is in y section 1\n            if(cubeX===0 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01L\" : moveString+= space + \"01F 01U' 01F'\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01F2 01R' 01F2\" : moveString+= space + \"01U 01F' 01U'\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===0)\n              whiteSide===2 ? moveString+= space + \"01F' 01D' 01F\" : moveString+= space + \"01F2 01R 01F2\";\n            \n            else if(cubeX===0 && cubeY===1 && cubeZ===0)\n              whiteSide===4 ? moveString+= space + \"01F' 01D 01F\" : moveString+= space + \"01L'\";\n            \n\n            //If piece two is in y section 2\n            if(cubeX===1 && cubeY===2 && cubeZ===2)\n              whiteSide===3 ? moveString+= space + \"01F 01U2 01F'\" : moveString+= space + \"01U' 01L 01U\";\n            \n            else if(cubeX===2 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01B2 01L2\" : moveString+= space + \"01R' 01F 01U 01F'\";\n            \n            else if(cubeX===1 && cubeY===2 && cubeZ===0)\n              whiteSide===3 ? moveString+= space + \"01F' 01D2 01F\" : moveString+= space + \"01D 01L'\";\n            \n            else if(cubeX===0 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01L2\" : moveString+= space + \"01B' 01U' 01L 01U\";\n            \n          }\n          if(i===pieceThree && solvedEdges === 2){\n  \n            if(cubeX===1 && cubeY===0 && cubeZ===0)\n              !whiteSide ? moveString+= space + \"01D 01F 01D' 01F'\" : moveString+= space + \"01D 01R\";\n            \n            else if(cubeX===2 && cubeY===0 && cubeZ===1)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01R 01F' 01U 01F\";\n            \n            \n            //If piece three is in y section 1\n            if(cubeX===0 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01F2 01L 01F2\" : moveString+= space + \"01F' 01U' 01F\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01R'\" : moveString+= space + \"01F' 01U 01F\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===0)\n              whiteSide===2 ? moveString+= space + \"01F 01D' 01F'\" : moveString+= space + \"01R\";\n            \n            else if(cubeX===0 && cubeY===1 && cubeZ===0)\n              whiteSide===4 ? moveString+= space + \"01F 01D 01F'\" : moveString+= space + \"01F2 01L' 01F2\";\n            \n\n            //If piece three is in y section 2\n            if(cubeX===1 && cubeY===2 && cubeZ===2)\n              whiteSide===3 ? moveString+= space + \"01F' 01U2 01F\" : moveString+= space + \"01U 01R' 01U'\";\n            \n            else if(cubeX===2 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01R2\" : moveString+= space + \"01R' 01F' 01U 01F\";\n            \n            else if(cubeX===1 && cubeY===2 && cubeZ===0)\n              whiteSide===3 ? moveString+= space + \"01F 01D2 01F'\" : moveString+= space + \"01D' 01L\";\n            \n            else if(cubeX===0 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01B2 01R2\" : moveString+= space + \"01B' 01U 01R' 01U'\";\n            \n          }\n          if(i===pieceFour && solvedEdges === 3){\n  \n            if(cubeX===1 && cubeY===0 && cubeZ===0)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01D 01F' 01R 01F\";\n            \n            //If piece four is in y section 1\n            if(cubeX===0 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01F 01L 01F'\" : moveString+= space + \"01F2 01U' 01F2\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===2)\n              whiteSide===1 ? moveString+= space + \"01F' 01R' 01F\" : moveString+= space + \"01F2 01U 01F2\";\n            \n            else if(cubeX===2 && cubeY===1 && cubeZ===0)\n              whiteSide===2 ? moveString+= space + \"01D'\" : moveString+= space + \"01F' 01R 01F\";\n            \n            else if(cubeX===0 && cubeY===1 && cubeZ===0)\n              whiteSide===4 ? moveString+= space + \"01D\" : moveString+= space + \"01F 01L' 01F'\";\n            \n\n            //If piece four is in y section 2\n            if(cubeX===1 && cubeY===2 && cubeZ===2)\n              whiteSide===3 ? moveString+= space + \"01F2 01U2 01F2\" : moveString+= space + \"01B 01L' 01D 01L\";\n            \n            else if(cubeX===2 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01F' 01R2 01F\" : moveString+= space + \"01R 01D' 01R'\";\n            \n            else if(cubeX===1 && cubeY===2 && cubeZ===0)\n              whiteSide===3 ? moveString+= space + \"01D2\" : moveString+= space + \"01D' 01F' 01R 01F\";\n            \n            else if(cubeX===0 && cubeY===2 && cubeZ===1)\n              whiteSide===3 ? moveString+= space + \"01F 01L2 01F'\" : moveString+= space + \"01L' 01D 01L\";\n            \n          }\n        }\n      }\n    }\n    \n    const moveArray = moveStringToArray(moveString);\n\n    if(solvedEdges < 4){\n        return {moveSet : moveArray};\n    } else{\n        return {solveState : 2}\n    }\n}\n\nmodule.exports = solveWhiteCross;","  // Solves white (front) corners\n  function solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let space = \"\";\n    let solvedCorners = 0;\n\n    let dim = cubeDimension;\n\n    let pieceOne = 0;\n    let pieceTwo = dim - 1;\n    let pieceThree = (cube.length/dim) - dim;\n    let pieceFour = (cube.length/dim) - 1;\n\n    for(let i = 0; i < cube.length; i++){\n      if(moveString.length) space = \" \";\n      if(cube[i].includes(\"white\")){\n\n        let emptyCount = 0;\n        let whiteSide = -1;\n        let cubeX = cube[i][6];\n        let cubeY = cube[i][7];\n        let cubeZ = cube[i][8];\n\n        for(let j = 0; j < 6; j++){\n          if (cube[i][j] === \"black\") emptyCount++;\n          else if(cube[i][j] === \"white\") whiteSide = j;\n        }\n\n        // If edge piece\n        if(emptyCount === 3) {\n\n          if(i===pieceOne && solvedCorners === 0 ){\n            //Front\n            if(cubeX===0 && cubeY===0 && cubeZ===dim-1){\n              if(whiteSide===0){solvedCorners++;}\n              else if(whiteSide===1) moveString+= space + \"01L' 01B 01L 01B' 01L' 01B 01L\";\n              else moveString+= space + \"01L' 01B' 01L 01B2 01U 01B' 01U'\";\n            }\n            else if(cubeX===dim-1 && cubeY===0 && cubeZ===dim-1) moveString+= space + \"01R 01L' 01B 01L 01R'\"\n            else if(cubeX===dim-1 && cubeY===0 && cubeZ===0) moveString+= space + \"01R' 01B' 01R 01U 01B' 01U'\";\n            else if(cubeX===0 && cubeY===0 && cubeZ===0) moveString+= space + \"01D' 01U 01B 01U' 01D\"\n            //Back\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01U 01B 01U'\"\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01L' 01B 01L\"\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01L' 01B2 01L\"\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01U 01B' 01U'\"\n          }\n\n          if(i===pieceTwo && solvedCorners === 1 ){\n            if(cubeX===dim-1 && cubeY === 0 && cubeZ === dim-1){\n              if(whiteSide === 0){solvedCorners++}\n              else if(whiteSide===1) moveString += space + \"01R 01B' 01R' 01B 01R 01B' 01R'\";\n              else moveString += space + \"01U' 01B 01U 01B' 01U' 01B 01U\";\n            }\n            else if(cubeX === dim-1 && cubeY===0 && cubeZ===0) moveString+= space + \"01U' 01D 01B 01D' 01U\";\n            else if(cubeX===0 && cubeY===0 && cubeZ===0) moveString+= space + \"01L 01R 01B2 01R' 01L'\";\n            //Back\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01R 01B' 01R'\";\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01B 01R 01B' 01R'\";\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01B2 01R 01B' 01R'\";\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01R 01B2 01R'\";\n          }\n\n          if(i===pieceThree && solvedCorners === 2 ){\n            if(cubeX===0 && cubeY===0 && cubeZ===0){\n              if(whiteSide === 0){solvedCorners++}\n              else if(whiteSide === 4) moveString += space + \"01D' 01B 01D 01B' 01D' 01B 01D\";\n              else moveString += space + \"01L 01B' 01L' 01B 01L 01B' 01L'\";\n            }\n            else if(cubeX === dim-1 && cubeY===0 && cubeZ===0) moveString+= space + \"01R' 01L 01B' 01L' 01R\";\n            //Back\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01D' 01B 01D\";\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01D' 01B2 01D\";\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01B' 01D' 01B' 01D\";\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01D' 01B' 01D\";\n          }\n\n          if(i===pieceFour && solvedCorners === 3 ){\n            if(cubeX === dim-1 && cubeY===0 && cubeZ===0){\n              if(whiteSide === 0){solvedCorners++}\n              else if(whiteSide === 2) moveString += space + \"01D 01B' 01D' 01B 01D 01B' 01D'\";\n              else moveString += space + \"01R' 01B 01R 01B' 01R' 01B 01R\";\n            }\n            //Back\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \" 01R' 01B2 01R\";\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===dim-1) moveString+= space + \"01D 01B' 01D'\";\n            else if(cubeX===dim-1 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01B 01D 01B' 01D'\";\n            else if(cubeX===0 && cubeY===dim-1 && cubeZ===0) moveString+= space + \"01R' 01B 01R\";\n          }\n        }\n      }\n    }\n\n    const moveArray = moveStringToArray(moveString);\n\n    // solvedCorners < 4 ? this.setState({moveSet : moveArray}) :\n    //   dim < 3 ? this.setState({solveState : 6}) : this.setState({solveState : 3});\n    if(solvedCorners < 4){\n        return {moveSet : moveArray};\n    }\n    else{\n      if(dim < 3){\n        return {solveState : 6};\n      }\n      else{\n        return {solveState : 3};\n      }\n    }\n  }\n\n  module.exports = solveWhiteCorners;","function solveMiddleEdges(rubiksObject,moveStringToArray){\n  let moveString = \"\";\n  let cube = rubiksObject;\n  let space = \"\";\n  let solvedEdges = 0;\n  let moveFromMiddle012 = \"01B 01U 01B' 01U' 01B' 01L' 01B 01L\";\n  let moveFromMiddle212 = \"01B 01R 01B' 01R' 01B' 01U' 01B 01U\";\n  let moveFromMiddle210 = \"01B 01D 01B' 01D' 01B' 01R' 01B 01R\";\n  let moveFromMiddle010 = \"01B 01L 01B' 01L' 01B' 01D' 01B 01D\";\n\n  for(let i = 0; i < 27; i++){\n    if(moveString.length) space = \" \";\n    if(cube[i].includes(\"green\") || cube[i].includes(\"blue\")){\n      let emptyCount = 0;\n      let blueSide = -1;\n      let greenSide = -1;\n      let cubeX = cube[i][6];\n      let cubeY = cube[i][7];\n      let cubeZ = cube[i][8];\n\n      for(let j = 0; j < 6; j++){\n        if (cube[i][j] === \"black\") emptyCount++;\n        else {\n          if(cube[i][j] === \"blue\") blueSide = j;\n          else if(cube[i][j] === \"green\") greenSide = j;\n        }\n      }\n\n      if(emptyCount === 4){\n        if(i===9 && solvedEdges === 0){\n          //Front\n          if(cubeX === 0 && cubeY === 1 && cubeZ === 2)\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle012;\n          \n          else if(cubeX === 2 && cubeY === 1 && cubeZ === 2) moveString+= space + moveFromMiddle212;\n          else if(cubeX === 0 && cubeY === 1 && cubeZ === 0) moveString+= space + moveFromMiddle010;\n          else if(cubeX === 2 && cubeY === 1 && cubeZ === 0) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(cubeX === 0 && cubeY === 2 && cubeZ === 1) {\n            blueSide === 3 ? moveString+= space + moveFromMiddle012 : moveString+= space + \"01B2 01L' 01B' 01L 01B 01U 01B 01U'\";\n          }\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 2) moveString+= space + \"01B\";\n          else if(cubeX === 2 && cubeY === 2 && cubeZ === 1) moveString+= space + \"01B2\";\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 0) moveString+= space + \"01B'\";\n        }\n        if(i===11 && solvedEdges === 1){\n          //Front\n          if(cubeX === 2 && cubeY === 1 && cubeZ === 2){\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle212;\n          }\n          else if(cubeX === 0 && cubeY === 1 && cubeZ === 0) moveString+= space + moveFromMiddle010;\n          else if(cubeX === 2 && cubeY === 1 && cubeZ === 0) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 2) {\n            blueSide === 1 ? moveString+= space + moveFromMiddle212 : moveString+= space + \"01B2 01U' 01B' 01U 01B 01R 01B 01R'\";\n          }\n          else if(cubeX === 2 && cubeY === 2 && cubeZ === 1) moveString+= space + \"01B\";\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 0) moveString+= space + \"01B2\";\n          else if(cubeX === 0 && cubeY === 2 && cubeZ === 1) moveString+= space + \"01B'\";\n        }\n        if(i===15 && solvedEdges === 2){\n          //Front\n          if(cubeX === 0 && cubeY === 1 && cubeZ === 0){\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle010;\n          }\n          else if(cubeX === 2 && cubeY === 1 && cubeZ === 0) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 0){\n            greenSide === 5 ? moveString+= space + moveFromMiddle010 : moveString+= space + \"01B2 01D' 01B' 01D 01B 01L 01B 01L'\";\n          }\n          else if(cubeX === 0 && cubeY === 2 && cubeZ === 1) moveString+= space + \"01B\";\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 2) moveString+= space + \"01B2\";\n          else if(cubeX === 2 && cubeY === 2 && cubeZ === 1) moveString+= space + \"01B'\";\n        }\n        if(i===17 && solvedEdges === 3){\n          //Front\n          if(cubeX === 2 && cubeY === 1 && cubeZ === 0){\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle210;\n          }\n          //Back\n          else if(cubeX === 2 && cubeY === 2 && cubeZ === 1){\n            greenSide === 3 ? moveString+= space + moveFromMiddle210 : moveString+= space + \"01B2 01R' 01B' 01R 01B 01D 01B 01D'\";\n          }\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 0) moveString+= space + \"01B\";\n          else if(cubeX === 0 && cubeY === 2 && cubeZ === 1) moveString+= space + \"01B2\";\n          else if(cubeX === 1 && cubeY === 2 && cubeZ === 2) moveString+= space + \"01B'\"; \n        }\n      }\n    }\n  }\n\n  const moveArray = moveStringToArray(moveString);\n\n  if(solvedEdges < 4 ) return {moveSet : moveArray};\n  else return {solveState : 4};\n}\n\nmodule.exports = solveMiddleEdges;","function solveYellowCross(rubiksObject,moveStringToArray){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let recipe = \"01U 01R 01B 01R' 01B' 01U'\";\n    let cubeIndex = [19,21,23,25];\n    let cubeAtIndex = [];\n\n    for(let i = 0; i < 4; i++){\n      if(cube[cubeIndex[i]][6] === 1 && \n         cube[cubeIndex[i]][7] === 2 &&\n         cube[cubeIndex[i]][8] === 2) cubeAtIndex[0] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === 0 && \n        cube[cubeIndex[i]][7] === 2 &&\n        cube[cubeIndex[i]][8] === 1) cubeAtIndex[1] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === 2 && \n        cube[cubeIndex[i]][7] === 2 &&\n        cube[cubeIndex[i]][8] === 1) cubeAtIndex[2] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === 1 && \n        cube[cubeIndex[i]][7] === 2 &&\n        cube[cubeIndex[i]][8] === 0) cubeAtIndex[3] = cube[cubeIndex[i]][3];\n    }\n\n    if(cube[19][3] === \"yellow\" &&\n       cube[21][3] === \"yellow\" &&\n       cube[23][3] === \"yellow\" &&\n       cube[25][3] === \"yellow\" \n      );\n\n    //Line\n    else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = \"01B \" + recipe;}\n    else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = recipe;}\n\n    //L-Shape\n    else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = \"01B2 \" + recipe + \" \" + recipe;}\n    else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = recipe + \" \" + recipe;}\n    else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[1] === \"yellow\" ) {moveString = \"01B \" + recipe + \" \" + recipe;}\n    else if (cubeAtIndex[2] === \"yellow\" && cubeAtIndex[3] ) {moveString = \"01B' \" + recipe + \" \" + recipe;}\n\n    else moveString = recipe;\n    \n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray}; \n    else return {solveState:5};\n  }\n\n  module.exports = solveYellowCross;","function alignYellowCross(rubiksObject,moveStringToArray){\n    let moveString = \"\";\n    let cube = rubiksObject;\n\n    if(cube[19][6] === 1 && cube[19][7] === 2 && cube[19][8] === 2){\n        //Check if other pieces are in place\n        if(cube[21][6] === 0 && cube[21][8] === 1 &&\n            cube[23][6] === 2 && cube[23][8] === 1);\n\n        else if(cube[21][6] === 2 && cube[23][8] === 1 &&\n                cube[25][6] === 1 && cube[25][8] === 0) moveString = \"01D 01B 01D' 01B 01D 01B2 01D' 01B2 01L 01B 01L' 01B 01L 01B2 01L' 01B\";\n\n        else if(cube[25][6] === 2 && cube[25][8] === 1) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\n\n        else if(cube[25][6] === 0 && cube[25][8] === 1) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\n\n\n        //Make moves\n    }\n    else if(cube[19][6] === 2 && cube[19][7] === 2 && cube[19][8] === 1){\n        moveString = \"01B\";\n    }\n    else moveString = \"01B'\"\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray};\n    else return{solveState:6};\n}\n\nmodule.exports = alignYellowCross;","function solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let solveAlgo = \"01U' 01F' 01U 01F 01U' 01F' 01U 01F\";\n    let dim = cubeDimension;\n\n    let pieceOne = cube.length - (dim*dim);\n    let pieceTwo = pieceOne + (dim-1);\n    let pieceThree = cube.length - dim;\n    let pieceFour = cube.length - 1;\n\n    if(cube[pieceOne][3] === \"yellow\" &&\n       cube[pieceTwo][3] === \"yellow\" &&\n       cube[pieceThree][3] === \"yellow\" &&\n       cube[pieceFour][3] === \"yellow\"){\n      if(cube[pieceOne][6] === 0 && cube[pieceOne][8] === dim-1);\n      else moveString = \"01B\";\n    }\n    else if(cube[pieceOne][3]!== \"yellow\"){\n      moveString = solveAlgo;\n    }\n    else if(cube[pieceTwo][3]!== \"yellow\"){\n      if(cube[pieceTwo][6] === 0 && cube[pieceTwo][8] === dim-1) {\n        moveString = solveAlgo;\n      }\n      else {\n        moveString = \"01B\";\n      }\n    }\n    else if(cube[pieceFour][3]!== \"yellow\"){\n      if(cube[pieceFour][6] === 0 && cube[pieceFour][8] === dim-1) {\n        moveString = solveAlgo;\n      }\n      else{\n        moveString = \"01B\";\n      }\n    }\n    else if(cube[pieceThree][3]!== \"yellow\"){\n      if(cube[pieceThree][6] === 0 && cube[pieceThree][8] === dim-1) {\n        moveString = solveAlgo;\n      }\n      else {\n        moveString = \"01B\";\n      }\n    }\n\n    let moveArray = moveStringToArray(moveString);\n\n    if(moveString.length){\n      return {moveSet:moveArray};\n    }\n    else{\n      //check for anomoly\n      if(dim === 2) {\n        if(cube[pieceOne][6]===0 && cube[pieceOne][8]===dim-1) {\n          if(cube[pieceTwo][6]===dim-1 && cube[pieceTwo][8]===dim-1){\n            if(cube[pieceThree][6]===0 && cube[pieceThree][8]===0){\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n              if(solveMoves.length){\n                let temp = solveMoves.split(\" \");\n                console.log(\"Number of moves: \"+ temp.length);\n                console.log(\"Moves set: \" + solveMoves);\n                obj.solveMoves = \"\";\n                return obj;\n              }\n              return obj;\n            }\n            else {\n              moveString = \"01R 01D' 01R' 01F' 01R' 01F 01D\";\n              moveArray = moveStringToArray(moveString);\n              return {moveSet:moveArray};\n            }\n          }\n        }\n        else {\n          moveString = \"01B\";\n          moveArray = moveStringToArray(moveString);\n          return {moveSet:moveArray};\n        }\n      }\n      else {\n        let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n        if(solveMoves.length){\n          let temp = solveMoves.split(\" \");\n          \n          console.log(\"Number of moves: \"+ temp.length);\n          console.log(\"Moves set: \" + solveMoves);\n          obj.solveMoves = \"\";\n          return obj;\n        }\n        \n        return obj;\n      }\n    }\n  }\n  module.exports = solveYellowCorners;\n","function alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray){\n    let moveString = \"\";\n    let cube = rubiksObject;\n\n    let dim = cubeDimension;\n\n    let pieceOne = cube.length - (dim*dim);\n    let pieceTwo = pieceOne + (dim-1);\n    let pieceThree = cube.length - dim;\n    let pieceFour = cube.length - 1;\n\n\n    if(cube[pieceOne][6] === 0 && cube[pieceOne][8] === dim-1 &&\n       cube[pieceTwo][6] === dim-1 && cube[pieceTwo][8] === dim-1);\n\n    else if(cube[pieceOne][6] === 0 && cube[pieceOne][8] === dim-1) moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\n    else if(cube[pieceTwo][6] === dim-1 && cube[pieceTwo][8] === dim-1) moveString = \"01B 01R 01B' 01L' 01B 01R' 01B' 01L\";\n    else if(cube[pieceThree][6] === 0 && cube[pieceThree][8] === 0) moveString = \"01B 01L 01B' 01R' 01B 01L' 01B' 01R\";\n    else if(cube[pieceFour][6] === dim-1 && cube[pieceFour][8] === 0) moveString = \"01B 01D 01B' 01U' 01B 01D' 01B' 01U\";\n\n    else moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray};\n    else return {solveState:7};\n  }\n\n  module.exports = alignYellowCorners;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      white.js\n *      Started: Friday, December 13, 2019\n *      Finished: Saturday, December 14, 2019\n *      Note: Redo this function so it works similarly to other solvers (no row or columns)\n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveWhiteMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let row = Math.floor(index/(dim-2));\n    let column = index%(dim-2);\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    console.log(`Currently on side: ${currentSide}`);\n    console.log(`Current position: ${JSON.stringify(current)}`);\n    console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n    if(solved.x===1){\n        if(dim-solved.z === 2){\n            if(currentSide===\"F\"){\n                moveString=\"01F\";\n            }\n            else if(currentSide!==\"D\"&&currentSide!==\"U\"){\n                if(current.z!==dim-2){\n                    moveString= \"01\" + currentSide;\n                }\n                else{\n                    moveString= move(\"\",dim-current.z,\"U\");\n                }\n            }\n            else {\n                if(current.x!==solved.x){\n                    moveString = \"01\" + currentSide;\n                }\n                else{\n                    moveString = \"02L\";\n                }\n            }\n        }\n        else{\n            if(currentSide===\"F\"){\n                moveString = move(\"\",current.z+1,\"D'\");\n            }\n            else if(currentSide===\"B\"){\n                if(current.z<=solved.z){\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n                else moveString = \"01B\";\n            }\n            else if(currentSide===\"L\"){\n                if(current.y!==dim-2){\n                    moveString= \"01L\";\n                }\n                else if(current.z!==solved.z){\n                    moveString= \"01L\";\n                }\n                else {\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n            }\n            else moveString = move(\"\",current.y+1,\"F'\");\n        }\n    }\n    else{\n        if(row===0){\n            if(currentSide===\"F\"){\n                if(current.z < solved.z && current.x >=solved.x){\n                    moveString = move(\"\",dim-current.x,\"R\");\n                }\n                else{\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n            }\n            else if(currentSide===\"B\"){\n                if(current.x === solved.x && current.z!== solved.z){\n                    moveString = move(\"\",column+2,\"L2\");\n                }\n                else {\n                    moveString = \"01B\"\n                };\n            }\n            else{\n                if(current.y===dim-2){\n                    if(current.z !== dim-1){\n                        moveString = move(\"\",row+2,\"B\")\n                    }\n                    else{\n                        if(current.x !== solved.x){\n                            moveString = \"01U\";\n                        }\n                        else {\n                            moveString = move(\"\",column+2,\"L\");\n                        };\n                    }\n                }\n                else{\n                    moveString = \"01\" + currentSide;\n                }\n            }\n        }\n        else{\n            if(currentSide===\"F\"){\n                if(current.z<solved.z){\n                    moveString = move(\"\",dim-current.z,\"U\");\n                }\n                else {\n                    moveString = move(\"\",dim-current.z,\"U\");\n                    moveString += move(\" \",dim-current.x,\"F'\");\n                    moveString += move(\" \",dim-current.z,\"U'\");\n                }\n                \n            }\n            else if(currentSide===\"B\"){\n                if(current.z===solved.z){\n                    if(solved.x===current.x){\n                        moveString = move(\"\",dim-current.z,\"U\");\n                        moveString += move(\" \",current.x+1,\"B\");\n                        moveString += move(\" \",dim-current.z,\"U'\");\n                    }\n                    else {\n                        moveString = move(\"\",dim-current.z,\"U\");\n                        moveString += \" 01R\";\n                        moveString += move(\" \",dim-current.z,\"U'\");\n                    }\n                }\n                else moveString = \"01B\";\n            }\n            else{\n                if(currentSide!==\"U\"){\n                    console.log(\"Moving to top\")\n                    moveString += move(\" \",current.y+1,\"F\");\n                }\n                else{\n                    if(current.x!==solved.x || current.y!==solved.z){\n                        moveString = \"01U\";\n                    }\n                    else{\n                        moveString = \"01U'\";\n                        moveString += move(\" \",dim-solved.z,\"U'\");\n                        moveString += move(\" \",current.x+1,\"F\");\n                        moveString += move(\" \",dim-solved.z,\"U\");\n                    }\n                }\n            }\n        }\n    }\n    return moveString;\n}\n\nmodule.exports = solveWhiteMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      yellow.js\n *      Started: Saturday, December 14, 2019\n *      Finished: Saturday, December 21, 2019\n *  \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveYellowMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    console.log(`Currently on side: ${currentSide}`);\n    console.log(`Current position: ${JSON.stringify(current)}`);\n    console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n    \n    let opposite = \"01L'\";\n    if(currentSide===\"B\"){\n        moveString += move(\" \",current.z+1,\"D'\");\n\n        if(current.z!==solved.z){\n            if(current.z === middle){\n                moveString += \" 01R1\";\n            }\n            else moveString += \" 01R2\";\n        }\n\n        else {\n            if(current.x===current.z){\n                moveString += \" 01L'\";\n                opposite = \"01L\";\n            }\n            else if(((current.x>= middle &&current.z>=middle))  ||\n                (current.x< middle &&current.z<middle) ||\n                (current.x> middle &&current.z<middle))\n                moveString += \" 01L\";\n            else{\n                moveString += \" 01L'\";\n                opposite = \"01L\";\n            }\n\n            moveString += move(\" \",dim-current.x,\"F\");\n            moveString += \" \" + opposite;\n            \n        }\n        moveString += move(\" \",current.z+1,\"D\");\n    }\n    else{\n        if(currentSide!==\"R\"){\n            moveString= move(\"\",current.y+1,\"F\");\n        }\n        else {\n            if(current.y!==dim-(solved.x+1)||current.z!==solved.z){\n                moveString = \"01R\";\n            }\n            else {\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += move(\" \",current.z+1,\"D'\");\n                if((current.y>= middle&&current.z>=middle) ||\n                   (current.y< middle&&current.z<middle))\n                    moveString += \" 01L\"\n                else\n                    moveString += \" 01L'\"\n\n                moveString += move(\" \",current.y+1,\"F\");\n                \n                if((current.y>= middle&&current.z>=middle) ||\n                   (current.y< middle&&current.z<middle))\n                    moveString += \" 01L'\"\n                else\n                    moveString += \" 01L\"\n\n                moveString += move(\" \",current.z+1,\"D\");\n            }\n        }\n    }\n\n    return moveString\n}\n\nmodule.exports = solveYellowMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      blue.js\n *      Started: Saturday, December 14, 2019\n *      Finished: Friday, February 7, 2020\n * \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveBlueMiddle = (current,solved,dim) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let isOddCube = dim%2;\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    \n    console.log(`Currently on side: ${currentSide}`);\n    console.log(`Current position: ${JSON.stringify(current)}`);\n    console.log(`Solved position: ${JSON.stringify(solved)}`);\n\n    if(currentSide===\"U\"){\n\n        moveString = move(\"\",current.y+1,\"F\");//1\n        moveString += move(\" \",current.x+1,\"U2\");//2\n\n        if( isOddCube && current.y===middle) moveString+= \" 01L'\";//2.1\n\n        moveString += move(\" \",current.y+1,\"F'\");//3\n\n        if( isOddCube && current.y===middle) moveString+= \" 01L\";//3.1\n\n        moveString += move(\" \",current.x+1,\"U2\");//4\n    }\n\n    else if(currentSide===\"R\"){\n        \n        if((dim-current.z)===(solved.x+1) && current.y===solved.y){\n\n            moveString = move(\"\",solved.x+1,\"U2\");//6\n\n            if(isOddCube && solved.y===middle) moveString += \" 01L'\";//6.1\n\n            moveString += move(\" \",solved.y+1,\"F\");//7\n\n            if(isOddCube && solved.y===middle) moveString += \" 01L\";//7.1\n\n            moveString += move(\" \",solved.x+1,\"U2\");//8\n            moveString += move(\" \",solved.y+1,\"F'\");//9\n            \n        } else {\n\n            moveString = \"01R'\"//5\n            \n        }\n    }\n\n    else if(currentSide===\"L\"){\n        console.log(\"solve from left side to top side\");\n\n        if(current.z===solved.x && current.y===solved.y){\n            console.log(\"in place for step 6-9\");\n\n            moveString = move(\"\",current.z+1,\"D2\");//6\n            if(isOddCube && solved.y===middle) moveString += \" 01R\";//6.1\n            moveString += move(\" \",solved.y+1,\"F'\");//7\n            if(isOddCube && solved.y===middle) moveString += \" 01R'\";//7.1\n            moveString += move(\" \",current.z+1,\"D2\");//8\n            moveString += move(\" \",solved.y+1,\"F\");//9\n            \n        } else {\n            console.log(\"rotating left side\");\n\n            moveString = \"01L\"//5\n        }\n    }\n\n    else {\n        console.log(\"move from back side to right side\");\n\n        if(current.y!==solved.y){\n            moveString = \"01D\";\n        }\n        else{\n            moveString = move(\"\",solved.y+1,\"F'\");\n            moveString += \" 01R\";\n            moveString += move(\" \",solved.y+1,\"F\");\n        }\n    }\n\n    return moveString;\n}\n\nmodule.exports = solveBlueMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      green.js\n *      Started: Saturday February 8, 2020\n *      Finished:Saturday February 8, 2020\n *      \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveGreenMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let isOddCube = dim%2;\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n\n    console.log(`Currently on side: ${currentSide}`);\n    console.log(`Current position: ${JSON.stringify(current)}`);\n    console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n\n    // Temp 4x4 solver\n    if(dim===4){\n        if(currentSide === \"D\"){\n            if(index===16){\n                if(solved.x===current.x&&solved.y===current.y);\n                else moveString = \"01D\"\n            }\n\n            else if(index===17){\n                console.log(\"on side D\")\n                if(solved.x===current.x&&solved.y===current.y);\n                else {\n                    moveString = move(\"\",current.y+1,\"F'\");\n                    moveString += \" 01R2\"\n                    moveString += move(\" \",current.y+1,\"F\");\n                }\n            }\n            else if(index===18){\n                console.log(\"DID THIS SOLVE IT\")\n                moveString = move(\"\",dim-1,\"F'\");\n                moveString += \" 01R'\"\n                moveString += move(\" \",dim-1,\"F\");\n            }\n        }\n\n        if(currentSide === \"R\"){\n            if(index===16){\n                moveString = move(\"\",current.y+1,\"F\");\n                moveString += \" 01D2\"\n                moveString += move(\" \",current.y+1,\"F'\");\n            }\n\n            else if(index===17){\n                console.log(\"solved from red to green\");\n                console.log(current);\n                if(current.y===2 && current.z===2){\n                    console.log(\"solve it\");\n                    moveString = \"01D\";\n                    moveString += move(\" \", dim-1, \"F\");\n                    moveString += \" 01D'\";\n                    moveString += move(\" \", dim-1, \"F'\");\n                    \n                }\n                else{\n                    moveString = \"01R\"\n                }\n            }\n            \n            else if(index===18){\n                if(current.y===2 && current.z===1){\n                    console.log(\"solve it\");\n                    moveString = \"01R\";\n                    moveString += move(\" \",dim-1,\"F'\");\n                    moveString += \" 01R'\";\n                    moveString += move(\" \",dim-1,\"F\");\n                }\n                else{\n                    moveString = \"01R\"\n                }\n            }\n            else if(index===19){\n                console.log(\"calculating move\");\n                if(current.y===1 && current.z===2){\n                    moveString=\"03F'\";\n                    moveString+=\" 01R'\";\n                    moveString+=\" 03F\";\n                    moveString+=\" 01R\";\n                    moveString+=\" 03F'\";\n                    moveString+=\" 01R\";\n                    moveString+=\" 03F\";\n                }\n                else{\n                    moveString = \"01R\"\n                }\n            }\n        }\n    }\n\n    // ORIGINAL SIDE 4 code.\n    // Leaves opposite sides as last 2 faces, code left incase revisited\n\n    // if(currentSide===\"D\"){\n    //     moveString = move(\"\",current.y+1,\"F\");\n\n    //     if(dim-(current.x+1)<middle) {\n    //         if(current.y<middle) moveString += \" 01R\";\n    //         else moveString += \" 01R'\";\n    //     }\n    //     else {\n    //         if(current.y<middle) moveString += \" 01R'\";\n    //         else moveString += \" 01R\";\n    //     }\n\n    //     moveString += move(\" \",current.x+1,\"U2\");\n\n    //     if(dim-(current.x+1)<middle) {\n    //         if(current.y<middle) moveString += \" 01R1\";\n    //         else moveString += \" 01R\";\n    //     }\n    //     else {\n    //         if(current.y<middle) moveString += \" 01R\";\n    //         else moveString += \" 01R'\";\n    //     }\n\n    //     moveString += move(\" \",current.y+1,\"F'\");\n    //     moveString += move(\" \",current.x+1,\"U2\");\n    // }\n\n    // else if (currentSide===\"R\"){\n    //     if(current.y===solved.y&&current.z===solved.x){\n    //         moveString = move(\"\",current.y+1,\"F\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L'\"; //a\n    //         else moveString += \" 01L2\";\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L'\"; //a1\n\n    //         moveString += move(\" \",current.z+1,\"D2\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L\";  //a1'\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L\";  //a'\n    //         else moveString += \" 01L2\";\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n    //         moveString += move(\" \",current.z+1,\"D2\");\n    //     }\n    //     else moveString = \"01R'\"\n    // }\n\n    // else if (currentSide===\"L\"){\n    //     if(current.y===solved.y&&current.z===(dim-(solved.x+1))){\n    //         moveString = move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R\"; //a\n    //         else moveString += \" 01R2\";\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R\"; //a1\n\n    //         moveString += move(\" \",current.z+1,\"D2\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R'\";  //a1'\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R'\";  //a'\n    //         else moveString += \" 01R2\";\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n    //         moveString += move(\" \",current.z+1,\"D2\");\n    //     }\n    //     else moveString = \"01L\"\n    // }\n\n    return moveString;\n}\n\nmodule.exports = solveGreenMiddle;\n\n","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      red.js\n *      Started: \n * \n *    \n */\n\nfunction move(space,depth,side){\n    return (space + (depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveOrangeMiddle = (current,solved,dim) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let isOddCube = dim%2;\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    \n    console.log(`Currently on side: ${currentSide}`);\n    console.log(`Current position: ${JSON.stringify(current)}`);\n    console.log(`Solved position: ${JSON.stringify(solved)}`);\n\n    if(dim===4){\n        console.log(\"4x4 orange middle solver here\");\n        switch(currentSide){\n            case 'L':\n                if(solved.x === 0 && solved.y === 1 && solved.z === 2){\n                    moveString+=\"01L\";\n                }\n                else if(solved.x === 0 && solved.y === 1 && solved.z === 1){\n                    moveString+=move(\"\",current.y+1,\"F'\");\n                    moveString+=\" 01D2\";\n                    moveString+=move(\" \",current.y+1,\"F\");\n                }\n                else if(solved.x === 0 && solved.y === 2 && solved.z === 2){\n                    moveString+=move(\"\",current.y+1,\"F'\");\n                    moveString+=\" 01D2\";\n                    moveString+=move(\" \",current.y+1,\"F\");\n                }\n                break;\n            case 'D':\n                if(solved.x === 0 && solved.y === 1 && solved.z === 2){\n                    moveString+=move(\"\",current.y+1,\"F\");\n                    moveString+=\" 01L2\";\n                    moveString+=move(\" \",current.y+1,\"F'\");\n                }\n                else if(solved.x === 0 && solved.y === 1 && solved.z === 1){\n                    if(current.x===2 && current.y===2){\n                        moveString=\"01L\"\n                        moveString+=\" 02F'\";\n                        moveString+=\" 01D'\";\n                        moveString+=\" 02F\";\n                    }\n                    else{\n                        moveString+=\"01D\";\n                    }\n                }\n                else if(solved.x === 0 && solved.y === 2 && solved.z === 2){\n                    if(current.y===1 && current.x===1){\n                        moveString+=\"03F'\";\n                        moveString+=\" 01D'\";\n                        moveString+=\" 03F\";\n                    }\n                    else{\n                        moveString=\"01D\";\n                    }\n                }\n                else {\n                    if(current.y===1 && current.x===2){\n                        moveString+=\"03F'\";\n                        moveString+=\" 01D'\";\n                        moveString+=\" 03F\";\n                        moveString+=\" 01D\";\n                        moveString+=\" 03F'\";\n                        moveString+=\" 01D\";\n                        moveString+=\" 03F\";\n                    }\n                    else{\n                        moveString=\"01D\";\n                    }\n                }\n                break;\n            case 'R':\n                if(solved.x === 0 && solved.y === 1 && solved.z === 2){\n                    moveString+=move(\"\",current.y+1,\"F2\");\n                    moveString+=\" 01L2\";\n                    moveString+=move(\" \",current.y+1,\"F2\");\n                }\n                else {\n                    moveString+=move(\"\",current.y+1,\"F\");\n                    moveString+=\" 01D2\";\n                    moveString+=move(\" \",current.y+1,\"F'\");\n                }\n                break;\n            default:\n                console.log(\"Something broke\");\n        }\n    }\n    else if(dim===5){\n        console.log(\"5x5 orange middle solver here\");\n    }\n    else {\n        console.log(\"6x6 and greater orange middle solver here\");\n    }\n\n    // if((current.x===0 && current.y===middle && current.z===middle && isOddCube)|| \n    //     (current.x===solved.x && current.y===solved.y && current.z===solved.z)){\n    //     return moveString;\n    // }\n    // else if(currentSide===\"D\"){\n    //     moveString = move(\"\",current.y+1,\"F\");\n\n    //     if(dim-(current.x+1)<middle) {\n    //         if(current.y<middle) moveString += \" 01R\";\n    //         else moveString += \" 01R'\";\n    //     }\n    //     else {\n    //         if(current.y<middle) moveString += \" 01R'\";\n    //         else moveString += \" 01R\";\n    //     }\n\n    //     moveString += move(\" \",current.x+1,\"U2\");\n\n    //     if(dim-(current.x+1)<middle) {\n    //         if(current.y<middle) moveString += \" 01R1\";\n    //         else moveString += \" 01R\";\n    //     }\n    //     else {\n    //         if(current.y<middle) moveString += \" 01R\";\n    //         else moveString += \" 01R'\";\n    //     }\n\n    //     moveString += move(\" \",current.y+1,\"F'\");\n    //     moveString += move(\" \",current.x+1,\"U2\");\n    // }\n\n    // else if (currentSide===\"R\"){\n    //     if(current.y===solved.y&&current.z===solved.x){\n    //         moveString = move(\"\",current.y+1,\"F\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L'\"; //a\n    //         else moveString += \" 01L2\";\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L'\"; //a1\n\n    //         moveString += move(\" \",current.z+1,\"D2\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L\";  //a1'\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01L\";  //a'\n    //         else moveString += \" 01L2\";\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n    //         moveString += move(\" \",current.z+1,\"D2\");\n    //     }\n    //     else moveString = \"01R'\"\n    // }\n\n    // else if (currentSide===\"L\"){\n    //     if(current.y===solved.y&&current.z===(dim-(solved.x+1))){\n    //         moveString = move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R\"; //a\n    //         else moveString += \" 01R2\";\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R\"; //a1\n\n    //         moveString += move(\" \",current.z+1,\"D2\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R'\";  //a1'\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle&&isOddCube) moveString += \" 01R'\";  //a'\n    //         else moveString += \" 01R2\";\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n    //         moveString += move(\" \",current.z+1,\"D2\");\n    //     }\n    //     else moveString = \"01L\"\n    // }\n\n// ############################################################\n\n    // if(currentSide===\"L\"){\n    //     if(solved.y===current.y){\n    //         moveString = move(\"\",current.y+1,\"F'\");\n\n    //         if(solved.y===middle && isOddCube){\n    //             moveString += \" 01D' \";\n    //         } else { moveString += \" 01D2 \"; }\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //         if(solved.y===middle && isOddCube){\n                \n    //         } else {\n    //             moveString += \" 01D \";\n    //         }\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n    //         moveString += \" 01R2\";\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //         if(solved.y===middle && isOddCube){\n                \n    //         } else {\n    //             moveString += \" 01D' \";\n    //         }\n\n    //         moveString += move(\" \",current.y+1,\"F'\");\n\n    //         if(solved.y===middle && isOddCube){\n    //             moveString += \" 01D \";\n    //         } else {\n    //             moveString += \" 01D2 \";\n    //         }\n\n    //         moveString += move(\" \",current.y+1,\"F\");\n\n    //     }\n    //     else{\n    //         moveString = move(\"\",current.y+1,\"F'\");\n    //         moveString += \" 01D\";\n    //         moveString += move(\" \",current.y+1,\"F\");\n    //     }\n\n    // }\n    // if(currentSide===\"R\"){\n    //     // this solver is hard. console.log the moves but return an empty string so you can see the move it's trying\n    //     if(current.y===solved.y && solved.z === dim-(current.z+1)){\n    //         moveString = move(\"\",solved.y+1,\"F'\");\n\n    //         if(solved.y===middle && isOddCube){\n    //             moveString += \" 01D\";\n    //         } else { moveString += \" 01D2\"; }\n\n    //         moveString += move(\" \",solved.y+1,\"F\");\n\n    //         if(solved.y===middle && isOddCube){\n    //             moveString += \" 01D'\";\n    //         } else { moveString += \" 01D2\"; }\n\n    //         moveString += \" 01R\"\n    //         moveString += \" 01D\"\n\n    //         moveString += move(\" \",current.z+1,\"F\");\n\n    //         if(current.y>middle){\n    //             moveString += \" 01D\";\n    //         } else {moveString += \" 01D'\";}\n\n    //         moveString += move(\" \",current.z+1,\"F'\");\n\n    //         if(solved.y===middle && isOddCube){\n    //         } else {moveString += \" 01D\";}\n\n    //         moveString += move(\" \",solved.y+1,\"F'\");\n\n    //         if(solved.y===middle && isOddCube){\n    //             moveString += \" 01D'\";\n    //         } else {moveString += \" 01D2\";}\n\n    //         moveString += move(\" \",solved.y+1,\"F\");\n\n    //         console.log(\"Test moves: \",moveString);\n    //         moveString = \"\";\n    //         // piece should be in place on displaced solved row on D (column d)\n    //         //               d\n    //         // D = [ 0 0 0 0 0 0 0 ]\n    //         //     [ 0 n n n P n 0 ]\n    //         //   x [ 0 n n n U n 0 ]\n    //         //     [ 0 n n X U n 0 ]\n    //         //     [ 0 n n n U n 0 ]\n    //         //     [ 0 n n n U n 0 ]\n    //         //     [ 0 0 0 0 0 0 0 ]\n\n    //         // Idea : find way to figure out what d and x will be, will make next 3 steps easier\n    //         // \n    //         // \n\n    //         // Rotate D to avoid misplacements when putting blue back in place (row x)\n\n    //         // Rotate D to move out of blue path onto L\n\n    //         // Rotate D into path so solved row gets replaced when blue gets moved from L to U\n            \n\n    //     }\n    //     else {\n    //         moveString = \"01R\"\n    //     }\n    // }\n    // if(currentSide===\"D\"){\n    //     moveString = move(\"\",current.y+1,\"F'\");\n\n    //     if(isOddCube && current.y===middle){\n    //         moveString += \" 01R'\";\n    //     } else {moveString += \" 01R2\";}\n\n    //     moveString += move(\" \",current.y+1,\"F\");\n    // }\n\n\n\n\n    return moveString;\n\n}\n\nmodule.exports = solveOrangeMiddle;","function move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction extractFromFront(current,maxCoord,minCoord){\n    if(current.z===maxCoord){\n        return `${move(\"\",current.x+1,\"L'\")} 01B' 01R 01B ${move(\"\",current.x+1,\"L\")} 01R'`\n    }\n    else if(current.x===maxCoord){\n        return `${move(\"\",current.z+1,\"D\")} 01B' 01D 01B ${move(\"\",current.z+1,\"D'\")} 01D'`\n    }\n    else if(current.z===minCoord){\n        return `${move(\"\",current.x+1,\"L\")} 01B' 01L 01B ${move(\"\",current.x+1,\"L'\")} 01L'`\n    }\n    else if(current.x===minCoord){\n        return `${move(\"\",current.z+1,\"D'\")} 01B' 01U 01B ${move(\"\",current.z+1,\"D\")} 01U'`\n    }\n}\n\nfunction moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide){\n    if(current.x===maxCoord && current.z===maxCoord){// Top Right\n        if(whiteSide===1){\n            return `01U' 01B 01U`\n        }\n        else{\n            return `01R 01B 01R'`\n        }\n    }\n    if(current.x===minCoord && current.z===maxCoord){// Top Left\n        if(whiteSide===1){\n            return `01U 01B 01U'`\n        }\n        else {\n            return `01L' 01B 01L`\n        }\n    }\n    if(current.x===maxCoord && current.z===minCoord){// Bottom Right\n        if(whiteSide===5){\n            return `01D 01B 01D'`\n        }\n        else {\n            return `01R' 01B 01R`\n        }\n    }\n    if(current.x===minCoord && current.z===minCoord){// Bottom Left\n        if(whiteSide===1){\n            return `01D' 01B 01U`\n        }\n        else {\n            return `01L 01B 01L'`\n        }\n    }\n}\n\nfunction flipPieceOnBack(current,maxCoord,minCoord){\n    if(current.z===maxCoord){//top\n        return `01U 01R 01B2 01R' 01U' 01B'`\n    }\n    else if(current.x===maxCoord){//right\n        return `01R 01D 01B2 01D' 01R' 01B'`\n    }\n    else if(current.z===minCoord){//down\n        return `01D 01L 01B2 01L' 01D' 01B'`\n    }\n    else if(current.x===minCoord){//left\n        return `01L 01U 01B2 01U' 01L' 01B'`\n    }\n}\n\nfunction solveFromBackToFront(current,solved,maxCoord,minCoord){\n    if(current.z===maxCoord&&solved.z===maxCoord){\n        return `${move(\"\",current.x+1,\"L\")} 01F 01R' 01F' ${move(\"\",current.x+1,\"L'\")} 01F 01R 01F'`\n    }\n    else if(current.x===maxCoord && solved.x===maxCoord){\n        return `${move(\"\",current.z+1,\"D'\")} 01F 01D' 01F' ${move(\"\",current.z+1,\"D\")} 01F 01D 01F'`\n    }\n    else if(current.z===minCoord && solved.z===minCoord){\n        return `${move(\"\",current.x+1,\"L'\")} 01F 01L' 01F' ${move(\"\",current.x+1,\"L\")} 01F 01L 01F'`\n    }\n    else if(current.x===minCoord && solved.x===minCoord){\n        return `${move(\"\",current.z+1,\"D\")} 01F 01U' 01F' ${move(\"\",current.z+1,\"D'\")} 01F 01U 01F'`\n    }\n    else return ``\n}\n\n\n\nlet solveFrontEdgeSegments = (current,solved,dim,whiteSide) => {\n    const FRONT=0,UP=1,RIGHT=2,BACK=3,LEFT=4,DOWN=5;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n    let moveString = \"\";\n    let solvedPosition = \"top\";\n\n    if(solved.x===maxCoord) {solvedPosition = \"right\";}\n    else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\n    else if(solved.x===minCoord) {solvedPosition = \"left\";}\n    \n    if(current.y===minCoord){\n        moveString = extractFromFront(current,maxCoord,minCoord);\n    }\n    else if(current.y>minCoord&&current.y<maxCoord){\n        moveString = moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide);\n    }\n    else if(current.y===maxCoord && whiteSide===BACK){\n        moveString = flipPieceOnBack(current,maxCoord,minCoord);\n    }\n    else if(current.z===solved.z&&current.x===solved.x){\n        moveString = solveFromBackToFront(current,solved,maxCoord,minCoord);\n    }\n    else {\n        moveString = `01B`;\n    }\n        \n    \n\n    return moveString;\n}\n\nmodule.exports = solveFrontEdgeSegments;","function move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveBackEdgeSegments = (current,solved,dim,yellowSide) => {\n    const FRONT=0,UP=1,RIGHT=2,BACK=3,LEFT=4,DOWN=5;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n    let moveString = \"\";\n    let solvedPosition = \"top\";\n    let inMiddleSection = current.y > minCoord && current.y < maxCoord;\n\n    if(solved.x===maxCoord) {solvedPosition = \"right\";}\n    else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\n    else if(solved.x===minCoord) {solvedPosition = \"left\";}\n\n    // Solves top back edge\n    if(solved.z===maxCoord){\n        // top right middle edge\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\n            // if yellow side is on the right face (red center)\n            if(yellowSide===RIGHT){//a.1\n                console.log(\"solve it\");\n                moveString = `01L' 01B 01L ${move(\"\",current.y+1,\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",current.y+1,\"F\")}`;\n            }\n            // if yellow side is on the upward face (blue center)\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `01R 01B 01R' 01B' 01U' 01B 01U`;\n            }\n        }\n        // top back edge (wrong position)\n        else if(current.z===solved.z && current.y===solved.y){ // b\n            console.log(\"remove it\");\n            moveString = `01L' 01B 01L ${move(\"\",dim-(current.x),\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",dim-(current.x),\"F\")}`;\n        }\n        // back edge that isn't top\n        else if(current.y===maxCoord && !(current.z===maxCoord)){ // c\n            moveString = `01U' 01B 01U`;\n        }\n        // middle edge that isn't top right (just places piece on back edges)\n        else if(current.y!==maxCoord){ // d\n            if(current.z===maxCoord && current.x===minCoord){\n                moveString = `01L' 01B' 01L 01B`\n            }\n            else if(current.z===minCoord && current.x===minCoord){\n                moveString = `01L 01B' 01L' 01B`\n            }\n            else if(current.z===minCoord && current.x===maxCoord){\n                moveString = `01R' 01B 01R 01B'`\n            }\n        }\n    }\n    // Solves right back edge\n    else if(solved.x===maxCoord){\n        if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\n            // if yellow side is on the down face (green center)\n            if(yellowSide===DOWN){//a.1\n                console.log(\"solve it\");\n\n                // 01U' 01B 01U (02F' c.y+1) 01U' 01B 01U 01B2 (02F c.y+1) // converted\n                moveString = `01U' 01B 01U ${move(\"\",current.y+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.y+1,\"F\")} 01R' 01B2 01R`;\n            }\n            // if yellow side is on the right face (red center)\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `01D 01B 01D' 01B' 01R' 01B 01R2 01B' 01R'`;\n            }\n        }\n\n        // b // change coords + small mod to algo\n        else if(current.x===solved.x && current.y===solved.y){ // b\n            console.log(\"remove it\");\n            moveString = `01U' 01B 01U ${move(\"\",current.z+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.z+1,\"F\")} 01R' 01B2 01R`;\n        }\n\n\n        // c // hard code those instead of generalizing\n        else if(current.y===maxCoord){\n            if(current.z===minCoord){\n                moveString = `01R' 01B 01R2 01B' 01R'`;\n            } else if(current.x===minCoord){\n                moveString = `01R' 01B2 01R2 01B2 01R'`;\n            }\n        }\n\n        // d // change coords\n        else if(current.y!==maxCoord){\n            if(current.x===maxCoord && current.z===maxCoord){\n                moveString = `01B 01R 01B 01R' 01B2`\n            }\n            else if(current.x===minCoord && current.z===maxCoord){\n                moveString = `01L' 01B' 01L 01B`\n            }\n            else if(current.x===minCoord && current.z===minCoord){\n                moveString = `01D' 01B 01D 01B'`\n            }\n        }\n    }\n    // Solves bottom back edge\n    else if(solved.z===minCoord){\n        if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\n            // if yellow side is on the left face (orange center)\n            if(yellowSide===LEFT){//a.1\n                console.log(\"solve it\");\n                moveString = `01R' 01B 01R ${move(\"\",current.y+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.y+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\n            }\n            // if yellow side is on the down face (green center)\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `01L 01B 01L' 01B' 01D' 01B 01D2 01B' 01D' 01B' 01R' 01B' 01R 01B2`;\n            }\n        }\n\n        // b // change coords + small mod to algo\n        else if(current.z===solved.z && current.y===solved.y){ // b\n            console.log(\"remove it\");\n            moveString = `01R' 01B 01R ${move(\"\",current.x+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.x+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\n        }\n\n        else if(current.y===maxCoord){ // c\n            moveString = `01D' 01B 01D2 01B' 01D'`;\n        }\n        else if(current.y<maxCoord){\n            moveString = `01D 01R 01U 01B 01U' 01R' 01D'`;\n        }\n        // permutations of the original algo should work\n    }\n    else if(solved.x===minCoord){\n        const displace = `01R 01B' 01R' 01B 01U 01B 01U' 01B'`;\n        const solve = `01D' 01B 01D ${move(\"\",current.y+1,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",current.y+1,\"F\")} 01L 01R' 01B2 01R 01L'`;\n        const replace = `01B 01U 01B' 01U' 01B' 01R 01B 01R'`\n        const flip = `01R 01B 01R' 01B' 01U' 01B 01U2 01B' 01U' 01B' 01L' 01B' 01L 01B2`\n\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\n            // if yellow side is on the left face (orange center)\n            if(yellowSide===RIGHT){//a.1\n                console.log(\"solve it\");\n                moveString = `${displace} ${solve} ${replace}`;\n            }\n            // if yellow side is on the down face (green center)\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `${flip}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===maxCoord && current.x===minCoord){ //a\n            if(yellowSide===UP){//a.1\n                console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f'\")}`;\n            }\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f\")} ${flip} ${move(\"\",dim-1,\"f'\")}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\n            if(yellowSide===LEFT){//a.1\n                console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f2\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f2\")}`;\n            }\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f2\")} ${flip} ${move(\"\",dim-1,\"f2\")}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\n            if(yellowSide===DOWN){//a.1\n                console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f'\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f\")}`;\n            }\n            else {//a.2\n                console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f'\")} ${flip} ${move(\"\",dim-1,\"f\")}`;\n            }\n        }\n\n        else if(current.x===solved.x && current.y===solved.y){ // b\n            console.log(\"remove it\");\n            moveString = `${displace} 01D' 01B 01D ${move(\"\",dim-current.z,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",dim-current.z,\"F\")} 01L 01R' 01B2 01L' 01R 01L 01D 01R 01B 01R' 01D' 01L'`;\n        }\n    }\n\n\n    return moveString;\n}\n\nmodule.exports = solveBackEdgeSegments;","import React from \"react\";\nimport \"./Nav.css\";\nimport {DropdownButton,Dropdown} from 'react-bootstrap'\nimport 'react-dropdown/style.css'\nimport Popup from \"reactjs-popup\";\n\nconst Navbar = props => (\n  <nav className=\"navbar navbar-dark fixed-top bg-dark\">\n    <ul className=\"nav nav-justified mr-auto\" style={{\"width\":\"max-content\"}}>\n      <li className=\"nav-item\">\n        <p className=\"navbar-brand\" style={{color:\"lightgray\"}}><b>{props.title}</b></p>\n\n          {/*Open model here. Show bunch of settings. Pass changeSettings down to component to apply changes*/}\n          <DropdownButton className=\"settings\" title={<i className='fa fa-cog'></i>}>\n          <ul>\n            <li>\n              \n              Stats <br></br>\n              <label className=\"checkbox-inline\">\n                <input type=\"checkbox\" data-toggle=\"toggle\" onClick={() => props.changeSettings('displayStats')}></input>\n                {props.state.showStats ? \"ON \" : \"OFF \"}\n              </label>\n              \n              \n            </li>\n\n            <li>\n              \n              Move Input <br></br>\n              <label className=\"checkbox-inline\">\n                <input type=\"checkbox\" data-toggle=\"toggle\" onClick={() => props.changeSettings('displayMoveInput')}></input>\n                {props.state.showMoveInput ? \"ON \" : \"OFF \"}\n              </label>\n              \n              \n            </li>\n\n            <li>\n              \n              Move Controls <br></br>\n              <label className=\"checkbox-inline\">\n                <input type=\"checkbox\" data-toggle=\"toggle\" onClick={() => props.changeSettings('displayControls')}></input>\n                {props.state.showControls ? \"ON \" : \"OFF \"}\n              </label>\n              \n              \n            </li>\n\n            <li>\n              \n              Move Hints <br></br>\n              <label className=\"checkbox-inline\">\n                <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" onClick={() => props.changeSettings('displayHints')}></input>\n                {props.state.showHints? \"ON \" : \"OFF \"}\n              </label>\n              \n              \n            </li>\n            \n          </ul>\n\n        </DropdownButton>\n        <DropdownButton title=\"Cubes\">\n\n          \n            <Dropdown.Item href=\"https://rubiksprogram.herokuapp.com/id=2\" style={{backgroundColor:\"lightgrey\"}}>2 X 2 X 2</Dropdown.Item>\n            <Dropdown.Item href=\"https://rubiksprogram.herokuapp.com/id=3\">3 X 3 X 3</Dropdown.Item>\n            <Dropdown.Item href=\"https://rubiksprogram.herokuapp.com/id=4\" style={{backgroundColor:\"lightgrey\"}}>4 X 4 X 4</Dropdown.Item>\n            <Dropdown.Item href=\"https://rubiksprogram.herokuapp.com/id=5\">5 X 5 X 5</Dropdown.Item>\n            <Dropdown.Item href=\"https://rubiksprogram.herokuapp.com/id=6\" style={{backgroundColor:\"lightgrey\"}}>6 X 6 X 6</Dropdown.Item>\n            <Dropdown.Item href=\"https://rubiksprogram.herokuapp.com/id=7\">7 X 7 X 7</Dropdown.Item>\n          \n        </DropdownButton>\n        \n      </li>\n    </ul>\n    <div style={{float:\"right\"}} >\n    <Popup trigger={<button id=\"triggerBtn\">Info</button>}>\n        {close => (\n          <div style={{zIndex:\"100\"}}>\n            <div className=\"shadeBackground\" style={{backgroundColor:\"black\",zIndex:\"101\"}} onClick={close}></div>\n            <div style={{zIndex:\"102\"}} className=\"popupDiv\">\n              <b style={{fontSize: \"2rem\"}}>Instructions</b>\n              <button className=\"close\" id=\"closeBtn\" onClick={close}>\n                &times;\n              </button>\n              <hr style={{backgroundColor:\"#007bff\",marginBottom:\"0\"}}></hr>\n              <div style={{backgroundColor:\"black\",marginTop:\"0\",color:\"#00C000\"}}>\n                <p style={{paddingTop: \"1rem\"}}>> Click and hold and drag anywhere on or around cube to rotate.</p>\n                <hr style={{backgroundColor:\"lightgray\"}}></hr>\n                <p>> Use buttons or keyboard to make turns: <br></br>\n                  > \n                  <b style={{color: \"white\",backgroundColor:\"black\"}}> F, </b><b style={{color: \"white\",backgroundColor:\"black\"}}>f,</b>\n                  <b style={{color: \"blue\",backgroundColor:\"black\"}}> U, </b><b style={{color: \"blue\",backgroundColor:\"black\"}}>u,</b>\n                  <b style={{color: \"red\",backgroundColor:\"black\"}}> R, </b><b style={{color: \"red\",backgroundColor:\"black\"}}>r,</b>\n                  <b style={{color: \"yellow\",backgroundColor:\"black\"}}> B, </b><b style={{color: \"yellow\",backgroundColor:\"black\"}}>b,</b>\n                  <b style={{color: \"orange\",backgroundColor:\"black\"}}> L, </b><b style={{color: \"orange\",backgroundColor:\"black\"}}>l,</b>\n                  <b style={{color: \"green\",backgroundColor:\"black\"}}> D, </b><b style={{color: \"green\",backgroundColor:\"black\"}}>d </b> \n                </p>\n                <hr style={{backgroundColor:\"lightgray\"}}></hr>\n                <p>> Top Left slider controls the speed</p>\n                <hr style={{backgroundColor:\"lightgray\"}}></hr>\n                <p>> Bottom left buttons are built in pattern functions</p>\n                <hr style={{backgroundColor:\"lightgray\"}}></hr>\n                <p style={{marginBottom: \"0\",paddingBottom:\"1rem\"}}>> Bottom right buttons are the core functions for the cube</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </Popup> {\" \"}\n      <button id=\"fullscreenBtn\" value=\"true\">Fullscreen</button>\n      \n      {/*<button className=\"btn btn-primary btn-circle btn-circle-sm m-1\" onClick={() => props.changeSettings([1],[\"Hello\"])}><i className=\"fa fa-cog\"></i></button> */}\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","let algorithms = [\n    {\n        name : \"Cross\",\n        moves: \"01R2 01L' 01D 01F2 01R' 01D' 01R' 01L 01U' 01D 01R 01D 01B2 01R' 01U 01D2\",\n        worksFor: [3,4]\n    },\n    {\n        name : \"Cube x2\",\n        moves: \"01F 01L 01F 01U' 01R 01U 01F2 01L2 01U' 01L' 01B 01D' 01B' 01L2 01U\",\n        worksFor: [2,3,4]\n    },\n    {\n        name : \"Cube x2\",\n        moves: \"02f2 02r2 02u' 02f' 04d 02b' 02u2 02b 02u' 02r' 03R2 02b2 03R2 03f2 03L2 03B2\",\n        worksFor: [6]\n    },\n    {\n        name : \"Cube x3\",\n        moves: \"01U' 01L' 01U' 01F' 01R2 01B' 01R 01F 01U 01B2 01U 01B' 01L 01U' 01F 01U 01R 01F'\",\n        worksFor: [3]\n    },\n    {\n        name : \"Cube x4\",\n        moves: \"01B' 02R2 02L2 01U2 02R2 02L2 01B 01F2 01R 01U' 01R 01U 01R2 01U 01R2 01F' 01U 01F' 01U 02U 01L 02L 01U' 02U' 01F2 02F2 01D 02D 01R' 02R' 01U 02U 01F 02F 01D2 02D2 01R2 02R2\",\n        worksFor: [4]\n    },\n    {\n        name : \"Cube x5\",\n        moves: \"01F 01U' 01B 01L 01U' 01F2 01U2 01F 01U 01F' 01U2 01D' 01B 01D 01L2 01B2 01U 02f 02u' 02b 02l 02u' 02f2 02u2 02f 02u 02f' 02u2 02d' 02b 02d 02l2 02b2 02u\",\n        worksFor: [5]\n    },\n    {\n        name : \"Six Spots\",\n        moves : \"01U 01D' 01R 01L' 01F 01B' 01U 01D'\",\n        worksFor: [3,4]\n    },\n    {\n        name : \"CheckerBoard\",\n        moves : \"01U2 01D2 01R2 01L2 01F2 01B2\",\n        worksFor: [3]\n    },\n    {\n        name : \"Checkerboard1\",\n        moves : \"01U' 01R2 01L2 01F2 01B2 01U' 01R 01L 01F 01B' 01U 01F2 01D2 01R2 01L2 01F2 01U2 01F2 01U' 01F2\",\n        worksFor: [3]\n    },\n    {\n        name: \"Checkerboard2\",\n        moves : \"01B 01D 01F' 01B' 01D 01L2 01U 01L 01U' 01B 01D' 01R 01B 01R 01D' 01R 01L' 01F 01U2 01D\",\n        worksFor: [3]\n    },\n    {\n        name: \"Anaconda\",\n        moves : \"01L 01U 01B' 01U' 01R 01L' 01B 01R' 01F 01B' 01D 01R 01D' 01F'\",\n        worksFor: [3]\n    },\n    {\n        name: \"Python\",\n        moves : \"01F2 01R' 01B' 01U 01R' 01L 01F' 01L 01F' 01B 01D' 01R 01B 01L2\",\n        worksFor: [3]\n    },\n    {\n        name: \"Rings\",\n        moves: \"02R 03R 04R 05R 02B' 03B' 04B' 01L2 02F 02B 01L2 02B' 02D' 03D' 04D' 05D' 02F' 01L2 02F 02B 01L2 02B' 02D2 03D2 04D2 05D2 03R 04R 01U' 03R' 04R' 02D' 03D' 04D' 05D' 03R 04R 01U 02R' 03R' 04R' 05R' 03F' 04F' 03R' 04R' 03F 04F 02F 03F 04F 05F 02L2 03L2 04L2 02F2 03R2 04R2 02B2 03B2 04B2 02L2\",\n        worksFor: [6]\n    },\n    {\n        name: \"Test f depth:2 multi turn\",\n        moves: \"02f 02f'\",\n        worksFor: []\n    },\n    {\n        name: \"Test u depth:2 multi turn\",\n        moves: \"02u 02u'\",\n        worksFor: []\n    },\n    {\n        name: \"Test r depth:2 multi turn\",\n        moves: \"02r 02r'\",\n        worksFor: []\n    },\n    {\n        name: \"Test b depth:2 multi turn\",\n        moves: \"02b 02b'\",\n        worksFor: []\n    },\n    {\n        name: \"Test d depth:2 multi turn\",\n        moves: \"02d 02d'\",\n        worksFor: []\n    },\n    {\n        name: \"Test l depth:2 multi turn\",\n        moves: \"02l 02l'\",\n        worksFor: []\n    },\n]\n\nexport default algorithms;","import React from \"react\";\nimport algorithms from '../cubeFunctions/algorithms';\n\nlet position = 0;\nlet buttons=[];\nconst Patterns = props => (\n    <div style={{position:\"fixed\", bottom: \"0px\", left: \"10px\",backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>\n        {\n            algorithms.forEach(e => {\n                if(e.worksFor.includes(props.size)){\n                    buttons.push( \n                        <button \n                            onClick={() => props.algorithm(e.moves,e.name)}\n                            key={position/30}\n                            style={{\n                                position:\"fixed\",\n                                bottom: position,\n                                left: \"10px\",\n                                backgroundColor: \"Transparent\",\n                                border: \"none\",\n                                color:\"lightgray\"\n                            }}\n                        >{e.name}</button>\n                    )\n                    position+=30;\n                }\n            })\n        }\n        {buttons}\n    </div>\n);\n\nexport default Patterns;","import 'rc-slider/assets/index.css';\n\nimport React from 'react';\nimport Slider from 'rc-slider'\n\nconst style = { width: 100, position: \"fixed\", top: \"100px\", left: \"10px\"};\n\nconst Speeds = props => (\n\n    <div className=\"sliderDiv\" style = {style}>\n\n        {props.isDisabled ?\n        <Slider \n            defaultValue={40} \n            min={0} max={70} \n            step={10}\n            disabled\n        />\n        :\n        <Slider \n            defaultValue={40} \n            min={0} max={70} \n            step={10}\n            onChange={props.onSliderChange}\n        />}\n\n    </div>\n);\n\n\n\nexport default Speeds;","import React from 'react';\nimport Draggable from 'react-draggable';\n\n\nlet centerButtons=[];\nlet singleButtons=[];\nlet multiButtons=[];\nlet singleCols=[];\nlet multiCols=[];\nlet key=0;\n\nfunction namesToColors(face){\n    switch(face){\n        case 'F':\n            return {\n                bgc: 'white',\n                color: 'black',\n            }\n        case 'U':\n            return {\n                bgc: 'blue',\n                color: 'white',\n            }\n        case 'R':\n            return {\n                bgc: 'red',\n                color: 'white',\n            }\n        case 'B':\n            return {\n                bgc: 'yellow',\n                color: 'black',\n            }\n        case 'L':\n            return {\n                bgc: 'orange',\n                color: 'black',\n            }\n        case 'D':\n            return {\n                bgc: 'green',\n                color: 'white',\n            }\n        default:\n    }\n\n}\n\n//generate data for buttons and pass down to props. Better than trying to do in here\nconst Controls = props => {\n    centerButtons=[];\n    singleButtons=[];\n    multiButtons=[];\n    singleCols=[];\n    multiCols=[];\n\n    return (\n        <div id=\"divInfo\" style={{position: \"absolute\", zIndex: \"98\"}}>\n        <Draggable\n                handle=\".handle\"\n                defaultPosition={{x:130, y: window.innerHeight-370}}\n                position={null}\n                grid={[50, 50]}\n                scale={1}\n                onStart={props.handleStart}\n                onDrag={props.handleDrag}\n                onStop={props.handleStop}>\n        <div id=\"controlsDiv\">\n        <div className=\"handle\" style={{color:\"grey\"}}>Drag from here</div>\n            {\n                props.size%2 ? \n                <div id=\"centerMoves\" style={{marginRight: \"5px\"}}>\n                    {\n                        props.generatedButtons.center.forEach(element => {\n                            centerButtons.push(\n                                <button className=\"moveBtn\" \n                                        key={key} \n                                        onClick={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\n                                        onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                        onMouseLeave={()=>props.mouseLeave()}\n                                        >\n                                        \n                                    {element.clockwise.name}\n                                </button>\n                            );\n                            key+=1\n                            centerButtons.push(\n                                <button className=\"moveBtn\" \n                                        key={key} \n                                        onClick={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\n                                        onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                        onMouseLeave={()=>props.mouseLeave()}\n                                        >\n                                    {element.counter.name}\n                                </button>\n                            );\n                            key+=1\n                        })\n                    }\n                    {centerButtons}\n                </div> : \"\"\n            }\n            <div className=\"singleLayerMoves\" style={{marginRight: \"5px\"}}>\n                {\n                    props.generatedButtons.single.forEach(element => {\n                        let colors = namesToColors(element.counter.face);\n                        if(element.counter.face === 'F') singleButtons.push([],[]);\n                        let lengthBtns = singleButtons.length-2;\n                        let lengthBtns1 = singleButtons.length-1;\n                        singleButtons[lengthBtns].push(\n                            <button className=\"moveBtn\" \n                                    key={key} \n                                    onClick={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                    onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                    onMouseLeave={()=>props.mouseLeave()}\n                                    >\n                                {element.counter.name}\n                            </button>\n                        )\n                        key+=1;\n                        singleButtons[lengthBtns1].push(\n                            <button className=\"moveBtn\" \n                                    key={key} \n                                    onClick={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                    onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                    onMouseLeave={()=>props.mouseLeave()}\n                                    >\n                                {element.clockwise.name}\n                            </button>\n                        )\n                        key+=1;\n                    })\n\n                }\n                {\n                    singleButtons.forEach(element =>{\n                        key+=1;\n                        singleCols.push(\n                            <div key={key} className='singleLayerColumns'>\n                                {element}\n                            </div>\n                        )\n                    })\n                }\n                {\n                    singleCols\n                }\n            </div>\n            <div className=\"multiLayerMoves\">\n            {\n                    props.generatedButtons.multi.forEach(element => {\n                        let colors = namesToColors(element.counter.face);\n                        if(element.counter.face === 'F') multiButtons.push([],[]);\n                        let lengthBtns = multiButtons.length-2;\n                        let lengthBtns1 = multiButtons.length-1;\n                        multiButtons[lengthBtns].push(\n                            <button className=\"moveBtn\" \n                                    key={key} \n                                    onClick={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                    onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                    onMouseLeave={()=>props.mouseLeave()}\n                                    >\n                                {element.counter.name}\n                            </button>\n                        )\n                        key+=1;\n                        multiButtons[lengthBtns1].push(\n                            <button className=\"moveBtn\" \n                                    key={key} \n                                    onClick={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                    onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                    onMouseLeave={()=>props.mouseLeave()}\n                                    >\n                                {element.clockwise.name}\n                            </button>\n                        )\n                        key+=1;\n                    })\n\n                }\n                {\n                    multiButtons.forEach(element =>{\n                        key+=1;\n                        multiCols.push(\n                            <div key={key} className='multiLayerColumns'>\n                                {element}\n                            </div>\n                        )\n                    })\n                }\n                {\n                    multiCols\n                }\n            </div>\n        </div>\n        </Draggable>\n        </div>\n    )\n}\n\nexport default React.memo(Controls);","import React from \"react\";\nimport Draggable from 'react-draggable';\n\nconst MoveInput = (props) => {\n    const instructTurn = (e) => {\n        if(e.key==='Enter'){\n            props.algorithm(document.getElementById('moveInput').value,'Custom');\n        }\n        e.stopPropagation();\n    };\n\n    return (\n        <div style={{position: \"absolute\", zIndex: \"99\"}}>\n            <Draggable\n                handle=\".handle\"\n                defaultPosition={{x:window.innerWidth-211 , y: 100}}\n                position={null}\n                grid={[50, 50]}\n                scale={1}\n                onStart={props.handleStart}\n                onDrag={props.handleDrag}\n                onStop={props.handleStop}>\n                <div>\n                    <div className=\"handle\" style={{color:\"grey\"}}>Drag from here</div>\n                    <div>\n                        <input placeholder=\"type moves here\" id=\"moveInput\" onKeyDown={instructTurn} style={{borderRadius: \"4px\", margin: \"1px\",border: \"1.5px solid #007bff\"}}></input>\n                        <button id=\"moveSubmit\" onClick={() => props.algorithm(document.getElementById('moveInput').value,'Custom')}>Enter</button>\n                    </div>\n                </div>\n            </Draggable>\n        </div>\n    );\n    };\n\nexport default MoveInput;","// Functions to generate/manipulate cube\n\nconst cube = {\n    // Generates the inital solved state of rubiksObject\n    generateSolved : function (_x,_y,_z){\n        const tempArr = [];\n        const middles = [];\n        const edges = [];\n        const tempMiddles = [\n          [], // white\n          [], // yellow\n          [], // blue\n          [], // green\n          [], // orange\n          []  // red\n        ];\n        const tempEdges = [\n          [[],[],[],[]], // white edges\n          [[],[],[],[]], // middle edges\n          [[],[],[],[]]\n        ]\n    \n        for(let j = 0; j < _y; j++){      // Move back along the y-axis\n          for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\n            for(let i = 0; i < _x; i++){  // Traverse across the x-axis\n              let side0 = \"black\";\n              let side1 = \"black\";\n              let side2 = \"black\";\n              let side3 = \"black\";\n              let side4 = \"black\";\n              let side5 = \"black\";\n              if(i===_x-1) side2 = \"red\";\n              else if (i===0) side4 =\"orange\";\n              if(j===_y-1) side3 = \"yellow\";\n              else if (j===0) side0 =\"white\";\n              if(k===_z-1) side1 = \"blue\";\n              else if (k===0) side5 =\"green\";\n              let tempCount = 0;\n              if(j===0 || j === _y-1) tempCount++;\n              if(k===0 || k === _z-1) tempCount++;\n              if(i===0 || i === _x-1) tempCount ++;\n              let tempType = \"none\";\n    \n              if(tempCount===1) {\n                tempType = \"middle\";\n                if(j===0) tempMiddles[0].push(tempArr.length);\n                if(j===_y-1) tempMiddles[1].push(tempArr.length);\n                if(k===_z-1) tempMiddles[2].push(tempArr.length);\n                if(i===0) tempMiddles[3].push(tempArr.length);\n                if(k===0) tempMiddles[4].push(tempArr.length);\n                if(i===_x-1) tempMiddles[5].push(tempArr.length);\n              }\n    \n              else if(tempCount===2) {\n                // do stuff in here to populate edges\n                tempType = \"edge\";\n                if(j === 0){\n                  if(k===_z-1){\n                    tempEdges[0][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    tempEdges[0][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    tempEdges[0][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    tempEdges[0][3].push(tempArr.length);\n                  }\n                } else if(j === _y-1){\n                  if(k===_z-1){\n                    tempEdges[1][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    tempEdges[1][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    tempEdges[1][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    tempEdges[1][3].push(tempArr.length);\n                  }\n                } else {\n                  if(k===_z-1 && i===0){\n                    tempEdges[2][0].push(tempArr.length);\n                  }\n                  else if(k===_z-1 && i===_x-1){\n                    tempEdges[2][1].push(tempArr.length);\n                  }\n                  else if(k===0 && i===_x-1){\n                    tempEdges[2][2].push(tempArr.length);\n                  }\n                  else if(k===0 && i===0){\n                    tempEdges[2][3].push(tempArr.length);\n                  }\n                }\n              }\n              else if(tempCount===3) tempType = \"corner\";\n    \n              tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\n                            i,j,k, // Current position x,y,z\n                            i,j,k, // Solved position x,y,z\n                            tempType,\n                          ]);\n            }\n          }\n        }\n        \n        for(let i = 0; i < 6; i++){\n          for(let j = 0; j < (_x-2)*(_x-2); j++){\n            middles.push(tempMiddles[i][j]);\n          }\n        }\n\n        for(let i = 0; i < 3; i++){\n          for(let j = 0; j < 4; j++){\n            edges.push(...tempEdges[i][j]);\n          }\n        }\n        console.log(tempArr[0]);\n        console.log(tempEdges);\n        console.log(edges);\n        console.log(tempArr);\n        return {tempArr,middles,edges};\n    },\n\n    generateButtonData : function(size){\n        let numLayers = Math.floor(size/2);\n        let centerLayer = Math.ceil(size/2);\n        const faces = ['F','U','R','B','L','D'];\n        const buttons = {\n          center : [], // Center rotations\n          single : [], // Single layer\n          multi : []  // Multi layer\n        };\n\n        if(size%2)\n          buttons.center.push(\n            {clockwise: {name:\"C1\",data:[0,-1,centerLayer,false]},\n             counter: {name:\"C1'\",data:[0,0,centerLayer,false]}},\n            {clockwise: {name:\"C2\",data:[1,-1,centerLayer,false]},\n            counter: {name:\"C2'\",data:[1,0,centerLayer,false]}},\n            {clockwise: {name:\"C3\",data:[2,-1,centerLayer,false]},\n            counter: {name:\"C3'\",data:[2,0,centerLayer,false]}}\n          )\n\n        for (let i = 0; i < numLayers; i++){\n          for(let j = 0; j < faces.length; j++){\n            let baseNameSingle = ((i<10? \"0\" : \"\") + (i+1) + faces[j]);\n            let baseNameMulti = ((i<10? \"0\" : \"\") + (i+1) + faces[j].toLowerCase());\n\n            buttons.single.push({\n              clockwise: {face:faces[j], name:baseNameSingle, data:[j,-1,i+1,false]},\n              counter: {face:faces[j], name:baseNameSingle+\"'\",data:[j,0,i+1,false]}\n            });\n            if(i>0){\n              buttons.multi.push({\n                clockwise: {face:faces[j],name:baseNameMulti, data:[j,-1,i+1,true]},\n                counter: {face:faces[j],name:baseNameMulti+\"'\",data:[j,0,i+1,true]}\n              });\n            }\n          }\n        }\n\n        return buttons;\n    },\n\n    // For visual cube\n    rotatePoint : function (c1,c2,direction,p1,p2,rotation){\n        let theta = rotation*Math.PI/180;\n        if(direction < 0) theta*=-1; \n        return { p1 : (Math.cos(theta) * (p1-c1) - Math.sin(theta) * (p2-c2) + c1),\n                 p2 : (Math.sin(theta) * (p1-c1) + Math.cos(theta) * (p2-c2) + c2)}\n    },\n    \n    // For memory cube\n    rotatePoint2 : function (c1,c2,direction,p1,p2){\n        let theta = Math.PI/2;\n        if(direction < 0) theta*=-1; \n        return { p1 : (- Math.sin(theta) * (p2-c2) + c1),\n                 p2 :   (Math.sin(theta) * (p1-c1) + c2)}\n    }\n}\n\nexport default cube;","/* \n * \n *      Sasha Peters\n *      Created working function: Saturday, December 14, 2019\n *      \n */\n\nimport whiteSolver from \"./middles/white\"\nimport yellowSolver from \"./middles/yellow\"\nimport blueSolver from \"./middles/blue\"\nimport greenSolver from \"./middles/green\"\nimport orangeSolver from \"./middles/orange\"\n\nfunction solveMiddleLogic(cubeDimensions,rubiksObjectAtIndex,index){\n    \n    let dim = cubeDimensions;\n    let faceColor = Math.floor((index)/((dim-2)*(dim-2)));\n    let moveString = \"\";\n\n    // Coordinates organized\n    let current = {\n        x:rubiksObjectAtIndex[6],\n        y:rubiksObjectAtIndex[7],\n        z:rubiksObjectAtIndex[8]\n    };\n    let solved = {\n        x:rubiksObjectAtIndex[9],\n        y:rubiksObjectAtIndex[10],\n        z:rubiksObjectAtIndex[11]\n    };\n\n    \n\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\n        console.log(\"SOLVED\");\n    }\n\n    else{\n        switch(faceColor){\n            case 0:\n                // Solved for all sizes\n                moveString = whiteSolver(current,solved,dim,index);\n                break;\n            case 1:\n                // Solved for all sizes\n                moveString = yellowSolver(current,solved,dim,index);\n                break;\n            case 2:\n                // Solved for all sizes\n                moveString = blueSolver(current,solved,dim);\n                break;\n            case 3:\n                // In Progress. Solved for 4x4\n                moveString = orangeSolver(current,solved,dim);\n                break;\n            case 4:\n                // In Progress. Solved for 4x4\n                moveString = greenSolver(current,solved,dim,index);\n                break;\n            default:\n                console.log(\"Should never reach here\");\n        }\n    }\n    return moveString;\n}\n\nexport default solveMiddleLogic;","import solveMiddleLogic from './solveMiddleLogic';\n\n// Lots of console logs while this section is still in development.\n// Might leave logs commented for future debugging if necessary.\nfunction move(space,depth,side){\n  return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction solveMiddles(cube,dim,moveStringToArray,index,middles){\n\n    if(dim===2) {\n        return {solveState : 1};\n    }\n\n    let moveString = \"\";\n    let whiteMiddleError = false;\n    let yellowMiddleError = false;\n    let blueMiddleError = false;\n    let orangeMiddleError = false;\n\n    let solved = true;\n\n    const obj = {};\n\n    // Solve logic for 3x3\n    if(dim===3){\n      if(cube[4][7] === 0 && cube[10][8] === 2){\n      }\n      else{\n        if(cube[4][8]===2){ //U\n          cube[12][6]===0 ? moveString+=\"02R'\" : moveString+=\"02U'\";\n        }\n        else if(cube[4][6]===0){//L\n          cube[10][8]===2 ? moveString+=\"02U'\" : moveString+=\"02R'\";\n        }\n        else if(cube[4][6]===2){//R\n          cube[10][8]===2 ? moveString+=\"02U\" : moveString+=\"02R'\";\n        }\n        else if(cube[4][8]===0){//D\n          cube[12][6]===0 ? moveString+=\"02R\" : moveString+=\"02U'\";\n        }\n        else if(cube[4][7]===2){//B\n          cube[10][8]===2 ? moveString+=\"02U2\" : moveString+=\"02F'\";\n        }\n        else moveString+=\"02B'\"//F\n      }\n    }\n\n    // Solve logic for 4x4 and greater\n    else if(dim>3){\n\n      // Check if all middles are in place\n      for(let i = 0; i<=index&&i<((dim-2)*(dim-2))*5;i++){\n          if(cube[middles[i]][6]===cube[middles[i]][9]&&\n             cube[middles[i]][7]===cube[middles[i]][10]&&\n             cube[middles[i]][8]===cube[middles[i]][11]){\n             }else {\n              solved=false;\n             }\n      }\n      \n      if(!solved && index<((dim-2)*(dim-2))*5){ \n        if(dim%2 && index === ((((dim-2)*(dim-2))*2))){\n          \n          let oddTopMiddleIndex = ((((dim-2)*(dim-2))*2)+Math.floor((dim-2)*(dim-2)/2));\n\n          console.log(\"Odd cube top middle index: \" + cube[middles[oddTopMiddleIndex]]);\n          if(cube[middles[oddTopMiddleIndex]][6]===cube[middles[oddTopMiddleIndex]][9] &&\n             cube[middles[oddTopMiddleIndex]][7]===cube[middles[oddTopMiddleIndex]][10] &&\n             cube[middles[oddTopMiddleIndex]][8]===cube[middles[oddTopMiddleIndex]][11]){\n            console.log(\"Odd cube top middle in position, moving on with solver\");\n          }\n          else{\n            if(cube[middles[oddTopMiddleIndex]][6]===dim-1){\n              moveString += ((Math.ceil(dim/2))<10? \"0\" : \"\") + (Math.ceil(dim/2)) + \"F'\";\n            }\n            else if(cube[middles[oddTopMiddleIndex]][8]===0){\n              moveString += ((Math.ceil(dim/2))<10? \"0\" : \"\") + (Math.ceil(dim/2)) + \"F2\";\n            }\n            else if(cube[middles[oddTopMiddleIndex]][6]===0){\n              moveString += ((Math.ceil(dim/2))<10? \"0\" : \"\") + (Math.ceil(dim/2)) + \"F\";\n            }\n            console.log(moveString);\n          }\n        }\n        console.log(`Index: ${index}, Piece: ${middles[index]}`);\n        \n        moveString += ((moveString.length) ? \" \":\"\") + solveMiddleLogic(dim,cube[middles[index]],index);\n        // if(index === ((dim-2)*(dim-2))*4-1 && moveString === \"\" && fixOrange){\n\n        //   // do a check here to see if this even needs to be run\n        //   // This will be deprecated later. Here because I got lazy and tired of middle solvers\n\n        //   obj.fixOrange = false;\n          \n        //   if(dim%2){\n        //     for(let i = dim-1; i> Math.floor(dim/2)+1; i--){\n        //       moveString += move(\" \",i,\"F\");\n        //     }\n\n        //     moveString+= \" 01L2\";\n\n        //     for(let i = dim-1; i> Math.floor(dim/2)+1; i--){\n        //       moveString += move(\" \",i,\"F'\");\n        //     }\n\n        //     for(let i = 2; i < Math.floor(dim/2)+1; i++){\n        //       moveString += move(\" \",i,\"F\");\n        //     }\n\n        //     moveString+= \" 01L2\";\n\n        //     for(let i = 2; i < Math.floor(dim/2)+1; i++){\n        //       moveString += move(\" \",i,\"F'\");\n        //     }\n\n        //     moveString += \" 01L2\";\n        //     moveString += \" 01D\";\n        //     moveString += move(\" \",Math.floor(dim/2)+1,\"F'\")\n        //     moveString += \" 01D'\";\n        //     moveString += move(\" \",Math.floor(dim/2)+1,\"F\")\n\n        //     obj.rubiksIndex = index+1;\n        //   }\n        //   else {\n        //     for(let i = dim-1; i> Math.floor(dim/2); i--){\n        //       moveString += move(\" \",i,\"F\");\n        //     }\n\n        //     moveString+= \" 01L2\";\n\n        //     for(let i = dim-1; i> Math.floor(dim/2); i--){\n        //       moveString += move(\" \",i,\"F'\");\n        //     }\n\n        //     for(let i = 1; i <= Math.floor(dim/2); i++){\n        //       moveString += move(\" \",i,\"F\");\n        //     }\n\n        //     moveString+= \" 01L2\";\n\n        //     for(let i = 1; i <= Math.floor(dim/2); i++){\n        //       moveString += move(\" \",i,\"F'\");\n        //     }\n\n        //     moveString += \" 01L2\";\n        //     obj.rubiksIndex = index+1;\n        //   }\n        // }else if(index === ((dim-2)*(dim-2))*4){\n        //   obj.fixOrange = true;\n        // }\n        console.log(moveString + \"\\n-------------------------------\");\n      }\n    }\n\n    \n\n    if(dim<4){\n      const moveArray = moveStringToArray(moveString);\n      moveString.trim().length ? obj.moveSet = moveArray : obj.solveState = 1;\n    }\n    else{\n      if(index<((dim-2)*(dim-2))*5){\n\n        const moveArray = moveStringToArray(moveString);\n        moveString.trim().length ? obj.moveSet = moveArray : obj.rubiksIndex = index+1;\n\n      }\n\n      else{\n        console.log(\"Ready for edge solver {solveState:0.1}\");\n        console.log(moveString + \"\\n-------------------------------\\n\");\n        \n        if(dim===4){\n          obj.solveState = .1; obj.rubiksIndex = 0; obj.currentFunc = \"Solving\";\n        } else {\n          obj.solveState = .1; obj.rubiksIndex = 0; obj.currentFunc = \"Solving\";\n        }\n      }\n    }\n    //return obj;\n    // obj.moveSet = [];\n    // obj.solveState = 0.1; \n    // obj.rubiksIndex = 0;\n    return obj;\n}\n\nexport default solveMiddles;","import frontEdges from \"./edges/solveFrontEdgeSegments\";\nimport backEdges from \"./edges/solveBackEdgeSegments\";\n\nfunction side(rubiksObject,color){\n    return rubiksObject.indexOf(color);\n}\n\nfunction solveEdgeLogic(cubeDimensions,rubiksObjectAtIndex,index,cube,edges){\n\n    const dim = cubeDimensions;\n    const edgesPerSection = 4;\n    const edgeLength = dim-2\n    const section = Math.floor(index/(edgeLength*edgesPerSection));\n    const whiteSide = side(rubiksObjectAtIndex,'white');\n    const yellowSide = side(rubiksObjectAtIndex,'yellow');\n\n    let moveString = \"\";\n\n    // Coordinates organized\n    let current = {\n        x:rubiksObjectAtIndex[6],\n        y:rubiksObjectAtIndex[7],\n        z:rubiksObjectAtIndex[8]\n    };\n    let solved = {\n        x:rubiksObjectAtIndex[9],\n        y:rubiksObjectAtIndex[10],\n        z:rubiksObjectAtIndex[11]\n    };\n\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\n        if( (whiteSide === 0 && section === 0) ||\n            (yellowSide === 3 && section === 1)){\n            console.log(\"SOLVED\");\n            return \"\";\n        }      \n    }\n    switch(section){\n        case 0: \n            // Finished for now\n            moveString = frontEdges(current,solved,dim,whiteSide);\n            break;\n        case 1:\n            // Finished for now\n            moveString = backEdges(current,solved,dim,yellowSide);\n            break;\n        case 2:\n            // Not started\n            // moveString = middleEdges()\n            break;\n        default:\n            console.log(\"Should never reach here\");\n    }\n    console.log(\"Section: \", section);\n    if(section === 0) console.log(\"White side: \",whiteSide);\n    if(section === 1) console.log(\"Yellow side: \",yellowSide);\n    console.log(\"Current: \",current,\"\\nSolved: \",solved);\n\n    return moveString;\n}\n\nexport default solveEdgeLogic;","import solveEdgeLogic from './solveEdgeLogic';\n\nfunction solveEdges(cube,dim,moveStringToArray,edges,index){\n    const numCubeEdges = 12;\n    const innerEdgeLength = dim-2;\n    const numEdges = innerEdgeLength * numCubeEdges;\n    let moveString = \"\";\n    const obj = {};\n\n    if (index < numEdges){\n        console.log(`Index: ${index}, Piece: ${edges[index]}`);\n        moveString += ((moveString.length) ? \" \":\"\") + solveEdgeLogic(dim,cube[edges[index]],index,cube,edges,);\n        moveString.trim().length ? obj.moveSet = moveStringToArray(moveString) : obj.rubiksIndex = index+1;\n        console.log(moveString + \"\\n-------------------------------\");\n    }\n\n    else {\n        console.log(\"Ready to initiate 3x3 solver\");\n        obj.solveState = -1;\n        obj.rubiksIndex = 0;\n        obj.currentFunc = \"None\";\n    }\n\n    return obj;\n}\n\nexport default solveEdges;","import solveWhiteCross from \"./edges/solveWhiteCross\"\nimport solveWhiteCorners from \"./corners/solveWhiteCorners\"\nimport solveMiddleEdges from \"./edges/solveMiddleEdges\"\nimport solveYellowCross from \"./edges/solveYellowCross\"\nimport alignYellowCross from \"./edges/alignYellowCross\"\nimport solveYellowCorners from \"./corners/solveYellowCorners\"\nimport alignYellowCorners from \"./corners/alignYellowCorners\"\nimport solveMiddles from \"./solveMiddles\"\nimport solveEdges from \"./solveEdges\"\n\nconst CONSTANTS = {\n    SOLVE_MIDDLES: 0,\n    SOLVE_EDGES: 0.1,\n    SOLVE_WHITE_CROSS: 1,\n    SOLVE_WHITE_CORNERS: 2,\n    SOLVE_MIDDLE_EDGES: 3,\n    SOLVE_YELLOW_CROSS: 4,\n    ALIGN_YELLOW_CROSS: 5,\n    ALIGN_YELLOW_CORNERS: 6,\n    SOLVE_YELLOW_CORNERS: 7\n}\n\nfunction solver(solveState,rubiksObject,cubeDimension,moveStringToArray,solveMoves,rubiksIndex,middles,edges){\n    switch(solveState){\n        case CONSTANTS.SOLVE_MIDDLES:\n            return solveMiddles(rubiksObject,cubeDimension,moveStringToArray,rubiksIndex,middles);\n        case CONSTANTS.SOLVE_EDGES:\n            return solveEdges(rubiksObject,cubeDimension,moveStringToArray,edges,rubiksIndex);\n        case CONSTANTS.SOLVE_WHITE_CROSS:\n            return solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray);\n        case CONSTANTS.SOLVE_WHITE_CORNERS:\n            return solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray);\n        case CONSTANTS.SOLVE_MIDDLE_EDGES:\n            return solveMiddleEdges(rubiksObject,moveStringToArray);\n        case CONSTANTS.SOLVE_YELLOW_CROSS:\n            return solveYellowCross(rubiksObject,moveStringToArray);\n        case CONSTANTS.ALIGN_YELLOW_CROSS:\n            return alignYellowCross(rubiksObject,moveStringToArray);\n        case CONSTANTS.ALIGN_YELLOW_CORNERS:\n            return alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray);\n        case CONSTANTS.SOLVE_YELLOW_CORNERS:\n            return solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves);\n        default:\n            console.log(\"invalid solve state\");\n    }\n}\n\nexport default solver;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Patterns from \"./components/Patterns\"\nimport Speeds from \"./components/Speeds\"\nimport Controls from \"./components/Controls\"\nimport MoveInput from \"./components/MoveInput\"\nimport Core from \"./components/Core\";\nimport * as THREE from \"three\";\nimport Stats from \"stats.js\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport cube from './cubeFunctions/cube';\nimport solver from './solvers/solver';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\n\n// TODO:\n/*\n * 1. Start moving functions to other files STARTED\n * \n * 2. All pattern functions can be condensed into one since only\n *    the move patterns are different for each. FINISHED\n * \n * 3. Add changes to rotateFace and rotatePiece. Code can be greatly condensed\n *    by using a function with paramters to minimize repetative code. ATTEMPTED\n * \n * 4. Continue working on solvers. STARTED\n * \n * 5. Known issue with undo/redo. Occassionally last move fails. FIXED\n * \n * 6. Consolidate setStates, seems fairly expensive to use many STARTED\n * \n * 7. Fix Camera rotations. FIXED for now\n * \n * 8. Highlight turns when hovering over move buttons. FINISHED\n * \n * 9. Implement rotating pieces by dragging. NOT STARTED\n * \n * 10. The program needs a good readme. NOT STARTED\n */\n\n\nclass App extends Component {\n  state = {\n    cubes : [],           // Contains visual cube\n    rubiksObject : [],    // Contains memory cube\n    speed : 7.5,          // Control individual piece rotation speed (don't change)\n    rotationSpeed : 350,  // Controls visual rotation speed\n    start : 7.5,          // Start value for a rotation or set of rotations\n    end : 0,              // End value for a roation or set of rotations\n    turnDirection : 0,    // Dictates whether the rotation is clockwise or counterclockwise\n    face : 0,             // The face being turned\n    cameraX : 5,          // Camera position x\n    cameraY : -5,         // Camera position y\n    cameraZ : 2,          // Camera position z\n    currentFunc : \"None\", // Variable used to display current function\n    moveLog : \"\",         // Keeps a log of all moves\n    moveSet : [],         // Algorithms queue moves through this variable\n    angle : 3.9,          // Camera angle\n    cubeDimension : null, // Cube dimensions. Ex: 3 => 3x3x3 cube\n    cubeDepth : 1,        // Used to determine rotation depth on cubes greater than 3\n    currentSpeed:\"Medium\",// Displays which speed is selected\n    moves : 0,            // Used by scramble functions\n    reload : false,       // Lets animate know when to reload the cube (after every move)\n    solveState : -1,      // Dictates progression of solve function\n    solveMoves : \"\",      // Keeps track of moves used during solve\n    facePosX : null,\n    facePosY : null,\n    facePosZ : null,\n    mouseFace : null,\n    mouseDown : false,\n    mousePos : null,\n    undoIndex : 0,        // Index to keep track of where undo/redo is\n    blockMoveLog : false, // Blocks adding move when undoing/redoing a move\n    previousPiece : null, // Keeps track of hovered face to not redraw\n    rubiksIndex : 0,      // Index to keep track of middles while solving\n    middles : [],         // Contains all middle segments         \n    showStats: false,     // Setting for stats\n    showMoveInput: false,  // Setting for custom move input\n    showControls: false,   // Setting for move controls\n    showHints: true,\n    showGuideArrows: true,\n    activeDragsInput: 0,  // Keeps track of draggable input\n    deltaPositionInput: {\n      x: 100, y: 100\n    },\n    controlledPositionInput: {\n      x: 0, y: 0\n    },\n    activeDragsControls: 0,// Keeps track of draggable buttons\n    deltaPositionControls: {\n      x: 100, y: 100\n    },\n    controlledPositionControls: {\n      x: 0, y: 0\n    },\n    isMulti: false,\n    isVisible: false,\n    hoverData : [],\n    showSolveController : false,\n    autoPlay : false,\n    playOne : false,\n    generateAllMoves: false\n  };\n\n  // rotate colors on face (memory cube)\n  rotateFace = (cubeFace,direction,cubeDepth,isMulti) => {\n    let centerPoint = this.state.cubeDimension/2-.5;\n    let rubiksObject = this.state.rubiksObject;\n    let degrees = 90;\n    // const mapped = [\n    //   {side: 7, side1 : 6, side2 : 8, swap : [1,2,5,4]},\n    //   {side: 8, side1 : 6, side2 : 7, swap : [3,2,0,4]},\n    //   {side: 6, side1 : 7, side2 : 8, swap : [3,5,0,1]},\n    //   {side: 7, side1 : 6, side2 : 8, swap : [1,4,5,2]},\n    //   {side: 6, side1 : 7, side2 : 8, swap : [3,1,0,5]},\n    //   {side: 8, side1 : 6, side2 : 7, swap : [3,4,0,2]}\n    // ];\n\n    if(direction < 0)  degrees *=-1;\n\n    // Side 0 (white center piece)\n    if (cubeFace === 0){ \n        for(let i = 0; i < rubiksObject.length; i++){\n\n            // white side is y===0. add multi at all these\n            if ((isMulti || rubiksObject[i][7] > cubeDepth-2) &&\n                rubiksObject[i][7] < cubeDepth){\n\n                // Rotate rubiksObject pieces to new location generated by rotatePoint2\n                let newPoint = cube.rotatePoint2(centerPoint,\n                                                 centerPoint,\n                                                 degrees,\n                                                 rubiksObject[i][6],\n                                                 rubiksObject[i][8]);\n                rubiksObject[i][6] = newPoint.p1;\n                rubiksObject[i][8] = newPoint.p2;\n\n                // Unfortunately chunky\n                // Swaps colors around on the face to match rotations\n                if(direction === 0){\n                    let tempFace = rubiksObject[i][1];\n                    rubiksObject[i][1] = rubiksObject[i][2];\n                    rubiksObject[i][2] = rubiksObject[i][5];\n                    rubiksObject[i][5] = rubiksObject[i][4];\n                    rubiksObject[i][4] = tempFace;\n                } else {\n                    let tempFace = rubiksObject[i][1];\n                    rubiksObject[i][1] = rubiksObject[i][4];\n                    rubiksObject[i][4] = rubiksObject[i][5];\n                    rubiksObject[i][5] = rubiksObject[i][2];\n                    rubiksObject[i][2] = tempFace;\n                }\n            }\n        }\n    }\n\n    // Side 1 (blue center piece)\n    if (cubeFace === 1){\n        for(let i = 0; i < rubiksObject.length; i++){\n            if ((isMulti || rubiksObject[i][8] < this.state.cubeDimension+1-cubeDepth) &&\n                rubiksObject[i][8]>this.state.cubeDimension-1-cubeDepth){\n                let newPoint = cube.rotatePoint2(centerPoint,\n                                                 centerPoint,\n                                                 degrees,\n                                                 rubiksObject[i][6],\n                                                 rubiksObject[i][7]);\n                rubiksObject[i][6] = newPoint.p1;\n                rubiksObject[i][7] = newPoint.p2;\n                if(direction === 0){\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][2];\n                    rubiksObject[i][2] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][4];\n                    rubiksObject[i][4] = tempFace;\n                } else {\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][4];\n                    rubiksObject[i][4] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][2];\n                    rubiksObject[i][2] = tempFace;\n                }\n            }\n        }\n    }\n    // Side 2 (red center piece)\n    if (cubeFace === 2){\n        for(let i = 0; i < rubiksObject.length; i++){\n            if ((isMulti || rubiksObject[i][6] < this.state.cubeDimension+1-cubeDepth) &&\n                rubiksObject[i][6]>this.state.cubeDimension-1-cubeDepth){\n                let newPoint = cube.rotatePoint2(centerPoint,\n                                                 centerPoint,\n                                                 degrees,\n                                                 rubiksObject[i][7],\n                                                 rubiksObject[i][8]);\n                rubiksObject[i][7] = newPoint.p1;\n                rubiksObject[i][8] = newPoint.p2;\n                if(direction === 0){\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][5];\n                    rubiksObject[i][5] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][1];\n                    rubiksObject[i][1] = tempFace;\n                } else {\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][1];\n                    rubiksObject[i][1] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][5];\n                    rubiksObject[i][5] = tempFace;\n                }\n            }\n        }\n    }\n    // Side 3 (yellow center piece)\n    if (cubeFace === 3){\n        for(let i = 0; i < rubiksObject.length; i++){\n            if ((isMulti || rubiksObject[i][7] < this.state.cubeDimension+1-cubeDepth) && rubiksObject[i][7]>this.state.cubeDimension-1-cubeDepth){\n                let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][8]);\n                rubiksObject[i][6] = newPoint.p1;\n                rubiksObject[i][8] = newPoint.p2;\n                if(direction === -1){\n                    let tempFace = rubiksObject[i][1];\n                    rubiksObject[i][1] = rubiksObject[i][4];\n                    rubiksObject[i][4] = rubiksObject[i][5];\n                    rubiksObject[i][5] = rubiksObject[i][2];\n                    rubiksObject[i][2] = tempFace;\n                } else {\n                    let tempFace = rubiksObject[i][1];\n                    rubiksObject[i][1] = rubiksObject[i][2];\n                    rubiksObject[i][2] = rubiksObject[i][5];\n                    rubiksObject[i][5] = rubiksObject[i][4];\n                    rubiksObject[i][4] = tempFace;\n                }\n            }\n        }\n    }\n    // Side 4 (orange center piece)\n    if (cubeFace === 4){\n        for(let i = 0; i < rubiksObject.length; i++){\n            if ((isMulti || rubiksObject[i][6] > cubeDepth-2) && rubiksObject[i][6] < cubeDepth){\n                let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][7],rubiksObject[i][8]);\n                rubiksObject[i][7] = newPoint.p1;\n                rubiksObject[i][8] = newPoint.p2;\n                if(direction === -1){\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][1];\n                    rubiksObject[i][1] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][5];\n                    rubiksObject[i][5] = tempFace;\n                } else {\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][5];\n                    rubiksObject[i][5] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][1];\n                    rubiksObject[i][1] = tempFace;\n                }\n            }\n        } \n    }\n    // Side 5 (green center piece)\n    if (cubeFace === 5){\n        for(let i = 0; i < rubiksObject.length; i++){\n            if ((isMulti || rubiksObject[i][8] > cubeDepth-2) && rubiksObject[i][8] < cubeDepth){\n                let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][7]);\n                rubiksObject[i][6] = newPoint.p1;\n                rubiksObject[i][7] = newPoint.p2;\n                if(direction === -1){\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][4];\n                    rubiksObject[i][4] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][2];\n                    rubiksObject[i][2] = tempFace;\n                } else {\n                    let tempFace = rubiksObject[i][3];\n                    rubiksObject[i][3] = rubiksObject[i][2];\n                    rubiksObject[i][2] = rubiksObject[i][0];\n                    rubiksObject[i][0] = rubiksObject[i][4];\n                    rubiksObject[i][4] = tempFace;\n                }\n            }\n        } \n    }\n\n    //add the move updates to state\n    this.setState({rubiksObject : rubiksObject}, () =>{\n    });\n  };\n\n  // rotate pieces attached to face (visual cube)\n  /**\n   * \n   * Possible Optimization!\n   * \n   * Instead of turning each piece individually,\n   * group the pieces to be turned and then turn the group.\n   * - Pros\n   *    - Less Code\n   *    - Easier on the renderer\n   * \n   * - Cons\n   *    - Not sure where to attempt implementation\n   * \n   * Development Stage: Trial\n   * \n   * - Resources\n   *    - https://jsfiddle.net/of1vfhzz/1/\n   *    - https://stackoverflow.com/questions/37779104/how-can-i-rotate-around-the-center-of-a-group-in-three-js\n   */\n  rotatePieces = (rotate,tempCubes) => {\n    this.setState({reload : true});\n\n    // Trial variable\n    // let tempGroup = new THREE.Group();\n\n    // state variables asigned for shorter names\n    let centerPoint = this.state.cubeDimension/2-.5;\n    let cubes = this.state.cubes;\n    let turnDirection = this.state.turnDirection;\n    let speed = this.state.speed;\n    let start = this.state.start;\n    let face = this.state.face;\n    let cubeDepth = this.state.cubeDepth;\n    let isMulti = this.state.isMulti;\n\n    this.setState({start : start+speed});\n\n    //Rotate white center piece Face\n    if(face === 0){\n      for(let i = 0; i<this.state.rubiksObject.length;i++){\n\n        //implement isMulti for all of these comparisons\n        if((isMulti || cubes[i].position.y > cubeDepth-2) && cubes[i].position.y < cubeDepth){\n          \n          // Turn piece based on rotation direction\n          turnDirection<0 ? cubes[i].rotation.y += .1745*speed/10 : cubes[i].rotation.y -= .1745*speed/10;\n\n          // Calculate circular movement\n          let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.z,speed);\n\n          // corrects rounding errors\n          if(start % 90 === 0){\n            newPoint.p1 = Math.round(newPoint.p1);\n            newPoint.p2 = Math.round(newPoint.p2);\n          }\n          \n          // set new locations for face 0\n          cubes[i].position.x = newPoint.p1;\n          cubes[i].position.z = newPoint.p2;\n        }\n      }     \n    }\n    // blue\n    if(face === 1){\n      for(let i = 0; i<this.state.rubiksObject.length;i++){\n        if((isMulti || cubes[i].position.z < this.state.cubeDimension + 1 - cubeDepth) && cubes[i].position.z > this.state.cubeDimension - 1 - cubeDepth){\n          turnDirection<0 ? cubes[i].rotation.z -= .1745*speed/10 : cubes[i].rotation.z += .1745*speed/10;\n          let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.y,10*speed/10);\n          if(start % 90 === 0){\n            newPoint.p1 = Math.round(newPoint.p1);\n            newPoint.p2 = Math.round(newPoint.p2);\n          }\n          cubes[i].position.x = newPoint.p1;\n          cubes[i].position.y = newPoint.p2;\n        }\n      }\n    }\n    // red\n    if(face === 2){\n      for(let i = 0; i<this.state.rubiksObject.length;i++){\n        if((isMulti || tempCubes[i].position.x < this.state.cubeDimension + 1 - cubeDepth) && cubes[i].position.x > this.state.cubeDimension - 1 - cubeDepth){\n          turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\n          let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);\n          if(start % 90 === 0){\n            newPoint.p1 = Math.round(newPoint.p1);\n            newPoint.p2 = Math.round(newPoint.p2);\n          }\n          tempCubes[i].position.y = newPoint.p1;\n          tempCubes[i].position.z = newPoint.p2;\n        }\n      }\n    }\n    // yellow\n    if(face === 3){\n      for(let i = 0; i<this.state.rubiksObject.length;i++){\n        if((isMulti || tempCubes[i].position.y < this.state.cubeDimension + 1 - cubeDepth) && cubes[i].position.y > this.state.cubeDimension - 1 - cubeDepth){\n          turnDirection<0 ? tempCubes[i].rotation.y += .1745*speed/10 : tempCubes[i].rotation.y -= .1745*speed/10;\n          let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.z,10*speed/10);\n          if(start % 90 === 0){\n            newPoint.p1 = Math.round(newPoint.p1);\n            newPoint.p2 = Math.round(newPoint.p2);\n          }\n          tempCubes[i].position.x = newPoint.p1;\n          tempCubes[i].position.z = newPoint.p2;\n        }\n      }\n    }\n    // orange\n    if(face === 4){\n      for(let i = 0; i<this.state.rubiksObject.length;i++){\n        if((isMulti || tempCubes[i].position.x > cubeDepth-2) && cubes[i].position.x < cubeDepth){\n          turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\n          let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);              \n          if(start % 90 === 0){\n            newPoint.p1 = Math.round(newPoint.p1);\n            newPoint.p2 = Math.round(newPoint.p2);\n          }\n          tempCubes[i].position.y = newPoint.p1;\n          tempCubes[i].position.z = newPoint.p2;\n        }\n      }\n    }\n    // green\n    if(face === 5){\n      for(let i = 0; i<this.state.rubiksObject.length;i++){\n        if((isMulti || tempCubes[i].position.z > cubeDepth-2) && cubes[i].position.z < cubeDepth){\n          turnDirection<0 ? tempCubes[i].rotation.z -= .1745*speed/10 : tempCubes[i].rotation.z += .1745*speed/10;\n          let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.y,10*speed/10);\n          if(start % 90 === 0){\n            newPoint.p1 = Math.round(newPoint.p1);\n            newPoint.p2 = Math.round(newPoint.p2);\n          }\n          tempCubes[i].position.x = newPoint.p1;\n          tempCubes[i].position.y = newPoint.p2;\n        }\n      }\n    } \n  }\n\n  // Bind keys to functions\n  keyBinds = key => {\n    switch (key){\n\n      case 'R':\n        this.rotateOneFace(key+\"'\",[2,0,1]);\n        break;\n      case 'r':\n        this.rotateOneFace(key.toUpperCase(),[2,-1,1]);\n        break;\n\n      case 'L':\n        this.rotateOneFace(key+\"'\",[4,0,1]);\n        break;\n      case 'l':\n        this.rotateOneFace(key.toUpperCase(),[4,-1,1]);\n        break;\n\n      case 'F':\n        this.rotateOneFace(key+\"'\",[0,0,1]);\n        break;\n      case 'f':\n        this.rotateOneFace(key.toUpperCase(),[0,-1,1]);\n        break;\n\n      case 'U':\n        this.rotateOneFace(key+\"'\",[1,0,1]);\n        break;\n      case 'u':\n        this.rotateOneFace(key.toUpperCase(),[1,-1,1]);\n        break;\n\n      case 'D':\n        this.rotateOneFace(key+\"'\",[5,0,1]);\n        break;\n      case 'd':\n        this.rotateOneFace(key.toUpperCase(),[5,-1,1]);\n        break;\n\n      case 'B':\n        this.rotateOneFace(key+\"'\",[3,0,1]);\n        break;\n      case 'b':\n        this.rotateOneFace(key.toUpperCase(),[3,-1,1]);\n        break;\n\n      default:\n    }\n  }\n\n  // Handles key press event\n  keyHandling = e => {\n    if(e.keyCode <= 36 || e.keyCode >= 41) this.keyBinds(e.key);\n  }\n\n  onMouseDown( event ) {\n    this.setState({mouseDown : true});  \n  }\n\n  onMouseUp( event ) {\n    this.setState({mouseDown : false});  \n  }\n\n  onSliderChange = (value) => {\n    switch(value){\n      case 0:\n        this.changeSpeed(1.5,1050,\"Slowest\");\n        break;\n      case 10:\n        this.changeSpeed(3,750,\"Slower\")\n        break;\n      case 20:\n        this.changeSpeed(5,500,\"Slow\")\n        break;\n      case 30:\n        this.changeSpeed(7.5,350,\"Medium\")\n        break;\n      case 40:\n        this.changeSpeed(10,250,\"Fast\")\n        break;\n      case 50:\n        this.changeSpeed(15,175,\"Faster\")\n        break;\n      case 60:\n        this.changeSpeed(30,100,\"Fastest\")\n        break;\n      case 70:\n        this.changeSpeed(90,20,\"Zoomin\")\n        break;\n      default:\n        console.log(\"unexpected behavior\");\n    }\n  }\n\n  // Functions to change speed\n  changeSpeed = (_speed,_rotationSpeed,_name) => {\n    if(this.state.currentFunc !== \"None\") return;\n    this.setState({currentSpeed: _name,speed: _speed, start: _speed, end: 0, rotationSpeed: _rotationSpeed});\n  }\n\n  // Allows the user to undo a move\n  undo = () => {\n    let undoIndex = this.state.undoIndex;\n    let moveString = this.state.moveLog;\n    const moveArray = this.moveStringToArray(moveString);\n    if(moveString === \"\") return;\n\n    else if(this.state.currentFunc !== \"None\") return;\n\n    else if(moveArray.length-1-undoIndex >= 0)\n      this.setState({blockMoveLog : true,\n                     currentFunc : \"Undo\",\n                     moveSet : [moveArray[moveArray.length-1-undoIndex]],\n                     undoIndex : undoIndex + 1});\n  }\n\n  // Allows the user to redo a move\n  redo = () => {\n    if(this.state.currentFunc !== \"None\") return;\n    let undoIndex = this.state.undoIndex;\n    let moveString = this.state.moveLog;\n    if(moveString === \"\") return;\n    \n    const moveArray = this.moveStringToArray(moveString);\n    \n    let backwardsMove = moveArray[moveArray.length-undoIndex];\n    try{\n      backwardsMove.includes(\"'\") ? backwardsMove = backwardsMove.substring(0,3) : backwardsMove += \"'\";\n    }catch(err){\n      return;\n    }\n\n    if(undoIndex > 0)\n      this.setState({blockMoveLog : true,\n                     currentFunc : \"Redo\",\n                     moveSet : [backwardsMove],\n                     undoIndex : undoIndex - 1});\n  }\n\n  // Control when single buttons can be clicked\n  rotateOneFace = (e,vals) => {\n    if (vals.length < 4) vals.push(false);\n    if(this.state.currentFunc === \"None\") {\n      this.setState({currentFunc: e});\n      this.rotateCubeFace(vals[0],vals[1],vals[2],vals[3]);\n    }\n  }\n\n  // Controls camera movements\n  // *** Needs to be reworked ***\n  rotateCamera = (key) => {\n    let y = this.state.cameraY;\n    //let x = this.state.cameraX;\n    //let z = this.state.cameraZ;\n    //let formula = this.state.cubeDimension+2+(y+1)/20;\n    if(key === 37){ // left\n      this.setState({angle: this.state.angle+.075}); \n    }\n    if(key === 38){ // up\n      if(y < this.state.cubeDimension+2) this.setState({cameraY: y + .5});\n    }\n    if(key === 39){ // right\n      this.setState({angle: this.state.angle-.075});\n    }\n    if(key === 40){ // down\n      \n      if(y > -(this.state.cubeDimension+2)) this.setState({cameraY: y - .5});\n    }\n  }\n\n  // Changes values in state to trigger face rotation\n  rotateCubeFace = (face,direction,cubeDepth,isMulti) => {\n    if(!this.state.blockMoveLog){\n      \n      let tempMove = \"\";\n      cubeDepth<10 ? tempMove+=\"0\"+cubeDepth : tempMove += cubeDepth;\n      if(face === 0) !isMulti ? tempMove += \"F\" : tempMove += \"f\";\n      else if(face === 1) !isMulti ? tempMove += \"U\" : tempMove += \"u\";\n      else if(face === 2) !isMulti ? tempMove += \"R\" : tempMove += \"r\";\n      else if(face === 3) !isMulti ? tempMove += \"B\" : tempMove += \"b\";\n      else if(face === 4) !isMulti ? tempMove += \"L\" : tempMove += \"l\";\n      else if(face === 5) !isMulti ? tempMove += \"D\" : tempMove += \"d\";\n      if(direction === -1) tempMove += \"'\";\n\n      this.state.moveLog.length > 0 ?\n        this.setState({moveLog : this.state.moveLog + \" \" + tempMove}) :\n        this.setState({moveLog : this.state.moveLog + tempMove});\n      \n      // Keeps tracks of solver's moves\n      if(this.state.solveState > -1) \n        this.setState({solveMoves : this.state.solveMoves.length ? this.state.solveMoves + \" \" + tempMove : this.state.solveMoves + tempMove});\n    }\n\n    // Faces on opposite side of cube rotate backwards\n    if(face>2 && direction === -1) direction = 0;\n\n    else if (face>2 && direction === 0) direction = -1;\n\n    // change state so animate function kicks in\n    this.setState({blockMoveLog:false,\n                   face : face,\n                   turnDirection : direction,\n                   end : this.state.end + 90,\n                   cubeDepth : cubeDepth,\n                   isMulti: isMulti},\n                   () =>{\n      this.rotateFace(face,direction,cubeDepth,isMulti);\n    });\n  }\n\n  // Takes prebuilt algorithms and converts to moves\n  // allow for C,c\n  algorithm = (moveString,moveName) => {\n    if(this.state.currentFunc !== \"None\") return;\n    const moveArray = this.moveStringToArray(moveString);\n    //console.log(moveArray);\n    this.setState({currentFunc : moveName, moveSet : moveArray});\n  }\n\n  // Refreshes page to reset cube\n  reset = () => {\n    let cD = this.state.cubeDimension;\n    let generated = cube.generateSolved(cD,cD,cD);\n    let rubiksObject = generated.tempArr;\n    this.setState({rubiksObject,moveSet: [],currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : []},()=>{\n      this.reloadTurnedPieces('all');\n    });\n    //window.location.reload();\n  }\n\n  // Generates a random move\n  scramble = () => {\n\n    this.setState({moves:this.state.moves+1});\n\n    let maxDepth = Math.ceil((this.state.cubeDimension/2));\n    let randFace = Math.floor((Math.random() * 6));\n    let randTurn = Math.floor((Math.random() * 2)-1);\n    let randIsMulti = Math.floor((Math.random() * 2));\n    let randDepth = 1;\n\n    if(this.state.cubeDimension>2) \n      randDepth = Math.floor((Math.random() * maxDepth)) + 1;\n\n    if(randDepth === Math.ceil(this.state.cubeDimension/2) && this.state.cubeDimension%2)\n      randIsMulti=0;\n\n    this.rotateCubeFace(randFace, randTurn,randDepth,randIsMulti);\n  }\n\n  // Changes state active function to begin scrambling\n  beginScramble = () => {\n    if(this.state.currentFunc === \"None\") this.setState({currentFunc : \"Scrambling\"});\n  }\n\n  // Starts the solve process\n  beginSolve = () => {\n    if(this.state.currentFunc !== \"None\") return;\n    this.setState({currentFunc : \"Solving\",solveState : 0,autoPlay : false, playOne : false});\n  }\n\n  stopSolve = () => {\n    this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : []});\n  }\n\n  handleDragInput = (e, ui) => {\n    const {x, y} = this.state.deltaPositionInput;\n    this.setState({\n      deltaPositionInput: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n  };\n\n  onStartInput = () => {\n    this.setState({activeDragsInput: this.state.activeDragsInput+1});\n  };\n\n  onStopInput = () => {\n    this.setState({activeDragsInput: this.state.activeDragsInput-1});\n  };\n\n  handleDragControls = (e, ui) => {\n    const {x, y} = this.state.deltaPositionControls;\n    this.setState({\n      deltaPositionControls: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n  };\n\n  onStartControls = () => {\n    this.setState({activeDragsControls: this.state.activeDragsControls+1});\n  };\n\n  onStopControls = () => {\n    this.setState({activeDragsControls: this.state.activeDragsControls-1});\n  };\n\n  convertMoveToData = (move) => {\n    if(move.length < 2) return false;\n    let data = [];\n    let face = ['F','U','R','B','L','D']\n    data.push(face.indexOf(move[2].toUpperCase()));\n    move.length < 4 ? data.push(-1) : data.push(0);\n    move[0]==='0' ? data.push(parseInt(move[1])) : data.push(parseInt(move.substring(0, 2)))\n    move[2].toUpperCase() === move[2] ? data.push(false) : data.push(true);\n    return data;\n  }\n\n  convertDataToMove = (data) => {\n    \n  }\n\n  mouseOver = (name,data) => {\n    if(this.state.showHints)\n      this.setState({\n        isVisible: true,\n        hoverData: data\n      });\n  }\n\n  mouseLeave = () => {\n    this.setState({\n      isVisible: false,\n      hoverData: []\n    });\n  }\n\n  // Converts move string to move array\n  // handle move short hand characters. ex: fx => 01Fx 02Fx; x = \"\" or \"'\" or \"2\"\n  moveStringToArray = str => {\n    let tempArray = str.split(\" \");\n    let moveArray = [];\n\n    // Run through split string and create duplicates where needed\n    // Handle other short hands\n    for(let i = 0; i < tempArray.length;i++){\n      if(tempArray[i].length === 4 && tempArray[i].slice(3,4)===\"2\") {\n        let tempMove = tempArray[i].slice(0,3);\n        moveArray.push(tempMove);\n        moveArray.push(tempMove);\n      }\n      else {\n        moveArray.push(tempArray[i]);\n      }\n    }\n    return moveArray;\n  }\n\n  // Generalized move function. Takes in array of moves and parse the moves\n  parseMoveArray = (moveArray) =>{\n    //if(typeof moveArray === 'string') moveArray = [moveArray];\n    let shifted = moveArray.shift();\n\n    let tempFace = 0;\n    let tempDirection = -1;\n    let tempDepth = 1;\n    let tempIsMulti = false;\n\n    if(shifted.length === 4) tempDirection=0;\n    tempDepth = parseInt(shifted.slice(0,2));\n\n    if(shifted.slice(2,3) === shifted.slice(2,3).toLowerCase()){\n      tempIsMulti = true;\n    }\n\n    if(shifted.slice(2,3).toUpperCase() === \"U\") tempFace = 1;\n    else if(shifted.slice(2,3).toUpperCase() === \"F\") tempFace = 0;\n    else if(shifted.slice(2,3).toUpperCase() === \"B\") tempFace = 3;\n    else if(shifted.slice(2,3).toUpperCase() === \"R\") tempFace = 2;\n    else if(shifted.slice(2,3).toUpperCase() === \"L\") tempFace = 4;\n    else if(shifted.slice(2,3).toUpperCase() === \"D\") tempFace = 5;\n\n    this.rotateCubeFace(tempFace,tempDirection,tempDepth,tempIsMulti);\n\n  }\n\n  /* Each piece that's rotated has it's rotation disrupted on other planes.\n   *\n   * This function solves that issue by setting all piece rotation back to zero\n   * and then placing colors to look as though the piece were still rotated.\n   * \n   * Some optimizations have been added. Undersides and sides of some pieces\n   * appear white instead of black but does not disrupt the rest of the cube.\n   * Likely won't be changed since that optimization greatly improves run time.\n   */\n  reloadTurnedPieces = (pos) => {\n    let cubes = [...this.state.cubes];\n    \n    for(let i = 0; i<this.state.rubiksObject.length;i++){\n\n      let tempCube = {...cubes[i]};\n      let rotation = tempCube.rotation;\n\n      if((rotation.x !== 0 || rotation.y !== 0 ||rotation.z !== 0) || \n           (pos === tempCube.position || pos==='all')){\n\n        if(pos==='all') {\n          tempCube.position.x=this.state.rubiksObject[i][9];\n          tempCube.position.y=this.state.rubiksObject[i][10];\n          tempCube.position.z=this.state.rubiksObject[i][11];\n        }\n        tempCube.material[0].color = new THREE.Color(this.state.rubiksObject[i][2]);\n        tempCube.material[1].color = new THREE.Color(this.state.rubiksObject[i][4]);\n        tempCube.material[2].color = new THREE.Color(this.state.rubiksObject[i][3]);\n        tempCube.material[3].color = new THREE.Color(this.state.rubiksObject[i][0]);\n        tempCube.material[4].color = new THREE.Color(this.state.rubiksObject[i][1]);\n        tempCube.material[5].color = new THREE.Color(this.state.rubiksObject[i][5]);\n        \n        tempCube.rotation.x = 0; tempCube.rotation.y = 0; tempCube.rotation.z = 0;\n        cubes[i] = tempCube;\n        \n      }\n    }\n\n    this.setState({cubes,reload : false});\n  }\n\n  // function to solves edges on cubes greater than 3x3x3\n  // move to other file\n  solveMultipleEdges = () =>{\n    // code here\n  }\n\n  // Changes the settings by passing setting to change and new val for the setting\n  changeSettings (settingToChange,newVals) {\n    switch(settingToChange){\n      case 'displayStats':\n        this.state.showStats ? document.body.children[9].style.display = \"none\" : document.body.children[9].style.display = \"\";\n        this.setState({showStats : !this.state.showStats});\n        break;\n      case 'displayMoveInput':\n        this.setState({showMoveInput:!this.state.showMoveInput});\n        break;\n      case 'displayControls':\n        this.setState({showControls:!this.state.showControls});\n        break;\n      case 'displayHints':\n        this.setState({showHints:!this.state.showHints});\n        break;\n      default:\n        console.log(\"Invalid Setting\");\n    }\n  }\n  \n  // Remove event listener on compenent unmount\t\n  componentWillUnmount() {    \n    window.removeEventListener(\"keydown\", this.keyHandling);\n  }\n\n  // Gets the url to be parsed\n  getSizeFromUrl() {\n    let limit = 50;\n    let cD;\n    let vars = {};\n    let parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {\n        vars[key] = value;\n    });\n\n    parts.length < \"https://rubiksprogram.herokuapp.com/id=\".length ?\n      cD = parseInt(parts.substring(25)) :\n      cD = parseInt(\n        parts\n          .substring(\"https://rubiksprogram.herokuapp.com/id=\".length));\n\n    if (cD <= limit && cD >= 2) return cD; else return 3;\n  }\n\n  calculateTurnAtFace(coord1,compare1,coord2,compare2,piece1,piece2,dir1,dir2){\n    if(Math.abs(coord1)>=Math.abs(coord2)&&(Math.abs(coord1)>.1)) \n      return {calculated : compare1?dir1:(dir1+\"'\"),depth : piece2}\n      \n    if(Math.abs(coord2)>Math.abs(coord1)&&(Math.abs(coord2)>.1)) {\n      return {calculated : compare2?dir2:(dir2+\"'\"),depth : piece1}\n    }\n    return null;\n  }\n\n  calculateTurn(current,previous,piece,pieceFace,cD){\n\n    let calculated = null;\n    let depth = null;\n    let turn = null;\n    const dif = { \n      x: (previous.x-current.x), \n      y: (previous.y-current.y), \n      z: (previous.z-current.z)\n    }\n\n    if(current.x===previous.x && current.y === previous.y && current.z===previous.z){\n      return null;\n    }\n\n    //determines the move based on mouse difference from click to new position\n    switch(pieceFace){\n      case 0:\n        turn = this.calculateTurnAtFace(dif.z,dif.z<0,dif.x,dif.x>=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 1:\n        turn = this.calculateTurnAtFace(dif.x,dif.x<=0,dif.y,dif.y<0,cD-piece.x,piece.y+1,\"F\",\"R\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 2:\n        turn = this.calculateTurnAtFace(dif.z,dif.z>0,dif.y,dif.y>0,cD-piece.z,piece.y+1,\"F\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 3:\n        turn = this.calculateTurnAtFace(dif.z,dif.z>0,dif.x,dif.x<=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 4:\n        turn = this.calculateTurnAtFace(dif.z,dif.z<0,dif.y,dif.y<0,cD-piece.z,piece.y+1,\"F\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 5:\n        turn = this.calculateTurnAtFace(dif.x,dif.x>=0,dif.y,dif.y>0,cD-piece.x,piece.y+1,\"F\",\"R\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      default:\n    }\n\n    //console.log(\"{ turn: \" + calculated + \" } , { depth: \" + depth + \" }\");\n    return ((depth<10? \"0\" : \"\") + depth+calculated);\n  }\n\n  // Proto function for feature to be built later\n  calculateTheta(){\n\n  }\n\n  generateAllSolveMoves(){\n    \n  }\n\n  // Initialization and animation functions\n  componentDidMount() {\n\n    let cD = this.getSizeFromUrl();\n    let generated = cube.generateSolved(cD,cD,cD);\n    let rubiksObject = generated.tempArr;\n    let tempCubes = [];\n    let stats = new Stats();\n    const groups = [[],[],[],[],[],[]];\n    let previousMousePos = null;\n    let piecePos = null;\n    let intersected = null;\n\n    // === THREE.JS VARIABLES ===\n    let scene = new THREE.Scene();\n    let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, .1, 1000 );\n    let renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    let raycaster = new THREE.Raycaster();\n    let mouse = new THREE.Vector2();\n    let cubeGeometry = new THREE.BoxGeometry( 1, 1, 1 );\n    var geometry = new THREE.PlaneGeometry(1,1);\n    //const loader = new THREE.TextureLoader().load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSp2vqlj5dzmGwQfEBy7yNWfDvDVm6mgsA4768bcpsJDmdp9t0g7w&s');\n    const loader = new THREE.TextureLoader().load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQW92XE-j1aJzRMI9kvvMZIf2VikZzzdEI87zl4rWgHMJBNJ9iw7A&s');\n    //const loader1 = new THREE.TextureLoader().load('https://cdn0.iconfinder.com/data/icons/arrows-11/100/arrow-1-512.png');\n    const loader1 = new THREE.TextureLoader().load('https://cdn2.iconfinder.com/data/icons/communication-language/100/Up_Arrow-01-512.png');\n    var material = new THREE.MeshBasicMaterial( {map:loader1,transparent: true,color: 'black', opacity:'.8',side: THREE.DoubleSide} );\n    let tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\n\n    let windowHeight = window.innerHeight;\n\n    function onMouseMove( event ) {\n      // calculate mouse position in normalized device coordinates\n      // (-1 to +1) for both components\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;   \n    }\n\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      \n      // adjust the FOV\n      camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( window.innerHeight / windowHeight ) );\n      \n      camera.updateProjectionMatrix();\n      camera.lookAt( scene.position );\n\n      renderer.setSize( window.innerWidth, window.innerHeight-10 );\n      renderer.render( scene, camera );\n    }\n\n    // Bind event listeners to window\n    window.addEventListener(\"keydown\", this.keyHandling);\n    window.addEventListener(\"mousemove\", onMouseMove, false );\n    window.addEventListener(\"mousedown\", this.onMouseDown.bind(this), false );\n    window.addEventListener(\"mouseup\", this.onMouseUp.bind(this), false );\n    window.addEventListener(\"resize\", onWindowResize, false );\n    \n    // Set background color and size\n    renderer.setClearColor(new THREE.Color(\"black\"),0);\n    renderer.domElement.className = \"canvas\";\n    renderer.setSize( window.innerWidth, window.innerHeight);\n    document.body.children[5].appendChild( renderer.domElement );\n\n    stats.showPanel( 0 ); // 0: fps, 1: ms, 2: mb, 3+: custom\n    document.body.appendChild( stats.dom);\n    document.body.children[9].style.display = \"none\"\n\n    // Prevents bluring\n    loader.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    loader1.anisotropy = renderer.capabilities.getMaxAnisotropy();\n\n    // generate cubes with face colors based off memory cube\n    for(let i = 0; i < rubiksObject.length; i++){\n\n      // Store x,y,z of memory cube in easier to read variables\n      let cubeX = rubiksObject[i][6];\n      let cubeY = rubiksObject[i][7];\n      let cubeZ = rubiksObject[i][8];\n\n      // Map textures to each face to look nice and then color over\n      const cubeMaterials = [\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true, color:rubiksObject[i][2], side: THREE.FrontSide}),\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true, color:rubiksObject[i][4], side: THREE.FrontSide}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true, color:rubiksObject[i][3], side: THREE.FrontSide}),\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true, color:rubiksObject[i][1], side: THREE.FrontSide}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true, color:rubiksObject[i][5], side: THREE.FrontSide}), \n      ];\n    \n      // Add the new cube to temp cubes\n      tempCubes[i] = new THREE.Mesh(cubeGeometry, cubeMaterials);\n      //group.add( tempCubes[i] );\n      // position piece based off memory cube\n      tempCubes[i].translateX(cubeX);\n      tempCubes[i].translateY(cubeY);\n      tempCubes[i].translateZ(cubeZ); \n    }\n\n    // Translate cube so center of cube is 0,0,0\n    scene.translateX(.5-cD/2);\n    scene.translateY(.5-cD/2);\n    scene.translateZ(.5-cD/2);\n\n    // Allows for drag to rotate camera\n    const controls = new OrbitControls( camera , renderer.domElement);\n    controls.enableDamping = true;   //damping \n    controls.dampingFactor = 0.15;   //damping inertia\n    controls.enableZoom = true;      //Zooming\n    controls.autoRotate = false;     //Enable auto rotation\n    controls.minDistance = (2+cD);\n    controls.maxDistance = (2+cD)+20;\n    controls.keys = {\n      LEFT: null, //left arrow\n      UP: null, // up arrow\n      RIGHT: null, // right arrow\n      BOTTOM: null // down arrow\n    };\n\n    controls.addEventListener(\"change\", () => {\n      if (renderer) renderer.render(scene, camera);\n    });\n\n    // generate side 4 and 2 move hints\n    for(let k = 0; k < cD; k++){\n      let tempGroup = new THREE.Group();\n      let tempGroupOther = new THREE.Group();\n      for(let i = 0; i < 4; i++){\n        for(let j = 0; j<cD;j++){\n          let tempPlane = new THREE.Mesh( geometry, material );\n          let tempPlaneOther = new THREE.Mesh( geometry, material );\n          if(i===0){\n            tempPlane.translateX(cD-1-k);\n            tempPlane.translateZ((cD-1)+.51);\n            tempPlane.translateY((cD-1)-j);\n\n            tempPlaneOther.translateX(cD-1-k);\n            tempPlaneOther.translateZ((cD-1)+.51);\n            tempPlaneOther.translateY((cD-1)-j);\n            tempPlaneOther.rotateZ(Math.PI);\n          }\n          else if(i===1){\n            tempPlane.translateX(cD-1-k);\n            tempPlane.translateZ((cD-1)-j);\n            tempPlane.translateY((cD-1)+.51);\n            tempPlane.rotateX(Math.PI/2);\n            tempPlane.rotateZ(Math.PI);\n\n            tempPlaneOther.translateX(cD-1-k);\n            tempPlaneOther.translateZ((cD-1)-j);\n            tempPlaneOther.translateY((cD-1)+.51);\n            tempPlaneOther.rotateX(Math.PI/2);\n          }\n          else if(i===2){\n            tempPlane.translateX(cD-1-k);\n            tempPlane.translateZ(-.51);\n            tempPlane.translateY((cD-1)-j);\n            tempPlane.rotateX(Math.PI);\n\n            tempPlaneOther.translateX(cD-1-k);\n            tempPlaneOther.translateZ(-.51);\n            tempPlaneOther.translateY((cD-1)-j);\n          }\n          else if(i===3){\n            tempPlane.translateX(cD-1-k);\n            tempPlane.translateZ((cD-1)-j);\n            tempPlane.translateY(-.51);\n            tempPlane.rotateX(-Math.PI/2);\n            tempPlane.rotateZ(Math.PI);\n\n            tempPlaneOther.translateX(cD-1-k);\n            tempPlaneOther.translateZ((cD-1)-j);\n            tempPlaneOther.translateY(-.51);\n            tempPlaneOther.rotateX(-Math.PI/2);\n          }\n          tempGroup.add(tempPlane)\n          tempGroupOther.add(tempPlaneOther)\n        }\n      }\n      tempGroup.visible = false;\n      tempGroupOther.visible = false;\n      groups[2].push(tempGroup);\n      groups[5].push(tempGroupOther);\n    }\n\n    // generate side 0 and 3 move hints\n    for(let k = 0; k < cD; k++){\n      let tempGroup = new THREE.Group();\n      let tempGroupOther = new THREE.Group();\n      for(let i = 0; i < 4; i++){\n        for(let j = 0; j<cD;j++){\n          let tempPlane = new THREE.Mesh( geometry, material );\n          let tempPlaneOther = new THREE.Mesh( geometry, material );\n          if(i===0){\n            tempPlane.translateX((cD-1)-j);\n            tempPlane.translateZ((cD-1)+.51);\n            tempPlane.translateY(k);\n            tempPlane.rotateZ(-Math.PI/2);\n            \n\n            tempPlaneOther.translateX((cD-1)-j);\n            tempPlaneOther.translateZ((cD-1)+.51);\n            tempPlaneOther.translateY(k);\n            tempPlaneOther.rotateX(Math.PI);\n            tempPlaneOther.rotateZ(Math.PI/2);\n          }\n          else if(i===1){\n            tempPlane.translateX((cD-1)+.51);\n            tempPlane.translateZ((cD-1)-j);\n            tempPlane.translateY(k);\n            tempPlane.rotateX(Math.PI/2);\n            tempPlane.rotateZ(Math.PI);\n            tempPlane.rotateY(Math.PI/2);\n\n            tempPlaneOther.translateX((cD-1)+.51);\n            tempPlaneOther.translateZ((cD-1)-j);\n            tempPlaneOther.translateY(k);\n            tempPlaneOther.rotateX(Math.PI/2);\n            tempPlaneOther.rotateY(Math.PI/2);\n          }\n          else if(i===2){\n            tempPlane.translateX((cD-1)-j);\n            tempPlane.translateZ(-.51);\n            tempPlane.translateY(k);\n            tempPlane.rotateX(Math.PI);\n            tempPlane.rotateZ(Math.PI/2);\n\n            tempPlaneOther.translateX((cD-1)-j);\n            tempPlaneOther.translateZ(-.51);\n            tempPlaneOther.translateY(k);\n            tempPlaneOther.rotateZ(-Math.PI/2);\n          }\n          else if(i===3){\n            tempPlane.translateX(-.51);\n            tempPlane.translateZ((cD-1)-j);\n            tempPlane.translateY(k);\n            tempPlane.rotateX(-Math.PI/2);\n            tempPlane.rotateZ(Math.PI);\n            tempPlane.rotateY(-Math.PI/2);\n\n            tempPlaneOther.translateX(-.51);\n            tempPlaneOther.translateZ((cD-1)-j);\n            tempPlaneOther.translateY(k);\n            tempPlaneOther.rotateX(-Math.PI/2);\n            tempPlaneOther.rotateY(Math.PI/2);\n            //tempPlaneOther.rotateZ(Math.PI);\n          }\n          tempGroup.add(tempPlane)\n          tempGroupOther.add(tempPlaneOther)\n        }\n      }\n      tempGroup.visible = false;\n      tempGroupOther.visible = false;\n      \n      groups[0].push(tempGroup);     //Clockwise for white, counter for yellow\n      groups[3].push(tempGroupOther);//Counter for white, clockwise for yellow\n    }\n\n    // generate side 1 and 5 move hints\n    for(let k = 0; k < cD; k++){\n      let tempGroup = new THREE.Group();\n      let tempGroupOther = new THREE.Group();\n      for(let i = 0; i < 4; i++){\n        for(let j = 0; j<cD;j++){\n          let tempPlane = new THREE.Mesh( geometry, material );\n          let tempPlaneOther = new THREE.Mesh( geometry, material );\n          if(i===0){\n            tempPlane.translateX((cD-1)-j);\n            tempPlane.translateZ((cD-1)-k);\n            tempPlane.translateY((cD-1)+.51);\n            tempPlane.rotateZ(-Math.PI/2);\n            tempPlane.rotateY(Math.PI/2);\n            \n\n            tempPlaneOther.translateX((cD-1)-j);\n            tempPlaneOther.translateZ((cD-1)-k);\n            tempPlaneOther.translateY((cD-1)+.51);\n            tempPlaneOther.rotateX(Math.PI);\n            tempPlaneOther.rotateZ(Math.PI/2);\n            tempPlaneOther.rotateY(Math.PI/2);\n          }\n          else if(i===1){\n            tempPlane.translateX((cD-1)+.51);\n            tempPlane.translateZ((cD-1)-k);\n            tempPlane.translateY((cD-1)-j);\n            //tempPlane.rotateX(Math.PI/2);\n            tempPlane.rotateZ(Math.PI);\n            tempPlane.rotateY(Math.PI/2);\n\n            tempPlaneOther.translateX((cD-1)+.51);\n            tempPlaneOther.translateZ((cD-1)-k);\n            tempPlaneOther.translateY((cD-1)-j);\n            //tempPlaneOther.rotateX(Math.PI);\n            tempPlaneOther.rotateY(Math.PI/2);\n          }\n          else if(i===2){\n            tempPlane.translateX((cD-1)-j);\n            tempPlane.translateZ((cD-1)-k);\n            tempPlane.translateY(-.51);\n            tempPlane.rotateX(Math.PI/2);\n            tempPlane.rotateZ(Math.PI/2);\n\n            tempPlaneOther.translateX((cD-1)-j);\n            tempPlaneOther.translateZ((cD-1)-k);\n            tempPlaneOther.translateY(-.51);\n            tempPlaneOther.rotateX(Math.PI/2);\n            tempPlaneOther.rotateZ(-Math.PI/2);\n          }\n          else if(i===3){\n            tempPlane.translateX(-.51);\n            tempPlane.translateZ((cD-1)-k);\n            tempPlane.translateY((cD-1)-j);\n            tempPlane.rotateX(Math.PI);\n            tempPlane.rotateZ(Math.PI);\n            tempPlane.rotateY(-Math.PI/2);\n\n            tempPlaneOther.translateX(-.51);\n            tempPlaneOther.translateZ((cD-1)-k);\n            tempPlaneOther.translateY((cD-1)-j);\n            tempPlaneOther.rotateX(-Math.PI);\n            tempPlaneOther.rotateY(Math.PI/2);\n            //tempPlaneOther.rotateZ(Math.PI);\n          }\n          tempGroup.add(tempPlane)\n          tempGroupOther.add(tempPlaneOther)\n        }\n      }\n      tempGroup.visible = false;\n      tempGroupOther.visible = false;\n      \n      groups[1].push(tempGroup);     //Clockwise for white, counter for yellow\n      groups[4].push(tempGroupOther);//Counter for white, clockwise for yellow\n    }\n\n    groups.forEach(group => scene.add(...group));\n    // scene.add(...groups.flat(2)); //issues with new edge\n\n    // add cubes to state and then render\n    this.setState({\n      cubes : tempCubes,\n      cubeDimension : cD,\n      cameraZ : -(2+cD),\n      cameraX : (2+cD),\n      cameraY : -(2+cD),\n      rubiksObject,\n      middles: generated.middles,\n      edges: generated.edges,\n      generatedButtons: cube.generateButtonData(this.getSizeFromUrl())\n    }, () => {\n      // Callback required to wait for setState to finish\n      for(let i = 0; i < rubiksObject.length; i++){\n        // Logic to only render outer pieces since inside pieces aren't ever used\n        if((this.state.cubes[i].position.x === 0 || this.state.cubes[i].position.x === this.state.cubeDimension-1) ||\n            (this.state.cubes[i].position.y === 0 || this.state.cubes[i].position.y === this.state.cubeDimension-1)||\n            (this.state.cubes[i].position.z === 0 || this.state.cubes[i].position.z === this.state.cubeDimension-1)){\n          scene.add( this.state.cubes[i] );\n        } \n      }\n      camera.position.z = this.state.cameraZ;// * Math.sin( this.state.angle );\n      camera.position.y = this.state.cameraY;\n      camera.position.x = this.state.cameraX;// * Math.cos( this.state.angle );\n\n      //this.reset();\n      renderer.render( scene, camera );\n      animate();\n    });\n\n    // Function runs continuously to animate cube\n    var animate = () => {\n\n      // clear visible move hints\n      for(let i = 0; i < groups.length;i++)\n        groups[i].forEach(group => group.visible = false)\n\n      controls.enabled = true;\n      stats.begin();\n      requestAnimationFrame( animate );\n\n      // Mouse stuff here\n      // Consider moving into another function to unclutter animate\n      // Very expensive operation\n      if(this.state.currentFunc === \"None\" || this.state.currentFunc ===\"Solving\") {\n\n        //check here that data isn't the same as previous so not running this every time\n        // Data on move button triggers visual move hints\n        if(this.state.isVisible){\n          let [hFace,hDir,hDepth,hMulti] = this.state.hoverData;\n          if(hFace<3){\n            if(hDir === -1){\n              if(!hMulti){\n                groups[hFace][hDepth-1].visible=true;\n              }\n              else\n                for(let i = 0; i <= hDepth-1; i++){\n                  groups[hFace][i].visible=true;\n                }\n            }\n            else {\n              if(!hMulti){\n                groups[hFace+3][hDepth-1].visible=true;\n              }\n              else\n              for(let i = 0; i <= hDepth-1; i++){\n                groups[hFace+3][i].visible=true;\n              }\n            }\n          }\n          else{\n            if(hFace===3) hFace=0;\n            if(hFace===4) hFace=2;\n            if(hFace===5) hFace=1;\n\n            if(hDir === -1){\n              if(!hMulti){\n                groups[hFace+3][(groups[hFace+3].length-1)-(hDepth-1)].visible=true;\n              }\n              else\n                for(let i = groups[hFace+3].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\n                  groups[hFace+3][i].visible=true;\n                }\n            }\n            else {\n              if(!hMulti){\n                groups[hFace][(groups[hFace].length-1)-(hDepth-1)].visible=true;\n              }\n              else\n                for(let i = groups[hFace].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\n                  groups[hFace][i].visible=true;\n                }\n            }\n          }\n        }\n\n        let previousPiece = this.state.previousPiece;\n\n        // Projects mouse onto scene to find intersected objects\n        raycaster.setFromCamera( mouse, camera );\n\n        // calculate objects intersecting the picking ray\n        var intersects = raycaster.intersectObjects( scene.children );\n        if (intersects[0] && intersects[0].object.material.length && !this.state.mouseDown && this.state.currentFunc===\"None\"){\n          previousMousePos = null;\n          piecePos = null;\n          intersected = null;\n          controls.enabled = false;\n          // Get faces to line up properly\n          let faceInteresected = intersects[0].faceIndex;\n          let tempIndex = -1;\n          \n          // Assign the intersected face index to be recolored on hover\n          for(let i = 0; i < 6; i++){\n            if(faceInteresected===i*2 || faceInteresected=== i*2+1) {\n              tempIndex = i;\n              this.setState({mouseFace : i});\n              break;\n            }\n          }\n\n          // Recolors last hovered piece. rgb values of cyan\n          if(parseFloat(intersects[0].object.material[tempIndex].color.r) !== 0.6784313725490196 &&\n             parseFloat(intersects[0].object.material[tempIndex].color.g) !== 0.8470588235294118 &&\n             parseFloat(intersects[0].object.material[tempIndex].color.b) !== 0.9019607843137255){\n            if(previousPiece!==null) {\n              this.reloadTurnedPieces(previousPiece);\n              this.setState({previousPiece:null});\n            }\n          }\n          \n          // Recolor face that mouse is over\n          if(intersects[0].object.material[tempIndex] && tempIndex > -1)\n            if(intersects[0].object.material[tempIndex].color){\n              // store the hovered face for use later\n              this.setState({facePosX : intersects[0].object.position.x,\n                            facePosY : intersects[0].object.position.y,\n                            facePosZ : intersects[0].object.position.z });\n              intersects[0].object.material[tempIndex].color.set(\"lightblue\");\n              // store the hovered coordinates so that if a different\n              // piece is hovered, the previous gets colored back.\n              this.setState({previousPiece : intersects[0].object.position});\n            }\n        }\n\n        // 1. Work on what values get stored for mouse and the object hovered \n        // 2. Will be important for determing turn directions based on drag\n        // 3. Once available turn directions have been determined, calculate change\n        //    in mouse movement to determine which face gets turned and direction\n        else if(this.state.mouseDown){\n          if(this.state.mouseFace === null){\n            // dragging mouse on canvas should rotate cube\n          } \n\n          else{\n            try{\n              let toFace = [2,4,3,0,1,5];\n              \n              if(previousMousePos === null) {\n                previousMousePos = intersects[0].point;\n                piecePos = intersects[0].object.position;\n                intersected = Math.floor(intersects[0].faceIndex/2);\n              }\n              else{\n                  let calculated = this.calculateTurn(intersects[0].point,previousMousePos,piecePos,toFace[intersected],cD);\n                  if(calculated!==null&&!calculated.includes(\"null\")){\n                    //console.log(calculated)\n                    this.setState({mouseDown: false},()=>{\n                      this.algorithm(calculated,\"Drag Turn\");\n                    });\n                  }\n                \n              }\n            }catch(e){\n              //console.error(\"Error prevented\");\n            }\n            // ** account for mouse not being over the cube after selected piece **\n            //\n            // Code here to figure out which faces can be turned from selected face\n            // Also code here to figure which direction to turn face based on mouse movement\n          }\n        }\n\n        // \n        else if(this.state.mouseFace !== null){\n          if(previousPiece!==null) {\n            this.reloadTurnedPieces(previousPiece);\n            this.setState({previousPiece:null});\n          }\n\n          previousMousePos = null;\n          piecePos = null;\n          intersected = null;\n          this.setState({mouseFace : null});\n        }\n      }\n      \n      if(this.state.start<=this.state.end){\n        this.rotatePieces(cube.rotatePoint,tempCubes);\n      }\n\n      else {\n        if(this.state.reload) this.reloadTurnedPieces(this.state.face);\n        if(this.state.currentFunc !== \"None\"){\n\n          // Doesn't work with !==\n          if(this.state.currentFunc === \"Undo\" ||\n             this.state.currentFunc === \"Redo\"){}\n\n          // Keeps undo/redo updated with other moves\n          // find the error in this logic\n          else {\n            let moveLog = this.state.moveLog;\n            let index = this.state.undoIndex;\n\n            if(index > 0){\n              let moveArray = this.moveStringToArray(moveLog);\n\n              if(this.state.currentFunc[0]==='0' || this.state.currentFunc[0]==='1' ||\n                 this.state.currentFunc[1]==='1' || this.state.currentFunc[1]==='2' || this.state.currentFunc[1]==='3'){\n                let tempVal = moveArray[moveArray.length-1];\n                for(let i = 0; i <= index; i++){\n                  moveArray.pop();\n                }\n                moveArray.push(tempVal);\n              }\n\n              else{\n                for(let i = 0; i < index; i++){\n                  moveArray.pop();\n                }\n              }\n\n              moveLog = moveArray.join(\" \");\n              this.setState({undoIndex:0,moveLog});\n            }\n          }\n\n          // Moves based on active function\n          if (this.state.currentFunc===\"Scrambling\")\n            this.state.moves < 25 ?\n              this.scramble() :\n              this.setState({currentFunc : \"None\",moves : 0});\n\n          else if (this.state.currentFunc===\"Solving\"){\n            if(this.state.generateAllMoves===true){\n\n              this.setState({generateAllMoves:false});\n            }\n            if(!this.state.moveSet.length) {\n              //console.log(this.state.solveState);\n              //console.log(this.state.rubiksObject);\n              this.setState(solver(\n                this.state.solveState,\n                this.state.rubiksObject,\n                this.state.cubeDimension,\n                this.moveStringToArray,\n                this.state.solveMoves,\n                this.state.rubiksIndex,\n                this.state.middles,\n                this.state.edges));\n            }\n            else if(this.state.playOne||this.state.autoPlay){\n              this.mouseLeave();\n              this.setState({playOne:false});\n              this.parseMoveArray(this.state.moveSet);\n            }\n            else{\n              let data = this.convertMoveToData(this.state.moveSet[0]);\n              if(data){\n                this.mouseOver(this.state.moveSet[0],data);\n              }\n            }\n          }\n\n          else if(this.state.currentFunc===\"Color Picker\"){\n            // Code here for color picker interface\n          }\n          \n          else \n            this.state.moveSet.length ?\n              this.parseMoveArray(this.state.moveSet) :\n              this.setState({currentFunc:\"None\"}); \n        }\n      }\n      \n      controls.update();\n      renderer.render( scene, camera );\n      stats.end();     \n    };\n  }\n\n  // Renders html to the index.html page\n  render() {\n    let solveBtn = (this.state.cubeDimension < 21) ? <button onClick={this.beginSolve} style={{position:\"fixed\", bottom: \"60px\", right: \"10px\",backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>SOLVE</button> : \"\";\n    let solveInterface = <div style={{position:\"fixed\", borderRadius: \".25rem\",bottom: \"60px\", right: \"10px\",backgroundColor: \"#343a40\", border: \"1px solid #007bff\",color:\"lightgray\"}}>\n        {!this.state.autoPlay? <button onClick={() => this.setState({autoPlay:true})} style={{backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>Auto Play</button> : \n        <button onClick={() => this.setState({autoPlay:false})} style={{backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>Pause</button>} <br></br>\n        {!this.state.autoPlay? <button onClick={() => this.setState({playOne:true})} style={{backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>Play \"{this.state.moveSet[0]}\"</button > : <button disabled style={{backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>Play \"{this.state.moveSet[0]}\"</button> }<br></br>\n        <button onClick={this.stopSolve} style={{backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>STOP SOLVE</button>\n    </div>;\n    let stopSolveBtn = <button onClick={this.stopSolve} style={{backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>STOP SOLVE</button>;\n    return (\n      <div className=\"App\" >\n        \n        <Navbar\n          title=\"Rubik's Cube\"\n          changeSettings={this.changeSettings.bind(this)}\n          state={this.state}\n        />\n\n        <p style={{position:\"fixed\", top: \"75px\", left: \"10px\",color: \"white\"}}>Speed: {this.state.currentSpeed}</p>\n        <p style={{position:\"fixed\", top: \"75px\", right: \"10px\",color: \"white\"}}>{this.state.currentFunc === \"None\" ? \"\" : this.state.currentFunc}</p>\n        <div style={{position:\"fixed\", top: \"75px\", left: \"50%\", marginLeft: \"-50px\",color: \"white\"}}>\n          <button className=\"redoUndo\" onClick={() => this.undo()}>Undo</button>\n          <button className=\"redoUndo\" onClick={() => this.redo()}>Redo</button>\n        </div>\n\n        <Speeds //Top left with slider\n          onSliderChange={this.onSliderChange}\n          isDisabled={this.state.currentFunc===\"None\" || (this.state.currentFunc===\"Solving\" && !this.state.autoPlay && !this.state.playOne)? false:true}\n        />\n\n        { this.state.showMoveInput? \n          <MoveInput\n            algorithm = {this.algorithm}\n            handleDrag = {this.handleDragInput}\n            onStart = {this.onStartInput}\n            onStop = {this.onStopInput}\n          /> : \"\"\n        }\n      \n        <Patterns\n          algorithm={this.algorithm}\n          size={this.getSizeFromUrl()}\n        />\n\n        { this.state.generatedButtons && this.state.showControls? \n          <Controls\n          disableHover={this.state.showGuideArrows}\n          generatedButtons={this.state.generatedButtons}\n          size={this.getSizeFromUrl()}\n          rotateOneFace={this.rotateOneFace}\n          handleDrag = {this.handleDragControls}\n          onStart = {this.onStartControls}\n          onStop = {this.onStopControls}\n          mouseEnter= {this.mouseOver}\n          mouseLeave= {this.mouseLeave}\n        /> : \"\"}\n  \n        {/* Create a component for these that works similarly to patterns to auto populate functions */}\n        {/* Bottom Right */} \n        \n        {this.state.solveState < 0 ? solveBtn : solveInterface}\n        <button onClick={this.beginScramble} style={{position:\"fixed\", bottom: \"30px\", right: \"10px\",backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>SCRAMBLE</button>\n        <button onClick={this.reset} style={{position:\"fixed\", bottom: \"0px\", right: \"10px\",backgroundColor: \"Transparent\", border: \"none\",color:\"lightgray\"}}>RESET</button>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}