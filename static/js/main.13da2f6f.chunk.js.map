{"version":3,"sources":["solvers/edges/solveWhiteCross.js","solvers/corners/solveWhiteCorners.js","solvers/edges/solveMiddleEdges.js","solvers/edges/solveYellowCross.js","solvers/edges/alignYellowCross.js","solvers/corners/solveYellowCorners.js","solvers/corners/alignYellowCorners.js","solvers/middles/white.js","solvers/middles/yellow.js","solvers/middles/blue.js","solvers/middles/green.js","solvers/middles/orange.js","solvers/edges/solveFrontEdgeSegments.js","solvers/edges/solveBackEdgeSegments.js","solvers/edges/solveMiddleEdgeSegements.js","components/Navbar/Navbar.js","components/Speeds/Speeds.js","components/MoveInput.js","components/SolverInfo/SolverInfo.js","components/ColorPickerInfo/ColorPickerInfo.js","components/Controls.js","cubeFunctions/algorithms.js","solvers/solveMiddleLogic.js","solvers/solveMiddles.js","solvers/solveEdgeLogic.js","solvers/solveEdges.js","solvers/solver.js","cubeFunctions/cube.js","cubeFunctions/move.js","solvers/solverMain.js","components/SolverUI/SolverUIFunctions.js","components/SolverUI/SolverUI.js","components/ColorPicker/ColorButton.js","components/ColorPicker/ColorPicker.js","components/MobileView/MobileView.js","components/MenuOptions/MenuOptions.js","components/MenuOptionsOther/MenuOptionsOther.js","components/View.js","components/ColorPicker/SideColorPicker.js","components/SolverUI/SideSolverUI.js","components/SolverUI/SideSolverControls.js","components/ColorPicker/SideColorPickerController.js","components/MainSideMenu/MainSideMenuButton.js","components/MainSideMenu/MainSideMenu.js","components/SideView/SideView.js","components/MenuWrapper/MenuWrapper.js","components/ColorPicker/ColorPickerUIFunctions.js","App.js","serviceWorker.js","index.js"],"names":["inMiddle","coord","maxCoord","minCoord","module","exports","rubiksObject","cubeDimension","moveStringToArray","edges","moveString","cube","space","solvedEdges","solveState","fourEdgeSections","splitEdges","edgeSegments","length","segmentsPerSection","temp","i","push","sectionSpliter","pieceOne","pieceTwo","pieceThree","pieceFour","includes","emptyCount","whiteSide","cubeX","cubeY","cubeZ","j","moveArray","moveSet","corners","solvedCorners","dim","moveFromMiddle012","moveFromMiddle212","moveFromMiddle210","moveFromMiddle010","edgeOne","edgeTwo","edgeThree","edgeFour","blueSide","greenSide","move","depth","side","recipe","cubeIndex","cubeAtIndex","skip","counter","solveMoves","solveAlgo","obj","moveLog","currentFunc","solveCount","current","solved","index","currentSide","row","Math","floor","column","x","y","z","middle","isOddCube","console","log","checkSide","max","min","moves","join","oddCube","extractFromFront","moveFromMiddleToBack","flipPieceOnBack","solveFromBackToFront","yellowSide","displace","solve","replace","flip","cubeSize","centerEdge","firstEdge","secondEdge","thirdEdge","flipFirstCenterEdge","flipSecondCenterEdge","flipThirdCenterEdge","swapLastTwoCenterEdges","flipLastCenterEdge","solveUp","solveDown","solveUp2","solveDown2","solveUp3","solveDown3","Navbar","props","navCubes","reloadPage","setTimeout","window","location","reload","Dropdown","Item","href","onClick","className","style","color","title","DropdownButton","aria-label","id","type","data-toggle","changeSettings","defaultChecked","float","height","trigger","close","zIndex","width","backgroundColor","margin","transform","padding","fontSize","marginTop","textAlign","borderRadius","paddingTop","marginBottom","paddingBottom","target","marginRight","value","position","top","left","Speeds","isDisabled","defaultValue","speed","step","onChange","onSliderChange","MoveInput","handle","defaultPosition","grid","scale","onStart","handleStart","onDrag","handleDrag","onStop","handleStop","placeholder","onKeyDown","e","key","algorithm","document","getElementById","stopPropagation","border","SolverInfo","innerWidth","innerHeight","solvedSetLength","prevSetLength","ColorPickerInfo","colorPicked","centerButtons","singleButtons","multiButtons","singleCols","multiCols","namesToColors","face","bgc","Controls","size","generatedButtons","center","forEach","element","onMouseDown","rotateOneFace","clockwise","name","data","onMouseEnter","mouseEnter","onMouseLeave","mouseLeave","single","colors","lengthBtns","lengthBtns1","multi","cross","sixSpots","checkboardInCube","convertRuwixAlgo","wire","split","perpendicularLines","verticalStripes","giftBox","twister","spiral","fourCrosses","unionJack","displaceMotif","viaduct","staircase","wrapped2x2","exchangedDuckFeet","pyraminx","twinPeaks","cornerPyramid","sixTwoOne","yinYang","snakeEyes","weirdo","algoStr","map","char","trim","bundle","rangeLow","rangeHigh","sets","worksFor","generalizedBundle","moveSet2","algoName","pop","generalizerLower","generalizerUpper","moveParts","baseLower","substring","toLowerCase","toUpperCase","baseUpper","algorithms","cubeSizes","blankBundle","solveMiddleLogic","cubeDimensions","rubiksObjectAtIndex","faceColor","whiteSolver","yellowSolver","blueSolver","orangeSolver","greenSolver","solveMiddles","middles","numberOfMiddles","rubiksIndex","indexOf","solveEdgeLogic","edgeLength","section","frontEdges","backEdges","middleEdges","solveEdges","CONSTANTS","solver","solveWhiteCross","solveWhiteCorners","solveMiddleEdges","solveYellowCross","alignYellowCross","alignYellowCorners","solveYellowCorners","generateSolved","_x","_y","_z","half","tempArr","tempMiddles","tempEdges","k","side0","side1","side2","side3","side4","side5","edgeType","middleType","tempCount","tempType","middleEdgeLength","middleCorners","middleRestructure","middleIndex","layer","ceil","reverse","flat","generateBlank","generateButtonData","numLayers","centerLayer","faces","buttons","baseNameSingle","baseNameMulti","generateMoveHints","image","cD","groups","geometry","THREE","material","transparent","opacity","tempGroup","tempGroupOther","tempPlane","tempPlaneOther","translateX","translateZ","translateY","rotateZ","PI","rotateX","add","visible","rotateY","rotatePoint","c1","c2","direction","p1","p2","rotation","theta","cos","sin","rotatePieces","rotate","tempCubes","state","setState","centerPoint","cubes","turnDirection","start","cubeDepth","isMulti","newPoint","round","rotatePoint2","rotateFace","cubeFace","object","degrees","tempFace","rotateCubeFace","blockMoveLog","end","tempMove","moveFuncs","parseMoveArray","shifted","shift","tempDirection","tempDepth","tempIsMulti","parseInt","slice","convertDataToMove","toString","concat","convertMoveToData","str","tempArray","generateMove","maxDepth","randFace","random","randTurn","randIsMulti","randDepth","equivalentMove","_move","inverted","checkMoveEquivalence","dragMove","nextMove","generateAllSolveMoves","beforeObject","tempState","solvedSet","currentIndex","previousIndex","indexOccurence","error","threeByThreeCounter","moveData","splitSet","undefined","splice","dataMove","moveSetLength","piece","tempPiece","tempFiltered","filter","validCount","solveable","solvedSetIndex","tempObject","SolverUIFunctions","autoJump","setTarget","autoPlay","autoRewind","targetSolveIndex","playOne","autoTarget","prevSetNew","moveSetNew","forwardMoves","prevSet","backwardMoves","algoStart","algo","algoSet","generated","find","set","activeAlgo","jumpToEnd","UI","SolverUI","nextProps","rewindOne","this","solveOnce","solverMain","solverSet","defaultSolver","defaultMessage","jumperButtons","preSetTarget","el","marginLeft","previousMove","pauseSolver","autoScroll","optionClick","querySelector","visibility","display","activeMenu","hoverData","isValidConfig","currentFunct","Row","Col","mobile","paddingLeft","paddingRight","maxWidth","stopSolve","classList","remove","leave","Component","React","memo","ColorPicker","capitalized","charAt","unselected","nativeEvent","stopImmediatePropagation","changeColor","isMobile","useState","solveBtnText","setSolveBtnText","checkBtnText","setCheckBtnText","overflowX","overflowY","setColorPickedCube","cpErrors","runCheckColors","endColorPicker","beginSolve","ColorButton","Mobile","nextState","solveTime","algoLength","otherOptionClick","beginScramble","beginColorPicker","xs","MenuOptions","algorithmSet","baseOptions","MenuOptionsOther","View","upDateCp","pointerEvents","bottom","minWidth","SideColorPicker","SideSolverControls","scrollIntoView","SideColorPickerController","li","listStyle","lineHeight","MainSideMenuButton","MainSideMenu","algs","SideView","activeMenuBottom","activeMenuExit","solverLeaveButton","algoLeaveButton","cpLeaveButton","confirmLeavePopup","confirmLeavePopupCp","Menu","resized","ColorPickerUIFunctions","alignQuadrant","_piece","pos","checkOccurences","a1","a2","success","failedColors","count","amount","convertToBlueMiddle","blue","red","yellow","checkValidMatchMiddle","validPiece","manualPiece","newValidPiece","newManualPiece","convertToBlueWhiteEdge","checkValidMatchEdge","checkColors","invalidMiddleConfig","invalidEdgeConfig","rubiksLength","whiteCount","blueCount","redCount","yellowCount","orangeCount","greenCount","duplicateFace","duplicateColors","matchedCount","validAmount","rubiks","newGenerated","rubik","res","tempColors","checked","otherChecked","pieceIndex","tempInvalidMatch","sort","validEdgePlacement","validMiddlePlacement","invalidAmounts","App","blackObject","rotationSpeed","cameraX","cameraY","cameraZ","angle","currentSpeed","facePosX","facePosY","facePosZ","faceSide","mouseFace","mouseDown","mousePos","undoIndex","previousPiece","showMoveInput","showControls","showHints","showGuideArrows","activeDragsInput","deltaPositionInput","controlledPositionInput","activeDragsControls","deltaPositionControls","controlledPositionControls","isVisible","showSolveController","generateAllMoves","isLocal","sliderSpeed","algoUp","algoDown","keyBinds","rewindSolve","undo","redo","keyHandling","changeSpeed","_speed","_rotationSpeed","_name","bypass","changeFaceColor","tempObj","tempCube","reloadTurnedPieces","backwardsMove","err","vals","moveName","reset","blank","newMoveSet","tempMoveSet","tempPrev","lastEl","popped","handleDragInput","ui","deltaX","deltaY","onStartInput","onStopInput","mouseOver","menuSetState","windowResized","event","settingToChange","newVals","removeEventListener","checkLocal","parts","checkID","substr","previous","pieceFace","calculated","turn","dif","calculateTurnAtFace","coord1","compare1","coord2","compare2","piece1","piece2","dir1","dir2","abs","getSizeFromUrl","previousPieceIndex","ignoreChange","scene","camera","renderer","antialias","alpha","raycaster","mouse","cubeGeometry","loader","load","moveHintImage","tanFOV","tan","fov","windowHeight","calculateTurn","algorithmFunc","ontouchend","controls","enabled","addEventListener","clientX","clientY","setFromCamera","intersects","intersectObjects","children","point","tempPos","intersected","faceIndex","bind","saveState","faceInteresected","tempIndex","touches","aspect","atan","updateProjectionMatrix","lookAt","setSize","render","setClearColor","domElement","body","appendChild","anisotropy","capabilities","getMaxAnisotropy","cubeMaterials","OrbitControls","enableDamping","dampingFactor","enableZoom","autoRotate","minDistance","maxDistance","enablePan","keys","LEFT","UP","RIGHT","BOTTOM","group","animate","requestAnimationFrame","hFace","hDir","hDepth","hMulti","tempVal","tempRubiks","update","backgroundImage","backgroundRepeat","disableHover","Boolean","hostname","match","routing","path","component","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13da2f6f.chunk.js","sourcesContent":["function inMiddle(coord,maxCoord,minCoord){\n  return coord>minCoord&&coord<maxCoord;\n}\n\nfunction sectionSpliter(edges){\n  let splitEdges = [];\n  let edgeSegments = edges.length/3;\n  const edgeSections = 4;\n  let segmentsPerSection = edgeSegments/edgeSections;\n\n  let temp = [];\n  for(let i = 0; i < edgeSegments;i++){\n    temp.push(edges[i]);\n    if(temp.length===segmentsPerSection){\n      splitEdges.push(temp);\n      temp=[];\n    }\n  }\n\n  return splitEdges;\n}\n\nfunction solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray,edges){\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let space = \"\";\n    let solvedEdges = 0;\n\n    let dim = cubeDimension;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n\n    if(dim === 2) {return {solveState : 2};}\n\n    let fourEdgeSections = sectionSpliter(edges);\n\n    let pieceOne = fourEdgeSections[0][0];\n    let pieceTwo = fourEdgeSections[3][0];\n    let pieceThree = fourEdgeSections[1][0];\n    let pieceFour = fourEdgeSections[2][0];\n\n    for(let i = 0; i < cube.length; i++){\n      if(moveString.length) space = \" \";\n      if(cube[i].includes(\"white\")){\n\n        let emptyCount = 0;\n        let whiteSide = -1;\n        let cubeX = cube[i][6];\n        let cubeY = cube[i][7];\n        let cubeZ = cube[i][8];\n        \n\n        for(let j = 0; j < 6; j++){\n          if (cube[i][j] === \"black\") emptyCount++;\n          else {\n            if(cube[i][j] === \"white\") whiteSide = j;\n          }\n        }\n\n        // If edge piece\n        if(emptyCount === 4) {\n          if(i===pieceOne && solvedEdges === 0 ){\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===maxCoord)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01U' 01R' 01F'\";\n            \n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? moveString+= space + \"01F'\" : moveString+= space + \"01R 01U\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? moveString+= space + \"01F2\" : moveString+= space + \"01D 01R 01F'\";\n\n            else if(cubeX===minCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? moveString+= space + \"01F\" : moveString+= space + \"01L' 01U'\";\n\n            //If piece one is in y section 1\n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01L 01F\" : moveString+= space + \"01U'\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01R' 01F'\" : moveString+= space + \"01U\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01D' 01F2\" : moveString+= space + \"01R 01F'\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01D 01F2\" : moveString+= space + \"01L' 01F\";\n            \n\n            //If piece one is in y section 2\n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01U2\" : moveString+= space + \"01B 01L 01U'\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01R2 01F'\" : moveString+= space + \"01R' 01U\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01B2 01U2\" : moveString+= space + \"01B' 01L 01U'\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01B' 01U2\" : moveString+= space + \"01L 01U'\";\n            \n          }\n          if(i===pieceTwo && solvedEdges === 1){\n            \n            if(cubeX===minCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01L' 01R 01U' 01R'\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? moveString+= space + \"01D' 01F' 01D 01F\" : moveString+= space + \"01D' 01L'\";\n            \n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? moveString+= space + \"01R 01F2 01R' 01F2\" : moveString+= space + \"01R 01F 01U 01F'\";\n            \n\n            //If piece two is in y section 1\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01L\" : moveString+= space + \"01F 01U' 01F'\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F2 01R' 01F2\" : moveString+= space + \"01U 01F' 01U'\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01F' 01D' 01F\" : moveString+= space + \"01F2 01R 01F2\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01F' 01D 01F\" : moveString+= space + \"01L'\";\n            \n\n            //If piece two is in y section 2\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01F 01U2 01F'\" : moveString+= space + \"01U' 01L 01U\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01B2 01L2\" : moveString+= space + \"01R' 01F 01U 01F'\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01F' 01D2 01F\" : moveString+= space + \"01D 01L'\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01L2\" : moveString+= space + \"01B' 01U' 01L 01U\";\n            \n          }\n          if(i===pieceThree && solvedEdges === 2){\n  \n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? moveString+= space + \"01D 01F 01D' 01F'\" : moveString+= space + \"01D 01R\";\n            \n            else if(cubeX===maxCoord && cubeY===minCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01R 01F' 01U 01F\";\n            \n            \n            //If piece three is in y section 1\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F2 01L 01F2\" : moveString+= space + \"01F' 01U' 01F\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01R'\" : moveString+= space + \"01F' 01U 01F\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01F 01D' 01F'\" : moveString+= space + \"01R\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01F 01D 01F'\" : moveString+= space + \"01F2 01L' 01F2\";\n            \n\n            //If piece three is in y section 2\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01F' 01U2 01F\" : moveString+= space + \"01U 01R' 01U'\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01R2\" : moveString+= space + \"01R' 01F' 01U 01F\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01F 01D2 01F'\" : moveString+= space + \"01D' 01L\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01B2 01R2\" : moveString+= space + \"01B' 01U 01R' 01U'\";\n            \n          }\n          if(i===pieceFour && solvedEdges === 3){\n  \n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===minCoord && cubeZ===minCoord)\n              !whiteSide ? solvedEdges++ : moveString+= space + \"01D 01F' 01R 01F\";\n            \n            //If piece four is in y section 1\n            if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F 01L 01F'\" : moveString+= space + \"01F2 01U' 01F2\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===maxCoord)\n              whiteSide===1 ? moveString+= space + \"01F' 01R' 01F\" : moveString+= space + \"01F2 01U 01F2\";\n            \n            else if(cubeX===maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===2 ? moveString+= space + \"01D'\" : moveString+= space + \"01F' 01R 01F\";\n            \n            else if(cubeX===minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ===minCoord)\n              whiteSide===4 ? moveString+= space + \"01D\" : moveString+= space + \"01F 01L' 01F'\";\n            \n\n            //If piece four is in y section 2\n            if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===maxCoord)\n              whiteSide===3 ? moveString+= space + \"01F2 01U2 01F2\" : moveString+= space + \"01B 01L' 01D 01L\";\n            \n            else if(cubeX===maxCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01F' 01R2 01F\" : moveString+= space + \"01R 01D' 01R'\";\n            \n            else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY===maxCoord && cubeZ===minCoord)\n              whiteSide===3 ? moveString+= space + \"01D2\" : moveString+= space + \"01D' 01F' 01R 01F\";\n            \n            else if(cubeX===minCoord && cubeY===maxCoord && inMiddle(cubeZ,maxCoord,minCoord))\n              whiteSide===3 ? moveString+= space + \"01F 01L2 01F'\" : moveString+= space + \"01L' 01D 01L\";\n            \n          }\n        }\n      }\n    }\n    \n    const moveArray = moveStringToArray(moveString);\n\n    if(solvedEdges < 4){\n        return {moveSet : moveArray};\n    } else{\n        return {solveState : 2}\n    }\n}\n\nmodule.exports = solveWhiteCross;","  // Solves white (front) corners\n  function solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray,corners){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let solvedCorners = 0;\n\n    let dim = cubeDimension;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let pieceOne = corners[0]\n    let pieceTwo = corners[1]\n    let pieceThree = corners[2]\n    let pieceFour = corners[3]\n\n    for(let i = 0; i < cube.length; i++){\n      let whiteSide = -1;\n      let cubeX = cube[i][6];\n      let cubeY = cube[i][7];\n      let cubeZ = cube[i][8];\n\n      for(let j = 0; j < 6; j++){\n        if(cube[i][j] === \"white\") whiteSide = j;\n      }\n\n      if(i===pieceOne && solvedCorners === 0 ){\n        //Front\n        if(cubeX===minCoord && cubeY===minCoord && cubeZ===maxCoord){\n          if(whiteSide===0){solvedCorners++}\n          else if(whiteSide===1) moveString=\"01L' 01B 01L 01B' 01L' 01B 01L\";\n          else moveString=\"01L' 01B' 01L 01B2 01U 01B' 01U'\";\n        }\n        else if(cubeX===maxCoord && cubeY===minCoord && cubeZ===maxCoord) moveString=\"01R 01L' 01B 01L 01R'\"\n        else if(cubeX===maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01R' 01B' 01R 01U 01B' 01U'\";\n        else if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01D' 01U 01B 01U' 01D\"\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01U 01B 01U'\"\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01L' 01B 01L\"\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01L' 01B2 01L\"\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01U 01B' 01U'\"\n      }\n\n      if(i===pieceTwo && solvedCorners === 1 ){\n        if(cubeX===maxCoord && cubeY===minCoord && cubeZ===maxCoord){\n          if(whiteSide === 0){solvedCorners++}\n          else if(whiteSide===1) moveString =\"01R 01B' 01R' 01B 01R 01B' 01R'\";\n          else moveString =\"01U' 01B 01U 01B' 01U' 01B 01U\";\n        }\n        else if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01U' 01D 01B 01D' 01U\";\n        else if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01L 01R 01B2 01R' 01L'\";\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01R 01B' 01R'\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01B 01R 01B' 01R'\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01B2 01R 01B' 01R'\";\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01R 01B2 01R'\";\n      }\n      \n      if(i===pieceThree && solvedCorners === 2 ){\n        if(cubeX===minCoord && cubeY===minCoord && cubeZ===minCoord){\n          if(whiteSide === 0){solvedCorners++}\n          else if(whiteSide === 4) moveString =\"01D' 01B 01D 01B' 01D' 01B 01D\";\n          else moveString =\"01L 01B' 01L' 01B 01L 01B' 01L'\";\n        }\n        else if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord) moveString=\"01R' 01L 01B' 01L' 01R\";\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01D' 01B 01D\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) moveString=\"01D' 01B2 01D\";\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01B' 01D' 01B' 01D\";\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) moveString=\"01D' 01B' 01D\";\n      }\n      if(i===pieceFour && solvedCorners === 3 ){ \n        if(cubeX === maxCoord && cubeY===minCoord && cubeZ===minCoord){\n          if(whiteSide === 0){solvedCorners++}\n          else if(whiteSide === 2) moveString =\"01D 01B' 01D' 01B 01D 01B' 01D'\";\n          else moveString =\"01R' 01B 01R 01B' 01R' 01B 01R\";\n        }\n        //Back\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===maxCoord) {moveString=\" 01R' 01B2 01R\";}\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===maxCoord) {moveString=\"01D 01B' 01D'\";}\n        else if(cubeX===maxCoord && cubeY===maxCoord && cubeZ===minCoord) {moveString=\"01B 01D 01B' 01D'\";}\n        else if(cubeX===minCoord && cubeY===maxCoord && cubeZ===minCoord) {moveString=\"01R' 01B 01R\";}\n      }\n\n\n    }\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(solvedCorners < 4){\n        return {moveSet : moveArray};\n    }\n    else{\n      if(dim === 2){\n        return {solveState : 6};\n      }\n      else{\n        return {solveState : 3};\n      }\n    }\n  }\n\n  module.exports = solveWhiteCorners;","function inMiddle(coord,maxCoord,minCoord){\n  return coord>minCoord&&coord<maxCoord;\n}\n\nfunction sectionSpliter(edges){\n  let splitEdges = [];\n  let edgeSegments = edges.length/3;\n  const edgeSections = 4;\n  let segmentsPerSection = edgeSegments/edgeSections;\n\n  let temp = [];\n  for(let i = edgeSegments*2; i < edgeSegments*3;i++){\n    temp.push(edges[i]);\n    if(temp.length===segmentsPerSection){\n      splitEdges.push(temp);\n      temp=[];\n    }\n  }\n\n  return splitEdges;\n}\n\nfunction solveMiddleEdges(rubiksObject,moveStringToArray,edges,dim){\n  let moveString = \"\";\n  let cube = rubiksObject;\n  let space = \"\";\n  let solvedEdges = 0;\n  let moveFromMiddle012 = \"01B 01U 01B' 01U' 01B' 01L' 01B 01L\";\n  let moveFromMiddle212 = \"01B 01R 01B' 01R' 01B' 01U' 01B 01U\";\n  let moveFromMiddle210 = \"01B 01D 01B' 01D' 01B' 01R' 01B 01R\";\n  let moveFromMiddle010 = \"01B 01L 01B' 01L' 01B' 01D' 01B 01D\";\n\n  let minCoord = 0;\n  let maxCoord = dim-1;\n\n  let fourEdgeSections = sectionSpliter(edges);\n\n  let edgeOne = fourEdgeSections[0][0];\n  let edgeTwo = fourEdgeSections[1][0];\n  let edgeThree = fourEdgeSections[3][0];\n  let edgeFour = fourEdgeSections[2][0];\n\n\n  // console.log(\"\\n\\n\",fourEdgeSections);\n  for(let i = 0; i < cube.length; i++){\n    if(moveString.length) space = \" \";\n    //if(cube[i].includes(\"green\") || cube[i].includes(\"blue\")){\n      //let emptyCount = 0;\n      let blueSide = -1;\n      let greenSide = -1;\n      let cubeX = cube[i][6];\n      let cubeY = cube[i][7];\n      let cubeZ = cube[i][8];\n\n      for(let j = 0; j < 6; j++){\n        if (cube[i][j] === \"black\");\n        else {\n          if(cube[i][j] === \"blue\") blueSide = j;\n          else if(cube[i][j] === \"green\") greenSide = j;\n        }\n      }\n\n      // //if(emptyCount === 4){\n      //   console.log(\"Cube:\",cube[i]);\n      //   console.log(\"i:\",i);\n      //   console.log(\"Solved Edges:\",solvedEdges);\n        if(i===edgeOne && solvedEdges === 0){\n          //Front\n          if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord)\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle012;\n          \n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord) moveString+= space + moveFromMiddle212;\n          else if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle010;\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) {\n            blueSide === 3 ? moveString+= space + moveFromMiddle012 : moveString+= space + \"01B2 01L' 01B' 01L 01B 01U 01B 01U'\";\n          }\n          else if(inMiddle(cubeX,maxCoord,minCoord)&& cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B\";\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B2\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B'\";\n        }\n        if(i===edgeTwo && solvedEdges === 1){\n          //Front\n          if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === maxCoord){\n            blueSide === 1 ? solvedEdges++ : moveString+= space + moveFromMiddle212;\n          }\n          else if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle010;\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) {\n            blueSide === 1 ? moveString+= space + moveFromMiddle212 : moveString+= space + \"01B2 01U' 01B' 01U 01B 01R 01B 01R'\";\n          }\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B2\";\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B'\";\n        }\n        if(i===edgeThree && solvedEdges === 2){\n          //Front\n          if(cubeX === minCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord){\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle010;\n          }\n          else if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord) moveString+= space + moveFromMiddle210;\n          //Back\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord){\n            greenSide === 5 ? moveString+= space + moveFromMiddle010 : moveString+= space + \"01B2 01D' 01B' 01D 01B 01L 01B 01L'\";\n          }\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B2\";\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B'\";\n        }\n        if(i===edgeFour && solvedEdges === 3){\n          //Front\n          if(cubeX === maxCoord && inMiddle(cubeY,maxCoord,minCoord) && cubeZ === minCoord){\n            greenSide === 5 ? solvedEdges++ : moveString+= space + moveFromMiddle210;\n          }\n          //Back\n          else if(cubeX === maxCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)){\n            greenSide === 3 ? moveString+= space + moveFromMiddle210 : moveString+= space + \"01B2 01R' 01B' 01R 01B 01D 01B 01D'\";\n          }\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === minCoord) moveString+= space + \"01B\";\n          else if(cubeX === minCoord && cubeY === maxCoord && inMiddle(cubeZ,maxCoord,minCoord)) moveString+= space + \"01B2\";\n          else if(inMiddle(cubeX,maxCoord,minCoord) && cubeY === maxCoord && cubeZ === maxCoord) moveString+= space + \"01B'\"; \n        }\n      //}\n    //}\n  }\n\n  const moveArray = moveStringToArray(moveString);\n\n  if(solvedEdges < 4 ) return {moveSet : moveArray};\n  else return {solveState : 4};\n}\n\nmodule.exports = solveMiddleEdges;","function sectionSpliter(edges){\n  let splitEdges = [];\n  let edgeSegments = edges.length/3;\n  const edgeSections = 4;\n  let segmentsPerSection = edgeSegments/edgeSections;\n\n  let temp = [];\n  for(let i = edgeSegments; i < edgeSegments*2;i++){\n    temp.push(edges[i]);\n    if(temp.length===segmentsPerSection){\n      splitEdges.push(temp);\n      temp=[];\n    }\n  }\n\n  return splitEdges;\n}\n\nfunction inMiddle(coord,maxCoord,minCoord){\n  return coord>minCoord&&coord<maxCoord;\n}\n\nfunction move(depth,side){\n  return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction solveYellowCross(rubiksObject,moveStringToArray,edges,dim){\n\n    if(dim === 2) {return {solveState : 5};}\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let recipe = \"01U 01R 01B 01R' 01B' 01U'\";\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let fourEdgeSections = sectionSpliter(edges);\n    //console.log(edges);\n    let cubeIndex = [fourEdgeSections[0][0],fourEdgeSections[3][0],fourEdgeSections[1][0],fourEdgeSections[2][0]];\n    //console.log(cubeIndex);\n    let cubeAtIndex = [];\n\n    for(let i = 0; i < 4; i++){\n      if(inMiddle(cube[cubeIndex[i]][6],maxCoord,minCoord) && \n         cube[cubeIndex[i]][7] === maxCoord &&\n         cube[cubeIndex[i]][8] === maxCoord) cubeAtIndex[0] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === minCoord && \n        cube[cubeIndex[i]][7] === maxCoord &&\n        inMiddle(cube[cubeIndex[i]][8],maxCoord,minCoord)) cubeAtIndex[1] = cube[cubeIndex[i]][3];\n      else if (cube[cubeIndex[i]][6] === maxCoord && \n        cube[cubeIndex[i]][7] === maxCoord &&\n        inMiddle(cube[cubeIndex[i]][8],maxCoord,minCoord)) cubeAtIndex[2] = cube[cubeIndex[i]][3];\n      else if (inMiddle(cube[cubeIndex[i]][6],maxCoord,minCoord) && \n        cube[cubeIndex[i]][7] === maxCoord &&\n        cube[cubeIndex[i]][8] === minCoord) cubeAtIndex[3] = cube[cubeIndex[i]][3];\n    }\n\n    let skip = false;\n\n    if(dim%2===0&&dim>=4){\n      let counter = 0;\n      for(let i = 0; i < 4; i++){\n        if(cube[cubeIndex[i]][3] === \"yellow\") counter++;\n      }\n      if(counter%2){\n        //console.log(\"fix implemented\");\n        skip=true;\n        moveString=\n          `${move(dim/2,\"r\")} 01B2 ${move(dim/2,\"r'\")} 01B2 \n          ${move(dim/2,\"r\")} 01B2 ${move(dim/2,\"r\")} 01B2 \n          ${move(dim/2,\"l'\")} 01B2 ${move(dim/2,\"r\")} 01B2 \n          ${move(dim/2,\"r'\")} 01B2 01D2 \n          ${move(dim/2,\"r2\")} 01D2 ${move(dim,\"r'\")}`;\n      };\n    }\n\n    if(!skip){\n      if(cube[cubeIndex[0]][3] === \"yellow\" &&\n        cube[cubeIndex[1]][3] === \"yellow\" &&\n        cube[cubeIndex[2]][3] === \"yellow\" &&\n        cube[cubeIndex[3]][3] === \"yellow\" \n        ); \n\n      //Line\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = \"01B \" + recipe; }\n      else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = recipe;}\n\n      //L-Shape\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[2] === \"yellow\" ) {moveString = \"01B2 \" + recipe + \" \" + recipe;}\n      else if (cubeAtIndex[1] === \"yellow\" && cubeAtIndex[3] === \"yellow\" ) {moveString = recipe + \" \" + recipe;}\n      else if (cubeAtIndex[0] === \"yellow\" && cubeAtIndex[1] === \"yellow\" ) {moveString = \"01B \" + recipe + \" \" + recipe;}\n      else if (cubeAtIndex[2] === \"yellow\" && cubeAtIndex[3] ) {moveString = \"01B' \" + recipe + \" \" + recipe;}\n\n      else {moveString = recipe;}\n    }\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray}; \n    else return {solveState:5};\n  }\n\n  module.exports = solveYellowCross;","function sectionSpliter(edges){\n    let splitEdges = [];\n    let edgeSegments = edges.length/3;\n    const edgeSections = 4;\n    let segmentsPerSection = edgeSegments/edgeSections;\n  \n    let temp = [];\n    for(let i = edgeSegments; i < edgeSegments*2;i++){\n      temp.push(edges[i]);\n      if(temp.length===segmentsPerSection){\n        splitEdges.push(temp);\n        temp=[];\n      }\n    }\n  \n    return splitEdges;\n}\n\nfunction inMiddle(coord,maxCoord,minCoord){\n    return coord>minCoord&&coord<maxCoord;\n}\n\nfunction alignYellowCross(rubiksObject,moveStringToArray,edges,dim){\n\n    if(dim === 2) {return {solveState : 6};}\n\n    let moveString = \"\";\n    let cube = rubiksObject;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let fourEdgeSections = sectionSpliter(edges);\n    let cubeIndex = [fourEdgeSections[0][0],fourEdgeSections[3][0],fourEdgeSections[1][0],fourEdgeSections[2][0]];\n\n    if(inMiddle(cube[cubeIndex[0]][6],maxCoord,minCoord) && cube[cubeIndex[0]][7] === maxCoord && cube[cubeIndex[0]][8] === maxCoord){\n        //Check if other pieces are in place\n        if(cube[cubeIndex[1]][6] === minCoord && inMiddle(cube[cubeIndex[1]][8],maxCoord,minCoord)&&\n            cube[cubeIndex[2]][6] === maxCoord && inMiddle(cube[cubeIndex[2]][8],maxCoord,minCoord));\n\n        else if(cube[cubeIndex[1]][6] === maxCoord && inMiddle(cube[cubeIndex[2]][8],maxCoord,minCoord) &&\n        inMiddle(cube[cubeIndex[3]][6],maxCoord,minCoord) && cube[cubeIndex[3]][8] === minCoord) moveString = \"01D 01B 01D' 01B 01D 01B2 01D' 01B2 01L 01B 01L' 01B 01L 01B2 01L' 01B\";\n\n        else if(cube[cubeIndex[3]][6] === maxCoord && inMiddle(cube[cubeIndex[3]][8],maxCoord,minCoord)) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\n\n        else if(cube[cubeIndex[3]][6] === minCoord && inMiddle(cube[cubeIndex[3]][8],maxCoord,minCoord)) moveString = \"01R 01B 01R' 01B 01R 01B2 01R' 01B\";\n\n\n        //Make moves\n    }\n    else if(cube[cubeIndex[0]][6] === maxCoord && cube[cubeIndex[0]][7] === maxCoord && inMiddle(cube[cubeIndex[0]][8],maxCoord,minCoord)){\n        moveString = \"01B\";\n    }\n    else moveString = \"01B'\"\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray};\n    else return{solveState:6};\n}\n\nmodule.exports = alignYellowCross;","function move(depth,side){\n  return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves,corners){\n    let moveString = \"\";\n    let cube = rubiksObject;\n    let solveAlgo = \"01U' 01F' 01U 01F 01U' 01F' 01U 01F\";\n    let dim = cubeDimension;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let pieceOne = corners[4];\n    let pieceTwo = corners[5];\n    let pieceThree = corners[6];\n    let pieceFour = corners[7];\n\n    let moveArray;\n\n    if(cube[pieceOne][3] === \"yellow\" &&\n       cube[pieceTwo][3] === \"yellow\" &&\n       cube[pieceThree][3] === \"yellow\" &&\n       cube[pieceFour][3] === \"yellow\"){\n      if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord);\n      else moveString = \"01B\";\n    }\n\n    else if(cube[pieceOne][3]!== \"yellow\"){\n      //console.log(cube[pieceOne]);\n      moveString = solveAlgo;\n    }\n\n    else if(cube[pieceTwo][3]!== \"yellow\"){\n      if(cube[pieceTwo][6] === minCoord && cube[pieceTwo][8] === maxCoord) {\n        //console.log(cube[pieceTwo]);\n        moveString = solveAlgo;\n      }\n      else {\n        moveString = \"01B\";\n      }\n    }\n    else if(cube[pieceFour][3]!== \"yellow\"){\n      if(cube[pieceFour][6] === minCoord && cube[pieceFour][8] === maxCoord) {\n        //console.log(cube[pieceFour]);\n        moveString = solveAlgo;\n      }\n      else{\n        moveString = \"01B\";\n      }\n    }\n    else if(cube[pieceThree][3]!== \"yellow\"){\n      if(cube[pieceThree][6] === minCoord && cube[pieceThree][8] === maxCoord) {\n        //console.log(cube[pieceThree]);\n        moveString = solveAlgo;\n      }\n      else {\n        moveString = \"01B\";\n      }\n    }\n\n    moveArray = moveStringToArray(moveString);\n\n    if(moveString.length){\n      return {moveSet:moveArray};\n    }\n    else{\n      //check for anomoly\n      if(dim === 2) {\n\n        if(cube[pieceOne][6]===minCoord && cube[pieceOne][8]===maxCoord) {\n          if(cube[pieceTwo][6]===maxCoord && cube[pieceTwo][8]===maxCoord){\n            if(cube[pieceThree][6]===minCoord && cube[pieceThree][8]===minCoord){\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n              if(solveMoves.length){\n                obj.solveMoves = \"\";\n                return obj;\n              }\n              return obj;\n            }\n            else {\n              moveString = \"01R 01D' 01R' 01F' 01R' 01F 01D\";\n              moveArray = moveStringToArray(moveString);\n              return {moveSet:moveArray};\n            }\n          }\n        }\n        else {\n          moveString = \"01B\";\n          moveArray = moveStringToArray(moveString);\n          return {moveSet:moveArray};\n        }\n      }\n      else if(dim>3){\n        if(cube[pieceOne][6]===minCoord && cube[pieceOne][8]===maxCoord) {\n          if(cube[pieceTwo][6]===maxCoord && cube[pieceTwo][8]===maxCoord){\n            if(cube[pieceThree][6]===minCoord && cube[pieceThree][8]===minCoord){\n              let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n              if(solveMoves.length){\n                obj.solveMoves = \"\";\n                return obj;\n              }\n              return obj;\n            }\n            else {\n              //console.log(\"last parity brother\");\n              moveString = \"02R2 01B2 02R2 01B2 02B2 02R2 02B2\";\n              moveString = `${move(dim/2,\"r2\")} 01R2 01B2 ${move(dim/2,\"r2\")} 01R2 01B2 ${move(dim/2,\"b2\")} 01B2 ${move(dim/2,\"r2\")} 01R2 ${move(dim/2,\"b2\")} 01B2`;\n              moveArray = moveStringToArray(moveString);\n              return {moveSet:moveArray,solveState:4};\n            }\n          }\n        }\n      }\n      else {\n        let obj = {moveLog : \"\",currentFunc: \"None\",moveSet:[],solveState:-1};\n        if(solveMoves.length){\n          obj.solveMoves = \"\";\n          return obj;\n        }\n        \n        return obj;\n      }\n    }\n  }\n  module.exports = solveYellowCorners;\n","function move(depth,side){\n   return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray,corners){\n    let moveString = \"\";\n    let cube = rubiksObject;\n\n    let dim = cubeDimension;\n\n    let maxCoord = dim-1;\n    let minCoord = 0;\n\n    let pieceOne = corners[4];\n    let pieceTwo = corners[5];\n    let pieceThree = corners[6];\n    let pieceFour = corners[7];\n\n    let solveCount = 0;\n\n    \n    if(cube[pieceOne][6]===cube[pieceOne][9] && cube[pieceOne][7]===cube[pieceOne][10] && cube[pieceOne][8]===cube[pieceOne][11]) solveCount++;\n    if(cube[pieceTwo][6]===cube[pieceTwo][9] && cube[pieceTwo][7]===cube[pieceTwo][10] && cube[pieceTwo][8]===cube[pieceTwo][11]) solveCount++;\n    if(cube[pieceThree][6]===cube[pieceThree][9] && cube[pieceThree][7]===cube[pieceThree][10] && cube[pieceThree][8]===cube[pieceThree][11]) solveCount++;\n    if(cube[pieceFour][6]===cube[pieceFour][9] && cube[pieceFour][7]===cube[pieceFour][10] && cube[pieceFour][8]===cube[pieceFour][11]) solveCount++;\n    \n\n    if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord &&\n       cube[pieceTwo][6] === maxCoord && cube[pieceTwo][8] === maxCoord);\n\n   else if(solveCount === 2 && dim > 3) {\n      //console.log(\"another parity encountered brother\");\n      moveString = `02D2 01B2 02D2 02b2 02D2 02b2`;\n      moveString = `${move(dim/2,\"d2\")} 01D2 01B2 ${move(dim/2,\"d2\")} 01D2 ${move(dim/2,\"b2\")} ${move(dim/2,\"d2\")} 01D2 ${move(dim/2,\"b2\")}`;\n\n      //04d2 01D2 01B2 04d2 01D2 04b2 04d2 01D2 04b2\n      const moveArray = moveStringToArray(moveString);\n      if(moveString.length) return {moveSet : moveArray,solveState:5};\n   }\n\n    else if(cube[pieceOne][6] === minCoord && cube[pieceOne][8] === maxCoord) moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\n    else if(cube[pieceTwo][6] === maxCoord && cube[pieceTwo][8] === maxCoord) moveString = \"01B 01R 01B' 01L' 01B 01R' 01B' 01L\";\n    else if(cube[pieceThree][6] === minCoord && cube[pieceThree][8] === minCoord) moveString = \"01B 01L 01B' 01R' 01B 01L' 01B' 01R\";\n    else if(cube[pieceFour][6] === maxCoord && cube[pieceFour][8] === minCoord) moveString = \"01B 01D 01B' 01U' 01B 01D' 01B' 01U\";\n\n    else moveString = \"01B 01U 01B' 01D' 01B 01U' 01B' 01D\";\n\n    const moveArray = moveStringToArray(moveString);\n\n    if(moveString.length) return {moveSet : moveArray};\n    else return {solveState:7};\n  }\n\n  module.exports = alignYellowCorners;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      white.js\n *      Started: Friday, December 13, 2019\n *      Finished: Saturday, December 14, 2019\n *      Note: Redo this function so it works similarly to other solvers (no row or columns)\n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveWhiteMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let row = Math.floor(index/(dim-2));\n    let column = index%(dim-2);\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    // console.log(`Currently on side: ${currentSide}`);\n    // console.log(`Current position: ${JSON.stringify(current)}`);\n    // console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n    if(solved.x===1){\n        if(dim-solved.z === 2){\n            if(currentSide===\"F\"){\n                moveString=\"01F\";\n            }\n            else if(currentSide!==\"D\"&&currentSide!==\"U\"){\n                if(current.z!==dim-2){\n                    moveString= \"01\" + currentSide;\n                }\n                else{\n                    moveString= move(\"\",dim-current.z,\"U\");\n                }\n            }\n            else {\n                if(current.x!==solved.x){\n                    moveString = \"01\" + currentSide;\n                }\n                else{\n                    moveString = \"02L\";\n                }\n            }\n        }\n        else{\n            if(currentSide===\"F\"){\n                moveString = move(\"\",current.z+1,\"D'\");\n            }\n            else if(currentSide===\"B\"){\n                if(current.z<=solved.z){\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n                else moveString = \"01B\";\n            }\n            else if(currentSide===\"L\"){\n                if(current.y!==dim-2){\n                    moveString= \"01L\";\n                }\n                else if(current.z!==solved.z){\n                    moveString= \"01L\";\n                }\n                else {\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n            }\n            else moveString = move(\"\",current.y+1,\"F'\");\n        }\n    }\n    else{\n        if(row===0){\n            if(currentSide===\"F\"){\n                if(current.z < solved.z && current.x >=solved.x){\n                    moveString = move(\"\",dim-current.x,\"R\");\n                }\n                else{\n                    moveString = move(\"\",current.z+1,\"D\");\n                }\n            }\n            else if(currentSide===\"B\"){\n                if(current.x === solved.x && current.z!== solved.z){\n                    moveString = move(\"\",column+2,\"L2\");\n                }\n                else {\n                    moveString = \"01B\"\n                };\n            }\n            else{\n                if(current.y===dim-2){\n                    if(current.z !== dim-1){\n                        moveString = move(\"\",row+2,\"B\")\n                    }\n                    else{\n                        if(current.x !== solved.x){\n                            moveString = \"01U\";\n                        }\n                        else {\n                            moveString = move(\"\",column+2,\"L\");\n                        };\n                    }\n                }\n                else{\n                    moveString = \"01\" + currentSide;\n                }\n            }\n        }\n        else{\n            if(currentSide===\"F\"){\n                if(current.z<solved.z){\n                    moveString = move(\"\",dim-current.z,\"U\");\n                }\n                else {\n                    moveString = move(\"\",dim-current.z,\"U\");\n                    moveString += move(\" \",dim-current.x,\"F'\");\n                    moveString += move(\" \",dim-current.z,\"U'\");\n                }\n                \n            }\n            else if(currentSide===\"B\"){\n                if(current.z===solved.z){\n                    if(solved.x===current.x){\n                        moveString = move(\"\",dim-current.z,\"U\");\n                        moveString += move(\" \",current.x+1,\"B\");\n                        moveString += move(\" \",dim-current.z,\"U'\");\n                    }\n                    else {\n                        moveString = move(\"\",dim-current.z,\"U\");\n                        moveString += \" 01R\";\n                        moveString += move(\" \",dim-current.z,\"U'\");\n                    }\n                }\n                else moveString = \"01B\";\n            }\n            else{\n                if(currentSide!==\"U\"){\n                    //console.log(\"Moving to top\")\n                    moveString += move(\" \",current.y+1,\"F\");\n                }\n                else{\n                    if(current.x!==solved.x || current.y!==solved.z){\n                        moveString = \"01U\";\n                    }\n                    else{\n                        moveString = \"01U'\";\n                        moveString += move(\" \",dim-solved.z,\"U'\");\n                        moveString += move(\" \",current.x+1,\"F\");\n                        moveString += move(\" \",dim-solved.z,\"U\");\n                    }\n                }\n            }\n        }\n    }\n    return moveString;\n}\n\nmodule.exports = solveWhiteMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      yellow.js\n *      Started: Saturday, December 14, 2019\n *      Finished: Saturday, December 21, 2019\n *  \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveYellowMiddle = (current,solved,dim,index) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    // console.log(`Currently on side: ${currentSide}`);\n    // console.log(`Current position: ${JSON.stringify(current)}`);\n    // console.log(`Solved position: ${JSON.stringify(solved)}`);\n    \n    \n    //let opposite = \"01L'\";\n\n    // This can be written smarter. Has a small flaw with extracting pieces from the back\n    if(currentSide===\"B\"){\n        // moveString += move(\" \",current.z+1,\"D'\");\n\n        // if(current.z!==solved.z){\n        //     if(current.z === middle){\n        //         moveString += \" 01R\";\n        //     }\n        //     else moveString += \" 01R2\";\n        // }\n\n        // else {\n        //     if(current.x===current.z){\n        //         moveString += \" 01L'\";\n        //         opposite = \"01L\";\n        //     }\n        //     else if(((current.x>= middle &&current.z>=middle))  ||\n        //         (current.x< middle &&current.z<middle) ||\n        //         (current.x> middle &&current.z<middle))\n        //         moveString += \" 01L\";\n        //     else{\n        //         moveString += \" 01L'\";\n        //         opposite = \"01L\";\n        //     }\n\n        //     moveString += move(\" \",dim-current.x,\"F\");\n        //     moveString += \" \" + opposite;\n            \n        // }\n        // moveString += move(\" \",current.z+1,\"D\");\n        moveString += move(\" \",current.z+1,\"D'\");\n\n        moveString += (dim%2&&current.z===middle)? \" 01R\" : \" 01R2\";\n\n        moveString += move(\" \",current.z+1,\"D\");\n\n        moveString += (dim%2&&current.z===middle)? \" 01R\" : \"\";\n\n        moveString += move(\" \",current.x+1,\"F\")\n\n        moveString += (dim%2&&current.z===middle)? \" 01R'\" : \"\";\n\n        moveString += move(\" \",current.z+1,\"D'\");\n\n        moveString += (dim%2&&current.z===middle)? \" 01R'\" : \" 01R2\";\n\n        moveString += move(\" \",current.z+1,\"D\");\n    }\n    else{\n        if(currentSide!==\"R\"){\n            moveString= move(\"\",current.y+1,\"F\");\n        }\n        else {\n            if(current.y!==dim-(solved.x+1)||current.z!==solved.z){\n                moveString = \"01R\";\n            }\n            else {\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += move(\" \",current.z+1,\"D'\");\n                if((current.y>= middle&&current.z>=middle) ||\n                   (current.y< middle&&current.z<middle))\n                    moveString += \" 01L\"\n                else\n                    moveString += \" 01L'\"\n\n                moveString += move(\" \",current.y+1,\"F\");\n                \n                if((current.y>= middle&&current.z>=middle) ||\n                   (current.y< middle&&current.z<middle))\n                    moveString += \" 01L'\"\n                else\n                    moveString += \" 01L\"\n\n                moveString += move(\" \",current.z+1,\"D\");\n            }\n        }\n    }\n\n    return moveString\n}\n\nmodule.exports = solveYellowMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      blue.js\n * \n */\n\nfunction move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveBlueMiddle = (current,solved,dim) => {\n\n    let currentSide = \"F\";\n    let middle = Math.floor(dim/2);\n    let isOddCube = dim%2;\n    let moveString = \"\";\n\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    \n    if(isOddCube && solved.x===middle && solved.y===middle){\n        switch(currentSide){\n            case \"L\":\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += \" 01L\"; \n                moveString += move(\" \",current.y+1,\"F\");\n                moveString += \" 01L'\"; \n                moveString += move(\" \",current.y+1,\"F\");\n                break;\n            case \"D\":\n                moveString = move(\"\",current.y+1,\"F'\");\n                moveString += \" 01L\"; \n                moveString += move(\" \",current.y+1,\"F2\");\n                moveString += \" 01L'\"; \n                moveString += move(\" \",current.y+1,\"F\");\n                break;\n            case \"R\":\n                moveString = move(\"\",current.y+1,\"F\");\n                moveString += \" 01R\"; \n                moveString += move(\" \",current.y+1,\"F'\");\n                moveString += \" 01R'\"; \n                moveString += move(\" \",current.y+1,\"F'\");\n                break;\n            default:\n                console.log(\"Shouldn't be checking middle if already in solved location.\");\n        }\n    }\n\n    else if(currentSide===\"U\"){\n        moveString = move(\"\",current.y+1,\"F\");//1\n        moveString += move(\" \",current.x+1,\"U2\");//2\n        if( isOddCube && current.y===middle) moveString+= \" 01L'\";//2.1\n        moveString += move(\" \",current.y+1,\"F'\");//3\n        if( isOddCube && current.y===middle) moveString+= \" 01L\";//3.1\n        moveString += move(\" \",current.x+1,\"U2\");//4\n    }\n\n    else if(currentSide===\"R\"){\n        if((dim-current.z)===(solved.x+1) && current.y===solved.y){\n            moveString = move(\"\",solved.x+1,\"U2\");//6\n            if(isOddCube && solved.y===middle) moveString += \" 01L'\";//6.1\n            moveString += move(\" \",solved.y+1,\"F\");//7\n            if(isOddCube && solved.y===middle) moveString += \" 01L\";//7.1\n            moveString += move(\" \",solved.x+1,\"U2\");//8\n            moveString += move(\" \",solved.y+1,\"F'\");//9\n            \n        } else {\n            moveString = \"01R'\"//5\n        }\n    }\n\n    else if(currentSide===\"L\"){\n        if(current.z===solved.x && current.y===solved.y){\n            moveString = move(\"\",current.z+1,\"D2\");//6\n            if(isOddCube && solved.y===middle) moveString += \" 01R\";//6.1\n            moveString += move(\" \",solved.y+1,\"F'\");//7\n            if(isOddCube && solved.y===middle) moveString += \" 01R'\";//7.1\n            moveString += move(\" \",current.z+1,\"D2\");//8\n            moveString += move(\" \",solved.y+1,\"F\");//9\n            \n        } else {\n            moveString = \"01L\"//5\n        }\n    }\n\n    else {\n        if(current.y!==solved.y){\n            moveString = \"01D\";\n        }\n        else{\n            moveString = move(\"\",solved.y+1,\"F'\");\n            moveString += \" 01R\";\n            moveString += move(\" \",solved.y+1,\"F\");\n        }\n    }\n\n    return moveString;\n}\n\nmodule.exports = solveBlueMiddle;","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      green.js\n *      Started: Saturday February 8, 2020\n *      Finished:Saturday February 8, 2020\n *      \n */\n\nfunction move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction checkSide(current,dim){\n    let currentSide = \"F\";\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.y === dim-1) currentSide = \"B\";\n    else if(current.z === 0) currentSide = \"D\";\n    else if(current.z === dim-1) currentSide = \"U\";\n    return currentSide;\n}\n\nlet solveGreenMiddle = (current,solved,dim,index) => {\n\n    const currentSide = checkSide(current,dim);\n    const middle = Math.floor(dim/2);\n    const max = middle+1;\n    const min = middle-1;\n    const moves = [];\n\n    // Temp 4x4 solver\n    if(dim%2===0){\n        if(currentSide === \"D\"){\n            if(solved.x === middle-1 && solved.y === middle-1 && solved.z === 0){\n                moves.push(\"01D\");\n            }\n\n            else if(solved.x === middle && solved.y === middle-1 && solved.z === 0){\n                moves.push(move(current.y+1,\"F'\"));\n                moves.push(\"01R2\");\n                moves.push(move(current.y+1,\"F\"));\n            }\n            else if(solved.x === middle-1 && solved.y === middle && solved.z === 0){\n                moves.push(move(middle+1,\"F'\"));\n                moves.push(\"01R'\");\n                moves.push(move(middle+1,\"F\"));\n            }\n            else {\n                if( solved.x===solved.y||\n                    solved.x===(dim-1)-solved.y||\n                    (dim-1)-solved.x===(dim-1)-solved.y||\n                    (dim-1)-solved.x===solved.y){\n                        if(solved.y<middle&&solved.x<middle){\n                            moves.push(\"01D\");\n                        }\n                        else if(solved.x>middle&&solved.y<middle){\n                            moves.push(\n                                move(current.y+1,\"F'\"),\n                                \"01R2\",\n                                move(current.y+1,\"F\"),\n                            )\n                        }\n                        else if(solved.x<middle&&solved.y>middle){\n                            moves.push(\n                                move(current.y+1,\"F'\"),\n                                \"01R\",\n                                move(current.y+1,\"F\"),\n                            )\n                        }\n                }\n                else {\n                    moves.push(\n                        \"01R'\",\n                        \"01D'\",\n                        move(dim-current.x,\"F\"),\n                        \"01D\",\n                        move(dim-current.y,\"B'\"),\n                        \"01D'\",\n                        move(dim-current.x,\"F'\"),\n                        \"01D\",\n                        move(dim-current.y,\"B\"),\n                        \"01R\"\n                    )\n                }\n            }\n        }\n\n        if(currentSide === \"R\"){\n            if(solved.x === middle-1 && solved.y === middle-1 && solved.z === 0){\n                moves.push(move(current.y+1,\"F\"));\n                moves.push(\"01D2\");\n                moves.push(move(current.y+1,\"F'\"));\n            }\n            else if(solved.x === middle && solved.y === middle-1 && solved.z === 0){\n                if(current.y===middle && current.z===middle){\n                    moves.push(\"01D\");\n                    moves.push(move(middle+1,\"F\"));\n                    moves.push(\"01D'\");\n                    moves.push(move(middle+1, \"F'\"));\n                    \n                }\n                else{\n                    moves.push(\"01R\")\n                }\n            }\n            \n            else if(solved.x === middle-1 && solved.y === middle && solved.z === 0){\n                if(current.y===middle && current.z===middle-1){\n                    moves.push(\"01R\");\n                    moves.push(move(middle+1,\"F'\"));\n                    moves.push(\"01R'\");\n                    moves.push(move(middle+1,\"F\"));\n                }\n                else{\n                    moves.push(\"01R\");\n                }\n            }\n            else if(solved.x === middle && solved.y === middle && solved.z === 0){\n                if(current.y===middle-1 && current.z===middle){\n                    moves.push(move(middle+1, \"F'\"));\n                    moves.push(\"01R'\");\n                    moves.push(move(middle+1, \"F\"));\n                    moves.push(\"01R\");\n                    moves.push(move(middle+1, \"F'\"));\n                    moves.push(\"01R\");\n                    moves.push(move(middle+1, \"F\"));\n                }\n                else{\n                    moves.push(\"01R\");\n                }\n            }\n\n            else {\n                if( solved.x===solved.y||\n                    solved.x===(dim-1)-solved.y||\n                    (dim-1)-solved.x===(dim-1)-solved.y||\n                    (dim-1)-solved.x===solved.y){\n                        if(current.y<middle && current.z < middle){\n                            if(solved.x<middle&&solved.y<middle){\n                                moves.push(\n                                    move(current.y+1,\"F\"),\n                                    \"01D'\",\n                                    move(current.y+1,\"F'\"),\n                                    \"01D\"\n                                )\n                            }\n                            else if(solved.x>middle&&solved.y<middle){\n                                moves.push(\n                                    \"01D'\",\n                                    move(current.y+1,\"F\"),\n                                    \"01D'\",\n                                    move(current.y+1,\"F'\"),\n                                    \"01D2\",\n                                )\n                            }\n                            else if(solved.x<middle&&solved.y>middle){\n                                moves.push(\n                                    move(dim-current.y,\"F'\"),\n                                    \"01R'\",\n                                    move(dim-current.y,\"F\")\n                                )\n                            }\n                            else if(solved.x>middle&&solved.y>middle){\n                                moves.push(\n                                    \"01R'\",\n                                    move(dim-current.y,\"F\"),\n                                    \"01D'\",\n                                    move(dim-current.y,\"F'\"),\n                                    \"01R2\",\n                                    \"01D\",\n                                    move(dim-current.y,\"F'\"),\n                                    \"01R2\",\n                                    move(dim-current.y,\"F\")\n                                )\n                            }\n                        }\n                        else {\n                            moves.push(\"01R\");\n                        }\n                }\n                else{\n                    if(current.y===solved.y&&current.z===solved.x){\n                        moves.push(\n                            \"01R'\",\n                            \"01D'\",\n                            move(dim-current.z,\"F\"),\n                            \"01D\",\n                            move(dim-current.y,\"B'\"),\n                            \"01D'\",\n                            move(dim-current.z,\"F'\"),\n                            \"01D\",\n                            move(dim-current.y,\"B\"),\n                            \"01R\"\n                        )\n                    }\n                    else{\n                        moves.push(\"01R\");\n                    }\n                }\n            }\n        }\n    }\n\n    else if(dim%2){\n\n        switch(currentSide){\n            case \"D\":\n                if(solved.x>=min&&solved.x<=max&&solved.y>=min&&solved.y<=max){\n                    if(solved.y===min){\n                        if(solved.x===min) moves.push(\"01D\");\n                        else if(solved.x===middle){\n                            if(current.x<middle){\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01D\");\n                            }\n                            else if(current.x>middle){\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D\");\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01D'\");\n                            }\n                            else{\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01R'\");\n                                moves.push(move(current.y+1,\"F\"));\n                            }\n                        }\n                        else{\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01D'\");\n                        }\n                    }\n                    else if(solved.y===middle){\n                        if(solved.x===min){\n                            if(current.y===middle){\n                                moves.push(move(min+1,\"F\"));\n                                moves.push(\"01D2\");\n                                moves.push(move(min+1,\"F'\"));\n                            }\n                            else{\n                                moves.push(move(min+1,\"F\"));\n                                moves.push(\"01D\");\n                                moves.push(move(min+1,\"F'\")); \n                            }\n                        }\n                        else{\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01R\");\n                            moves.push(move(current.y+1,\"F\"));\n                        }\n                    }\n                    else{\n                        if(solved.x===min){\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01R\");\n                            moves.push(move(current.y+1,\"F\"));\n                        }\n                    }\n                }\n                else{\n                    if( solved.x===solved.y||\n                        solved.x===(dim-1)-solved.y||\n                        (dim-1)-solved.x===(dim-1)-solved.y||\n                        (dim-1)-solved.x===solved.y){\n                            if(solved.y<middle&&solved.x<middle){\n                                moves.push(\"01D\");\n                            }\n                            else if(solved.x>middle&&solved.y<middle){\n                                moves.push(\n                                    move(current.y+1,\"F'\"),\n                                    \"01R2\",\n                                    move(current.y+1,\"F\"),\n                                )\n                            }\n                            else if(solved.x<middle&&solved.y>middle){\n                                moves.push(\n                                    move(current.y+1,\"F'\"),\n                                    \"01R\",\n                                    move(current.y+1,\"F\"),\n                                )\n                            }\n                    }\n                    else {\n                        moves.push(\n                            \"01R'\",\n                            \"01D'\",\n                            move(dim-current.x,\"F\"),\n                            \"01D\",\n                            move(dim-current.y,\"B'\"),\n                            \"01D'\",\n                            move(dim-current.x,\"F'\"),\n                            \"01D\",\n                            move(dim-current.y,\"B\"),\n                            \"01R\"\n                        )\n                    }\n                }\n                break;\n            case \"R\":\n                if(solved.x>=middle-1&&solved.x<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\n                    if(solved.y===min){\n                        if(solved.x===min){\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D2\");\n                            moves.push(move(current.y+1,\"F'\"));\n                        }\n                        else if(solved.x===middle){\n                            if(current.z===max){\n                                moves.push(\"01D\");\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(current.y+1,\"F'\"));\n                            }\n                            else moves.push(\"01R\");\n                        }\n                        else{\n                            if(current.y===max&&current.z===max){\n                                moves.push(\"01D\");\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(current.y+1,\"F'\"));\n                            }\n                            else moves.push(\"01R\");\n                        }\n                    }\n                    else if(solved.y===middle){\n                        if(solved.x===min){\n                            if(current.y===max){\n                                moves.push(move(middle+1,\"F'\"));\n                                moves.push(\"01R\");\n                                moves.push(move(middle+1,\"F\"));\n                            }\n                            else moves.push(\"01R'\");\n                        }\n                        else{\n                            if(current.z===min){\n                                moves.push(move(min+1,\"F\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(min+1,\"F'\"));\n                                moves.push(\"01R\");\n                                moves.push(move(min+1,\"F\"));\n                                moves.push(\"01D\");\n                                moves.push(move(min+1,\"F'\"));\n                            }\n                            else moves.push(\"01R'\");\n                        }\n                    }\n                    else{\n                        if(solved.x===min){\n                            if(current.z===min&&current.y===min){\n                                moves.push(move(max+1,\"F'\"));\n                                moves.push(\"01R'\");\n                                moves.push(move(max+1,\"F\"));\n                            }\n                            else{\n                                moves.push(\"01R\");\n                            }\n                        }\n                        else if(solved.x===middle){\n                            if(current.y===max){\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01R'\");\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01R'\");\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01R\");\n                                moves.push(move(current.y+1,\"F\"));\n                            }\n                            else{\n                                moves.push(\"01R\");\n                            }\n                        }\n                        else{\n                            if(current.y===max&&current.z===min){\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D2\");\n                                moves.push(move(current.y+1,\"F'\"));\n                            }\n                            else{\n                                moves.push(\"01R\");\n                            }\n                        }\n                    }\n                }\n                else{\n                    if( solved.x===solved.y||\n                        solved.x===(dim-1)-solved.y||\n                        (dim-1)-solved.x===(dim-1)-solved.y||\n                        (dim-1)-solved.x===solved.y){\n                            if(current.y<middle && current.z < middle){\n                                if(solved.x<middle&&solved.y<middle){\n                                    moves.push(\n                                        move(current.y+1,\"F\"),\n                                        \"01D'\",\n                                        move(current.y+1,\"F'\"),\n                                        \"01D\"\n                                    )\n                                }\n                                else if(solved.x>middle&&solved.y<middle){\n                                    moves.push(\n                                        \"01D'\",\n                                        move(current.y+1,\"F\"),\n                                        \"01D'\",\n                                        move(current.y+1,\"F'\"),\n                                        \"01D2\",\n                                    )\n                                }\n                                else if(solved.x<middle&&solved.y>middle){\n                                    moves.push(\n                                        move(dim-current.y,\"F'\"),\n                                        \"01R'\",\n                                        move(dim-current.y,\"F\")\n                                    )\n                                }\n                                else if(solved.x>middle&&solved.y>middle){\n                                    moves.push(\n                                        \"01R'\",\n                                        move(dim-current.y,\"F\"),\n                                        \"01D'\",\n                                        move(dim-current.y,\"F'\"),\n                                        \"01R2\",\n                                        \"01D\",\n                                        move(dim-current.y,\"F'\"),\n                                        \"01R2\",\n                                        move(dim-current.y,\"F\")\n                                    )\n                                }\n                            }\n                            else {\n                                moves.push(\"01R\");\n                            }\n                    }\n                    else {\n                        if(current.y===solved.y&&current.z===solved.x){\n                            moves.push(\n                                \"01R'\",\n                                \"01D'\",\n                                move(dim-current.z,\"F\"),\n                                \"01D\",\n                                move(dim-current.y,\"B'\"),\n                                \"01D'\",\n                                move(dim-current.z,\"F'\"),\n                                \"01D\",\n                                move(dim-current.y,\"B\"),\n                                \"01R\"\n                            )\n                        }\n                        else{\n                            moves.push(\"01R\");\n                        }\n                    }\n                }\n                break;\n            default:\n                console.log(\"Woops something broke. Only red and green should be unsolved.\");\n        }\n    }\n\n    return moves.join(\" \");\n}\n\nmodule.exports = solveGreenMiddle;\n\n","/*\n *\n *\n *      ******* Add documentation before you forget how all this works!!! ********\n * \n * \n *      Sasha Peters\n *      orange.js\n *      Started: \n * \n *    \n */\n\nfunction move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveOrangeMiddle = (current,solved,dim) => {\n    let middle = Math.floor(dim/2);\n    let oddCube = dim%2;\n    let moves = [];\n    let currentSide = \"F\";\n    if(current.x === 0) currentSide = \"L\";\n    else if(current.x === dim-1) currentSide = \"R\";\n    else if(current.z === 0) currentSide = \"D\";\n    \n    // 4x4 Solver for Orange\n    if(dim%2===0){\n        //console.log(\"4x4 orange middle solver here\");\n        switch(currentSide){\n            case 'L':\n                if(solved.x === 0 && solved.y ===  middle-1&& solved.z === middle){\n                    moves.push(\"01L\");\n                }\n                else if(solved.x === 0 && solved.y === middle-1 && solved.z === middle-1){\n                    moves.push(move(current.y+1,\"F'\"));\n                    moves.push(\" 01D2\");\n                    moves.push(move(current.y+1,\"F\"));\n                }\n                else if(solved.x === 0 && solved.y === middle && solved.z === middle){\n                    moves.push(move(current.y+1,\"F'\"));\n                    moves.push(\" 01D2\");\n                    moves.push(move(current.y+1,\"F\"));\n                }\n                else {\n                    if( solved.z===solved.y||solved.z===(dim-1)-solved.y||(dim-1)-solved.z===(dim-1)-solved.y||(dim-1)-solved.z===solved.y){\n                        if(current.z<middle-1&&current.y<middle-1){\n                        //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\n                            moves.push(\n                                \"01L'\",\n                                \"01D'\",\n                                move(current.y+1,\"B'\"),\n                                \"01D\",\n                                move(current.y+1,\"F'\"),\n                                \"01D'\",\n                                move(current.y+1,\"B\"),\n                                \"01D\",\n                                move(current.y+1,\"F\"),\n                                \"01L\"\n                            );\n                        }\n                        else if(current.z>middle&&current.y<middle-1){\n                            moves.push(\n                                \"01D'\",\n                                move(current.y+1,\"B'\"),\n                                \"01D\",\n                                move(current.y+1,\"F'\"),\n                                \"01D'\",\n                                move(current.y+1,\"B\"),\n                                \"01D\",\n                                move(current.y+1,\"F\")\n                            );\n                        }\n                        else if(current.z>middle&&current.y>middle){\n                            moves.push(\n                                \"01L\",\n                                \"01D'\",\n                                move(dim-(current.y),\"B'\"),\n                                \"01D\",\n                                move(dim-(current.y),\"F'\"),\n                                \"01D'\",\n                                move(dim-(current.y),\"B\"),\n                                \"01D\",\n                                move(dim-(current.y),\"F\"),\n                                \"01L'\"\n                            );\n                        }\n                        else if(current.z<middle-1&&current.y>middle){\n                            moves.push(\n                                \"01L2\",\n                                \"01D'\",\n                                move(dim-(current.y),\"B'\"),\n                                \"01D\",\n                                move(dim-(current.y),\"F'\"),\n                                \"01D'\",\n                                move(dim-(current.y),\"B\"),\n                                \"01D\",\n                                move(dim-(current.y),\"F\"),\n                                \"01L2\"\n                            );\n                        }\n                        \n                    }\n                    else {\n                        moves.push(\n                            \"01D'\",\n                            move((dim-1)-current.z+1,\"B'\"),\n                            \"01D\",\n                            move(current.y+1,\"F'\"),\n                            \"01D'\",\n                            move((dim-1)-current.z+1,\"B\"),\n                            \"01D\",\n                            move(current.y+1,\"F\")\n                        );\n                    }\n                }\n                break;\n            case 'D':\n                if(solved.x === 0 && solved.y === middle-1 && solved.z === middle){\n                    moves.push(move(current.y+1,\"F\"));\n                    moves.push(\" 01L2\");\n                    moves.push(move(current.y+1,\"F'\"));\n                }\n                else if(solved.x === 0 && solved.y === middle-1 && solved.z === middle-1){\n                    if(current.x===middle && current.y===middle){\n                        moves.push(\n                            \"01L\",\n                            move(middle,\"F'\")/*\"02F'\"*/,\n                            \"01D'\",\n                            move(middle,\"F\")/*\"02F\"*/\n                        );\n                    }\n                    else{\n                        moves.push(\"01D\");\n                    }\n                }\n                else if(solved.x === 0 && solved.y === middle && solved.z === middle){\n                    if(current.y===middle-1 && current.x===middle-1){\n                        moves.push(\n                            move(middle+1,\"F'\")/*\"03F'\"*/,\n                            \"01D'\",\n                            move(middle+1,\"F\")/*\"03F\"*/\n                        );\n                    }\n                    else {\n                        moves.push(\"01D\");\n                    }\n                }\n                else if(solved.x === 0 && solved.y === middle && solved.z === middle-1){\n                    if(current.y===middle-1 && current.x===middle){\n                        moves.push(\n                            move(middle+1,\"F'\")/*\"03F'\"*/,\n                            \"01D'\",\n                            move(middle+1,\"F\")/*\"03F\"*/,\n                            \"01D\",\n                            move(middle+1,\"F'\")/*\"03F'\"*/,\n                            \"01D\",\n                            move(middle+1,\"F\")/*\"03F\"*/\n                        );\n                    }\n                    else{\n                        moves.push(\"01D\");\n                    }\n                }\n                else {\n                    if( solved.x===solved.y||\n                        solved.x===(dim-1)-solved.y||\n                        (dim-1)-solved.z===(dim-1)-solved.y||\n                        (dim-1)-solved.z===solved.y){\n                            // solve from green to orange middles\n                            if(current.x<middle-1&&current.y<middle-1){\n                                if(solved.z<middle-1&&solved.y<middle-1){\n                                //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\n                                    moves.push(\n                                        \"01L'\",\n                                        \"01D'\",\n                                        move(solved.y+1,\"B'\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F'\"),\n                                        \"01D'\",\n                                        move(solved.y+1,\"B\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F\"),\n                                        \"01L\"\n                                    );\n                                }\n                                else if(solved.z>middle&&solved.y<middle-1){\n                                    moves.push(\n                                        \"01D'\",\n                                        move(solved.y+1,\"B'\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F'\"),\n                                        \"01D'\",\n                                        move(solved.y+1,\"B\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F\")\n                                    );\n                                }\n                                else if(solved.z>middle&&solved.y>middle){\n                                    moves.push(\n                                        \"01L\",\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B'\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F'\"),\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F\"),\n                                        \"01L'\"\n                                    );\n                                }\n                                else if(solved.z<middle-1&&solved.y>middle){\n                                    moves.push(\n                                        \"01L2\",\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B'\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F'\"),\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F\"),\n                                        \"01L2\"\n                                    );\n                                }\n                            }\n                            else{\n                                moves.push(\"01D\");\n                            }\n                        }\n                    else {\n                        if(current.y===solved.y&&current.x===(dim-1)-solved.z){\n                            moves.push(\n                                \"01D'\",\n                                move(current.x+1,\"B'\"),\n                                \"01D\",\n                                move(current.y+1,\"F'\"),\n                                \"01D'\",\n                                move(current.x+1,\"B\"),\n                                \"01D\",\n                                move(current.y+1,\"F\")\n                            );\n                        }\n                        else{\n                            moves.push(\"01D\");\n                        }\n                    }\n                }\n                break;\n            case 'R':\n                if(solved.x === 0 && solved.y === middle-1 && solved.z === middle){\n                    moves.push(move(current.y+1,\"F2\"));\n                    moves.push(\"01L2\");\n                    moves.push(move(current.y+1,\"F2\"));\n                }\n                else if(\n                    (solved.x === 0 && solved.y === middle-1 && solved.z === middle-1)||\n                    (solved.x === 0 && solved.y === middle && solved.z === middle-1)||\n                    (solved.x === 0 && solved.y === middle && solved.z === middle)\n                ){\n                    moves.push(move(current.y+1,\"F\"));\n                    moves.push(\"01D2\");\n                    moves.push(move(current.y+1,\"F'\"));\n                }\n                else {\n                    moves.push(\n                        move(current.y+1,\"F\"),\n                        \"01D\",\n                        move(current.y+1,\"F'\")\n                    );\n                }\n                break;\n            default:\n                console.log(\"Something broke\");\n        }\n    }\n\n    // 5x5 Solver for Orange\n    else if(dim%2){\n        //console.log(solved);\n        // First row\n        switch(currentSide){\n            case \"L\":\n                if(solved.z>=middle-1&&solved.z<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\n                // piece 1\n                    if(solved.x === 0 && solved.y === middle-1 && solved.z === middle+1){\n                        moves.push(\"01L\");\n                    }\n                    //row 1 solved location\n                    else if(solved.y === middle-1){\n                        moves.push(move(current.y+1,\"F'\"));\n                        middle && oddCube? \n                            moves.push(\"01D'\",move(current.y+1,\"F\")):\n                            moves.push(\"01D2\",move(current.y+1,\"F\"));\n                    }\n                    //row 2 solved location\n                    else if(solved.y === middle){\n                        moves.push(move(current.y+1,\"F'\"));\n                        moves.push(\"01D'\");\n                        moves.push(move(current.y+1,\"F\"));\n                    }\n                    //row 3 solved location\n                    else if(solved.y === middle+1){\n                        if(solved.z === middle+1){\n                            moves.push(move(current.y+1,\"F'\"));\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F\"));\n                        }\n                    }\n                }\n                else {\n                    if( solved.z===solved.y||\n                        solved.z===(dim-1)-solved.y||\n                        (dim-1)-solved.z===(dim-1)-solved.y||\n                        (dim-1)-solved.z===solved.y){\n                            if(current.z<middle-1&&current.y<middle-1){\n                            //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\n                                moves.push(\n                                    \"01L'\",\n                                    \"01D'\",\n                                    move(current.y+1,\"B'\"),\n                                    \"01D\",\n                                    move(current.y+1,\"F'\"),\n                                    \"01D'\",\n                                    move(current.y+1,\"B\"),\n                                    \"01D\",\n                                    move(current.y+1,\"F\"),\n                                    \"01L\"\n                                );\n                            }\n                            else if(current.z>middle&&current.y<middle-1){\n                                moves.push(\n                                    \"01D'\",\n                                    move(current.y+1,\"B'\"),\n                                    \"01D\",\n                                    move(current.y+1,\"F'\"),\n                                    \"01D'\",\n                                    move(current.y+1,\"B\"),\n                                    \"01D\",\n                                    move(current.y+1,\"F\")\n                                );\n                            }\n                            else if(current.z>middle&&current.y>middle){\n                                moves.push(\n                                    \"01L\",\n                                    \"01D'\",\n                                    move(dim-(current.y),\"B'\"),\n                                    \"01D\",\n                                    move(dim-(current.y),\"F'\"),\n                                    \"01D'\",\n                                    move(dim-(current.y),\"B\"),\n                                    \"01D\",\n                                    move(dim-(current.y),\"F\"),\n                                    \"01L'\"\n                                );\n                            }\n                            else if(current.z<middle-1&&current.y>middle){\n                                moves.push(\n                                    \"01L2\",\n                                    \"01D'\",\n                                    move(dim-(current.y),\"B'\"),\n                                    \"01D\",\n                                    move(dim-(current.y),\"F'\"),\n                                    \"01D'\",\n                                    move(dim-(current.y),\"B\"),\n                                    \"01D\",\n                                    move(dim-(current.y),\"F\"),\n                                    \"01L2\"\n                                );\n                            }\n                    }\n                    else {\n                        moves.push(\n                            \"01D'\",\n                            move((dim-1)-current.z+1,\"B'\"),\n                            \"01D\",\n                            move(current.y+1,\"F'\"),\n                            \"01D'\",\n                            move((dim-1)-current.z+1,\"B\"),\n                            \"01D\",\n                            move(current.y+1,\"F\")\n                        );\n                    }\n                }\n                break;\n\n            case \"D\":\n                if(solved.z>=middle-1&&solved.z<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\n                    if(solved.x === 0 && solved.y === middle-1 && solved.z === middle+1){\n                        moves.push(move(current.y+1,\"F\"),\"01L2\",move(current.y+1,\"F'\"));\n                    }\n                    // row 1\n                    else if(solved.y === middle-1){\n                        if(current.x<middle+1||current.y===middle-1){\n                            moves.push(\"01D\");\n                        }\n                        else{\n                            moves.push(\"01L\",move(current.y+1,\"F\"),\"01L'\",move(current.y+1,\"F'\"));\n                        }\n                    }\n                    // row 2 (rework)\n                    else if(solved.y === middle){\n                        // first piece row 2\n                        if(solved.z === middle+1){\n                            if(current.y !== middle-1){\n                                moves.push(\"01D\");\n                            }\n                            else{\n                                moves.push(move(middle+1,\"F'\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(middle+1,\"F\"));\n                            }\n                        }\n                        // last piece row 2\n                        else if(solved.z === middle-1){\n                            if(current.y !== middle+1){\n                                moves.push(\"01D\");\n                            }\n                            else{\n                                moves.push(move(middle+1,\"F'\"));\n                                moves.push(move(current.y+1,\"F\"));\n                                moves.push(\"01D\");\n                                moves.push(move(current.y+1,\"F'\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(middle+1,\"F\"));\n                            }\n                        }\n                    }\n                    // row 3\n                    else if(solved.y === middle+1){\n                        // piece 1\n                        if(solved.z === middle+1){\n                            if(current.x === middle-1 && current.y === middle-1){\n                                moves.push(move(middle+1+1,\"F'\"));\n                                moves.push(\"01D'\");\n                                moves.push(move(middle+1+1,\"F\"));\n                            }\n                            else{\n                                moves.push(\"01D\");\n                            }\n                        }\n                        // piece 2\n                        else if(solved.z === middle){\n                            if(current.x === middle+1){\n                                moves.push(move(middle+1+1,\"F2\"));\n                                moves.push(\"01R'\");\n                                moves.push(move(middle+1+1,\"F\"));\n                                moves.push(\"01D\");\n                                moves.push(move(middle+1+1,\"F\"));\n                            }\n                            else {\n                                moves.push(\"01D'\");\n                            }\n                        }\n                        else if(solved.z === middle-1){\n                            if(current.x === middle-1 && current.y === middle+1){\n                                //04F' 05R' 04F 05R 04F'\n                                moves.push(move(middle+1+1,\"F\"));\n                                moves.push(\"01L'\");\n                                moves.push(move(middle+1+1,\"F'\"));\n                                moves.push(\"01L\");\n                                moves.push(\"01D2\");\n                                moves.push(move(middle+1+1,\"F'\"));\n                                moves.push(\"01D2\");\n                                moves.push(move(middle+1+1,\"F\"));\n                            }\n                            else{\n                                moves.push(\"01D\");\n                            }\n                        }\n                    }\n                }\n                else {\n                    if( solved.z===solved.y||\n                        solved.z===(dim-1)-solved.y||\n                        (dim-1)-solved.z===(dim-1)-solved.y||\n                        (dim-1)-solved.z===solved.y){\n                            if(current.x<middle-1&&current.y<middle-1){\n                                if(solved.z<middle-1&&solved.y<middle-1){\n                                //01R' 01D' 01D' 03B' 01D 03F' 01D' 03B 01D 03F 01R 01D\n                                    moves.push(\n                                        \"01L'\",\n                                        \"01D'\",\n                                        move(solved.y+1,\"B'\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F'\"),\n                                        \"01D'\",\n                                        move(solved.y+1,\"B\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F\"),\n                                        \"01L\"\n                                    );\n                                }\n                                else if(solved.z>middle&&solved.y<middle-1){\n                                    moves.push(\n                                        \"01D'\",\n                                        move(solved.y+1,\"B'\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F'\"),\n                                        \"01D'\",\n                                        move(solved.y+1,\"B\"),\n                                        \"01D\",\n                                        move(solved.y+1,\"F\")\n                                    );\n                                }\n                                else if(solved.z>middle&&solved.y>middle){\n                                    moves.push(\n                                        \"01L\",\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B'\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F'\"),\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F\"),\n                                        \"01L'\"\n                                    );\n                                }\n                                else if(solved.z<middle-1&&solved.y>middle){\n                                    \n                                    moves.push(\n                                        \"01L2\",\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B'\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F'\"),\n                                        \"01D'\",\n                                        move(dim-(solved.y),\"B\"),\n                                        \"01D\",\n                                        move(dim-(solved.y),\"F\"),\n                                        \"01L2\"\n                                    );\n                                }\n                            }\n                            else{\n                                moves.push(\"01D\");\n                            }\n                        }\n                    else {\n                        if(current.y===solved.y&&current.x===(dim-1)-solved.z){\n                            moves.push(\n                                \"01D'\",\n                                move(current.x+1,\"B'\"),\n                                \"01D\",\n                                move(current.y+1,\"F'\"),\n                                \"01D'\",\n                                move(current.x+1,\"B\"),\n                                \"01D\",\n                                move(current.y+1,\"F\")\n                            );\n                        }\n                        else{\n                            moves.push(\"01D\");\n                        }\n                    }\n                }\n                break;\n            case \"R\":\n                if(solved.z>=middle-1&&solved.z<=middle+1&&solved.y>=middle-1&&solved.y<=middle+1){\n                    if(solved.x === 0 && solved.y === middle-1 && solved.z === middle+1){\n                        moves.push(move(current.y+1,\"F2\"),\"01L2\",move(current.y+1,\"F2\"));\n                    }\n                    // row 1\n                    else if(solved.y === middle-1){\n                        if(current.z!==middle+1||current.y===middle-1){\n                            moves.push(\"01R\");\n                        }\n                        else{\n                            moves.push(\"01L\",move(current.y+1,\"F2\"),\"01L'\",move(current.y+1,\"F2\"))\n                        }\n                    }\n                    // row 2 (rework)\n                    else if(solved.y === middle){\n                        moves.push(move(current.y+1,\"F\"));\n                        moves.push(\"01D\");\n                        moves.push(move(current.y+1,\"F'\"));\n                    }\n                    // row 3\n                    else if(solved.y === middle+1){\n                        // piece 1\n                        if(solved.z === middle+1){\n                            if(current.y===middle-1&&current.z===middle-1){\n                                moves.push(move(middle+1+1,\"F2\"));\n                                moves.push(\"01R'\");\n                                moves.push(move(middle+1+1,\"F2\"));\n                            }\n                            else{\n                                moves.push(\"01R\");\n                            }\n                        }\n                        // piece 2\n                        else if(solved.z === middle){\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D\");\n                            moves.push(move(current.y+1,\"F'\"));\n                        }\n                        else if(solved.z === middle-1){\n                            moves.push(move(current.y+1,\"F\"));\n                            moves.push(\"01D2\");\n                            moves.push(move(current.y+1,\"F'\"));\n                        }\n                    }\n                }\n                else {\n                    moves.push(\n                        move(current.y+1,\"F\"),\n                        \"01D\",\n                        move(current.y+1,\"F'\")\n                    );\n                }\n                break;\n            default:\n                console.log(\"Something broke\");\n                return \"\";\n        }\n\n        return moves.join(\" \");\n    }\n\n    return moves.join(\" \");\n\n}\n\nmodule.exports = solveOrangeMiddle;","function move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nfunction extractFromFront(current,maxCoord,minCoord){\n    if(current.z===maxCoord){\n        return `${move(\"\",current.x+1,\"L'\")} 01B' 01R 01B ${move(\"\",current.x+1,\"L\")} 01R'`\n    }\n    else if(current.x===maxCoord){\n        return `${move(\"\",current.z+1,\"D\")} 01B' 01D 01B ${move(\"\",current.z+1,\"D'\")} 01D'`\n    }\n    else if(current.z===minCoord){\n        return `${move(\"\",current.x+1,\"L\")} 01B' 01L 01B ${move(\"\",current.x+1,\"L'\")} 01L'`\n    }\n    else if(current.x===minCoord){\n        return `${move(\"\",current.z+1,\"D'\")} 01B' 01U 01B ${move(\"\",current.z+1,\"D\")} 01U'`\n    }\n}\n\nfunction moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide){\n    if(current.x===maxCoord && current.z===maxCoord){// Top Right\n        if(whiteSide===1){\n            return `01U' 01B 01U`\n        }\n        else{\n            return `01R 01B 01R'`\n        }\n    }\n    if(current.x===minCoord && current.z===maxCoord){// Top Left\n        if(whiteSide===1){\n            return `01U 01B 01U'`\n        }\n        else {\n            return `01L' 01B 01L`\n        }\n    }\n    if(current.x===maxCoord && current.z===minCoord){// Bottom Right\n        if(whiteSide===5){\n            return `01D 01B 01D'`\n        }\n        else {\n            return `01R' 01B 01R`\n        }\n    }\n    if(current.x===minCoord && current.z===minCoord){// Bottom Left\n        if(whiteSide===1){\n            return `01D' 01B 01U`\n        }\n        else {\n            return `01L 01B 01L'`\n        }\n    }\n}\n\nfunction flipPieceOnBack(current,maxCoord,minCoord){\n    if(current.z===maxCoord){//top\n        return `01U 01R 01B2 01R' 01U' 01B'`\n    }\n    else if(current.x===maxCoord){//right\n        return `01R 01D 01B2 01D' 01R' 01B'`\n    }\n    else if(current.z===minCoord){//down\n        return `01D 01L 01B2 01L' 01D' 01B'`\n    }\n    else if(current.x===minCoord){//left\n        return `01L 01U 01B2 01U' 01L' 01B'`\n    }\n}\n\nfunction solveFromBackToFront(current,solved,maxCoord,minCoord){\n    if(current.z===maxCoord&&solved.z===maxCoord){\n        return `${move(\"\",current.x+1,\"L\")} 01F 01R' 01F' ${move(\"\",current.x+1,\"L'\")} 01F 01R 01F'`\n    }\n    else if(current.x===maxCoord && solved.x===maxCoord){\n        return `${move(\"\",current.z+1,\"D'\")} 01F 01D' 01F' ${move(\"\",current.z+1,\"D\")} 01F 01D 01F'`\n    }\n    else if(current.z===minCoord && solved.z===minCoord){\n        return `${move(\"\",current.x+1,\"L'\")} 01F 01L' 01F' ${move(\"\",current.x+1,\"L\")} 01F 01L 01F'`\n    }\n    else if(current.x===minCoord && solved.x===minCoord){\n        return `${move(\"\",current.z+1,\"D\")} 01F 01U' 01F' ${move(\"\",current.z+1,\"D'\")} 01F 01U 01F'`\n    }\n    else return ``\n}\n\n\n\nlet solveFrontEdgeSegments = (current,solved,dim,whiteSide) => {\n    const BACK=3;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n    let moveString = \"\";\n    // let solvedPosition = \"top\";\n\n    // if(solved.x===maxCoord) {solvedPosition = \"right\";}\n    // else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\n    // else if(solved.x===minCoord) {solvedPosition = \"left\";}\n    \n    if(current.y===minCoord){\n        moveString = extractFromFront(current,maxCoord,minCoord);\n    }\n    else if(current.y>minCoord&&current.y<maxCoord){\n        moveString = moveFromMiddleToBack(current,maxCoord,minCoord,whiteSide);\n    }\n    else if(current.y===maxCoord && whiteSide===BACK){\n        moveString = flipPieceOnBack(current,maxCoord,minCoord);\n    }\n    else if(current.z===solved.z&&current.x===solved.x){\n        moveString = solveFromBackToFront(current,solved,maxCoord,minCoord);\n    }\n    else {\n        moveString = `01B`;\n    }\n        \n    \n\n    return moveString;\n}\n\nmodule.exports = solveFrontEdgeSegments;","function move(space,depth,side){\n    return (space+(depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveBackEdgeSegments = (current,solved,dim,yellowSide) => {\n    const UP=1,RIGHT=2,LEFT=4,DOWN=5;\n    const maxCoord = dim-1;\n    const minCoord = 0;\n    let moveString = \"\";\n    // let solvedPosition = \"top\";\n    // let inMiddleSection = current.y > minCoord && current.y < maxCoord;\n\n    // if(solved.x===maxCoord) {solvedPosition = \"right\";}\n    // else if(solved.z===minCoord) {solvedPosition = \"bottom\";}\n    // else if(solved.x===minCoord) {solvedPosition = \"left\";}\n\n    // Solves top back edge\n    if(solved.z===maxCoord){\n        // top right middle edge\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\n            // if yellow side is on the right face (red center)\n            if(yellowSide===RIGHT){//a.1\n                //console.log(\"solve it\");\n                moveString = `01L' 01B 01L ${move(\"\",current.y+1,\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",current.y+1,\"F\")}`;\n            }\n            // if yellow side is on the upward face (blue center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `01R 01B 01R' 01B' 01U' 01B 01U`;\n            }\n        }\n        // top back edge (wrong position)\n        else if(current.z===solved.z && current.y===solved.y){ // b\n            //console.log(\"remove it\");\n            moveString = `01L' 01B 01L ${move(\"\",dim-(current.x),\"F'\")} 01L' 01B 01L 01B2 ${move(\"\",dim-(current.x),\"F\")}`;\n        }\n        // back edge that isn't top\n        else if(current.y===maxCoord && !(current.z===maxCoord)){ // c\n            moveString = `01U' 01B 01U`;\n        }\n        // middle edge that isn't top right (just places piece on back edges)\n        else if(current.y!==maxCoord){ // d\n            if(current.z===maxCoord && current.x===minCoord){\n                moveString = `01L' 01B' 01L 01B`\n            }\n            else if(current.z===minCoord && current.x===minCoord){\n                moveString = `01L 01B' 01L' 01B`\n            }\n            else if(current.z===minCoord && current.x===maxCoord){\n                moveString = `01R' 01B 01R 01B'`\n            }\n        }\n    }\n    // Solves right back edge\n    else if(solved.x===maxCoord){\n        if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\n            // if yellow side is on the down face (green center)\n            if(yellowSide===DOWN){//a.1\n                //console.log(\"solve it\");\n\n                // 01U' 01B 01U (02F' c.y+1) 01U' 01B 01U 01B2 (02F c.y+1) // converted\n                moveString = `01U' 01B 01U ${move(\"\",current.y+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.y+1,\"F\")} 01R' 01B2 01R`;\n            }\n            // if yellow side is on the right face (red center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `01D 01B 01D' 01B' 01R' 01B 01R2 01B' 01R'`;\n            }\n        }\n\n        // b // change coords + small mod to algo\n        else if(current.x===solved.x && current.y===solved.y){ // b\n            //console.log(\"remove it\");\n            moveString = `01U' 01B 01U ${move(\"\",current.z+1,\"F'\")} 01U' 01B 01U 01B2 ${move(\"\",current.z+1,\"F\")} 01R' 01B2 01R`;\n        }\n\n\n        // c // hard code those instead of generalizing\n        else if(current.y===maxCoord){\n            if(current.z===minCoord){\n                moveString = `01R' 01B 01R2 01B' 01R'`;\n            } else if(current.x===minCoord){\n                moveString = `01R' 01B2 01R2 01B2 01R'`;\n            }\n        }\n\n        // d // change coords\n        else if(current.y!==maxCoord){\n            if(current.x===maxCoord && current.z===maxCoord){\n                moveString = `01B 01R 01B 01R' 01B2`\n            }\n            else if(current.x===minCoord && current.z===maxCoord){\n                moveString = `01L' 01B' 01L 01B`\n            }\n            else if(current.x===minCoord && current.z===minCoord){\n                moveString = `01D' 01B 01D 01B'`\n            }\n        }\n    }\n    // Solves bottom back edge\n    else if(solved.z===minCoord){\n        if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\n            // if yellow side is on the left face (orange center)\n            if(yellowSide===LEFT){//a.1\n                //console.log(\"solve it\");\n                moveString = `01R' 01B 01R ${move(\"\",current.y+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.y+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\n            }\n            // if yellow side is on the down face (green center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `01L 01B 01L' 01B' 01D' 01B 01D2 01B' 01D' 01B' 01R' 01B' 01R 01B2`;\n            }\n        }\n\n        // b // change coords + small mod to algo\n        else if(current.z===solved.z && current.y===solved.y){ // b\n            //console.log(\"remove it\");\n            moveString = `01R' 01B 01R ${move(\"\",current.x+1,\"F'\")} 01R' 01B 01R 01B2 ${move(\"\",current.x+1,\"F\")} 01D 01U' 01B2 01D' 01U`;\n        }\n\n        else if(current.y===maxCoord){ // c\n            moveString = `01D' 01B 01D2 01B' 01D'`;\n        }\n        else if(current.y<maxCoord){\n            moveString = `01D 01R 01U 01B 01U' 01R' 01D'`;\n        }\n        // permutations of the original algo should work\n    }\n    else if(solved.x===minCoord){\n        const displace = `01R 01B' 01R' 01B 01U 01B 01U' 01B'`;\n        const solve = `01D' 01B 01D ${move(\"\",current.y+1,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",current.y+1,\"F\")} 01L 01R' 01B2 01R 01L'`;\n        const replace = `01B 01U 01B' 01U' 01B' 01R 01B 01R'`\n        const flip = `01R 01B 01R' 01B' 01U' 01B 01U2 01B' 01U' 01B' 01L' 01B' 01L 01B2`\n\n        if(current.y<maxCoord && current.z===maxCoord && current.x===maxCoord){ //a\n            // if yellow side is on the left face (orange center)\n            if(yellowSide===RIGHT){//a.1\n                //console.log(\"solve it\");\n                moveString = `${displace} ${solve} ${replace}`;\n            }\n            // if yellow side is on the down face (green center)\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `${flip}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===maxCoord && current.x===minCoord){ //a\n            if(yellowSide===UP){//a.1\n                //console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f'\")}`;\n            }\n            else {//a.2\n                //console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f\")} ${flip} ${move(\"\",dim-1,\"f'\")}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===minCoord && current.x===minCoord){ //a\n            if(yellowSide===LEFT){//a.1\n                // console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f2\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f2\")}`;\n            }\n            else {//a.2\n                // console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f2\")} ${flip} ${move(\"\",dim-1,\"f2\")}`;\n            }\n        }\n\n        else if(current.y<maxCoord && current.z===minCoord && current.x===maxCoord){ //a\n            if(yellowSide===DOWN){//a.1\n                // console.log(\"solve it\");\n                moveString = `${move(\"\",dim-1,\"f'\")} ${displace} ${solve} ${replace} ${move(\"\",dim-1,\"f\")}`;\n            }\n            else {//a.2\n                // console.log(\"flip it\");\n                moveString = `${move(\"\",dim-1,\"f'\")} ${flip} ${move(\"\",dim-1,\"f\")}`;\n            }\n        }\n\n        else if(current.x===solved.x && current.y===solved.y){ // b\n            // console.log(\"remove it\");\n            moveString = `${displace} 01D' 01B 01D ${move(\"\",dim-current.z,\"F'\")} 01D' 01B 01D 01B2 ${move(\"\",dim-current.z,\"F\")} 01L 01R' 01B2 01L' 01R 01L 01D 01R 01B 01R' 01D' 01L'`;\n        }\n    }\n\n\n    return moveString;\n}\n\nmodule.exports = solveBackEdgeSegments;","function move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nlet solveMiddleEdgeSegments = (current,solved,cubeSize) => {\n    const maxCoord = cubeSize-1;\n    const minCoord = 0;\n    const centerEdge = Math.floor(cubeSize/2);\n\n    let moves = [];\n\n    // where blue and orange meet\n    let firstEdge = (solved.x===minCoord && solved.z===maxCoord);\n    // where blue and red meet\n    let secondEdge = (solved.x===maxCoord && solved.z===maxCoord);\n    // where green and red meet\n    let thirdEdge = (solved.x===maxCoord && solved.z===minCoord);\n\n    // flip edge segment in place\n    let flip = [\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\"];\n    let flip2 = [\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\"];\n    let flip3 = [\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\"];\n\n    const flipFirstCenterEdge = [\n        move(centerEdge+1,\"B'\"),\n        \"01R\",\"01B\",\"01R'\",\"01U\",\"01R'\",\"01U'\",\"01R\",\n        move(centerEdge+1,\"B\"),\n    ];\n\n    const flipSecondCenterEdge = [\n        move(centerEdge+1,\"B'\"),\n        \"01D\",\"01B\",\"01D'\",\"01R\",\"01D'\",\"01R'\",\"01D\",\n        move(centerEdge+1,\"B\"),\n    ];\n\n    const flipThirdCenterEdge = [\n        move(centerEdge+1,\"B'\"),\n        \"01L\",\"01B\",\"01L'\",\"01D\",\"01L'\",\"01D'\",\"01L\",\n        move(centerEdge+1,\"B\"),\n    ];\n\n    const swapLastTwoCenterEdges = [\n        move(centerEdge,\"b2\"),\"01L2\",\"01D2\",\n        move(centerEdge,\"b2\"),\"01D2\",\"01L2\",\n        move(centerEdge,\"b2\"),\"01D2\"\n    ];\n\n    const flipLastCenterEdge = [\n        move(centerEdge,\"f\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\n        move(centerEdge,\"f'\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\n        move(centerEdge,\"b'\"),\"01L2\",move(centerEdge,\"f\"),\"01L2\",\n        move(centerEdge,\"f'\"),\"01L2\",move(cubeSize,\"f'\"),move(centerEdge,\"f'\"),\n        \"01L2\",move(centerEdge,\"f'\"),\"01L2\",move(centerEdge+1,\"F\"),\n        \"01L'\",\"01B\",\"01D\"\n    ];\n\n    // solves piece diagonally to solved location\n    let solveUp = depth => {\n        return [\"01F\",move(depth,\"F\"),\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\",\"01F'\",move(depth,\"F'\")];\n    }\n    let solveDown = depth => {\n        return [move(depth,\"B'\"),\"01B'\",\"01R\",\"01U'\",\"01B\",\"01R'\",\"01U\",move(depth,\"B\"),\"01B\"];\n    }\n    let solveUp2 = depth => {\n        return [\"01F\",move(depth,\"F\"),\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\",\"01F'\",move(depth,\"F'\")];\n    }\n    let solveDown2 = depth => {\n        return [move(depth,\"B'\"),\"01B'\",\"01D\",\"01R'\",\"01B\",\"01D'\",\"01R\",move(depth,\"B\"),\"01B\"];\n    }\n    let solveUp3 = depth => {\n        return [\"01F\",move(depth,\"F\"),\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\",\"01F'\",move(depth,\"F'\")];\n    }\n    let solveDown3 = depth => {\n        return [move(depth,\"B'\"),\"01B'\",\"01L\",\"01D'\",\"01B\",\"01L'\",\"01D\",move(depth,\"B\"),\"01B\"];\n    }\n\n    let solveLastEdge = depth => {\n        return [\n            move(depth,\"B'\"),\"01D2\",move(depth,\"F\") ,\"01L2\",\n            move(depth,\"F'\"),\"01L2\",move(depth,\"B2\"),\"01D2\",\n            move(depth,\"B\") ,\"01D2\",move(depth,\"B'\"),\"01D2\",\"01L2\",\n            move(depth,\"B2\"),\"01L2\"\n        ];\n    }\n\n    if(cubeSize>4&&cubeSize%2&&current.y===centerEdge) {\n        if(firstEdge){\n            if(current.x===minCoord&&current.z===minCoord){\n                moves=[move(centerEdge+1,\"F'\"),\"01D2\",move(centerEdge+1,\"F\")];\n            }\n            else if(current.x===maxCoord&&current.z===minCoord){\n                moves=[\"01D2\"];\n            }\n            else if(current.x===maxCoord&&current.z===maxCoord){\n                moves=[move(centerEdge+1,\"F\"),\"01R2\",move(centerEdge+1,\"F'\")];\n            }\n            else moves=flipFirstCenterEdge;\n        }\n        else if(secondEdge){\n            if(current.x===minCoord&&current.z===minCoord){\n                moves=[\"01D2\"];\n            }\n            else if(current.x===maxCoord&&current.z===minCoord){\n                moves=[move(centerEdge+1,\"F\"),\"01D2\",move(centerEdge+1,\"F'\")];\n            }\n            else moves=flipSecondCenterEdge;\n        }\n        else if(thirdEdge){\n            if(current.x===maxCoord&&current.z===minCoord){\n                moves=flipThirdCenterEdge;\n            }\n            else {\n                moves=swapLastTwoCenterEdges;\n            }\n        }\n        else{\n            moves=flipLastCenterEdge;\n        }\n    }\n    else {\n        if(firstEdge){\n            if(current.x===minCoord&&current.z===maxCoord){\n                if(current.y>=centerEdge){\n                    moves=solveDown(cubeSize-current.y);\n                }\n                else{\n                    moves=solveUp(current.y+1);\n                }\n            }\n            else if(current.x===maxCoord&&current.z===maxCoord){\n                if(current.y===solved.y){\n                    moves=flip;\n                }\n                else{\n                    if(current.y>=centerEdge){\n                        moves=solveUp(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveDown(current.y+1);\n                    }\n                }\n            }\n            else if(current.x===minCoord&&current.z===minCoord){\n                moves.push(\"01D2\",\"01R2\");\n            }\n            else {\n                moves.push(\"01R2\");\n            }\n        }\n        else if(secondEdge){\n            if(current.x===maxCoord&&current.z===maxCoord){\n                if(current.y>=centerEdge){\n                        moves=solveDown2(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveUp2(current.y+1);\n                    }\n            }\n            else if(current.x===maxCoord&&current.z===minCoord){\n                if(current.y===solved.y){\n                    moves=flip2;\n                }\n                else{\n                    if(current.y>=centerEdge){\n                        moves=solveUp2(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveDown2(current.y+1);\n                    }\n                }\n            }\n            else {\n                moves.push(\"01D2\");\n            }\n        }\n        else if(thirdEdge){\n            if(current.x===maxCoord&&current.z===minCoord){\n                if(current.y===(maxCoord-1)){\n                        moves=solveDown3(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveUp3(current.y+1);\n                    }\n            }\n            else if(current.x===minCoord&&current.z===minCoord){\n                if(current.y===solved.y){\n                    moves=flip3;\n                }\n                else{\n                    if(current.y===(maxCoord-1)){\n                        moves=solveUp3(cubeSize-current.y);\n                    }\n                    else{\n                        moves=solveDown3(current.y+1);\n                    }\n                }\n            }\n        }\n        else {\n            moves=solveLastEdge(current.y+1);\n        }\n    }\n\n    return moves.join(\" \");\n}\n\nmodule.exports = solveMiddleEdgeSegments;","import React from \"react\";\nimport \"./Nav.css\";\nimport { DropdownButton, Dropdown } from 'react-bootstrap'\nimport 'react-dropdown/style.css'\nimport Popup from \"reactjs-popup\";\n\nconst Navbar = props => {\n  const navCubes = [];\n\n  function reloadPage(){\n    setTimeout(function(){\n      window.location.reload();\n    }, 50);\n  }\n  for (let i = 2; i <= 10; i++) {\n    navCubes.push(\n      <Dropdown.Item key={i} href={`/RubiksProgram/#id=${i}`} onClick={reloadPage}>{i} X {i}</Dropdown.Item>\n    )\n  }\n  return (\n    <nav className=\"navbar navbar-dark fixed-top\">\n      <ul className=\"nav nav-justified mr-auto\">\n        <li className=\"nav-item nav-fix-for-edge\">\n          <p className=\"navbar-brand\" style={{ color: \"lightgray\" }}><b>{props.title}</b></p>\n\n          {/*Open model here. Show bunch of settings. Pass changeSettings down to component to apply changes*/}\n          <div className=\"settingsDropDown\">\n            <DropdownButton className=\"settings\" aria-label=\"settings\" id=\"settings\" title={<i className='fa fa-cog'></i>}>\n              <ul>\n\n                <li className=\"settingsDropDownItem\">\n                  <div className=\"checkbox-inline\">\n                      <input type=\"checkbox\" data-toggle=\"toggle\" onClick={() => props.changeSettings('displayMoveInput')}></input>\n                  </div>\n              Move Input\n            </li>\n\n                <li className=\"settingsDropDownItem\" onClick={() => props.changeSettings('displayHints')}>\n\n\n                  <div className=\"checkbox-inline\">\n                      <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" onClick={() => props.changeSettings('displayHints')}></input>\n                  </div>\n              Move Hints\n\n            </li>\n\n              </ul>\n\n            </DropdownButton>\n          </div>\n          <div className=\"cubesDropdown\">\n            <DropdownButton title=\"Cubes\" className=\"cubes\">\n              {navCubes}\n            </DropdownButton>\n          </div>\n        </li>\n      </ul>\n      <div style={{ float: \"right\", height: \"100%\" }} >\n        <Popup trigger={<button id=\"infoBtn\">Info</button>}>\n          {close => (\n            <div style={{ zIndex: \"100\", width: \"100%\", height: \"100%\" }}>\n              <div className=\"shadeBackground\" style={{ backgroundColor: \"black\", zIndex: \"101\" }} onClick={close}></div>\n              <div style={{ zIndex: \"102\", width: \"max-content\", margin: \"auto\", transform: \"translateX(-50%)\", padding: \"8px\" }} className=\"popupDiv\">\n                <b style={{ fontSize: \"2rem\" }}>Instructions</b>\n                <div className=\"close\" id=\"closeBtn\" onClick={close}>\n                  &times;\n                </div>\n                <div style={{ backgroundColor: \"rgba(0,0,0,.8)\", height: \"100%\", marginTop: \"0\", color: \"lightgrey\", fontSize: \"1rem\", textAlign: \"center\", borderRadius: \".25rem\", padding: \"8px\" }}>\n                  <div style={{ paddingTop: \"\" }}>Click and drag anywhere not on the cube to rotate.</div>\n                  <hr style={{ backgroundColor: \"lightgray\", width: \"60%\" }}></hr>\n                  <div>Click and drag anywhere on the cube to make a move <br></br>or use the keyboard to make turns:</div>\n                  <div>\n                    <div style={{ width: \"100%\", textAlign: \"center\" }}>\n                      <b style={{ color: \"white\", backgroundColor: \"black\" }}> F, </b><b style={{ color: \"white\", backgroundColor: \"black\" }}>f,</b>\n                      <b style={{ color: \"blue\", backgroundColor: \"black\" }}> U, </b><b style={{ color: \"blue\", backgroundColor: \"black\" }}>u,</b>\n                      <b style={{ color: \"red\", backgroundColor: \"black\" }}> R, </b><b style={{ color: \"red\", backgroundColor: \"black\" }}>r,</b>\n                      <b style={{ color: \"yellow\", backgroundColor: \"black\" }}> B, </b><b style={{ color: \"yellow\", backgroundColor: \"black\" }}>b,</b>\n                      <b style={{ color: \"orange\", backgroundColor: \"black\" }}> L, </b><b style={{ color: \"orange\", backgroundColor: \"black\" }}>l,</b>\n                      <b style={{ color: \"green\", backgroundColor: \"black\" }}> D, </b><b style={{ color: \"green\", backgroundColor: \"black\" }}>d </b>\n                      <p style={{ width: \"100%\", textAlign: \"center\" }}>(lower case is clockwise, upper case is counterclockwise)</p>\n                    </div>\n                  </div>\n                  <hr style={{ backgroundColor: \"lightgray\", width: \"60%\" }}></hr>\n                  <div style={{}}>\n                  <div style={{ marginBottom: \"0\", paddingBottom: \"\" }}>Author: Sasha Peters <br></br> <a target=\"#\" href=\"https://www.github.com/merpig\"><i className=\"fa fa-github\" style={{ fontSize: \"36px\", marginRight: \"10px\" }}></i></a><a target=\"#\" href=\"https://www.linkedin.com/in/alexandr-sasha-peters-8a2489168/\"><i className=\"fa fa-linkedin\" style={{ fontSize: \"36px\" }}></i></a></div>\n                  <hr style={{ backgroundColor: \"lightgrey\" }}></hr>\n                  <div style={{ color: \"white\", backgroundColor: \"\", textAlign: \"center\" }}>\n                      site design / cube © 2020 RubiksProgram\n                  </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </Popup> {\" \"}\n        <button id=\"fullscreenBtn\" value=\"true\">Fullscreen</button>\n      </div>\n    </nav>)\n};\n\nexport default Navbar;\n","import 'rc-slider/assets/index.css';\nimport './Speeds.css';\nimport React from 'react';\nimport Slider from 'rc-slider'\n\nconst style = { width: \"20%\", position: \"fixed\", top: \"85px\", left: \"10px\",fontSize:\"1rem\"};\n\nconst Speeds = props => (\n\n    <div className=\"sliderDiv\" style = {style}>\n\n        {props.isDisabled ?\n        <Slider \n            defaultValue={40} \n            value={props.speed}\n            min={props.speed} max={props.speed} \n            step={10}\n        />\n        :\n        <Slider \n            defaultValue={40} \n            value={props.speed}\n            min={0} max={70} \n            step={10}\n            onChange={props.onSliderChange}\n        />}\n\n    </div>\n);\n\n\n\nexport default Speeds;","import React from \"react\";\nimport Draggable from 'react-draggable';\n\nconst MoveInput = (props) => {\n    const instructTurn = (e) => {\n        if(e.key==='Enter'){\n            props.algorithm(document.getElementById('moveInput').value,'Custom');\n        }\n        e.stopPropagation();\n    };\n\n    return (\n        <div style={{position: \"absolute\", zIndex: \"99\"}}>\n            <Draggable\n                handle=\".handle\"\n                defaultPosition={{x:/*window.innerWidth-220*/0 , y: 150}}\n                position={null}\n                grid={[50, 50]}\n                scale={1}\n                onStart={props.handleStart}\n                onDrag={props.handleDrag}\n                onStop={props.handleStop}>\n                <div>\n                    <div className=\"handle\" style={{color:\"grey\"}}>Drag from here</div>\n                    <div>\n                        <input placeholder=\"type moves here\" id=\"moveInput\" onKeyDown={instructTurn} style={{borderRadius: \"4px\", margin: \"1px\",border: \"1.5px solid #007bff\",width:\"200px\"}}></input>\n                        <button id=\"moveSubmit\" onClick={() => props.algorithm(document.getElementById('moveInput').value,'Custom')}>Enter</button>\n                    </div>\n                </div>\n            </Draggable>\n        </div>\n    );\n};\n\nexport default MoveInput;","import React from 'react';\nimport \"./SolverInfo.css\"\n\nconst SolverInfo = (props) => (\n    <div className={(window.innerWidth > 900&&window.innerHeight>580)?\"sideSolverInfo\":\"solverInfo\"}>\n        <div className=\"setLengthWrapper\">\n            Total Moves: <div className=\"setLength\">{props.solvedSetLength}</div>\n        </div>\n        <div className=\"setLengthWrapper\">\n            Current Move: <div className=\"setLength\">{props.prevSetLength}</div>\n        </div>\n    </div>\n)\n\nexport default SolverInfo;","import React from 'react';\nimport \"./ColorPickerInfo.css\"\n\nconst ColorPickerInfo = (props) => (\n    <div className={(window.innerWidth > 900&&window.innerHeight>580)?\"sideSolverInfo\":\"solverInfo\"}>\n        <div className=\"setLengthWrapper\">\n            Current Color: <div className=\"setLength\" style={{backgroundColor:props.colorPicked}}></div>\n        </div>\n    </div>\n)\n\nexport default ColorPickerInfo;","import React from 'react';\nimport \"./Controls.css\";\n\n\nlet centerButtons=[];\nlet singleButtons=[];\nlet multiButtons=[];\nlet singleCols=[];\nlet multiCols=[];\nlet key=0;\n\nfunction namesToColors(face){\n    switch(face){\n        case 'F':\n            return {\n                bgc: 'white',\n                color: 'black',\n            }\n        case 'U':\n            return {\n                bgc: 'blue',\n                color: 'white',\n            }\n        case 'R':\n            return {\n                bgc: 'red',\n                color: 'white',\n            }\n        case 'B':\n            return {\n                bgc: 'yellow',\n                color: 'black',\n            }\n        case 'L':\n            return {\n                bgc: 'orange',\n                color: 'black',\n            }\n        case 'D':\n            return {\n                bgc: 'green',\n                color: 'white',\n            }\n        default:\n    }\n\n}\n\n//generate data for buttons and pass down to props. Better than trying to do in here\nconst Controls = props => {\n    centerButtons=[];\n    singleButtons=[];\n    multiButtons=[];\n    singleCols=[];\n    multiCols=[];\n\n    return (\n        <div id=\"controlsDiv\">\n            {\n                props.size%2 ? \n                <div className=\"centerMoves\" style={{marginRight: \"5px\"}}>\n                    <div className='centerLayerColumns'>\n                    {\n                        props.generatedButtons.center.forEach(element => {\n                            centerButtons.push(\n                                <div className=\"moveBtn\" \n                                        key={key} \n                                        onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\n                                        onMouseEnter={(e)=>props.mouseEnter(element.clockwise.name,element.clockwise.data,e)}\n                                        onMouseLeave={()=>props.mouseLeave()}\n                                        >\n                                        \n                                    {element.clockwise.name}\n                                </div>\n                            );\n                            key+=1\n                            centerButtons.push(\n                                <div className=\"moveBtn\" \n                                        key={key} \n                                        onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                        style={{position:\"relative\", left: \"0px\",backgroundColor: \"magenta\",width:\"45px\"}}\n                                        onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                        onMouseLeave={()=>props.mouseLeave()}\n                                        >\n                                    {element.counter.name}\n                                </div>\n                            );\n                            key+=1\n                        })\n                    }\n                    {centerButtons}\n                    </div>\n                </div> : \"\"\n            }\n            <div className=\"singleLayerMoves\" style={{marginRight: \"5px\"}}>\n                {\n                    props.generatedButtons.single.forEach(element => {\n                        let colors = namesToColors(element.counter.face);\n                        if(element.counter.face === 'F') singleButtons.push([],[]);\n                        let lengthBtns = singleButtons.length-2;\n                        let lengthBtns1 = singleButtons.length-1;\n                        singleButtons[lengthBtns].push(\n                            <div className=\"moveBtn\" \n                                    key={key} \n                                    onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                    style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                    onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                    onMouseLeave={()=>props.mouseLeave()}\n                                    >\n                                {element.counter.name}\n                            </div>\n                        )\n                        key+=1;\n                        singleButtons[lengthBtns1].push(\n                            <div className=\"moveBtn\" \n                                key={key} \n                                onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                onMouseLeave={()=>props.mouseLeave()}\n                                >\n                                {element.clockwise.name}\n                            </div>\n                        )\n                        key+=1;\n                    })\n\n                }\n                {\n                    singleButtons.forEach(element =>{\n                        key+=1;\n                        singleCols.push(\n                            <div key={key} className='singleLayerColumns'>\n                                {element}\n                            </div>\n                        )\n                    })\n                }\n                {\n                    singleCols\n                }\n            </div>\n            <div className=\"multiLayerMoves\">\n            {\n                    props.generatedButtons.multi.forEach(element => {\n                        let colors = namesToColors(element.counter.face);\n                        if(element.counter.face === 'F') multiButtons.push([],[]);\n                        let lengthBtns = multiButtons.length-2;\n                        let lengthBtns1 = multiButtons.length-1;\n                        multiButtons[lengthBtns].push(\n                            <div className=\"moveBtn\" \n                                key={key} \n                                onMouseDown={() => props.rotateOneFace(element.counter.name,element.counter.data)} \n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                onMouseEnter={()=>props.mouseEnter(element.counter.name,element.counter.data)}\n                                onMouseLeave={()=>props.mouseLeave()}\n                                >\n                                {element.counter.name}\n                            </div>\n                        )\n                        key+=1;\n                        multiButtons[lengthBtns1].push(\n                            <div className=\"moveBtn\" \n                                key={key} \n                                onMouseDown={() => props.rotateOneFace(element.clockwise.name,element.clockwise.data)} \n                                style={{position:\"relative\", left: \"0px\",backgroundColor: colors.bgc,color: colors.color,width:\"45px\"}}\n                                onMouseEnter={()=>props.mouseEnter(element.clockwise.name,element.clockwise.data)}\n                                onMouseLeave={()=>props.mouseLeave()}\n                                >\n                                {element.clockwise.name}\n                            </div>\n                        )\n                        key+=1;\n                    })\n\n                }\n                {\n                    multiButtons.forEach(element =>{\n                        key+=1;\n                        multiCols.push(\n                            <div key={key} className='multiLayerColumns'>\n                                {element}\n                            </div>\n                        )\n                    })\n                }\n                {\n                    multiCols\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Controls;","const sizeLimit = 30;\n\nconst cross = \"01R 01R 01L' 01D 01F 01F 01R' 01D' 01R' 01L 01U' 01D 01R 01D 01B 01B 01R' 01U 01D 01D\";\nconst checkerboard = \"01U 01U 01D 01D 01R 01R 01L 01L 01F 01F 01B 01B\";\nconst checkerboard1 = \"01U' 01R 01R 01L 01L 01F 01F 01B 01B 01U' 01R 01L 01F 01B' 01U 01F 01F 01D 01D 01R 01R 01L 01L 01F 01F 01U 01U 01F 01F 01U' 01F 01F\";\nconst anaconda = \"01L 01U 01B' 01U' 01R 01L' 01B 01R' 01F 01B' 01D 01R 01D' 01F'\";\nconst python = \"01F 01F 01R' 01B' 01U 01R' 01L 01F' 01L 01F' 01B 01D' 01R 01B 01L 01L\";\nconst sixSpots = \"01U 01D' 01R 01L' 01F 01B' 01U 01D'\";\nconst cubex3 = \"01U' 01L' 01U' 01F' 01R 01R 01B' 01R 01F 01U 01B 01B 01U 01B' 01L 01U' 01F 01U 01R 01F'\";\nconst rings = \"02R 03R 04R 05R 02B' 03B' 04B' 01L 01L 02F 02B 01L 01L 02B' 02D' 03D' 04D' 05D' 02F' 01L 01L 02F 02B 01L 01L 02B' 02D 02D 03D 03D 04D 04D 05D 05D 03R 04R 01U' 03R' 04R' 02D' 03D' 04D' 05D' 03R 04R 01U 02R' 03R' 04R' 05R' 03F' 04F' 03R' 04R' 03F 04F 02F 03F 04F 05F 02L 02L 03L 03L 04L 04L 02F 02F 03R 03R 04R 04R 02B 02B 03B 03B 04B 04B 02L 02L\";\nconst cubex4Twisted = \"01B' 02R 02R 02L 02L 01U 01U 02R 02R 02L 02L 01B 01F 01F 01R 01U' 01R 01U 01R 01R 01U 01R 01R 01F' 01U 01F' 01U 02U 01L 02L 01U' 02U' 01F 01F 02F 02F 01D 02D 01R' 02R' 01U 02U 01F 02F 01D 01D 02D 02D 01R 01R 02R 02R\";\nconst cubex2 = \"01F 01L 01F 01U' 01R 01U 01F 01F 01L 01L 01U' 01L' 01B 01D' 01B' 01L 01L 01U\";\n\n//convertRuwixAlgo(\"\".split(' ').join(''));\nconst checkboardInCube = convertRuwixAlgo(\"BDF'B'DL2ULU'BD'RBRD'RL'FU2D\");\nconst wire = convertRuwixAlgo(\"R L F B R L F B R L F B R2 B2 L2 R2 B2 L2\".split(' ').join(''));\nconst perpendicularLines = convertRuwixAlgo(\"R2 U2 R2 U2 R2 U2 L2 D2 L2 D2 L2 D2 L2 R2\".split(' ').join(''));\nconst verticalStripes = convertRuwixAlgo(\"F U F R L2 B D' R D2 L D' B R2 L F U F\".split(' ').join(''));\nconst giftBox = convertRuwixAlgo(\"U B2 R2 B2 L2 F2 R2 D' F2 L2 B F' L F2 D U' R2 F' L' R'\".split(' ').join(''));\nconst twister = convertRuwixAlgo(\"F R' U L F' L' F U' R U L' U' L F'\".split(' ').join(''));\nconst spiral = convertRuwixAlgo(\"L' B' D U R U' R' D2 R2 D L D' L' R' F U\".split(' ').join(''));\nconst fourCrosses = convertRuwixAlgo(\"U2 R2 L2 F2 B2 D2 L2 R2 F2 B2\".split(' ').join(''));\nconst unionJack = convertRuwixAlgo(\"U F B' L2 U2 L2 F' B U2 L2 U\".split(' ').join(''));\nconst displaceMotif = convertRuwixAlgo(\"L2 B2 D' B2 D L2 U R2 D R2 B U R' F2 R U' B' U'\".split(' ').join(''));\nconst viaduct = convertRuwixAlgo(\"R2 U2 L2 D B2 L2 B2 R2 D' U L' D F' U' R2 F' U B2 U2 R'\".split(' ').join(''));\nconst staircase = convertRuwixAlgo(\"L2 F2 D' L2 B2 D' U' R2 B2 U' L' B2 L D L B' D L' U\".split(' ').join(''));\nconst wrapped2x2 = convertRuwixAlgo(\"D' B2 F2 L2 U' F2 R2 D F2 U2 L' B R' U' L' F D' F L D2\".split(' ').join(''));\nconst exchangedDuckFeet = convertRuwixAlgo(\"U F R2 F' D' R U B2 U2 F' R2 F D B2 R B'\".split(' ').join(''));\nconst pyraminx = convertRuwixAlgo(\"D L' U R' B' R B U2 D B D' B' L U D'\".split(' ').join(''));\nconst twinPeaks = convertRuwixAlgo(\"U L2 B2 R2 U R2 D' U L F' U L' D B' U L B' L R' U'\".split(' ').join(''));\nconst cornerPyramid = convertRuwixAlgo(\"U' D B R' F R B' L' F' B L F R' B' R F' U' D\".split(' ').join(''));\nconst sixTwoOne = convertRuwixAlgo(\"U B2 D2 L B' L' U' L' B D2 B2\".split(' ').join(''));\nconst yinYang = convertRuwixAlgo(\"R L B F R L U' D' F' B' U D\".split(' ').join(''));\nconst snakeEyes = convertRuwixAlgo(\"R2 U2 R2 U2 R2 U2\".split(' ').join(''));\nconst weirdo = convertRuwixAlgo(\"R' F' U F2 U' F R' F2 D2 F2 D2 F2 D F2 R2 U2\".split(' ').join(''));\n\nfunction convertRuwixAlgo(algoStr){\n    return algoStr\n        .split('')\n        .map((char,i)=>\n            (char!==\"'\"&&char!==\"2\")?\n                \" 01\"+char:\n                char===\"2\"?\n                \" 01\"+algoStr[i-1]:\n                char\n                )\n        .join('')\n        .trim();\n}\n\nlet bundle = (name,moveSet,rangeLow,rangeHigh) => {\n    let sets = [];\n    sets.push(\n        {\n            name : name,\n            moves : moveSet,\n            worksFor: []\n        }\n    );\n    for (let i = rangeLow; i <= rangeHigh; i++){\n            sets[0].worksFor.push(i);\n    }\n    return sets;\n}\n\nlet blankBundle = (name) => {\n    let cubeSizes = [];\n    for(let i = 2; i<=sizeLimit;i++) cubeSizes.push(i);\n    return {\n        name : name,\n        worksFor: cubeSizes\n    }\n}\n\nlet generalizedBundle = (name,moveSet,moveSet2) => {\n    let sets = [];\n    for (let i = 3; i <= sizeLimit; i++){\n        let algoName = name;\n        if(name === \"Cube x3\"){\n            algoName=algoName.split('');\n            algoName.pop();\n            algoName.push(i);\n            algoName=algoName.join('');\n        }\n        sets.push(\n            {\n                name : algoName,\n                moves : generalizerLower(i,moveSet,moveSet2),\n                worksFor: [i]\n            }\n        );\n        // Interesting filter but all look the same, so disbaled\n        if(i<-1){\n            sets.push({\n                name : algoName+\" (Inverse)\",\n                moves : generalizerUpper(i,moveSet),\n                worksFor: [i]\n            });\n        }\n    }\n    return sets;\n}\n\nlet generalizerLower = (size,moveSet,moveSet2) => {\n    const moveParts = [];\n    for(let i = 1; i<=Math.floor(size/2); i++){\n        if(moveSet2 && i%2) moveParts.push(baseLower(i,moveSet2));\n        else moveParts.push(baseLower(i,moveSet));\n    }\n    return moveParts.join(\" \");\n}\n\nlet baseLower = (depth,moveSet) => {\n    const moves = [];\n    if (depth>1){\n        moveSet.split(\" \").forEach(e=>moves.push(move(depth,e.substring(2).toLowerCase())));\n    }\n    else moveSet.split(\" \").forEach(e=>moves.push(move(depth,e.substring(2).toUpperCase())));\n    return moves.join(\" \");\n}\n\nlet generalizerUpper = (size,moveSet) => {\n    const moveParts = [];\n    for(let i = 1; i<=Math.floor(size/2); i++){\n        moveParts.push(baseUpper(i,moveSet));\n    }\n    return moveParts.join(\" \");\n}\n\nlet baseUpper = (depth,moveSet) => {\n    const moves = [];\n    moveSet.split(\" \").forEach(e=>moves.push(move(depth,e.substring(2).toUpperCase())));\n    return moves.join(\" \");\n}\n\nfunction move(depth,side){\n    return ((depth<10? \"0\":\"\") + depth + side);\n}\n\nlet algorithms = [\n    blankBundle(\"None Selected\"),\n    ...generalizedBundle(\"Anaconda\",anaconda),\n    ...generalizedBundle(\"Cross\",cross),\n    ...bundle(\"Cube x2\",cubex2,2,4),\n    ...generalizedBundle(\"Cube x3\",cubex3),\n    ...bundle(\"Cube x4 Twisted\",cubex4Twisted,4,4),\n    ...generalizedBundle(\"Checkerboard\",checkerboard),\n    ...generalizedBundle(\"Checkerboard1\",checkerboard1),\n    ...generalizedBundle(\"Checkerboard In Cube\",checkboardInCube),\n    ...generalizedBundle(\"Corner Pyramid\",cornerPyramid),\n    ...generalizedBundle(\"Displaced Motif\",displaceMotif),\n    ...generalizedBundle(\"Exchanged Duck Feet\",exchangedDuckFeet),\n    ...generalizedBundle(\"Four Crosses\",fourCrosses),\n    ...generalizedBundle(\"Gift Box\",giftBox),\n    ...generalizedBundle(\"Perpendicular Lines\",perpendicularLines),\n    ...generalizedBundle(\"Pyraminx\",pyraminx),\n    ...generalizedBundle(\"Python\",python),\n    ...bundle(\"Rings\",rings,6,6),\n    ...generalizedBundle(\"Six Spots\",sixSpots),\n    ...generalizedBundle(\"Six Spots + Cross\",sixSpots,cross),\n    ...generalizedBundle(\"Six-Two-One\",sixTwoOne),\n    ...bundle(\"Snake Eyes\",snakeEyes,3,3),\n    ...generalizedBundle(\"Spiral\",spiral),\n    ...generalizedBundle(\"Staircase\",staircase),\n    ...generalizedBundle(\"Twin Peaks\",twinPeaks),\n    ...generalizedBundle(\"Twister\",twister),\n    ...generalizedBundle(\"Union Jack\",unionJack),\n    ...generalizedBundle(\"Vertical Stripes\",verticalStripes),\n    ...generalizedBundle(\"Viaduct\",viaduct),\n    ...generalizedBundle(\"Weirdo\",weirdo),\n    ...bundle(\"Wire\",wire,3,3),\n    ...generalizedBundle(\"Wrapped 2x2\",wrapped2x2),\n    ...generalizedBundle(\"Yin Yang\",yinYang),\n]\n\nexport default algorithms;","/* \n * \n *      Sasha Peters\n *      Created working function: Saturday, December 14, 2019\n *      \n */\n\nimport whiteSolver from \"./middles/white\"\nimport yellowSolver from \"./middles/yellow\"\nimport blueSolver from \"./middles/blue\"\nimport greenSolver from \"./middles/green\"\nimport orangeSolver from \"./middles/orange\"\n\nfunction solveMiddleLogic(cubeDimensions,rubiksObjectAtIndex,index){\n    \n    let dim = cubeDimensions;\n    let faceColor = Math.floor((index)/((dim-2)*(dim-2)));\n\n    // Coordinates organized\n    let current = {\n        x:rubiksObjectAtIndex[6],\n        y:rubiksObjectAtIndex[7],\n        z:rubiksObjectAtIndex[8]\n    };\n    let solved = {\n        x:rubiksObjectAtIndex[9],\n        y:rubiksObjectAtIndex[10],\n        z:rubiksObjectAtIndex[11]\n    };\n\n    function solve(faceColor){\n        switch(faceColor){\n            case 0:\n                // Solved for all sizes\n                return whiteSolver(current,solved,dim,index);\n            case 1:\n                // Solved for all sizes\n                return yellowSolver(current,solved,dim,index);\n            case 2:\n                // Solved for all sizes\n                return blueSolver(current,solved,dim);\n            case 3:\n                // In Progress. Solved for 4x4\n                return orangeSolver(current,solved,dim);\n            case 4:\n                // In Progress. Solved for 4x4\n                return greenSolver(current,solved,dim,index);\n            default:\n                console.log(\"Should never reach here\");\n        }\n    }\n\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\n        \n    }\n\n    else{\n        return solve(faceColor);\n    }\n\n    return \"\";\n}\n\nexport default solveMiddleLogic;","import solveMiddleLogic from './solveMiddleLogic';\n\nfunction solveMiddles(cube,dim,moveStringToArray,index,middles){\n\n    // End function if 2x2\n    if(dim===2) return {solveState : 1};\n\n    const numberOfMiddles= ((dim-2)*(dim-2))*5;\n    const obj = {};\n    let moveString = \"\";\n\n    // Position middles for 3x3\n    if(dim===3){\n      if(cube[4][7] === 0 && cube[10][8] === 2){\n      }\n      else{\n        if(cube[4][8]===2){ //U\n          cube[12][6]===0 ? moveString+=\"02R'\" : moveString+=\"02U'\";\n        }\n        else if(cube[4][6]===0){//L\n          cube[10][8]===2 ? moveString+=\"02U'\" : moveString+=\"02R'\";\n        }\n        else if(cube[4][6]===2){//R\n          cube[10][8]===2 ? moveString+=\"02U\" : moveString+=\"02R'\";\n        }\n        else if(cube[4][8]===0){//D\n          cube[12][6]===0 ? moveString+=\"02R\" : moveString+=\"02U'\";\n        }\n        else if(cube[4][7]===2){//B\n          cube[10][8]===2 ? moveString+=\"02U2\" : moveString+=\"02F'\";\n        }\n        else moveString+=\"02B'\"//F\n      }\n\n      const moveArray = moveStringToArray(moveString);\n      moveString.trim().length ? obj.moveSet = moveArray : obj.solveState = 1;\n    }\n\n    // Solve logic for 4x4 and greater\n    else{\n      \n      if(index<numberOfMiddles){ \n        moveString = solveMiddleLogic(dim,cube[middles[index]],index);\n        const moveArray = moveStringToArray(moveString);\n        moveString.trim().length ? obj.moveSet = moveArray : obj.rubiksIndex = index+1;\n      }\n\n      else{\n        obj.solveState = .1;\n        obj.rubiksIndex = 0;\n        obj.currentFunc = \"Solving\";\n        obj.moveSet = ['stop'];\n      }\n    }\n\n    return obj;\n}\n\nexport default solveMiddles;","import frontEdges from \"./edges/solveFrontEdgeSegments\";\nimport backEdges from \"./edges/solveBackEdgeSegments\";\nimport middleEdges from \"./edges/solveMiddleEdgeSegements\";\n\nfunction side(rubiksObject,color){\n    return rubiksObject.indexOf(color);\n}\n\nfunction solveEdgeLogic(cubeDimensions,rubiksObjectAtIndex,index,cube,edges){\n\n    const dim = cubeDimensions;\n    const edgesPerSection = 4;\n    const edgeLength = dim-2\n    const section = Math.floor(index/(edgeLength*edgesPerSection));\n    const whiteSide = side(rubiksObjectAtIndex,'white');\n    const yellowSide = side(rubiksObjectAtIndex,'yellow');\n    const blueSide = side(rubiksObjectAtIndex,'blue');\n    const greenSide = side(rubiksObjectAtIndex,'green');\n\n    let moveString = \"\";\n\n    // Coordinates organized\n    let current = {\n        x:rubiksObjectAtIndex[6],\n        y:rubiksObjectAtIndex[7],\n        z:rubiksObjectAtIndex[8]\n    };\n    let solved = {\n        x:rubiksObjectAtIndex[9],\n        y:rubiksObjectAtIndex[10],\n        z:rubiksObjectAtIndex[11]\n    };\n\n    if(current.x===solved.x && current.y===solved.y && current.z===solved.z){\n        //console.log(rubiksObjectAtIndex);\n        if( (whiteSide === 0  && section === 0)||\n            (yellowSide === 3 && section === 1)||\n            (blueSide === 1   && section === 2)||\n            (greenSide === 5  && section === 2)){\n            //console.log(\"SOLVED\");\n            return \"\";\n        }      \n    }\n    switch(section){\n        case 0: \n            // Finished for now\n            moveString = frontEdges(current,solved,dim,whiteSide);\n            break;\n        case 1:\n            // Finished for now\n            moveString = backEdges(current,solved,dim,yellowSide);\n            break;\n        case 2:\n            // Not started\n            moveString = middleEdges(current,solved,dim);\n            break;\n        default:\n            console.log(\"Should never reach here\");\n    }\n\n    return moveString;\n}\n\nexport default solveEdgeLogic;","import solveEdgeLogic from './solveEdgeLogic';\n\nfunction solveEdges(cube,dim,moveStringToArray,edges,index){\n    const numCubeEdges = 12;\n    const innerEdgeLength = dim-2;\n    const numEdges = innerEdgeLength * numCubeEdges;\n    let moveString = \"\";\n    const obj = {};\n\n    if (index < numEdges){\n        moveString = solveEdgeLogic(dim,cube[edges[index]],index,cube,edges);\n        moveString.trim().length ? \n          obj.moveSet = moveStringToArray(moveString) :\n          obj.rubiksIndex = index+1;\n    }\n\n    else {\n      obj.solveState = 1;\n      obj.rubiksIndex = 0;\n      obj.currentFunc = \"Solving\";\n      obj.moveSet = ['stop'];\n    }\n\n    return obj;\n}\n\nexport default solveEdges;","import solveWhiteCross from \"./edges/solveWhiteCross\"\nimport solveWhiteCorners from \"./corners/solveWhiteCorners\"\nimport solveMiddleEdges from \"./edges/solveMiddleEdges\"\nimport solveYellowCross from \"./edges/solveYellowCross\"\nimport alignYellowCross from \"./edges/alignYellowCross\"\nimport solveYellowCorners from \"./corners/solveYellowCorners\"\nimport alignYellowCorners from \"./corners/alignYellowCorners\"\nimport solveMiddles from \"./solveMiddles\"\nimport solveEdges from \"./solveEdges\"\n\nconst CONSTANTS = {\n    SOLVE_MIDDLES: 0,\n    SOLVE_EDGES: 0.1,\n    SOLVE_WHITE_CROSS: 1,\n    SOLVE_WHITE_CORNERS: 2,\n    SOLVE_MIDDLE_EDGES: 3,\n    SOLVE_YELLOW_CROSS: 4,\n    ALIGN_YELLOW_CROSS: 5,\n    ALIGN_YELLOW_CORNERS: 6,\n    SOLVE_YELLOW_CORNERS: 7\n}\n\nfunction solver(solveState,rubiksObject,cubeDimension,moveStringToArray,solveMoves,rubiksIndex,middles,edges,corners){\n    switch(solveState){\n        case CONSTANTS.SOLVE_MIDDLES:\n            return solveMiddles(rubiksObject,cubeDimension,moveStringToArray,rubiksIndex,middles);\n        case CONSTANTS.SOLVE_EDGES:\n            return solveEdges(rubiksObject,cubeDimension,moveStringToArray,edges,rubiksIndex);\n        case CONSTANTS.SOLVE_WHITE_CROSS:\n            return solveWhiteCross(rubiksObject,cubeDimension,moveStringToArray,edges);\n        case CONSTANTS.SOLVE_WHITE_CORNERS:\n            return solveWhiteCorners(rubiksObject,cubeDimension,moveStringToArray,corners);\n        case CONSTANTS.SOLVE_MIDDLE_EDGES:\n            return solveMiddleEdges(rubiksObject,moveStringToArray,edges,cubeDimension);\n        case CONSTANTS.SOLVE_YELLOW_CROSS:\n            return solveYellowCross(rubiksObject,moveStringToArray,edges,cubeDimension);\n        case CONSTANTS.ALIGN_YELLOW_CROSS:\n            return alignYellowCross(rubiksObject,moveStringToArray,edges,cubeDimension);\n        case CONSTANTS.ALIGN_YELLOW_CORNERS:\n            return alignYellowCorners(rubiksObject,cubeDimension,moveStringToArray,corners);\n        case CONSTANTS.SOLVE_YELLOW_CORNERS:\n            return solveYellowCorners(rubiksObject,cubeDimension,moveStringToArray,solveMoves,corners);\n        default:\n            console.log(\"invalid solve state\");\n    }\n}\n\nexport default solver;","import * as THREE from \"three\";\n\n// Functions to generate/manipulate cube\nconst cube = {\n    // Generates the inital solved state of rubiksObject\n    generateSolved : function (_x,_y,_z){\n        const size = _z;\n        const half = Math.floor(size/2);\n        const tempArr = [];\n        const middles = [];\n        const edges = [];\n        const corners = [];\n        const tempMiddles = [\n          [], // white\n          [], // yellow\n          [], // blue\n          [], // green\n          [], // orange\n          []  // red\n        ];\n        const tempEdges = [\n          [[],[],[],[]], // white edges\n          [[],[],[],[]], // middle edges\n          [[],[],[],[]]\n        ]\n    \n        for(let j = 0; j < _y; j++){      // Move back along the y-axis\n          for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\n            for(let i = 0; i < _x; i++){  // Traverse across the x-axis\n              let side0 = \"black\";\n              let side1 = \"black\";\n              let side2 = \"black\";\n              let side3 = \"black\";\n              let side4 = \"black\";\n              let side5 = \"black\";\n              let edgeType = null;\n              let middleType = null;\n              if(i===_x-1) side2 = \"red\";\n              else if (i===0) side4 =\"orange\";\n              if(j===_y-1) side3 = \"yellow\";\n              else if (j===0) side0 =\"white\";\n              if(k===_z-1) side1 = \"blue\";\n              else if (k===0) side5 =\"green\";\n              let tempCount = 0;\n              if(j===0 || j === _y-1) tempCount++;\n              if(k===0 || k === _z-1) tempCount++;\n              if(i===0 || i === _x-1) tempCount ++;\n              let tempType = \"none\";\n    \n              if(tempCount===1) {\n                tempType = \"middle\";\n                if(size%2){\n                  if((j===half&&k===half)||\n                     (j===half&&i===half)||\n                     (i===half&&k===half)){\n                    middleType=\"center\"\n                  }\n                }\n                if(j===0) {tempMiddles[0].push(tempArr.length);middleType=tempMiddles[0].length+1}\n                if(j===_y-1) {tempMiddles[1].push(tempArr.length);middleType=tempMiddles[1].length+1}\n                if(k===_z-1) {tempMiddles[2].push(tempArr.length);middleType=tempMiddles[2].length+1}\n                if(i===0) {tempMiddles[3].push(tempArr.length);middleType=tempMiddles[3].length+1}\n                if(k===0) {tempMiddles[4].push(tempArr.length);middleType=tempMiddles[4].length+1}\n                if(i===_x-1) {tempMiddles[5].push(tempArr.length);middleType=tempMiddles[5].length+1}\n              }\n    \n              else if(tempCount===2) {\n                // do stuff in here to populate edges\n                tempType = \"edge\";\n                if(j === 0){\n                  if(k===_z-1){\n                    if(_x%2&&tempEdges[0][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(_x%2&&tempEdges[0][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(_x%2&&tempEdges[0][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(_x%2&&tempEdges[0][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][3].push(tempArr.length);\n                  }\n                } else if(j === _y-1){\n                  if(k===_z-1){\n                    if(_x%2&&tempEdges[1][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(_x%2&&tempEdges[1][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(_x%2&&tempEdges[1][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(_x%2&&tempEdges[1][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][3].push(tempArr.length);\n                  }\n                } else {\n                  if(k===_z-1 && i===0){\n                    if(_x%2&&tempEdges[2][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][0].push(tempArr.length);\n                  }\n                  else if(k===_z-1 && i===_x-1){\n                    if(_x%2&&tempEdges[2][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][1].push(tempArr.length);\n                  }\n                  else if(k===0 && i===_x-1){\n                    if(_x%2&&tempEdges[2][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][2].push(tempArr.length);\n                  }\n                  else if(k===0 && i===0){\n                    if(_x%2&&tempEdges[2][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][3].push(tempArr.length);\n                  }\n                }\n              }\n              else if(tempCount===3) {\n                tempType = \"corner\";\n                corners.push(tempArr.length);\n              }\n    \n              tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\n                            i,j,k, // Current position x,y,z\n                            i,j,k, // Solved position x,y,z\n                            tempType,\n                            edgeType,\n                            middleType\n                          ]);\n            }\n          }\n        }\n\n        // for(let i = 0; i < size-2; i++){\n        //   let row = [];\n        //   for(let j = 0; j < size-2; j++){\n        //     row.push(tempMiddles[3][i*(size-2)+j])\n        //   }\n        //   console.log(row);\n        // }\n        // Restructure last 3 middles for cubes 6x6 and greater\n        if(size >= 6){\n          let middleEdgeLength = size-2-1;\n          // loop through last 3 middles\n          for(let k = 3; k < 6; k++){\n            let middleCorners = [];\n            let middleRestructure = [];\n            let middleIndex = 0;\n\n            // generate empty arrays for each ring layer in middle\n            for(let i = 0; i < (half-1); i++) {\n              middleRestructure.push([]);\n            }\n            \n            // loop through each empty layer and populate\n            middleRestructure.forEach((layer,index) =>{\n              // treat 1d array as 2d matrix\n              for(let i = 0; i<= middleEdgeLength; i++){\n                for (let j = 0; j<= middleEdgeLength; j++){\n                  if((i===index||middleEdgeLength-i===index)\n                  &&(j>=index&&j<=middleEdgeLength-index)\n                  ){\n                    // pushes top row of ring\n                    ((j===0+index||j===middleEdgeLength-index)&&\n                      ((j<Math.ceil(middleEdgeLength/2)-1)||\n                      (j>Math.ceil(middleEdgeLength/2)+(size%2?1:0))))?\n                    middleCorners.push(tempMiddles[k][middleIndex]):\n                    layer.push(tempMiddles[k][middleIndex]);\n                  }\n                  else if((i>index&&middleEdgeLength-i>index)\n                  &&(j===index||j===middleEdgeLength-index)\n                  ){\n                    // pushes sides of ring\n                    layer.push(tempMiddles[k][middleIndex]);\n                  }\n                  else if(index===half-2&&i===j&&i===middleEdgeLength/2){\n                    // pushes last middle into center ring\n                    layer.push(tempMiddles[k][middleIndex]);\n                  }\n                  middleIndex+=1;\n                }\n              }\n              middleIndex=0;\n            });\n            let temp = middleRestructure[middleRestructure.length-1];\n            middleRestructure[middleRestructure.length-1]=middleCorners;\n            middleRestructure.push(temp);\n            middleRestructure.reverse();\n            //console.log(middleRestructure.flat(2));\n            tempMiddles[k] = middleRestructure.flat(2);\n          }\n        }\n\n        \n        for(let i = 0; i < 6; i++){\n          for(let j = 0; j < (_x-2)*(_x-2); j++){\n            middles.push(tempMiddles[i][j]);\n          }\n        }\n\n        for(let i = 0; i < 3; i++){\n          for(let j = 0; j < 4; j++){\n            edges.push(...tempEdges[i][j]);\n          }\n        }\n        return {tempArr,middles,edges,corners};\n    },\n\n    generateBlank : function (_x,_y,_z){\n      const size = _x;\n      const half = Math.floor(size/2);\n      const tempArr = [];\n      // const middles = [];\n      // const edges = [];\n      const corners = [];\n      const tempMiddles = [\n        [], // white\n        [], // yellow\n        [], // blue\n        [], // green\n        [], // orange\n        []  // red\n      ];\n      const tempEdges = [\n        [[],[],[],[]], // white edges\n        [[],[],[],[]], // middle edges\n        [[],[],[],[]]\n      ]\n  \n      for(let j = 0; j < _y; j++){      // Move back along the y-axis\n        for(let k = _z-1; k >= 0; k--){ // Move down through the z-axis\n          for(let i = 0; i < _x; i++){  // Traverse across the x-axis\n            let side0 = \"black\";\n            let side1 = \"black\";\n            let side2 = \"black\";\n            let side3 = \"black\";\n            let side4 = \"black\";\n            let side5 = \"black\";\n            let edgeType = null;\n            let middleType = null;\n              // if(i===_x-1) side2 = \"white\";\n              // else if (i===0) side4 =\"white\";\n              // if(j===_y-1) side3 = \"white\";\n              // else if (j===0) side0 =\"white\";\n              // if(k===_z-1) side1 = \"white\";\n              // else if (k===0) side5 =\"white\";\n              if(i===_x-1) side2 = \"red\";\n              else if (i===0) side4 =\"orange\";\n              if(j===_y-1) side3 = \"yellow\";\n              else if (j===0) side0 =\"white\";\n              if(k===_z-1) side1 = \"blue\";\n              else if (k===0) side5 =\"green\";\n              let tempCount = 0;\n              if(j===0 || j === _y-1) tempCount++;\n              if(k===0 || k === _z-1) tempCount++;\n              if(i===0 || i === _x-1) tempCount ++;\n              let tempType = \"none\";\n    \n              if(tempCount===1) {\n                tempType = \"middle\";\n                if(size%2){\n                  if((j===half&&k===half)||\n                     (j===half&&i===half)||\n                     (i===half&&k===half)){\n                    middleType=\"center\"\n                  }\n                }\n                if(j===0) {tempMiddles[0].push(tempArr.length);middleType=tempMiddles[0].length+1}\n                if(j===_y-1) {tempMiddles[1].push(tempArr.length);middleType=tempMiddles[1].length+1}\n                if(k===_z-1) {tempMiddles[2].push(tempArr.length);middleType=tempMiddles[2].length+1}\n                if(i===0) {tempMiddles[3].push(tempArr.length);middleType=tempMiddles[3].length+1}\n                if(k===0) {tempMiddles[4].push(tempArr.length);middleType=tempMiddles[4].length+1}\n                if(i===_x-1) {tempMiddles[5].push(tempArr.length);middleType=tempMiddles[5].length+1}\n              }\n    \n              else if(tempCount===2) {\n                // do stuff in here to populate edges\n                tempType = \"edge\";\n\n                if(j === 0){\n                  if(k===_z-1){\n                    if(_x%2&&tempEdges[0][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(_x%2&&tempEdges[0][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(_x%2&&tempEdges[0][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(_x%2&&tempEdges[0][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[0][3].push(tempArr.length);\n                  }\n                } else if(j === _y-1){\n                  if(k===_z-1){\n                    if(_x%2&&tempEdges[1][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][0].push(tempArr.length);\n                  }\n                  else if(i===_x-1){\n                    if(_x%2&&tempEdges[1][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][1].push(tempArr.length);\n                  }\n                  else if(k===0){\n                    if(_x%2&&tempEdges[1][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][2].push(tempArr.length);\n                  }\n                  else if(i===0){\n                    if(_x%2&&tempEdges[1][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[1][3].push(tempArr.length);\n                  }\n                } else {\n                  if(k===_z-1 && i===0){\n                    if(_x%2&&tempEdges[2][0].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][0].push(tempArr.length);\n                  }\n                  else if(k===_z-1 && i===_x-1){\n                    if(_x%2&&tempEdges[2][1].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][1].push(tempArr.length);\n                  }\n                  else if(k===0 && i===_x-1){\n                    if(_x%2&&tempEdges[2][2].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][2].push(tempArr.length);\n                  }\n                  else if(k===0 && i===0){\n                    if(_x%2&&tempEdges[2][3].length+1===Math.floor(_x/2)){\n                      edgeType=\"center\";\n                    }\n                    tempEdges[2][3].push(tempArr.length);\n                  }\n                }\n              }\n              else if(tempCount===3) {\n                tempType = \"corner\";\n                corners.push(tempArr.length);\n              }\n  \n            tempArr.push([side0,side1,side2,side3,side4,side5, // piece colors\n                          i,j,k, // Current position x,y,z\n                          i,j,k, // solved position x,y,z\n                          tempType,\n                          edgeType,\n                          middleType\n                        ]);\n          }\n        }\n      }\n      //console.log(tempArr);\n      return tempArr;\n    },\n\n    generateButtonData : function(size){\n        let numLayers = Math.floor(size/2);\n        let centerLayer = Math.ceil(size/2);\n        const faces = ['F','U','R','B','L','D'];\n        const buttons = {\n          center : [], // Center rotations\n          single : [], // Single layer\n          multi : []  // Multi layer\n        };\n\n        if(size%2)\n          buttons.center.push(\n            {clockwise: {name:\"C1\",data:[0,-1,centerLayer,false]},\n             counter: {name:\"C1'\",data:[0,0,centerLayer,false]}},\n            {clockwise: {name:\"C2\",data:[1,-1,centerLayer,false]},\n            counter: {name:\"C2'\",data:[1,0,centerLayer,false]}},\n            {clockwise: {name:\"C3\",data:[2,-1,centerLayer,false]},\n            counter: {name:\"C3'\",data:[2,0,centerLayer,false]}}\n          )\n\n        for (let i = 0; i < numLayers; i++){\n          for(let j = 0; j < faces.length; j++){\n            let baseNameSingle = ((i<10? \"0\" : \"\") + (i+1) + faces[j]);\n            let baseNameMulti = ((i<10? \"0\" : \"\") + (i+1) + faces[j].toLowerCase());\n\n            buttons.single.push({\n              clockwise: {face:faces[j], name:baseNameSingle, data:[j,-1,i+1,false]},\n              counter: {face:faces[j], name:baseNameSingle+\"'\",data:[j,0,i+1,false]}\n            });\n            if(i>0){\n              buttons.multi.push({\n                clockwise: {face:faces[j],name:baseNameMulti, data:[j,-1,i+1,true]},\n                counter: {face:faces[j],name:baseNameMulti+\"'\",data:[j,0,i+1,true]}\n              });\n            }\n          }\n        }\n\n        return buttons;\n    },\n\n    generateMoveHints : function(image,cD){\n      const groups = [[],[],[],[],[],[]];\n      const geometry = new THREE.PlaneGeometry(1,1);\n      const material = new THREE.MeshBasicMaterial( {\n        map:image,\n        transparent: true,\n        color: 'black',\n        opacity:'.8',\n        side: THREE.DoubleSide\n      });\n\n      for(let k = 0; k < cD; k++){\n        let tempGroup = new THREE.Group();\n        let tempGroupOther = new THREE.Group();\n        for(let i = 0; i < 4; i++){\n          for(let j = 0; j<cD;j++){\n            let tempPlane = new THREE.Mesh( geometry, material );\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\n            if(i===0){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ((cD-1)+.51);\n              tempPlane.translateY((cD-1)-j);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ((cD-1)+.51);\n              tempPlaneOther.translateY((cD-1)-j);\n              tempPlaneOther.rotateZ(Math.PI);\n            }\n            else if(i===1){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY((cD-1)+.51);\n              tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY((cD-1)+.51);\n              tempPlaneOther.rotateX(Math.PI/2);\n            }\n            else if(i===2){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ(-.51);\n              tempPlane.translateY((cD-1)-j);\n              tempPlane.rotateX(Math.PI);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ(-.51);\n              tempPlaneOther.translateY((cD-1)-j);\n            }\n            else if(i===3){\n              tempPlane.translateX(cD-1-k);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY(-.51);\n              tempPlane.rotateX(-Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n  \n              tempPlaneOther.translateX(cD-1-k);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY(-.51);\n              tempPlaneOther.rotateX(-Math.PI/2);\n            }\n            tempGroup.add(tempPlane)\n            tempGroupOther.add(tempPlaneOther)\n          }\n        }\n        tempGroup.visible = false;\n        tempGroupOther.visible = false;\n        groups[2].push(tempGroup);\n        groups[5].push(tempGroupOther);\n      }\n  \n      // generate side 0 and 3 move hints\n      for(let k = 0; k < cD; k++){\n        let tempGroup = new THREE.Group();\n        let tempGroupOther = new THREE.Group();\n        for(let i = 0; i < 4; i++){\n          for(let j = 0; j<cD;j++){\n            let tempPlane = new THREE.Mesh( geometry, material );\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\n            if(i===0){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ((cD-1)+.51);\n              tempPlane.translateY(k);\n              tempPlane.rotateZ(-Math.PI/2);\n              \n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ((cD-1)+.51);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateX(Math.PI);\n              tempPlaneOther.rotateZ(Math.PI/2);\n            }\n            else if(i===1){\n              tempPlane.translateX((cD-1)+.51);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY(k);\n              tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)+.51);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateX(Math.PI/2);\n              tempPlaneOther.rotateY(Math.PI/2);\n            }\n            else if(i===2){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ(-.51);\n              tempPlane.translateY(k);\n              tempPlane.rotateX(Math.PI);\n              tempPlane.rotateZ(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ(-.51);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateZ(-Math.PI/2);\n            }\n            else if(i===3){\n              tempPlane.translateX(-.51);\n              tempPlane.translateZ((cD-1)-j);\n              tempPlane.translateY(k);\n              tempPlane.rotateX(-Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(-Math.PI/2);\n  \n              tempPlaneOther.translateX(-.51);\n              tempPlaneOther.translateZ((cD-1)-j);\n              tempPlaneOther.translateY(k);\n              tempPlaneOther.rotateX(-Math.PI/2);\n              tempPlaneOther.rotateY(Math.PI/2);\n              //tempPlaneOther.rotateZ(Math.PI);\n            }\n            tempGroup.add(tempPlane)\n            tempGroupOther.add(tempPlaneOther)\n          }\n        }\n        tempGroup.visible = false;\n        tempGroupOther.visible = false;\n        \n        groups[0].push(tempGroup);     //Clockwise for white, counter for yellow\n        groups[3].push(tempGroupOther);//Counter for white, clockwise for yellow\n      }\n  \n      // generate side 1 and 5 move hints\n      for(let k = 0; k < cD; k++){\n        let tempGroup = new THREE.Group();\n        let tempGroupOther = new THREE.Group();\n        for(let i = 0; i < 4; i++){\n          for(let j = 0; j<cD;j++){\n            let tempPlane = new THREE.Mesh( geometry, material );\n            let tempPlaneOther = new THREE.Mesh( geometry, material );\n            if(i===0){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY((cD-1)+.51);\n              tempPlane.rotateZ(-Math.PI/2);\n              tempPlane.rotateY(Math.PI/2);\n              \n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY((cD-1)+.51);\n              tempPlaneOther.rotateX(Math.PI);\n              tempPlaneOther.rotateZ(Math.PI/2);\n              tempPlaneOther.rotateY(Math.PI/2);\n            }\n            else if(i===1){\n              tempPlane.translateX((cD-1)+.51);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY((cD-1)-j);\n              //tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)+.51);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY((cD-1)-j);\n              //tempPlaneOther.rotateX(Math.PI);\n              tempPlaneOther.rotateY(Math.PI/2);\n            }\n            else if(i===2){\n              tempPlane.translateX((cD-1)-j);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY(-.51);\n              tempPlane.rotateX(Math.PI/2);\n              tempPlane.rotateZ(Math.PI/2);\n  \n              tempPlaneOther.translateX((cD-1)-j);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY(-.51);\n              tempPlaneOther.rotateX(Math.PI/2);\n              tempPlaneOther.rotateZ(-Math.PI/2);\n            }\n            else if(i===3){\n              tempPlane.translateX(-.51);\n              tempPlane.translateZ((cD-1)-k);\n              tempPlane.translateY((cD-1)-j);\n              tempPlane.rotateX(Math.PI);\n              tempPlane.rotateZ(Math.PI);\n              tempPlane.rotateY(-Math.PI/2);\n  \n              tempPlaneOther.translateX(-.51);\n              tempPlaneOther.translateZ((cD-1)-k);\n              tempPlaneOther.translateY((cD-1)-j);\n              tempPlaneOther.rotateX(-Math.PI);\n              tempPlaneOther.rotateY(Math.PI/2);\n              //tempPlaneOther.rotateZ(Math.PI);\n            }\n            tempGroup.add(tempPlane)\n            tempGroupOther.add(tempPlaneOther)\n          }\n        }\n        tempGroup.visible = false;\n        tempGroupOther.visible = false;\n        \n        groups[1].push(tempGroup);     //Clockwise for white, counter for yellow\n        groups[4].push(tempGroupOther);//Counter for white, clockwise for yellow\n      }\n      return groups;\n    },\n\n    // For visual cube\n    rotatePoint : function (c1,c2,direction,p1,p2,rotation){\n        let theta = rotation*Math.PI/180;\n        if(direction < 0) theta*=-1; \n        return { p1 : (Math.cos(theta) * (p1-c1) - Math.sin(theta) * (p2-c2) + c1),\n                 p2 : (Math.sin(theta) * (p1-c1) + Math.cos(theta) * (p2-c2) + c2)}\n    },\n\n    // rotate pieces attached to face (visual cube)\n    /**\n     * \n     * Possible Optimization!\n     * \n     * Instead of turning each piece individually,\n     * group the pieces to be turned and then turn the group.\n     * - Pros\n     *    - Less Code\n     *    - Easier on the renderer\n     * \n     * - Cons\n     *    - Not sure where to attempt implementation\n     * \n     * Development Stage: Trial\n     * \n     * - Resources\n     *    - https://jsfiddle.net/of1vfhzz/1/\n     *    - https://stackoverflow.com/questions/37779104/how-can-i-rotate-around-the-center-of-a-group-in-three-js\n     */\n    rotatePieces : function (rotate,tempCubes,state,setState){\n\n      // state variables asigned for shorter names\n      let centerPoint = state.cubeDimension/2-.5;\n      let cubes = state.cubes;\n      let turnDirection = state.turnDirection;\n      let speed = state.speed;\n      let start = state.start;\n      let face = state.face;\n      let cubeDepth = state.cubeDepth;\n      let isMulti = state.isMulti;\n\n      \n      //Rotate white center piece Face\n      if(face === 0){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n\n          //implement isMulti for all of these comparisons\n          if((isMulti || cubes[i].position.y > cubeDepth-2) && cubes[i].position.y < cubeDepth){\n            \n            // Turn piece based on rotation direction\n            turnDirection<0 ? cubes[i].rotation.y += .1745*speed/10 : cubes[i].rotation.y -= .1745*speed/10;\n\n            // Calculate circular movement\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.z,speed);\n\n            // corrects rounding errors\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            \n            // set new locations for face 0\n            cubes[i].position.x = newPoint.p1;\n            cubes[i].position.z = newPoint.p2;\n          }\n        }     \n      }\n      // blue\n      if(face === 1){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || cubes[i].position.z < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.z > state.cubeDimension - 1 - cubeDepth){\n            turnDirection<0 ? cubes[i].rotation.z -= .1745*speed/10 : cubes[i].rotation.z += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,cubes[i].position.x,cubes[i].position.y,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            cubes[i].position.x = newPoint.p1;\n            cubes[i].position.y = newPoint.p2;\n          }\n        }\n      }\n      // red\n      if(face === 2){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.x < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.x > state.cubeDimension - 1 - cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.y = newPoint.p1;\n            tempCubes[i].position.z = newPoint.p2;\n          }\n        }\n      }\n      // yellow\n      if(face === 3){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.y < state.cubeDimension + 1 - cubeDepth) && cubes[i].position.y > state.cubeDimension - 1 - cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.y += .1745*speed/10 : tempCubes[i].rotation.y -= .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.z,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.x = newPoint.p1;\n            tempCubes[i].position.z = newPoint.p2;\n          }\n        }\n      }\n      // orange\n      if(face === 4){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.x > cubeDepth-2) && cubes[i].position.x < cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.x -= .1745*speed/10 : tempCubes[i].rotation.x += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.y,tempCubes[i].position.z,10*speed/10);              \n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.y = newPoint.p1;\n            tempCubes[i].position.z = newPoint.p2;\n          }\n        }\n      }\n      // green\n      if(face === 5){\n        for(let i = 0; i<state.rubiksObject.length;i++){\n          if((isMulti || tempCubes[i].position.z > cubeDepth-2) && cubes[i].position.z < cubeDepth){\n            turnDirection<0 ? tempCubes[i].rotation.z -= .1745*speed/10 : tempCubes[i].rotation.z += .1745*speed/10;\n            let newPoint = rotate(centerPoint,centerPoint,turnDirection,tempCubes[i].position.x,tempCubes[i].position.y,10*speed/10);\n            if(start % 90 === 0){\n              newPoint.p1 = Math.round(newPoint.p1);\n              newPoint.p2 = Math.round(newPoint.p2);\n            }\n            tempCubes[i].position.x = newPoint.p1;\n            tempCubes[i].position.y = newPoint.p2;\n          }\n        }\n      } \n\n      return {start : start+speed,reload : true};\n    },\n    \n    // For memory cube\n    rotatePoint2 : function (c1,c2,direction,p1,p2){\n        let theta = Math.PI/2;\n        if(direction < 0) theta*=-1; \n        return { p1 : (- Math.sin(theta) * (p2-c2) + c1),\n                 p2 :   (Math.sin(theta) * (p1-c1) + c2)}\n    },\n\n    // Memory cube rotation (only rotates by 90 degrees at a time)\n    rotateFace : function (cubeFace,direction,cubeDepth,isMulti,cD,object){\n      let cubeDimension = cD;\n      let centerPoint = cD/2-.5;\n      let rubiksObject = [...object];\n      let degrees = 90;\n  \n      if(direction < 0)  degrees *=-1;\n  \n      // Side 0 (white center piece)\n      if (cubeFace === 0){ \n          for(let i = 0; i < rubiksObject.length; i++){\n  \n              // white side is y===0.\n              if ((isMulti || rubiksObject[i][7] > cubeDepth-2) &&\n                  rubiksObject[i][7] < cubeDepth){\n  \n                  // Rotate rubiksObject pieces to new location generated by rotatePoint2\n                  let newPoint = cube.rotatePoint2(centerPoint,\n                                                   centerPoint,\n                                                   degrees,\n                                                   rubiksObject[i][6],\n                                                   rubiksObject[i][8]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n  \n                  // Unfortunately chunky\n                  // Swaps colors around on the face to match rotations\n                  if(direction === 0){\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  }\n              }\n          }\n      }\n  \n      // Side 1 (blue center piece)\n      if (cubeFace === 1){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][8] < cubeDimension+1-cubeDepth) &&\n                  rubiksObject[i][8]>cubeDimension-1-cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,\n                                                   centerPoint,\n                                                   degrees,\n                                                   rubiksObject[i][6],\n                                                   rubiksObject[i][7]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][7] = newPoint.p2;\n                  if(direction === 0){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  }\n              }\n          }\n      }\n      // Side 2 (red center piece)\n      if (cubeFace === 2){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][6] < cubeDimension+1-cubeDepth) &&\n                  rubiksObject[i][6]>cubeDimension-1-cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,\n                                                   centerPoint,\n                                                   degrees,\n                                                   rubiksObject[i][7],\n                                                   rubiksObject[i][8]);\n                  rubiksObject[i][7] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n                  if(direction === 0){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][1];\n                      rubiksObject[i][1] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][5];\n                      rubiksObject[i][5] = tempFace;\n                  }\n              }\n          }\n      }\n      // Side 3 (yellow center piece)\n      if (cubeFace === 3){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][7] < cubeDimension+1-cubeDepth) && rubiksObject[i][7]>cubeDimension-1-cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][8]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n                  if(direction === -1){\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  }\n              }\n          }\n      }\n      // Side 4 (orange center piece)\n      if (cubeFace === 4){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][6] > cubeDepth-2) && rubiksObject[i][6] < cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][7],rubiksObject[i][8]);\n                  rubiksObject[i][7] = newPoint.p1;\n                  rubiksObject[i][8] = newPoint.p2;\n                  if(direction === -1){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][1];\n                      rubiksObject[i][1] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][5];\n                      rubiksObject[i][5] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][5];\n                      rubiksObject[i][5] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][1];\n                      rubiksObject[i][1] = tempFace;\n                  }\n              }\n          } \n      }\n      // Side 5 (green center piece)\n      if (cubeFace === 5){\n          for(let i = 0; i < rubiksObject.length; i++){\n              if ((isMulti || rubiksObject[i][8] > cubeDepth-2) && rubiksObject[i][8] < cubeDepth){\n                  let newPoint = cube.rotatePoint2(centerPoint,centerPoint,degrees,rubiksObject[i][6],rubiksObject[i][7]);\n                  rubiksObject[i][6] = newPoint.p1;\n                  rubiksObject[i][7] = newPoint.p2;\n                  if(direction === -1){\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][4];\n                      rubiksObject[i][4] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][2];\n                      rubiksObject[i][2] = tempFace;\n                  } else {\n                      let tempFace = rubiksObject[i][3];\n                      rubiksObject[i][3] = rubiksObject[i][2];\n                      rubiksObject[i][2] = rubiksObject[i][0];\n                      rubiksObject[i][0] = rubiksObject[i][4];\n                      rubiksObject[i][4] = tempFace;\n                  }\n              }\n          } \n      }\n  \n      return rubiksObject;\n    },\n\n    // Changes values in state to trigger face rotation\n    rotateCubeFace : function (face,direction,cubeDepth,isMulti,blockMoveLog,moveLog,solveMoves,end,solveState) {\n    let obj = {};\n    if(!blockMoveLog){\n      \n      let tempMove = \"\";\n      cubeDepth<10 ? tempMove+=\"0\"+cubeDepth : tempMove += cubeDepth;\n      if(face === 0) !isMulti ? tempMove += \"F\" : tempMove += \"f\";\n      else if(face === 1) !isMulti ? tempMove += \"U\" : tempMove += \"u\";\n      else if(face === 2) !isMulti ? tempMove += \"R\" : tempMove += \"r\";\n      else if(face === 3) !isMulti ? tempMove += \"B\" : tempMove += \"b\";\n      else if(face === 4) !isMulti ? tempMove += \"L\" : tempMove += \"l\";\n      else if(face === 5) !isMulti ? tempMove += \"D\" : tempMove += \"d\";\n      if(direction === -1) tempMove += \"'\";\n\n      moveLog&&moveLog.length > 0 ?\n        obj.moveLog = (moveLog + \" \" + tempMove) :\n        obj.moveLog = (tempMove);\n      \n      // Keeps tracks of solver's moves\n      if(solveState > -1) \n        obj.solveMoves = (solveMoves.length ? solveMoves + \" \" + tempMove : solveMoves + tempMove);\n    }\n\n    // Faces on opposite side of cube rotate backwards\n    if(face>2 && direction === -1) direction = 0;\n\n    else if (face>2 && direction === 0) direction = -1;\n\n    obj.blockMoveLog = false;\n    obj.face = face; // used\n    obj.turnDirection = direction; // used\n    obj.end = end + 90; \n    obj.cubeDepth = cubeDepth; // used\n    obj.isMulti = isMulti; // used\n    \n\n    return obj;\n  }\n}\n\nexport default cube;","// Generalized move function. Takes in array of moves and parse the moves\nconst moveFuncs = {\n    parseMoveArray : function(moveArray) {\n        //if(typeof moveArray === 'string') moveArray = [moveArray];\n        let shifted = moveArray.shift();\n\n        let tempFace = 0;\n        let tempDirection = -1;\n        let tempDepth = 1;\n        let tempIsMulti = false;\n\n        if(shifted){\n        if(shifted.length === 4) tempDirection=0;\n        tempDepth = parseInt(shifted.slice(0,2));\n\n        if(shifted.slice(2,3) === shifted.slice(2,3).toLowerCase()){\n            tempIsMulti = true;\n        }\n\n        if(shifted.slice(2,3).toUpperCase() === \"U\") tempFace = 1;\n        else if(shifted.slice(2,3).toUpperCase() === \"F\") tempFace = 0;\n        else if(shifted.slice(2,3).toUpperCase() === \"B\") tempFace = 3;\n        else if(shifted.slice(2,3).toUpperCase() === \"R\") tempFace = 2;\n        else if(shifted.slice(2,3).toUpperCase() === \"L\") tempFace = 4;\n        else if(shifted.slice(2,3).toUpperCase() === \"D\") tempFace = 5;\n\n        return [tempFace,tempDirection,tempDepth,tempIsMulti];\n        }\n    },\n\n    convertDataToMove : function(data) {\n        let move = \"\";\n        let face = ['F','U','R','B','L','D']\n        move+=data[2].toString().length<2?\"0\".concat(data[2]):data[2];\n        move+=(data[3]?face[data[0]].toLowerCase():face[data[0]])\n        data[1]===-1?move+=\"\":move+=\"'\"\n        return move;\n    },\n\n    convertMoveToData : function (move) {\n        if(move.length < 2) return false;\n        let data = [];\n        let face = ['F','U','R','B','L','D']\n        data.push(face.indexOf(move[2].toUpperCase()));\n        move.length < 4 ? data.push(-1) : data.push(0);\n        move[0]==='0' ? data.push(parseInt(move[1])) : data.push(parseInt(move.substring(0, 2)))\n        move[2].toUpperCase() === move[2] ? data.push(false) : data.push(true);\n        return data;\n    },\n\n    // Converts move string to move array\n    // handle move short hand characters. ex: fx => 01Fx 02Fx; x = \"\" or \"'\" or \"2\"\n    moveStringToArray : function (str) {\n        let tempArray = str.split(\" \");\n        let moveArray = [];\n\n        // Run through split string and create duplicates where needed\n        // Handle other short hands\n        for(let i = 0; i < tempArray.length;i++){\n            if(tempArray[i].length === 4 && tempArray[i].slice(3,4)===\"2\") {\n                let tempMove = tempArray[i].slice(0,3);\n                moveArray.push(tempMove);\n                moveArray.push(tempMove);\n            }\n            else {\n                moveArray.push(tempArray[i]);\n            }\n        }\n        return moveArray;\n    },\n\n    // generate a random move\n    generateMove : function (size) {\n        let maxDepth = Math.ceil(size/2);\n        let randFace = Math.floor(Math.random() * 6);\n        let randTurn = Math.floor((Math.random() * 2)-1);\n        let randIsMulti = Math.floor(Math.random() * 2);\n        let randDepth = 1;\n    \n        if(randFace>2&&size%2) maxDepth-=1;\n    \n        if(size>2) \n          randDepth = Math.floor((Math.random() * maxDepth)) + 1;\n    \n        if(randDepth===1) randIsMulti = 0;\n    \n        if(randDepth === Math.ceil(size/2) && size%2)\n          randIsMulti=0;\n    \n        return moveFuncs.convertDataToMove([randFace, randTurn,randDepth,randIsMulti]);\n    },\n\n    // returns a move's equivalent other move, \n    // ex: (on a 3x3) 03F === 01B'\n    // equivalentMove(\"03F\") => \"01B'\"\n    equivalentMove(_move,size){\n        const move =_move.split('');\n        let inverted = '';\n        let depth;\n        if(move[0]==='0'){\n          depth = size - parseInt(move[1]) + 1;\n        }\n        else{\n          depth = size - parseInt(move[0]+move[1]) + 1;\n        }\n    \n        if(depth<10){\n          inverted+=`0${depth}`\n        }\n        else{\n          inverted+=`${depth}`\n        }\n    \n        switch(move[2]){\n          case 'F':\n            inverted+='B';\n            break;\n          case 'f':\n            inverted+='b';\n            break;\n          case 'U':\n            inverted+='D';\n            break;\n          case 'u':\n            inverted+='d';\n            break;\n          case 'R':\n            inverted+='L';\n            break;\n          case 'r':\n            inverted+='l';\n            break;\n          case 'B':\n            inverted+='F';\n            break;\n          case 'b':\n            inverted+='f';\n            break;\n          case 'L':\n            inverted+='R';\n            break;\n          case 'l':\n            inverted+='r';\n            break;\n          case 'D':\n            inverted+='U';\n            break;\n          case 'd':\n            inverted+='u';\n            break;\n          default:\n        }\n    \n        if(move.length<4) inverted+=\"'\";\n        return inverted;\n        \n    },\n\n    // Compares dragged move with the next move in algorithm or solver\n    checkMoveEquivalence(dragMove,nextMove,size){\n        if(nextMove.toLowerCase()===nextMove){\n            if(dragMove.toLowerCase().slice(2)===nextMove.slice(2)){\n                if(parseInt(dragMove.slice(0,2))<=parseInt(nextMove.slice(0,2)))\n                return true;\n            }\n            else if(moveFuncs.equivalentMove(dragMove,size).toLowerCase().slice(2)===nextMove.slice(2)){\n                if(parseInt(moveFuncs.equivalentMove(dragMove,size).slice(0,2))<=parseInt(nextMove.slice(0,2)))\n                return true;\n            }\n        }\n        if(dragMove===nextMove||moveFuncs.equivalentMove(dragMove,size)===nextMove){\n            return true;\n        }\n        return false;\n    }\n}\n\nexport default moveFuncs;","import solver from '../solvers/solver';\nimport cube from '../cubeFunctions/cube';\nimport moveFuncs from '../cubeFunctions/move';\n\nfunction generateAllSolveMoves(state,rubiksObject){\n    let beforeObject = rubiksObject.map(e=>[...e]);\n    let tempState = {...state}, solvedSet = \"\";\n    let currentIndex = null;\n    let previousIndex = null;\n    let indexOccurence = 0;\n    let error = false;\n    let counter = 0;\n    let threeByThreeCounter = 0;\n    if(tempState.currentFunc === 'Color Picker'){\n      tempState.solveState = 0;\n      tempState.currentFunc = \"Solving\";\n      tempState.rubiksObject = rubiksObject.map(e=>[...e]);\n    }\n    while(tempState.currentFunc===\"Solving\"){\n      \n      if(!tempState.moveSet || !tempState.moveSet.length) {\n        //console.log(tempState.rubiksIndex);\n        currentIndex=tempState.rubiksIndex;\n        if(currentIndex===previousIndex) indexOccurence = indexOccurence+1;\n        else indexOccurence = 0;\n        if(tempState.solveState>=1) threeByThreeCounter++;\n        let moves;\n\n        moves = solver(tempState.solveState,tempState.rubiksObject,tempState.cubeDimension,moveFuncs.moveStringToArray,\n          tempState.solveMoves,tempState.rubiksIndex,tempState.middles,tempState.edges,tempState.corners);\n        if (!moves) moves = {};\n        if(moves.moveSet && moves.moveSet[0]==='stop'){\n          if(tempState.currentFunc===\"Solving\"){\n            moves.solveMoves = tempState.solveMoves + ` ${moves.moveSet[0]}`;\n            moves.moveSet.pop();\n          }\n          else moves.moveSet.pop();\n        }\n        \n        if(moves.moveSet){\n          let temp = [];\n          for(let i = 0; i<moves.moveSet.length; i++){\n            \n            if(moves.moveSet[i]===''||moves.moveSet[i]===' '||moves.moveSet[i][0]===\"N\"||moves.moveSet[i]===\"'\");\n            else temp.push(moves.moveSet[i]);\n          }\n          moves.moveSet = temp;\n        }\n        if(threeByThreeCounter>500) {\n          error = true;\n          //console.log(tempState.solveState);\n          moves.currentFunc=\"None\";\n        }\n        else if((indexOccurence>10 && tempState.solveState<1)||counter>10000||(moves.moveSet&&moves.moveSet[0]==='error')) {\n\n          console.log(\n            \"Solve State: \",tempState.solveState,\n            \"\\nPiece attempts: \",indexOccurence,\n            \"\\nPiece: \",tempState.rubiksObject[tempState.middles[tempState.rubiksIndex]]\n          );\n          \n          console.log(moves);\n          error = true;\n          //console.log(JSON.stringify({beforeObject}));\n          moves.currentFunc=\"None\";\n        }\n        if(moves.currentFunc && moves.currentFunc===\"None\") solvedSet = tempState.solveMoves;\n        counter++;\n        tempState = {...tempState,...moves};\n        previousIndex=currentIndex;\n      }\n      else{\n        let cD = tempState.cubeDimension;\n        let blockMoveLog = tempState.blockMoveLog;\n        let moveLog = tempState.moveLog;\n        let solveMoves = tempState.solveMoves;\n        let rubiksObject = tempState.rubiksObject;\n        let end = tempState.end;\n        let solveState = tempState.solveState;\n        let moveData = moveFuncs.parseMoveArray(tempState.moveSet); // generates data for next move\n        let obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n        obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\n        tempState = {...tempState,...obj};\n      }\n    }\n    let splitSet = solvedSet.split(\" \");\n    if(splitSet[0][0]===\"N\"||splitSet[0][0]===\"'\") splitSet.shift();\n    let moveSet = []\n    splitSet.forEach(e => e[e.length-1]===\"'\"? moveSet.push(e.replace(\"'\",\"\")):moveSet.push(e+\"'\"));\n\n    for(let i = 0; i<moveSet.length; i++){\n      if(moveSet[i]===''||moveSet[i]===' '||moveSet[i][0]===\"N\"||moveSet[i]===\"'\"||moveSet[i]===undefined){\n        moveSet.splice(i,1);\n      }\n    }\n\n    let maxDepth = Math.floor(tempState.cubeDimension/2);\n    moveSet = moveSet.map(move=>{\n      if(move===\"stop'\") return move;\n      //console.log(move);\n      let dataMove = moveFuncs.convertMoveToData(move);\n      if(parseInt(dataMove[2])>maxDepth&&!dataMove[3]){\n        //console.log(\"Found over reaching move: [ \" + move + \" ]\");\n        dataMove[2]=(tempState.cubeDimension-dataMove[2])+1\n        if(parseInt(dataMove[0])===0) dataMove[0] = 3;\n        else if(parseInt(dataMove[0])===1) dataMove[0] = 5;\n        else if(parseInt(dataMove[0])===2) dataMove[0] = 4;\n        else if(parseInt(dataMove[0])===3) dataMove[0] = 0;\n        else if(parseInt(dataMove[0])===4) dataMove[0] = 2;\n        else if(parseInt(dataMove[0])===5) dataMove[0] = 1;\n        dataMove[1]===0?dataMove[1]=-1:dataMove[1]=0;\n\n        //console.log(\"Converted to: [ \" + moveFuncs.convertDataToMove(dataMove) + \" ]\");\n        return moveFuncs.convertDataToMove(dataMove);\n      }\n      return moveFuncs.convertDataToMove(dataMove);\n    })\n\n    let moveSetLength = 0;\n    while(moveSet.length!==moveSetLength){\n      moveSetLength = moveSet.length;\n      for(let i = 0; i < moveSet.length-2; i++){\n        if(moveSet[i].substring(0,3)===moveSet[i+1].substring(0,3) && moveSet[i].length!==moveSet[i+1].length){\n          moveSet.splice(i,2);\n        }\n      }\n      for(let i = 0; i < moveSet.length-2; i++){\n        if(moveSet[i]===moveSet[i+1] && moveSet[i]===moveSet[i+2]){\n          if(moveSet[i].length===3){moveSet[i]+=\"'\"}\n          else{moveSet[i]=moveSet[i].substring(0,3)}\n          moveSet.splice(i+1,2);\n        }\n      }\n    }\n\n    if(moveSet[0]===\"stop'\"&&moveSet[1]===\"stop'\"&&moveSet.length===2) moveSet = [];\n  \n    // let invalidAlignment = 0;\n    // let invalidPlacement = 0;\n\n    if(state.cubeDimension<6){\n      tempState.rubiksObject.forEach(piece => {\n        if(piece.includes(\"middle\")) return;\n        let tempPiece = piece.slice(0,6);\n        let tempFiltered = tempPiece.filter(side=>side!==\"black\");\n        let validCount = 0\n        if([piece[6],piece[7],piece[8]].join(\"\")!==[piece[9],piece[10],piece[11]].join(\"\")){\n          if(tempFiltered.length>1) {/*invalidPlacement++;*/ error=true;}\n        }\n        if(tempPiece[0]===\"white\"||tempPiece[0]===\"black\") validCount++;\n        if(tempPiece[1]===\"blue\"||tempPiece[1]===\"black\") validCount++;\n        if(tempPiece[2]===\"red\"||tempPiece[2]===\"black\") validCount++;\n        if(tempPiece[3]===\"yellow\"||tempPiece[3]===\"black\") validCount++;\n        if(tempPiece[4]===\"orange\"||tempPiece[4]===\"black\") validCount++;\n        if(tempPiece[5]===\"green\"||tempPiece[5]===\"black\") validCount++;\n        if(validCount<6) {/*invalidAlignment++;*/ error=true;}\n      });    \n    }\n\n    if(error) {\n      //console.log(invalidAlignment,invalidPlacement);\n      return {moveSet:[...moveSet],rubiksObject : beforeObject,solveable:false,solvedSet:[...moveSet],solvedSetIndex:0};\n    }\n    return {moveSet:[...moveSet],rubiksObject : beforeObject,solveable:true,solvedSet:[...moveSet],solvedSetIndex:0,tempObject:tempState.rubiksObject};\n}\n\nexport default generateAllSolveMoves;","import cube from \"../../cubeFunctions/cube\";\nimport moveFuncs from \"../../cubeFunctions/move\";\nimport algorithms from \"../../cubeFunctions/algorithms\";\n\nconst SolverUIFunctions = {\n\n    // Jump to selected move\n    autoJump : function (state,moves){\n        let tempState = {...state};\n        tempState.moveSet = moves;\n        \n        while(tempState.moveSet.length){\n            //console.log(tempState.rubiksObject);\n            let cD = tempState.cubeDimension;\n            let blockMoveLog = tempState.blockMoveLog;\n            let moveLog = tempState.moveLog;\n            let solveMoves = tempState.solveMoves;\n            let rubiksObject = tempState.rubiksObject;\n            let end = tempState.end;\n            let solveState = tempState.solveState;\n            let moveData = \n              moveFuncs.parseMoveArray(tempState.moveSet); // generates data for next move\n            let obj = \n              cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n            obj.rubiksObject = \n              cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\n            tempState = {...tempState,...obj};\n        }\n        return [...tempState.rubiksObject];\n    },\n\n    // Sets target to jump to\n    setTarget : function (e,props){\n        //e.stopPropagation();\n        if(props.state.autoPlay||props.state.autoRewind){\n    \n        }\n        else if(parseInt(e.target.id)-props.state.solvedSetIndex===1){\n            props.setState({targetSolveIndex:parseInt(e.target.id)});\n            props.playOne(props);\n        }\n        else if(props.state.solvedSetIndex<=parseInt(e.target.id)){\n            props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\n            let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\n            let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\n            let forwardMoves = props.state.solvedSet.slice(props.state.solvedSetIndex,parseInt(e.target.id));\n    \n            props.setState({\n                solvedSetIndex:parseInt(e.target.id),\n                prevSet:prevSetNew,\n                moveSet:moveSetNew,\n                rubiksObject:SolverUIFunctions.autoJump(props.state,forwardMoves)})\n        }\n        else if(props.state.solvedSetIndex>parseInt(e.target.id)) {\n            props.setState({targetSolveIndex:parseInt(e.target.id),autoTarget:true});\n            let prevSetNew = props.state.solvedSet.slice(0,parseInt(e.target.id));\n            let moveSetNew = props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSet.length);\n            let backwardMoves= props.state.solvedSet.slice(parseInt(e.target.id),props.state.solvedSetIndex)\n                .map(move=>move.length===4?move.slice(0,3):(move+\"'\"));\n    \n            props.setState({\n                solvedSetIndex:parseInt(e.target.id),\n                prevSet:prevSetNew,\n                moveSet:moveSetNew,\n                rubiksObject:SolverUIFunctions.autoJump(props.state,backwardMoves.reverse())})\n        }\n    },\n\n    // Initiate selected pattern set\n    algoStart : function (name,props){\n        let cD = props.state.cubeDimension;\n        let algo = name;\n        let algoSet = [];\n        let generated = cube.generateSolved(cD,cD,cD);\n        if(algo!==\"None Selected\")\n            algoSet = algorithms\n                .find(\n                    set=>set.name===algo&&\n                    set.worksFor.includes(cD)).moves.split(\" \");\n        props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[],jumpToEnd:true});\n    }\n}\n\nexport default SolverUIFunctions;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React,{Component} from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport \"./SolverUI.css\";\nimport algorithms from \"../../cubeFunctions/algorithms\";\nimport LazyLoad from 'react-lazyload';\nimport solverMain from '../../solvers/solverMain';\n\nimport UI from './SolverUIFunctions';\nlet {setTarget, algoStart} = UI;\n\nclass SolverUI extends Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    \n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoRewind:false});\n            }\n            nextProps.rewindOne();\n        }\n        else if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoRewind:false});\n        }\n\n        if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoPlay:false});\n            }\n            nextProps.playOne(nextProps);\n        }\n        else if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoPlay:false});\n        }\n        if(nextProps.state.jumpToEnd){\n            nextProps.setState({jumpToEnd:false},setTarget({target:{id:nextProps.state.moveSet.length}},nextProps));\n        }\n    }\n\n    componentDidMount(){\n        let setState = this.props.setState;\n        let state = this.props.state;\n        if(state.solveOnce){\n            setTimeout(function(){\n                    setState({...solverMain(state,state.rubiksObject),solveOnce:false});\n            }, 50);\n        }\n    }\n\n    render(){\n        \n        let solverSet = [];\n        let prevSet = this.props.state.prevSet;\n        let moveSet = this.props.state.moveSet;\n        let defaultSolver = this.props.state.solveOnce?\"Loading, please wait...\":\"Already Solved\";\n        let defaultMessage = this.props.state.currentFunc===\"Solving\"?defaultSolver:\"None Selected\";\n        let jumperButtons = [<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={0} className=\"solveMoveDiv jumper\" key={-1}>Top</div>];\n\n        !this.props.state.solvedSet.length?\n        solverSet.push(defaultMessage):\n        this.props.state.solvedSet.forEach((el,i)=>el===this.props.state.solvedSet[i+1]?\n            <></>:\n            el===\"stop'\"? \n            (solverSet.push(<div key={i} style={{width:\"100%\"}}><hr key={i} style={{border:\"1px solid lightblue\",marginLeft:\"5px\"}}></hr>{jumperButtons.length===1?\"Edges: \":\"3x3: \"}</div>),jumperButtons.push(\n                jumperButtons.length===1?<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>Edge</div>:\n                <div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>3x3</div>\n            )):\n            el===this.props.state.solvedSet[i-1]?\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i-1} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(`0`+el[1],el[1]).replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i-1} \n                        className=\"solveMoveDiv\" \n                        key={i}>{el.replace(`0`+el[1],el[1]).replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(`0`+el[1],el[1])}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i} className=\"solveMoveDiv\" \n                        key={i}>{el.replace(`0`+el[1],el[1])}</div>)\n        )\n\n        solverSet.map(el=><LazyLoad height=\"2rem\">el</LazyLoad>);\n\n\n        let previousMove = \n            <div className=\"previousMove\">\n                {prevSet.length-1>=0?\n                    prevSet[prevSet.length-1]===\"stop'\"?\n                        prevSet[prevSet.length-2]?\n                            prevSet[prevSet.length-2]===prevSet[prevSet.length-3]?\n                                prevSet[prevSet.length-2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1]).replace(\"'\",\"\")+2\n                            :\n                                prevSet[prevSet.length-2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1])\n                        :\n                            \"-\"\n                    :\n                        prevSet[prevSet.length-1]===prevSet[prevSet.length-2]?\n                            prevSet[prevSet.length-1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1]).replace(\"'\",\"\")+2\n                        :\n                            prevSet[prevSet.length-1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1])\n                :\n                    \"-\"}\n            </div>\n\n        let nextMove = \n            <div className=\"nextMove\">\n                {moveSet[0]&&typeof(moveSet[0][0])==='string'&&moveSet[0]!==\"'\"?\n                    moveSet[0]===\"stop'\"?\n                        moveSet[1]?\n                            moveSet[1]===moveSet[2]?\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1]).replace(\"'\",\"\")+2\n                            :\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1])\n                        :\n                            \"-\"\n                    :\n                        moveSet[0]===moveSet[1]?\n                            moveSet[0].replace(`0`+moveSet[0][1],moveSet[0][1]).replace(\"'\",\"\")+2\n                        :\n                            moveSet[0].replace(`0`+moveSet[0][0],moveSet[0][1])\n                :\n                    \"-\"\n                }\n            </div>;\n\n\n\n        function stay(){\n            document.querySelector(\".warningPopupSolver\").style.visibility=\"hidden\";\n            document.querySelector(\".solverInterface\").style.display=\"block\";\n            document.querySelector(\".exitDiv\").style.display=\"block\";\n        }\n\n        function leave(e,props){\n            e.stopPropagation();\n            props.stopSolve();\n\n            if( document.querySelector(\".activeMenu\")){\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n            }\n\n            if(document.querySelector(\"#solverChangeData\").data){\n                let data = document.querySelector(\"#solverChangeData\").data.split(\",\");\n                if(data[0]===\"ColorPicker\"){\n                    props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                    document.querySelector(\"#solverChangeData\").data=\"\";\n                    return;\n                }\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n                props.setState({activeMenu:data[0],currentFunct:data[1],isValidConfig:false});\n                document.querySelector(\"#solverChangeData\").data=\"\";\n                \n            }\n            else{\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n            }\n        }\n\n        function fastforward(props){\n            if(!props.state.moveSet.length) return;\n            props.state.moveSet.length===1 ? \n                props.playOne(props):\n                props.setState({\n                    autoPlay:true,\n                    autoRewind:false,\n                    targetSolveIndex:props.state.solvedSet.length});\n        }\n\n        function fastrewind(props){\n            props.setState({autoPlay:false,autoRewind:true,targetSolveIndex:0});\n        }\n\n        function pauseSolver(props){\n            props.setState({autoPlay:false,autoRewind:false});\n        }\n\n        function preSetTarget(e,props,setTarget){\n            props.setState({autoScroll:true});\n            setTarget(e,props);\n        }\n\n        function optionClick(e,props){\n            switch(props.state.currentFunc){\n                case \"Solving\":\n                    document.querySelector(\".warningPopupSolver\").style.visibility=\"visible\";\n                    document.querySelector(\".warningPopupSolver\").style.width=\"100%\";\n                    document.querySelector(\".solverInterface\").style.display=\"none\";\n                    document.querySelector(\".exitDiv\").style.display=\"none\"\n                    break;\n                case \"Algorithms\":\n                    //this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [], moveSet : [],targetSolveIndex:-1,solvedSet:[]});\n                    props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n                    break;\n                default:\n                    props.setState({activeMenu:\"\",currentFunct:\"None\"});\n            }\n\n        }\n\n        return(<div className=\"solverUIWrapper\">\n            <Row style={{width:\"100%\",height:\"100%\",margin:0}}>\n                <Col id={(!this.props.mobile&&this.props.state.currentFunc===\"Algorithms\")?\"centerControls2\":\"\"} style={{paddingLeft:\"0px\"}}> \n                    {!this.props.mobile?<>\n                    <div className=\"solverMoves\">\n                        \n                        {solverSet}\n                        \n                    </div></>:<>\n                    {this.props.state.currentFunc===\"Algorithms\"?<><Row style={{paddingLeft:\"15px\"}}>\n                        {/* <label htmlFor=\"patterns\" style={{color:\"lightgrey\"}}>Choose a Pattern:</label> */}\n\n                        <select style={{color:\"lightgrey\",backgroundColor:\"#343a40\"}} id=\"patterns\" onChange={(e) => algoStart(e.target.value,this.props)}>\n                        {algorithms.map(algo=>algo.worksFor.includes(this.props.state.cubeDimension)?\n                            <option className=\"mobileAlgo\" id={algo.name} value={algo.name} key={algo.name}>{algo.name}</option>\n                                :\"\")}\n                        </select>\n                    </Row>\n                    <Row style={{paddingLeft:\"15px\"}}>\n                        <div className=\"algoMoves\">\n                            \n                            {solverSet}\n                            \n                        </div>\n                        \n                    </Row></>:<>\n                    <div className=\"solverMovesMobile\">\n                            \n                            {solverSet}\n                            \n                        </div>\n                    </>\n                    }</>\n                    }\n                </Col>\n                <Col id={(!this.props.mobile&&this.props.state.currentFunc===\"Algorithms\")?\"centerControls\":\"centerControlsOther\"} style={{paddingRight:0,paddingLeft:0,maxWidth:\"300px\"}}>\n                        <div className=\"warningPopupSolver\">\n                                    <div id=\"solverChangeData\" data=\"\"></div>\n                                    {this.props.mobile?\n                                        <div className=\"solverMessage\"> Progress will not be saved.</div>:\n                                        <div className=\"solverMessage\"> Are you sure you want to leave Solver? Progress will not be saved.</div>\n                                    }\n                                    <button onClick={stay} className=\"solverLeaveStay\">Stay</button><button onClick={(e)=>leave(e,this.props)} className=\"solverLeaveStay\">Leave</button>\n                        </div>\n                    <div className=\"solverInterface\">\n                        \n                        <div className=\"solverButtonDiv rewindOne\">\n                            <button \n                                className={`solverButton`}\n                                onClick={() => this.props.rewindOne(this.props)}> \n                            Previous {previousMove}\n                            </button>\n                        </div>\n                        <div className=\"solverButtonDiv playOne\">\n                            <button \n                                className={`solverButton`}\n                                onClick={() => this.props.playOne(this.props)}> \n                            Next {nextMove}\n                            </button>\n                        </div>\n                        <div className=\"solverButtonDiv rewindAll\">\n                            {this.props.state.autoRewind?\n                            <button \n                                className={`solverButton`}\n                                onClick={() => pauseSolver(this.props)}> \n                            <div style={{width:\"100%\"}}>Pause</div> Solver\n                            </button>\n                            :\n                            <button \n                                className={`solverButton`}\n                                onClick={() => fastrewind(this.props)}> \n                            <div style={{width:\"100%\"}}>Auto</div> Rewind\n                            </button>\n                            }\n                        </div>\n                        <div className=\"solverButtonDiv fastforward\">\n                           {this.props.state.autoPlay?\n                            <button \n                                className={`solverButton`}\n                                onClick={() => pauseSolver(this.props)}> \n                            <div style={{width:\"100%\"}}>Pause</div> Solver\n                            </button>\n                            :\n                            <button \n                                className={`solverButton`}\n                                onClick={() => fastforward(this.props)}> \n                            <div style={{width:\"100%\"}}>Auto</div> Forward\n                            </button>\n                            } \n                        </div>\n                        \n                        \n                    </div>\n                    <div className=\"exitDiv\" style={{width:\"100%\",height:\"25%\"}}>\n                        {/* <button id=\"blankExit\"></button> */}\n                    {this.props.state.currentFunc===\"Solving\"?<>\n                        <button id=\"Solver\" data=\"Solving\" onClick={(e)=>optionClick(e,this.props)} className=\"exitButton\">Exit</button></>:\n                        <button id=\"Algorithms\" data=\"Algorithms\" onClick={(e)=>optionClick(e,this.props)} className=\"exitButton\">Exit</button>}\n                    </div>\n\n                </Col>\n                \n            </Row>\n        </div>\n    )}\n}\n\nexport default React.memo(SolverUI);","import React from \"react\";\nimport \"./ColorPicker.css\";\n\nconst ColorPicker = (props) => {\n\n    let colors = {\n        'white':[255,255,255],\n        'blue':[0,0,255],\n        'red':[255,0,0],\n        'yellow':[255,255,0],\n        'orange':[255,165,0],\n        'green':[0,255,0]\n    }\n\n    const capitalized = props.color.charAt(0).toUpperCase() + props.color.slice(1);\n    const unselected = props.color===props.colorPicked?\"\":props.color;\n    \n    return(\n        <div \n            onClick={e=>{e.stopPropagation();e.nativeEvent.stopImmediatePropagation();}}\n            className={`${props.side?\"bottomColorButtonDiv\":\"colorButtonDiv\"} ${props.index%2?\"leftCp\":\"rightCp\"}`}>\n        <button\n            className={`colorPicker ${unselected}`}\n            style={{\n                backgroundColor:unselected?`rgba(0,0,255,.10)`:`rgba(${colors[props.color]},.5)`,\n                color:props.color\n            }} \n            onClick={(e)=>\n                {e.stopPropagation();\n                e.nativeEvent.stopImmediatePropagation();\n                props.changeColor(props.color);\n            }}>\n                {props.isMobile?capitalized:`${props.index}. ${capitalized}`}\n        </button>\n        </div>\n    );\n\n}\n\nexport default ColorPicker;","import React, {useState} from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport ColorButton from \"./ColorButton\";\nimport \"./ColorPicker.css\";\n\nconst ColorPicker = (props) => {\n    const [solveBtnText,setSolveBtnText] = useState(\"Solve\");\n    const [checkBtnText,setCheckBtnText] = useState(\"Check\");\n\n    const colors = [\"white\",\"blue\",\"red\",\"yellow\",\"orange\",\"green\"];\n\n    const onSolveClick = () => {\n        setSolveBtnText(\"Configuring...\");\n        setTimeout(function(){\n            props.setColorPickedCube();\n        }, 100);  \n    };\n\n    const onCheckClick = () => {\n        setCheckBtnText(\"Checking...\");\n        setTimeout(function(){\n            props.runCheckColors();\n            setCheckBtnText(\"Check\");\n        }, 100);  \n    };\n\n    function leave(){\n        props.endColorPicker();\n\n        if( document.querySelector(\".activeMenu\")){\n            document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n        }\n\n        if(document.querySelector(\"#cpChangeData\").data){\n            let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\n            if(data[0]===\"Solver\") {\n                props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                document.querySelector(\"#cpChangeData\").data=\"\";\n                return;\n            }\n            document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n            document.querySelector(\"#cpChangeData\").data=\"\";\n\n            props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>props.beginSolve());\n        }\n        else{\n            props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n        }\n    }\n    function stay(){\n        document.querySelector(\".warningPopup\").style.display=\"none\";\n        document.querySelector(\".colorButtonContainer\").style.visibility=\"visible\";\n    }\n\n    function optionClick(e){\n        document.querySelector(\".warningPopup\").style.display=\"block\";\n        document.querySelector(\".warningPopup\").style.width=\"100%\";\n        document.querySelector(\".colorButtonContainer\").style.visibility=\"hidden\";\n    }\n\n    return (\n        <Row className=\"cp-container\" style={{height:\"98%\",width:\"100%\", overflowX:\"hidden!important\",overflowY:\"hidden!important\",margin:\"0px\"}}>\n            <Col>\n                <div className=\"cpInfo\">\n                    {\n                        props.isValidConfig?\n                        <div className=\"solveCpDiv\"><button className=\"solveCp\" onClick={()=>onSolveClick()}>\n                            <strong style={{color:'green',fontSize:'1rem'}}>{solveBtnText}</strong>\n                        </button></div>:!props.cpErrors.length?\n                        <div className=\"checkCpDiv\"><button className=\"checkCp\" onClick={()=>onCheckClick()}>\n                            <strong style={{color:'blue',fontSize:'1rem'}}>{checkBtnText}</strong>\n                        </button></div>:[]\n                    }\n                    <div style={{fontSize:\".5rem\"}}>\n                        {props.state.cpErrors.map((error,i)=>\n                            <p key={i} className=\"cpErrorMessage\">{\"- \"+error}</p>\n                        )}\n                    </div>\n                </div>\n            </Col>\n            <Col style={{padding:\"0px\"}}>\n                <div className=\"warningPopup\">\n                    <div id=\"cpChangeData\" data=\"\"></div>\n                    {props.isMobile?\n                        <div className=\"cpMessage\">Progress will not be saved.</div>:\n                        <div className=\"cpMessage\">Are you sure you want to leave Color Picker? Progress will not be saved.</div>}\n                    <button onClick={stay} className=\"cpLeaveStay\">Stay</button><button onClick={leave} className=\"cpLeaveStay\">Leave</button>\n                </div>\n                <div className=\"colorButtonContainer\">\n                    \n                    {colors.map((color,i)=><ColorButton\n                        index={i+1} \n                        key={color}\n                        color={color}\n                        colorPicked={props.colorPicked}\n                        changeColor={props.changeColor}\n                        isMobile={props.isMobile}\n                    />)}\n                    <div className=\"colorButtonDiv\" style={{paddingBottom:\"0px\",width:\"100%\"}}>\n                        <button id=\"ColorPicker\" data=\"Color Picker\" onClick={optionClick} className=\"colorPicker activeMenu colorPickerExit\">Exit</button>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n        );\n\n};\n\nexport default ColorPicker;","import React, {Component} from \"react\";\nimport \"../MenuWrapper/MenuWrapper.css\";\nimport \"./MobileView.css\"\nimport Controls from \"../Controls\";\nimport SolverUI from \"../SolverUI/SolverUI\";\nimport ColorPicker from \"../ColorPicker/ColorPicker\";\nimport {Row, Col} from \"react-bootstrap\";\nimport algorithms from \"../../cubeFunctions/algorithms\";\n\nconst optionLimitCP = 100;\n\nclass Mobile extends Component {\n\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n\n        \n\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\n\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\n\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\n\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\n\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\n           this.props.cpErrors===nextProps.cpErrors&&\n           this.props.state.solveTime===nextProps.state.solveTime&&\n           this.props.state.playOne===nextProps.state.playOne&&\n           !this.props.state.autoPlay) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\n\n        return true;\n    }\n\n    render(){\n\n        const algoLength = algorithms.filter(set=>set.worksFor.includes(this.props.state.cubeDimension)).length;\n\n        function otherOptionClick(e,props){\n            switch(e.target.id){\n                case 'Reset':\n                    props.setState({activeMenu:\"\",currentFunc:\"Reset\"});\n                    break;\n                case 'Scramble':\n                    if(props.state.currentFunc===\"None\"){\n                        props.beginScramble();\n                    }\n                    break;\n                default:\n                    props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\n            }\n        }\n\n        function optionClick(e,props){\n            if(props.state.currentFunc===\"None\") {\n                if(e.target.id===\"ColorPicker\"){\n                    \n                    props.setState({activeMenu:e.target.id,isValidConfig:true});\n                    props.beginColorPicker();\n                }\n                else if(e.target.id===\"Solver\"){\n                    props.setState({activeMenu:e.target.id});\n                    props.beginSolve();\n                }\n                else if(e.target.id===\"Algorithms\"){\n                    //props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n                    props.setState({activeMenu:e.target.id,currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[]});\n                }\n            }\n        }\n\n        return (\n        <div className=\"menuWrapper\">\n            {(this.props.state.currentFunc === \"None\"||this.props.state.currentFunc === \"Drag Turn\"||this.props.state.currentFunc === \"Undo\"||this.props.state.currentFunc === \"Redo\"||this.props.state.currentFunc === \"Scrambling\")&&this.props.state.activeMenu!==\"Moves\"?\n                <Row style={{width:\"100%\", height:\"100%\", margin: 0}}>\n                    <Col xs={6} style={{paddingRight:\"7.5px\"}}>\n                        {this.props.state.cubeDimension<=optionLimitCP?\n                            <><button className=\"mobileButton\" id=\"ColorPicker\" data=\"Color Picker\" onClick={(e)=>optionClick(e,this.props)} key={1}>Color Picker</button> \n                            <button className=\"mobileButton\" id=\"Solver\" data=\"Solving\" onClick={(e)=>optionClick(e,this.props)} key={2}>Solver</button></>\n                            :<>\n                            <button className=\"blankButton\" key={1}></button>\n                            <button className=\"blankButton\" key={2}></button></>\n                        } \n                        {algoLength?\n                            <button className=\"mobileButton\" id=\"Algorithms\" data=\"Algorithms\" onClick={(e)=>optionClick(e,this.props)} key={3}>Patterns</button>:\"\"\n                        }\n                    </Col>\n                    <Col xs={6} style={{paddingLeft:\"7.5px\"}}>\n                        {this.props.state.cubeDimension<1?\n                            <button className=\"mobileButton\" onClick={()=>otherOptionClick} key={0}>Moves</button>:\n                            <button className=\"blankButton\" key={0}></button>\n                        }    \n                        <button className=\"mobileButton\" id=\"Scramble\" onClick={(e)=>otherOptionClick(e,this.props)} key={2}>Scramble</button>\n                        <button className=\"mobileButton\" id=\"Reset\" onClick={(e)=>otherOptionClick(e,this.props)}  key={3}>Reset</button>\n                    </Col>\n                </Row>\n            :\n                this.props.state.currentFunc === \"Color Picker\"?\n                <ColorPicker {...this.props} isMobile={true}></ColorPicker>:\n                this.props.state.currentFunc === \"Solving\"?\n                <SolverUI {...this.props} mobile={true}/>:\n                this.props.state.currentFunc === \"Algorithms\"?\n                <><SolverUI {...this.props} mobile={true}/></>\n                :\n                this.props.state.activeMenu===\"Moves\"?\n                    <Row style={{height: \"100%\"}}>\n                        <Col xs={2}>\n                            <div id=\"infoBtn\" style={{fontSize:\"2rem\",padding:0,display:\"inline\"}} onClick={()=>{this.props.setState({activeMenu:\"\"})}}>←</div>\n                        </Col>\n                        <Col xs={10}>\n                            <Controls {...this.props}/>\n                        </Col>\n                    </Row>\n                :<></>\n            }\n            \n        </div>)\n    }\n}\n\nexport default Mobile;","import React from \"react\";\nimport \"./MenuOptions.css\"\nimport algorithms from \"../../cubeFunctions/algorithms\";\nimport cube from '../../cubeFunctions/cube';\n\nconst optionLimitCP = 100;\nconst optionLimitSOLVER = 100;\n\nconst MenuOptions = props => {\n        let algorithmSet = \n            algorithms\n                .filter(algo=>algo.worksFor.includes(props.state.cubeDimension))\n                .map(algo=>\n                    <button \n                        id={algo.name} \n                        key={algo.name}\n                        className={\n                            props.state.activeAlgo===algo.name?\n                                \"algoButton algoActive\":\"algoButton\"\n                        }\n                        onClick={(e)=>algoStart(e,props)}>\n                        {algo.name}\n                    </button>\n                    );\n\n        const baseOptions = <>\n           {props.state.cubeDimension<=optionLimitCP?<button id=\"ColorPicker\" key=\"Color Picker\" data=\"Color Picker\" onClick={optionClick} className=\"leftButton\">Color Picker</button>:<button className=\"leftButton invis\"></button>}\n           {props.state.cubeDimension<=optionLimitSOLVER?<button id=\"Solver\" key=\"Soler\" data=\"Solving\" onClick={optionClick} className=\"leftButton\">Solver</button>:<button className=\"leftButton invis\"></button>}\n           {algorithmSet.length?<button id=\"Algorithms\" key=\"Algorithms\" data=\"None\" onClick={optionClick} className=\"leftButton\">Patterns</button>:<button className=\"leftButton invis\"></button>}\n        </>\n\n        \n\n        function algoStart(e,props){\n            if(props.state.autoPlay||props.state.autoRewind||props.state.playOne) return;\n            let cD = props.state.cubeDimension;\n            let algo = e.target.id;\n            let algoSet = [];\n            let generated = cube.generateSolved(cD,cD,cD);\n            algorithms.forEach(e=>{\n                if(e.moves&&e.name===algo&&e.worksFor.includes(cD)) algoSet.push(...e.moves.split(\" \"));\n            })\n            //console.log(algoSet);\n            props.setState({activeAlgo:algo,moveSet:[...algoSet],rubiksObject : generated.tempArr,solveable:true,solvedSet:[...algoSet],solvedSetIndex:0,prevSet:[],autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,jumpToEnd:true});\n        }\n\n        function optionClick(e){\n            if(props.state.currentFunc===\"None\") {\n                if(e.target.id===\"ColorPicker\"){\n                    \n                    props.setState({activeMenu:e.target.id,isValidConfig:true});\n                    props.beginColorPicker();\n                }\n                else if(e.target.id===\"Solver\"){\n                    props.setState({activeMenu:e.target.id},props.beginSolve());\n                    \n                }\n                else if(e.target.id===\"Algorithms\"){\n                    console.log(props.state.currentFunc);\n                    //props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n                    props.setState({activeMenu:e.target.id,currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[],activeAlgo:\"\"});\n                }\n                else props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\n            }\n        }\n        return (\n        <div className=\"menuOptionsWrapper\">\n            {props.state.currentFunc===\"Solving\"?[]:\n            props.state.currentFunc===\"Color Picker\"?<><div style={{paddingTop:\"45%\"}}></div>\n            <button id=\"ColorPicker\" data=\"Color Picker\" key=\"Color Picker\" onClick={optionClick} className=\"cpButton activeMenu\">Exit</button></>:\n            props.state.currentFunc===\"Algorithms\"?\n            <div className=\"algoList\">\n                {algorithmSet}  \n            </div>:baseOptions}\n        </div>)\n\n}\n\nexport default React.memo(MenuOptions);","import React from \"react\";\nimport \"../MenuOptions/MenuOptions.css\"\n\nconst MenuOptionsOther = props => {\n\n    const baseOptions = <>\n        {/* <button id=\"Moves\" key=\"Moves\" data=\"None\" onClick={otherOptionClick} className=\"rightButton\">Moves</button> */}\n        <button className=\"rightButton invis\" key=\"Blank\"></button>\n        <button id=\"Scramble\" key=\"Scramble\" onClick={otherOptionClick} className=\"rightButton scramble\">\n            Scramble\n        </button>\n        <button id=\"Reset\" key=\"Reset\" onClick={otherOptionClick} className=\"rightButton reset\">\n            Reset\n        </button>\n    </>\n\n    function otherOptionClick(e){\n        switch(e.target.id){\n            case 'Reset':\n                props.setState({activeMenu:\"\",currentFunc:\"Reset\"});\n                break;\n            case 'Scramble':\n                if(props.state.currentFunc===\"None\"){\n                    props.beginScramble();\n                }\n                break;\n            default:\n                props.setState({activeMenu:e.target.id,currentFunc:\"None\"});\n        }\n    }\n\n    return (\n        <div className=\"menuOptionsWrapper\" style={{float:\"right\"}}>\n            {props.state.currentFunc===\"Solving\"||props.state.currentFunc===\"Color Picker\"||props.state.currentFunc===\"Algorithms\"?<><div style={{paddingTop:\"45%\"}}></div>\n                </>:baseOptions}\n        </div>\n    )\n\n}\n\nexport default React.memo(MenuOptionsOther);","import React,{Component} from \"react\";\nimport \"./MenuWrapper/MenuWrapper.css\";\nimport {Row, Col} from \"react-bootstrap\";\nimport MenuOptions from \"./MenuOptions/MenuOptions\";\nimport MenuOptionsOther from \"./MenuOptionsOther/MenuOptionsOther\";\nimport Controls from \"./Controls\";\nimport ColorPicker from \"./ColorPicker/ColorPicker\";\nimport SolverUI from \"./SolverUI/SolverUI\";\n\n\nclass View extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.props.state.upDateCp!==nextProps.state.upDateCp){\n            return true;\n        }\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\n            //console.log(nextProps.state.solvedSet);\n            return true;\n        }\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\n\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\n\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\n\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\n\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\n           this.props.cpErrors===nextProps.cpErrors&&\n           this.props.state.solveTime===nextProps.state.solveTime&&\n           this.props.state.playOne===nextProps.state.playOne&&\n           !this.props.state.autoPlay) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\n\n        return true;\n    }\n    render(){\n        //const props = this.props;\n        let activeMenu;\n        switch(this.props.state.activeMenu){\n            case 'Moves':\n                activeMenu = <Controls {...this.props}/>\n                break;\n            case 'ColorPicker':\n                activeMenu = <ColorPicker {...this.props}/>\n                break;\n            case 'Solver':\n                activeMenu=<SolverUI {...this.props}/>\n                break;\n            case 'Algorithms':\n                activeMenu=<SolverUI {...this.props}/>\n                break;\n            default:\n                activeMenu=\"\";\n        }\n\n        \n        //console.log(\"hi\")\n        return (\n        <div className=\"menuWrapper\" style={{pointerEvents: \"none\"}}>\n            <Row style={{height: \"100%\",margin:\"0px\"}}>\n                 {(this.props.state.activeMenu===\"ColorPicker\"||this.props.state.activeMenu===\"Solver\")?\n                []:\n                [<Col key=\"MenuOptions\" style={{paddingLeft:\"0px\"}}>\n                    <MenuOptions {...this.props}/>\n                </Col>,\n                <Col key=\"MenuOptionsPadding\" style={{padding:0, color:\"black\",opacity:0}} xs={.5}>\n                    .    \n                </Col>]}\n                <Col \n                    id=\"menuBox\" \n                    style={{position:\"relative\",bottom:\"0\",height:\"100%\"}} \n                    xs={\n                        this.props.state.currentFunc===\"Color Picker\"||this.props.state.activeMenu===\"Solver\"?\n                        12:this.props.state.currentFunc===\"None\"||this.props.state.currentFunc===\"Scrambling\"||this.props.state.currentFunc===\"Reset\"?4:8}>\n                    {activeMenu}  \n                </Col>\n                {(this.props.state.activeMenu===\"ColorPicker\"||this.props.state.activeMenu===\"Solver\"||this.props.state.activeMenu===\"Algorithms\")?\n                []:\n                [<Col key=\"MenuOptionsOther\" style={{padding:0, color:\"black\",opacity:0}} xs={.5}>\n                    .    \n                </Col>,\n                <Col key=\"MenuOptionsOtherPadding\" style={{paddingLeft:\"0px\",minWidth: \"150px\",paddingRight:\"0px\"}}>\n                    <MenuOptionsOther {...this.props}/>\n                </Col>]}\n            </Row>\n            \n        </div>)\n    }\n}\n\nexport default React.memo(View);","import React, {useState} from \"react\";\nimport \"./ColorPicker.css\";\nimport \"../SideView/SideView.css\"\n\nconst SideColorPicker = (props) => {\n    const [solveBtnText,setSolveBtnText] = useState(\"Solve\");\n    const [checkBtnText,setCheckBtnText] = useState(\"Check\");\n\n    const onSolveClick = () => {\n        setSolveBtnText(\"Configuring...\");\n        setTimeout(function(){\n            document.querySelector(\".warningPopup\").style.display = \"none\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\n            props.setColorPickedCube();\n        }, 100);  \n    };\n\n    const onCheckClick = () => {\n        setCheckBtnText(\"Checking...\");\n        setTimeout(function(){\n            props.runCheckColors();\n            setCheckBtnText(\"Check\");\n        }, 100);  \n        \n    };\n    \n    return (\n        <div className=\"sideMenuBox0 sideLimit\">\n          <div className=\"sideMenuBox1\">\n            <div className=\"cpInfo\" style={{width:\"100%\"}}>\n                    {\n                        props.isValidConfig?\n                        <div className=\"solveCpDiv\"><button className=\"solveCp\" onClick={onSolveClick}>\n                            <strong style={{color:'green',fontSize:'1rem'}}>{solveBtnText}</strong>\n                        </button></div>:!props.cpErrors.length?\n                        <div className=\"checkCpDiv\"><button className=\"checkCp\" onClick={onCheckClick}>\n                            <strong style={{color:'blue',fontSize:'1rem'}}>{checkBtnText}</strong>\n                        </button></div>:[]\n                    }\n                    <div style={{fontSize:\".5rem\"}}>\n                        {props.state.cpErrors.map((error,i)=>\n                            <p key={i} className=\"cpErrorMessage\">{\"- \"+error}</p>\n                        )}\n                    </div>\n                </div>   \n            </div>  \n        </div>        \n    );\n};\n\nexport default SideColorPicker;","import \"../SideView/SideView.css\";\nimport React,{Component} from \"react\";\nimport \"./SideSolverUI.css\";\nimport \"./SolverUI.css\";\nimport algorithms from \"../../cubeFunctions/algorithms\";\nimport LazyLoad from 'react-lazyload';\nimport solverMain from '../../solvers/solverMain';\n\nimport UI from './SolverUIFunctions';\nlet {setTarget,algoStart} = UI;\n\nclass SolverUI extends Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    \n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoRewind:false});\n            }\n            nextProps.rewindOne();\n        }\n        else if(nextProps.state.autoRewind===true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoRewind:false});\n        }\n\n        if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if(nextProps.state.moveSet[0]===\"stop'\"){\n                nextProps.setState({autoPlay:false});\n            }\n            nextProps.playOne(nextProps);\n        }\n        else if(nextProps.state.autoPlay===true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex){\n            //console.log(\"ending rewind\");\n            nextProps.setState({autoPlay:false});\n        }\n        if(nextProps.state.jumpToEnd){\n            nextProps.setState({jumpToEnd:false},setTarget({target:{id:nextProps.state.moveSet.length}},nextProps));\n        }\n    }\n\n    componentDidMount() {\n        let setState = this.props.setState;\n        let state = this.props.state;\n        if(state.solveOnce){\n            setTimeout(function(){\n                    setState({...solverMain(state,state.rubiksObject),solveOnce:false});\n            }, 50);\n        }\n    }\n\n    render(){\n        \n        let solverSet = [];\n        let defaultSolver = this.props.state.solveOnce?\"Loading, please wait...\":\"Already Solved\";\n        let defaultMessage = this.props.state.currentFunc===\"Solving\"?defaultSolver:\"None Selected\";\n        let jumperButtons = [<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={0} className=\"solveMoveDiv jumper\" key={-1}>Top</div>];\n        !this.props.state.solvedSet.length?\n        solverSet.push(defaultMessage):\n        this.props.state.solvedSet.forEach((el,i)=>el===this.props.state.solvedSet[i+1]?\n            <></>:\n            el===\"stop'\"? \n            (solverSet.push(<div key={i} style={{width:\"100%\"}}><hr key={i} style={{border:\"1px solid lightblue\",marginLeft:\"5px\"}}></hr>{jumperButtons.length===1?\"Edges: \":\"3x3: \"}</div>),jumperButtons.push(\n                jumperButtons.length===1?<div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>Edge</div>:\n                <div onClick={(e)=>preSetTarget(e,this.props,setTarget)} id={i+1} className=\"solveMoveDiv jumper\" key={i}>3x3</div>\n            )):\n            el===this.props.state.solvedSet[i-1]?\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i-1} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(`0${el[1]}`,el[1]).replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i-1} \n                        className=\"solveMoveDiv\" \n                        key={i}>{el.replace(`0${el[1]}`,el[1]).replace(\"'\",\"\")+\"2\"}\n                    </div>):\n                i===this.props.state.solvedSetIndex||(i===this.props.state.solvedSetIndex+1&&el===this.props.state.solvedSet[i-1])?\n                    solverSet.push(<div \n                        id={i} \n                        className=\"solveMoveDiv nextSolveIndex\" \n                        key={i}>{el.replace(`0${el[1]}`,el[1])}\n                    </div>):\n                    solverSet.push(<div \n                        onClick={(e)=>setTarget(e,this.props)} \n                        id={i} className=\"solveMoveDiv\" \n                        key={i}>{el.replace(`0${el[1]}`,el[1])}</div>)\n        )\n\n        solverSet.map(el=><LazyLoad height=\"2rem\">el</LazyLoad>);\n        \n        let algorithmSet = \n            algorithms\n                .filter(algo=>algo.worksFor.includes(this.props.state.cubeDimension))\n                .map(algo=>\n                    <button \n                        id={algo.name} \n                        key={algo.name}\n                        className={\n                            this.props.state.activeAlgo===algo.name?\n                                \"algoButton algoActive\":\"algoButton\"\n                        }\n                        onClick={()=>algoStart(algo.name,this.props)}>\n                        {algo.name}\n                    </button>\n                    );\n\n        function preSetTarget(e,props,setTarget){\n            props.setState({autoScroll:true});\n            setTarget(e,props);\n        }\n\n        return(\n            <div className=\"sideMenu\">\n                <div className=\"sideMenuBox0 sideLimit\">\n                    {this.props.state.currentFunc===\"Solving\"?\n                    <div className=\"sideMovesBox\">\n                        \n                        {solverSet}\n                        \n                    </div>:\n                    [\n                    <div className=\"sideMenuBox1\" key=\"sideMenuBox1\">\n                        <div className=\"algoList\" style={{maxWidth:\"400px\"}}>\n                            {algorithmSet}  \n                        </div>\n                    </div>,\n                    <div className=\"sideMenuBox2\" key=\"sideMenuBox2\">\n                        <div className=\"sideMovesBox\">\n                        \n                            {solverSet}\n                            \n                        </div>\n                    </div>\n                    ]\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default React.memo(SolverUI);","import \"../SideView/SideView.css\";\nimport React, { Component } from \"react\";\nimport \"./SideSolverUI.css\";\nimport \"../SolverUI/SolverUI.css\";\n\nclass SideSolverControls extends Component {\n\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.state.autoRewind === true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if (nextProps.state.moveSet[0] === \"stop'\") {\n                nextProps.setState({ autoRewind: false });\n            }\n            nextProps.rewindOne();\n        }\n        else if (nextProps.state.autoRewind === true && nextProps.state.solvedSetIndex <= nextProps.state.targetSolveIndex) {\n            //console.log(\"ending rewind\");\n            nextProps.setState({ autoRewind: false });\n        }\n\n        if (nextProps.state.autoPlay === true && nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex) {\n            //console.log(\"attempting rewind\");\n            if (nextProps.state.moveSet[0] === \"stop'\") {\n                nextProps.setState({ autoPlay: false });\n            }\n            nextProps.playOne(nextProps);\n        }\n        else if (nextProps.state.autoPlay === true && nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex) {\n            //console.log(\"ending rewind\");\n            nextProps.setState({ autoPlay: false });\n        }\n        // if(nextProps.state.jumpToEnd){\n        //     nextProps.setState({jumpToEnd:false},setTarget({target:{id:nextProps.state.moveSet.length}},nextProps));\n        // }\n    }\n\n    componentDidUpdate() {\n        if (document.querySelector(\".nextSolveIndex\") && this.props.state.autoScroll) {\n            document.querySelector(\".nextSolveIndex\").scrollIntoView(true);\n            this.props.setState({ autoScroll: false });\n        }\n    }\n\n    render() {\n        let prevSet = this.props.state.prevSet;\n        let moveSet = this.props.state.moveSet;\n\n        let previousMove =\n            <div className=\"previousMove\">\n                {prevSet.length - 1 >= 0 ?\n                    prevSet[prevSet.length - 1] === \"stop'\" ?\n                        prevSet[prevSet.length - 2] ?\n                            prevSet[prevSet.length - 2] === prevSet[prevSet.length - 3] ?\n                                prevSet[prevSet.length - 2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1]).replace(\"'\", \"\") + 2\n                                :\n                                prevSet[prevSet.length - 2].replace(`0`+prevSet[prevSet.length-2][1],prevSet[prevSet.length-2][1])\n                            :\n                            \"-\"\n                        :\n                        prevSet[prevSet.length - 1] === prevSet[prevSet.length - 2] ?\n                            prevSet[prevSet.length - 1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1]).replace(\"'\", \"\") + 2\n                            :\n                            prevSet[prevSet.length - 1].replace(`0`+prevSet[prevSet.length-1][1],prevSet[prevSet.length-1][1])\n                    :\n                    \"-\"}\n            </div>\n\n        let nextMove =\n            <div className=\"nextMove\">\n                {moveSet[0] && typeof (moveSet[0][0]) === 'string' && moveSet[0] !== \"'\" ?\n                    moveSet[0] === \"stop'\" ?\n                        moveSet[1] ?\n                            moveSet[1] === moveSet[2] ?\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1]).replace(\"'\", \"\") + 2\n                                :\n                                moveSet[1].replace(`0`+moveSet[1][1],moveSet[1][1])\n                            :\n                            \"-\"\n                        :\n                        moveSet[0] === moveSet[1] ?\n                            moveSet[0].replace(`0`+moveSet[0][1],moveSet[0][1]).replace(\"'\", \"\") + 2\n                            :\n                            moveSet[0].replace(`0`+moveSet[0][1],moveSet[0][1])\n                    :\n                    \"-\"\n                }\n            </div>;\n\n\n        function fastforward(props) {\n            if (!props.state.moveSet.length) return;\n            props.state.moveSet.length === 1 ?\n                props.playOne(props) :\n                props.setState({\n                    autoPlay: true,\n                    autoRewind: false,\n                    targetSolveIndex: props.state.solvedSet.length\n                });\n        }\n\n        function fastrewind(props) {\n            props.setState({ autoPlay: false, autoRewind: true, targetSolveIndex: 0 });\n        }\n\n        function pauseSolver(props) {\n            props.setState({ autoPlay: false, autoRewind: false });\n        }\n\n\n        return <div className=\"controllerBox\" style={{ width: `30vw` }}>\n            <div className=\"buttonWrapper\">\n\n            <div className=\"solverButtonDiv rewindOne\">\n                <button\n                    className={`solverButton`}\n                    onClick={() => this.props.rewindOne(this.props)}>\n                    Previous {previousMove}\n                </button>\n            </div>\n            <div className=\"solverButtonDiv playOne\">\n                <button\n                    className={`solverButton`}\n                    onClick={() => this.props.playOne(this.props)}>\n                    Next {nextMove}\n                </button>\n            </div>\n            <div className=\"solverButtonDiv rewindAll\">\n                {this.props.state.autoRewind ?\n                    <button\n                        className={`solverButton`}\n                        onClick={() => pauseSolver(this.props)}>\n                        <div style={{ width: \"100%\" }}>Pause</div> Solver\n                    </button>\n                    :\n                    <button\n                        className={`solverButton`}\n                        onClick={() => fastrewind(this.props)}>\n                        <div style={{ width: \"100%\" }}>Auto</div> Rewind\n                    </button>\n                }\n            </div>\n            <div className=\"solverButtonDiv fastforward\">\n                {this.props.state.autoPlay ?\n                    <button\n                        className={`solverButton`}\n                        onClick={() => pauseSolver(this.props)}>\n                        <div style={{ width: \"100%\" }}>Pause</div> Solver\n                    </button>\n                    :\n                    <button\n                        className={`solverButton`}\n                        onClick={() => fastforward(this.props)}>\n                        <div style={{ width: \"100%\" }}>Auto</div> Forward\n                    </button>\n                }\n            </div>\n                \n            </div>\n\n        </div>\n    }\n}\n\nexport default React.memo(SideSolverControls);","import React from \"react\";\nimport ColorButton from \"./ColorButton\";\nimport \"./ColorPicker.css\";\n\nconst SideColorPickerController = (props) => {\n    const colors = [\"white\",\"blue\",\"red\",\"yellow\",\"orange\",\"green\"];\n    const li = [];\n    props.cpErrors.forEach(function(error,i){\n        li.push(<p key={i} style={{color:\"red\",fontSize:\".8rem\",textAlign:\"left\",listStyle:\"none\",margin:\"2px\",lineHeight: \"15px\"}}>\n            {\"- \"+error}\n        </p>);\n    });\n\n    return (\n        <div className=\"controllerBox\" style={{ width: `30vw` }}>\n            <div className=\"colorButtonContainer\">\n                {colors.map((color,i)=><ColorButton\n                    index={i+1} \n                    key={color}\n                    height={1/3*100}\n                    color={color}\n                    side={true}\n                    colorPicked={props.colorPicked}\n                    changeColor={props.changeColor}\n                    isMobile={props.isMobile}\n                />)}\n            </div>\n        </div>\n    )     \n\n};\n\nexport default SideColorPickerController;","import React from \"react\";\nimport \"./MainSideMenu.css\";\nimport \"../SideView/SideView.css\";\n\nconst MainSideMenuButton = props => {\n    return (\n        <div className=\"mainSideMenuButton\" style={{height:`${1/6*100}%`}}>\n            <button className=\"sideMenuButton\" onClick={props.onClick}>\n                {props.name}\n            </button>\n        </div>\n    )\n}\n\nexport default MainSideMenuButton;","import React from \"react\";\nimport \"./MainSideMenu.css\";\nimport \"../SideView/SideView.css\";\nimport algs from \"../../cubeFunctions/algorithms\"\nimport MainSideMenuButton from \"./MainSideMenuButton\";\n\nconst MainSideMenu = props => {\n\n    let algorithmSet = algs.filter(algo=>algo.worksFor.includes(props.state.cubeDimension));\n\n    function colorPicker(){\n        if(props.state.currentFunc===\"None\"){\n            props.setState({activeMenu:\"ColorPicker\",isValidConfig:true});\n            props.beginColorPicker();\n        }\n    }\n\n    function solver(){\n        if(props.state.currentFunc===\"None\")\n            props.setState({activeMenu:\"Solver\"},props.beginSolve());\n    }\n\n    function scramble(){\n        if(props.state.currentFunc===\"None\"){\n            props.setState({activeMenu:\"Scrambling\"},props.beginScramble());\n        }\n    }\n\n    function reset(){\n        props.setState({activeMenu:\"\",currentFunc:\"Reset\"})\n    }\n\n    function algorithms(){\n        if(props.state.currentFunc===\"None\")\n            props.setState({activeMenu:\"Algorithms\",currentFunc:\"Algorithms\",solveOnce:false,solvedSet:[],prevSet:[],moveSet:[]});\n    }\n    \n    return (\n        <div className=\"sideMenuBox0 sideLimit\">\n            {props.state.cubeDimension<=100?<MainSideMenuButton \n                name=\"Color Picker\"\n                onClick={colorPicker}\n            />:[]}\n            {props.state.cubeDimension<=100?\n            <MainSideMenuButton \n                name=\"Solver\"\n                onClick={solver}\n            />:[]}  \n            {algorithmSet.length>0?<MainSideMenuButton \n                name=\"Patterns\"\n                onClick={algorithms}\n            />:[]}\n            {/* <MainSideMenuButton\n                name=\"Moves\" \n            /> */}\n            <MainSideMenuButton \n                name=\"Scramble\"\n                onClick={scramble}\n            />\n            <MainSideMenuButton \n                name=\"Reset\"\n                onClick={reset}\n            />\n        </div>\n    )\n}\n\nexport default MainSideMenu;","import React,{Component} from \"react\";\nimport Controls from \"../Controls\";\nimport ColorPicker from \"../ColorPicker/SideColorPicker\";\nimport SideSolverUI from \"../SolverUI/SideSolverUI\";\nimport SideSolverControls from \"../SolverUI/SideSolverControls\";\nimport SideColorPickerController from \"../ColorPicker/SideColorPickerController\";\nimport MainSideMenu from \"../MainSideMenu/MainSideMenu\";\nimport \"./SideView.css\";\n\n\nclass SideView extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if(this.props.state.upDateCp!==nextProps.state.upDateCp){\n            return true;\n        }\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\n            //console.log(nextProps.state.solvedSet);\n            return true;\n        }\n\n        if(this.props.state.currentFunc!==nextProps.state.currentFunc) return true;\n\n        if(this.props.state.activeAlgo!==nextProps.state.activeAlgo) return true;\n\n        if( this.props.state.activeAlgo===nextProps.state.activeAlgo&&\n            this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex&&\n            ((this.props.state.autoRewind||this.props.state.autoPlay)\n            &&this.props.state.autoRewind===nextProps.state.autoRewind\n            &&this.props.state.autoPlay===nextProps.state.autoPlay)) return false;\n\n        if(this.props.state.solvedSetIndex!==nextProps.state.solvedSetIndex) return true;\n        if(nextProps.state.autoRewind&&nextProps.state.solvedSetIndex >= nextProps.state.targetSolveIndex-1) return true;\n        if(nextProps.state.autoPlay&&nextProps.state.solvedSetIndex < nextProps.state.targetSolveIndex-1) return true;\n\n        if(!nextProps.state.autoRewind&&this.props.state.autoRewind) return true;\n        if(!nextProps.state.autoPlay&&this.props.state.autoPlay) return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu &&\n           this.props.state.colorPicked===nextProps.state.colorPicked&&\n           this.props.state.currentFunc===nextProps.state.currentFunc&&\n           this.props.state.isValidConfig===nextProps.state.isValidConfig&&\n           this.props.cpErrors===nextProps.cpErrors&&\n           this.props.state.solveTime===nextProps.state.solveTime&&\n           this.props.state.playOne===nextProps.state.playOne&&\n           !this.props.state.autoPlay) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoPlay && this.props.state.solvedSetIndex < this.props.state.targetSolveIndex) return false;\n\n        if(this.props.state.solvedSetIndex===nextProps.state.solvedSetIndex && this.props.state.autoRewind && this.props.state.solvedSetIndex >= this.props.state.targetSolveIndex) return false;\n\n        return true;\n    }\n    render(){\n        let activeMenu;\n        let activeMenuBottom;\n        let activeMenuExit;\n\n\n        let exitConfirm = () =>{\n            document.querySelector(\".warningPopupSolver\").style.visibility=\"visible\";\n            document.querySelector(\".controllerBox\").style.visibility=\"hidden\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"hidden\";\n        }\n\n        let exitCpConfirm = () => {\n            document.querySelector(\".warningPopup\").style.display=\"block\";\n            document.querySelector(\".colorButtonContainer\").style.visibility=\"hidden\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"hidden\";\n        }\n\n        let exitAlgo = () => {\n            this.props.setState({activeMenu:\"\",currentFunc:\"Reset\",solvedSet:[],hoverData:[],prevSet:[],moveSet:[],isValidConfig:false,targetSolveIndex:-1, solveMoves : \"\",autoPlay:false,autoRewind:false,autoTarget: false,playOne : false,activeAlgo:\"none\"});\n        }\n\n        function stay() {\n            document.querySelector(\".warningPopupSolver\").style.visibility = \"hidden\";\n            document.querySelector(\".controllerBox\").style.visibility=\"visible\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\n        }\n\n        function stayCp(){\n            document.querySelector(\".warningPopup\").style.display = \"none\";\n            document.querySelector(\".colorButtonContainer\").style.visibility=\"visible\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\n        }\n\n        function leave(e, props) {\n            document.querySelector(\".warningPopupSolver\").style.visibility = \"hidden\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\n            e.stopPropagation();\n            props.stopSolve();\n\n            if (document.querySelector(\".activeMenu\")) {\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n            }\n\n            if (document.querySelector(\"#solverChangeData\").data) {\n                let data = document.querySelector(\"#solverChangeData\").data.split(\",\");\n                if (data[0] === \"ColorPicker\") {\n                    props.setState({ activeMenu: \"\", currentFunct: \"None\", isValidConfig: false });\n                    document.querySelector(\"#solverChangeData\").data = \"\";\n                    return;\n                }\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n                props.setState({ activeMenu: data[0], currentFunct: data[1], isValidConfig: false });\n                document.querySelector(\"#solverChangeData\").data = \"\";\n\n            }\n            else {\n                props.setState({ activeMenu: \"\", currentFunct: \"None\", isValidConfig: false });\n            }\n        }\n\n        \n\n        let  leaveCp = () => {\n            document.querySelector(\".warningPopup\").style.display = \"none\";\n            document.querySelector(\".bottomExitDiv\").style.visibility=\"visible\";\n            this.props.endColorPicker();\n\n            if( document.querySelector(\".activeMenu\")){\n                document.querySelector(\".activeMenu\").classList.remove(\"activeMenu\");\n            }\n\n            if(document.querySelector(\"#cpChangeData\").data){\n                let data = document.querySelector(\"#cpChangeData\").data.split(\",\");\n                if(data[0]===\"Solver\") {\n                    this.props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n                    document.querySelector(\"#cpChangeData\").data=\"\";\n                    return;\n                }\n                document.querySelector(`#${data[0]}`).classList.add(\"activeMenu\");\n                document.querySelector(\"#cpChangeData\").data=\"\";\n\n                this.props.setState({activeMenu:data[0],currentFunc:data[1],isValidConfig:false},()=>this.props.beginSolve());\n            }\n            else{\n                this.props.setState({activeMenu:\"\",currentFunct:\"None\",isValidConfig:false});\n            }\n        }\n\n        let solverLeaveButton = \n            <button \n                id=\"Solver\" \n                data=\"Solving\" \n                onClick={exitConfirm} \n                className=\"exitButton\">Exit</button>\n\n        let algoLeaveButton =\n            <button \n                id=\"Algorithms\" \n                data=\"Algorithms\" \n                onClick={exitAlgo} \n                className=\"exitButton\">Exit</button>\n        \n        let cpLeaveButton =\n            <button \n                id=\"ColorPicker\" \n                data=\"Color Picker\" \n                onClick={exitCpConfirm} \n                className=\"exitButton\">Exit</button>\n\n        let confirmLeavePopup =\n            <div id=\"controlsPopup\" className=\"warningPopupSolver\" style={{position:\"absolute\", left:\"35vw\", width:\"30vw\", bottom: \"8px\"}}>\n                <div id=\"solverChangeData\" data=\"\"></div>\n                <div className=\"solverMessage\">Are you sure you want to leave Solver? Progress will not be saved.</div>\n                <button onClick={stay} className=\"solverLeaveStay\">Stay</button><button onClick={(e) => leave(e, this.props)} className=\"solverLeaveStay\">Leave</button>\n            </div>\n        \n        let confirmLeavePopupCp=\n            <div id=\"controlsPopup\" className=\"warningPopup\" style={{position:\"absolute\", left:\"35vw\", width:\"30vw\", bottom: \"8px\"}}>\n                <div id=\"cpChangeData\" data=\"\"></div>\n                <div className=\"cpMessage\">Are you sure you want to leave Color Picker? Progress will not be saved.</div>\n                <button onClick={stayCp} className=\"cpLeaveStay\">Stay</button><button onClick={leaveCp} className=\"cpLeaveStay\">Leave</button>\n            </div>\n\n        switch(this.props.state.activeMenu){\n            case 'Moves':\n                activeMenu = <Controls {...this.props}/>\n                break;\n            case 'ColorPicker':\n                activeMenu = <ColorPicker {...this.props}/>\n                activeMenuBottom = <SideColorPickerController {...this.props} />\n                activeMenuExit = cpLeaveButton;\n                break;\n            case 'Solver':\n                activeMenu=<SideSolverUI {...this.props}/>\n                activeMenuBottom=<SideSolverControls {...this.props}/>\n                activeMenuExit=solverLeaveButton;\n                break;\n            case 'Algorithms':\n                activeMenu=<SideSolverUI {...this.props}/>\n                activeMenuBottom=<SideSolverControls {...this.props}/>\n                activeMenuExit=algoLeaveButton;\n                break;\n            default:\n                activeMenu=<MainSideMenu {...this.props}/>;\n                activeMenuBottom=\"\";\n        }\n\n        \n        //console.log(\"hi\")\n        return (\n        [<div className=\"sideMenuWrapper\" key=\"sideMenuWrapper\" style={{pointerEvents: \"none\"}}>\n            {activeMenu}\n        </div>,\n        <div className=\"bottomMenuWrapper\" key=\"bottomMenuWrapper\" style={{pointerEvents: \"none\"}}>\n            {confirmLeavePopupCp}\n            {confirmLeavePopup}\n            {activeMenuBottom}\n            <div className=\"bottomExitDiv\">\n                {activeMenuExit}\n            </div>\n            \n        </div>])\n    }\n}\n\nexport default React.memo(SideView);","import React,{Component} from \"react\";\nimport MobileView from \"../MobileView/MobileView\";\nimport View from \"../View\";\nimport SideView from \"../SideView/SideView\";\nclass Menu extends Component {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props) {\n        super(props);\n    }\n    \n    shouldComponentUpdate(nextProps, nextState) {\n        \n        if(this.props.state.resized===true){\n            this.props.setState({resized:false});\n            return true;\n        }\n\n        if(this.props.state.upDateCp!==nextProps.state.upDateCp){\n            return true;\n        }\n        if(this.props.state.solvedSet!==nextProps.state.solvedSet) {\n            //console.log(nextProps.state.solvedSet);\n            return true;\n        }\n\n        if(this.props.state.currentFunc===\"Scrambling\") return true;\n\n        if(this.props.state.activeMenu===nextProps.state.activeMenu&&this.props.state.activeMenu===\"none\") return false;\n\n        if(\n            (this.props.state.currentFunc===\"Algorithms\"||this.props.state.currentFunc===\"Solving\")&&\n            this.props.state.moveSet===nextProps.state.moveSet&&\n            this.props.state.playOne===false&&\n            this.props.state.autoPlay===false&&\n            this.props.state.autoRewind===false&&\n            nextProps.state.autoRewind===false\n            ) \n            return false;\n        return true;\n    }\n    render(){\n        const props = this.props;\n        return (window.innerWidth > 900&&window.innerHeight>580)? \n            <SideView {...props}/> \n                : window.innerWidth > 600?\n            <View {...props}/>:\n            <MobileView {...props}/>;  \n    } \n}\n\nexport default React.memo(Menu);","import cube from \"../../cubeFunctions/cube\";\nimport solverMain from \"../../solvers/solverMain\";\n\nconst ColorPickerUIFunctions = {\n    alignQuadrant(_piece,size){\n        let pos = _piece.position;\n        let piece = {colors:_piece.colors}\n        const max = size-1;\n        const X = 0, Y = 1, Z = 2;\n    \n        if(pos[X] < Math.floor(size/2) && pos[Y] >= Math.floor(size/2)){\n          piece.position = [ (max - pos[Y]), pos[X], pos[Z] ].join(\"\");\n        }\n        else if(pos[X] >= Math.floor(size/2) && pos[Y] >= Math.ceil(size/2)){\n          piece.position = [ (max - pos[X]), max - pos[Y], pos[Z] ].join(\"\");\n        }\n        else if(pos[X] >= Math.ceil(size/2) && pos[Y] < Math.ceil(size/2)){\n          piece.position = [ pos[Y], (max-pos[X]), pos[Z]].join(\"\");\n        }\n        else piece.position=pos.join(\"\");\n    \n        return piece;\n    },\n\n    checkOccurences : function (a1, a2) {\n        let success = true;\n        let amount = 0;\n        let failedColors = [];\n        for(var i = 0; i < a1.length; i++) {\n          var count = 0;\n          for(var z = 0; z < a2.length; z++) {\n            if (a2[z] === a1[i]) count++;\n          }\n          if(count>1) {\n            success = false;\n            if(!failedColors.includes(a1[i])) failedColors.push(a1[i])\n          }\n    \n        }\n        return {success,failedColors,amount}\n    },\n\n    convertToBlueMiddle : function (_piece,size) {\n        const piece = [..._piece];\n        const max = size-1;\n        const white=0,blue=size-1,red=size-1,yellow=size-1,orange=0,green=0;\n    \n        if(piece[7]===white) {\n          return {\n            colors:[\n              piece[5], // color on bottom(face 5) is now on front(index 0)\n              piece[0], // color on front(0) is now on top(1)\n              piece[2], // color on right(2) is still on right(2)\n              piece[1], // color on top(1) is now on back(3)\n              piece[4], // color on left(4) is now on left(4)\n              piece[3]  // color on back(3) is now on bottom(5)\n            ].join(\"\"),\n            position:[\n              piece[6],\n              piece[8],\n              max // becomes top\n            ]\n          }\n        }\n    \n        if(piece[8]===blue) {\n          return {\n            colors:[\n              piece[0], // piece on front(0) is now on front(0)\n              piece[1], // piece on top(1) is still on top(1)\n              piece[2], // piece on right(2) is now on right(2)\n              piece[3], // piece on back(3) is now on back(3)\n              piece[4], // piece on left(4) is now on left(4)\n              piece[5] // piece on bottom(5) is still on bottom(5)\n            ].join(\"\"),\n            position:[\n              piece[6], // stays same\n              piece[7],  // stays same\n              max // becomes top\n            ]\n          }\n        }\n    \n        if(piece[6]===red) {\n          return {\n            colors:[\n              piece[0], // piece on front(index 0) remains the same\n              piece[2], // piece on right(2) is still on top(1)\n              piece[5], // piece on bottom(5) is now on right(2)\n              piece[3], // piece on back(3) remains the same\n              piece[1], // piece on top(1) is now on left(4)\n              piece[4]  // piece on left(4) is still on bottom(5)\n            ].join(\"\"),\n            position:[\n              max-piece[8], \n              piece[7],  \n              max // becomes top\n            ]\n          }\n        }\n    \n        if(piece[7]===yellow) {\n          return {\n            colors:[\n              piece[1], // piece on front(0) is now on bottom(5)\n              piece[3], // piece on top(1) is still on front(0)\n              piece[2], // piece on right(2) is now on right(2)\n              piece[5], // piece on back(3) is now on top(1)\n              piece[4], // piece on left(4) is now on left(4)\n              piece[0] // piece on bottom(5) is still on back(3)\n            ].join(\"\"),\n            position:[\n              piece[6], // inverse y becomes x\n              max-piece[8],  // y becomes 0\n              max // becomes top\n            ]\n          }\n        }\n    \n        if(piece[6]===orange) {\n          return {\n            colors:[\n              piece[0], // piece on front(0) is now on front(0)\n              piece[4], // piece on top(1) is still on right(2)\n              piece[1], // piece on right(2) is now on bottom(5)\n              piece[3], // piece on back(3) is now on back(3)\n              piece[5], // piece on left(4) is now on top(1)\n              piece[2] // piece on bottom(5) is still on left(4)\n            ].join(\"\"),\n            position:[\n              piece[8], // inverse y becomes x\n              piece[7],  // y becomes 0\n              max // becomes top\n            ]\n          }\n        }\n    \n        if(piece[8]===green) {\n          return {\n            colors:[\n              piece[0], // piece on front(0) is now on front(0)\n              piece[5], // piece on top(1) is still on bottom(5)\n              piece[4], // piece on right(2) is now on left(4)\n              piece[3], // piece on back(3) is now on back(3)\n              piece[2], // piece on left(4) is now on right(2)\n              piece[1] // piece on bottom(5) is still on top(1)\n            ].join(\"\"),\n            position:[\n              max-piece[6], // inverse y becomes x\n              piece[7],  // y becomes 0\n              max // becomes top\n            ]\n          }\n        }\n    \n    },\n\n    checkValidMatchMiddle(validPiece,manualPiece,size){\n        let newValidPiece = ColorPickerUIFunctions.alignQuadrant(ColorPickerUIFunctions.convertToBlueMiddle(validPiece,size));\n        let newManualPiece = ColorPickerUIFunctions.alignQuadrant(ColorPickerUIFunctions.convertToBlueMiddle(manualPiece,size));\n        if(newValidPiece.colors===newManualPiece.colors&&newValidPiece.position===newManualPiece.position){\n          return true;\n        }\n        \n        return false;\n    },\n    \n    convertToBlueWhiteEdge : function (_piece,size) {\n        const piece = [..._piece];\n        const max = size-1;\n        const white=0,blue=size-1,red=size-1,yellow=size-1,orange=0,green=0;\n    \n        // colors according to the solved cube\n        if(piece[7]===white&&piece[8]===blue) {\n          return {\n            colors:[\n              piece[0], // piece on front(0) is now on front(0)\n              piece[1], // piece on top(1) is still on top(1)\n              piece[2], // piece on right(2) is now on right(2)\n              piece[3], // piece on back(3) is now on back(3)\n              piece[4], // piece on left(4) is now on left(4)\n              piece[5] // piece on bottom(5) is still on bottom(5)\n            ].join(\"\"),\n            position:[\n              piece[6], // inverse y becomes x\n              0,  // y becomes 0\n              max // becomes top\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===orange&&piece[8]===blue) {\n          return {\n            colors:[\n              piece[4], // piece on left(4) is now on front(0)\n              piece[1], // piece on top(1) is still on top(1)\n              piece[0], // piece on front(0) is now on right(2)\n              piece[2], // piece on right(2) is now on back(3)\n              piece[3], // piece on back(3) is now on left(4)\n              piece[5] // piece on bottom(5) is still on bottom(5)\n            ].join(\"\"),\n            position:[\n              max-piece[7], // inverse y becomes x\n              0,  // y becomes 0\n              max // becomes top\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[7]===yellow&&piece[8]===blue){\n          return {\n            colors:[\n              piece[3], // piece on back(3) is now on front(0)\n              piece[1], // piece on top(1) is still on top(1)\n              piece[4], // piece on left(4) is now on right(2)\n              piece[0], // piece on front(0) is now on back(3)\n              piece[2], // piece on right(2) is now on left(4)\n              piece[5] // piece on bottom(5) is still on bottom(5)\n            ].join(\"\"),\n            position:[\n              size-(piece[6]+1), // inverse x becomes x\n              0,  // y becomes 0\n              max // becomes top\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===red&&piece[8]===blue){\n          return {\n            colors:[\n              piece[2], // piece on right(2) is now on front(0)\n              piece[1], // piece on top(1) is still on top(1)\n              piece[3], // piece on back(3) is now on right(2)\n              piece[4], // piece on left(4) is now on back(3)\n              piece[0], // piece on front(0) is now on left(4)\n              piece[5] // piece on bottom(5) is still on bottom(5)\n            ].join(\"\"),\n            position:[\n              piece[7], // inverse y becomes x\n              0,  // y becomes 0\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===orange&&piece[7]===white){\n          return {\n            colors:[\n              piece[0], // piece on front(0) is still on front(0)\n              piece[4], // piece on left(4) is now on top(1)\n              piece[1], // piece on top(1) is now on right(2)\n              piece[3], // piece on back(3) is still on back(3)\n              piece[5], // piece on bottom(5) is now on left(4)\n              piece[2] // piece on right(2) is now on bottom(5)\n            ].join(\"\"),\n            position:[\n              piece[8], // z becomes x\n              0,  // y 0\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===red&&piece[7]===white){\n          return {\n            colors:[\n              piece[0], // piece on front(0) is still on front(0)\n              piece[2], // piece on right(2) is now on top(1)\n              piece[5], // piece on bottom(5) is now on right(2)\n              piece[3], // piece on back(3) is still on back(3)\n              piece[1], // piece on top(1) is now on left(4)\n              piece[4] // piece on left(4) is now on bottom(5)\n            ].join(\"\"),\n            position:[\n              max-piece[8], // inverse z becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===orange&&piece[7]===yellow){\n          return {\n            colors:[\n              piece[4], // piece on left(4) is now on front(0)\n              piece[3], // piece on back(3) is now on top(1)\n              \"black\",\n              \"black\",\n              \"black\",\n              \"black\",\n            ].join(\"\"),\n            position:[\n              piece[8], // z becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===red&&piece[7]===yellow){\n          return {\n            colors:[\n              piece[2], // piece on right(2) is now on front(0)\n              piece[3], // piece on back(1) is still on top(1)\n              \"black\",\n              \"black\",\n              \"black\",\n              \"black\",\n            ].join(\"\"),\n            position:[\n              max-piece[8], // inverse z becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[7]===white&&piece[8]===green){\n          return {\n            colors:[\n              piece[0], // piece on front(0) is still on front(0)\n              piece[5], // piece on bottom(5) is now on top(1)\n              \"black\",\n              \"black\",\n              \"black\",\n              \"black\",\n            ].join(\"\"),\n            position:[\n              max-piece[6], // inverse x becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===orange&&piece[8]===green){\n          return {\n            colors:[\n              piece[4], // piece on left(4) is now on front(0)\n              piece[5], // piece on bottom(5) is now on top(1)\n              \"black\",\n              \"black\",\n              \"black\",\n              \"black\",\n            ].join(\"\"),\n            position:[\n              piece[7], // y becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[7]===yellow&&piece[8]===green){\n          return {\n            colors:[\n              piece[3], // piece on back(3) is now on front(0)\n              piece[5], // piece on bottom(5) is now on top(1)\n              \"black\",\n              \"black\",\n              \"black\",\n              \"black\",\n            ].join(\"\"),\n            position:[\n              piece[6], // x becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n    \n        if(piece[6]===red&&piece[8]===green){\n          return {\n            colors:[\n              piece[2], // piece on right(2) is now on front(0)\n              piece[5], // piece on bottom(5) is now on top(1)\n              \"black\",\n              \"black\",\n              \"black\",\n              \"black\",\n            ].join(\"\"),\n            position:[\n              max-piece[7], // inverse y becomes x\n              0,  // y remains the same\n              max // becomes tops\n            ].join(\"\")\n          }\n        }\n        \n        console.log(\"failed to register piece\",piece);\n        return null;\n    },\n\n    checkValidMatchEdge : function(validPiece,manualPiece,size) {\n        let max = size-1;\n        let newValidPiece = ColorPickerUIFunctions.convertToBlueWhiteEdge([...validPiece],size);\n        let newManualPiece = ColorPickerUIFunctions.convertToBlueWhiteEdge([...manualPiece],size); \n        if((newValidPiece.colors===newManualPiece.colors&&newValidPiece.position===newManualPiece.position)||validPiece.includes(\"center\")){\n          return true;\n        }\n        else if(newValidPiece.colors!==newManualPiece.colors&&parseInt(newValidPiece.position[0])===max-parseInt(newManualPiece.position[0])){\n          //console.log(\"valid\");\n          //console.log(newValidPiece,newManualPiece)\n          return true;\n        }\n        else return false;\n    },\n\n    checkColors : function (state) {\n        let size = state.cubeDimension;\n        let rubiksLength = state.rubiksObject.length;\n        let whiteCount = 0,blueCount = 0,redCount = 0,yellowCount = 0,orangeCount = 0,greenCount = 0;\n        let duplicateFace = false;\n        let duplicateColors = [];\n        let matchedCount = 0;\n        let obj = {error:[]};\n        let validAmount = size*size;\n        let rubiks = [...state.rubiksObject];\n        let generated = cube.generateSolved(size,size,size);\n        let newGenerated = [];\n        let invalidMiddleConfig;\n        let invalidEdgeConfig;\n        for(let i = 0; i < rubiks.length; i++){\n          let rubik = [...rubiks[i]];\n          const colors = ['white','blue','red','yellow','orange','green'];\n          if(rubik.includes('white')) whiteCount+=1;\n          if(rubik.includes('blue')) blueCount+=1;\n          if(rubik.includes('red')) redCount+=1;\n          if(rubik.includes('yellow')) yellowCount+=1;\n          if(rubik.includes('orange')) orangeCount+=1;\n          if(rubik.includes('green')) greenCount+=1;\n    \n          let res = ColorPickerUIFunctions.checkOccurences(colors,rubik);\n          if(!res.success){\n            duplicateFace = true;\n            let tempColors = []\n            res.failedColors.forEach(color => {\n              if(!tempColors.includes(color)) {\n                tempColors.push(color);\n              }\n            })\n            duplicateColors=tempColors;\n          }\n        }\n    \n        let checked = [];\n        let otherChecked = [];\n        //For each cube piece in the generated solved cube, find the matching\n        //manually inputted piece and overwrite the solved position from the unsolved\n        //piece with the solved piece's solved position to a new generated cube. For \n        //edge pieces, an extra check was needed to ensure first half segments weren't\n        //getting assigned or assigning to second half segments(becomes unsolvable).\n        generated.tempArr.forEach(([...piece],pieceIndex) =>{\n          newGenerated.push([]);\n          let tempInvalidMatch = [];\n          rubiks.forEach(([...rubik],i) => {\n            \n            let validPiece = 0;\n            piece.slice(0,6).sort().forEach((face,index) =>{\n              if(rubik.slice(0,6).sort()[index]===face) {validPiece++;}\n            });\n            if(validPiece===6&&!checked.includes(pieceIndex)&&!otherChecked.includes(i)){\n              let validEdgePlacement = false;\n              let validMiddlePlacement = false;\n              if(piece.includes(\"edge\")){\n                validEdgePlacement = ColorPickerUIFunctions.checkValidMatchEdge(piece,rubik,size);\n                // A center edge cannot match with a non center edge\n                if((piece[13]===\"center\"&&rubik[13]!==\"center\")||\n                  (rubik[13]===\"center\"&&piece[13]!==\"center\")){\n                    validEdgePlacement = false;\n                }\n                else if (piece[13]===\"center\"&&rubik[13]===\"center\"){\n                  validEdgePlacement = true;\n                }\n              }\n              else if(piece.includes(\"middle\")){\n                validMiddlePlacement = ColorPickerUIFunctions.checkValidMatchMiddle(piece,rubik,size);\n                if(!validMiddlePlacement) tempInvalidMatch.push([piece,rubik]);\n              }\n              else{\n                validEdgePlacement = true;\n                validMiddlePlacement = true;\n              }\n              if(validEdgePlacement||validMiddlePlacement){\n                matchedCount++;\n                checked.push(pieceIndex);\n                otherChecked.push(i);\n                newGenerated[pieceIndex]=[\n                  ...rubik.slice(0,9),\n                  ...piece.slice(9,15)\n                ];\n              }\n            }\n          })\n          if(newGenerated[pieceIndex].length===0)\n            if(piece[12]===\"edge\")\n              invalidEdgeConfig=\"Invalid edge configuration.\";\n            else if(piece[12]===\"middle\"){\n              invalidMiddleConfig = \"Invalid middle configuration.\";\n            }\n        });\n    \n        let invalidAmounts = [];\n        if(whiteCount!==validAmount){\n          invalidAmounts.push(\"white\");\n        }\n        if(blueCount!==validAmount){\n          invalidAmounts.push(\"blue\");\n        }\n        if(redCount!==validAmount){\n          invalidAmounts.push(\"red\");\n        }\n        if(yellowCount!==validAmount){\n          invalidAmounts.push(\"yellow\");\n        }\n        if(orangeCount!==validAmount){\n          invalidAmounts.push(\"orange\");\n        }\n        if(greenCount!==validAmount){\n          invalidAmounts.push(\"green\");\n        }\n        if(invalidAmounts.length){\n          invalidAmounts=invalidAmounts.join(', ');\n          obj.error.push(`Invalid ${invalidAmounts} sticker count.`);\n        }\n    \n        if(duplicateFace){\n          duplicateColors=duplicateColors.join(', ');\n          obj.error.push(`More than one occurence of ${duplicateColors} found on a piece.`);\n        }\n    \n        if(matchedCount!==rubiksLength&&state.cubeDimension<4){\n          obj.error.push(`[${matchedCount-1}] out of [${rubiksLength-1}] matched. Missing [${(rubiksLength-1)-(matchedCount-1)}]`);\n        }\n    \n        if(invalidEdgeConfig){\n          obj.error.push(invalidEdgeConfig);\n        }\n        if(invalidMiddleConfig){\n          obj.error.push(invalidMiddleConfig);\n        }\n    \n        if(!obj.error.length){\n          const solveData = {...solverMain(state,newGenerated)};\n          if(solveData.solveable===false){\n            //console.log(newGenerated);\n            obj.error.push(`This configuration of the cube is not solveable,\n            please check that you've entered all pieces correctly.`);\n          }\n          else{\n            obj.error = undefined;\n          }\n        }\n    \n        if(!obj.error) {obj.success = true;obj.newGenerated = newGenerated}\n        return obj;\n    }\n}\n\nexport default ColorPickerUIFunctions;","import React, { Component } from 'react';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Speeds from \"./components/Speeds/Speeds\";\nimport MoveInput from \"./components/MoveInput\";\nimport SolverInfo from \"./components/SolverInfo/SolverInfo\";\nimport ColorPickerInfo from \"./components/ColorPickerInfo/ColorPickerInfo\";\nimport Menu from \"./components/MenuWrapper/MenuWrapper\";\n\nimport * as THREE from \"three\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap';\nimport cube from './cubeFunctions/cube';\nimport moveFuncs from './cubeFunctions/move';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport ColorPickerUIFunctions from \"./components/ColorPicker/ColorPickerUIFunctions\";\n\n// TODO:\n/*\n * 1. Start moving functions to other files: STARTED\n * \n * 2. UI Rework: Started\n * \n * 3. Continue working on solvers.\n * \n * 4. ISSUES:\n *  - Fix issue is yellow solver\n */\n\nclass App extends Component {\n  state = {\n    cubes : [],           // Contains visual cube\n    rubiksObject : [],    // Contains memory cube\n    blackObject: [],\n    speed : 7.5,          // Control individual piece rotation speed (don't change)\n    rotationSpeed : 350,  // Controls visual rotation speed\n    start : 7.5,          // Start value for a rotation or set of rotations\n    end : 0,              // End value for a roation or set of rotations\n    turnDirection : 0,    // Dictates whether the rotation is clockwise or counterclockwise\n    face : 0,             // The face being turned\n    cameraX : 5,          // Camera position x\n    cameraY : -5,         // Camera position y\n    cameraZ : 2,          // Camera position z\n    currentFunc : \"None\", // Variable used to display current function\n    moveLog : \"\",         // Keeps a log of all moves\n    moveSet : [],         // Algorithms queue moves through this variable\n    prevSet : [],\n    angle : 3.9,          // Camera angle\n    cubeDimension : null, // Cube dimensions. Ex: 3 => 3x3x3 cube\n    cubeDepth : 1,        // Used to determine rotation depth on cubes greater than 3\n    currentSpeed:\"Medium\",// Displays which speed is selected\n    moves : 0,            // Used by scramble functions\n    reload : false,       // Lets animate know when to reload the cube (after every move)\n    solveState : -1,      // Dictates progression of solve function\n    solveMoves : \"\",      // Keeps track of moves used during solve\n    solvedSet: [],\n    solvedSetIndex: 0,\n    facePosX : null,\n    facePosY : null,\n    facePosZ : null,\n    faceSide : null,\n    colorPicked: 'white',\n    mouseFace : null,\n    mouseDown : false,\n    mousePos : null,\n    undoIndex : 0,        // Index to keep track of where undo/redo is\n    blockMoveLog : false, // Blocks adding move when undoing/redoing a move\n    previousPiece : null, // Keeps track of hovered face to not redraw\n    rubiksIndex : 0,      // Index to keep track of middles while solving\n    middles : [],         // Contains all middle segments\n    corners : [],         // Contains all corner segments         \n    // showStats: false,     // Setting for stats\n    showMoveInput: false,  // Setting for custom move input\n    showControls: false,   // Setting for move controls\n    showHints: true,\n    showGuideArrows: true,\n    activeDragsInput: 0,  // Keeps track of draggable input\n    deltaPositionInput: {\n      x: 100, y: 100\n    },\n    controlledPositionInput: {\n      x: 0, y: 0\n    },\n    activeDragsControls: 0,// Keeps track of draggable buttons\n    deltaPositionControls: {\n      x: 100, y: 100\n    },\n    controlledPositionControls: {\n      x: 0, y: 0\n    },\n    isMulti : false,\n    isVisible : false,\n    isValidConfig : true,\n    hoverData : [],\n    showSolveController : false,\n    autoPlay : false,\n    autoRewind: false,\n    autoTarget: false,\n    playOne : false,\n    generateAllMoves: false,\n    isLocal : null,\n    cpErrors : [],\n    activeMenu : \"\",\n    solveTime:0,\n    targetSolveIndex: -1,\n    activeAlgo:\"None Selected\",\n    sliderSpeed:40,\n    jumpToEnd: false,\n    algoUp: false,\n    algoDown: false,\n    upDateCp: 0\n  };\n\n  // Bind keys to functions\n  keyBinds = key => {\n    switch (key){\n\n      case 'R':\n        this.rotateOneFace(key+\"'\",[2,0,1]);\n        break;\n      case 'r':\n        this.rotateOneFace(key.toUpperCase(),[2,-1,1]);\n        break;\n\n      case 'L':\n        this.rotateOneFace(key+\"'\",[4,0,1]);\n        break;\n      case 'l':\n        this.rotateOneFace(key.toUpperCase(),[4,-1,1]);\n        break;\n\n      case 'F':\n        this.rotateOneFace(key+\"'\",[0,0,1]);\n        break;\n      case 'f':\n        this.rotateOneFace(key.toUpperCase(),[0,-1,1]);\n        break;\n\n      case 'U':\n        this.rotateOneFace(key+\"'\",[1,0,1]);\n        break;\n      case 'u':\n        this.rotateOneFace(key.toUpperCase(),[1,-1,1]);\n        break;\n\n      case 'D':\n        this.rotateOneFace(key+\"'\",[5,0,1]);\n        break;\n      case 'd':\n        this.rotateOneFace(key.toUpperCase(),[5,-1,1]);\n        break;\n\n      case 'B':\n        this.rotateOneFace(key+\"'\",[3,0,1]);\n        break;\n      case 'b':\n        this.rotateOneFace(key.toUpperCase(),[3,-1,1]);\n        break;\n\n      case '1':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('white');\n        }\n        break;\n      case '2':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('blue');\n        }\n        break;\n      case '3':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('red');\n        }\n        break;\n      case '4':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('yellow');\n        }\n        break;\n      case '5':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('orange');\n        }\n        break;\n      case '6':\n        if(this.state.currentFunc==='Color Picker'){\n          this.changeColor('green');\n        }\n        break;\n      case 'ArrowLeft':\n        if(this.state.currentFunc==='Solving'||this.state.currentFunc==='Algorithms'){\n          this.rewindSolve();\n        }\n        else if(this.state.currentFunc==='None'){\n          this.undo();\n        }\n        break;\n      case 'ArrowRight':\n        if(this.state.currentFunc==='Solving'||this.state.currentFunc==='Algorithms'){\n          if(!this.state.moveSet.length) return;\n          if((this.state.moveSet[0]===this.state.moveSet[1]||this.state.moveSet[1]===\"stop'\")&&!this.state.autoPlay){\n            this.setState({\n                  autoPlay:true,\n                  autoRewind:false,\n                  targetSolveIndex:this.state.solvedSetIndex+2});\n          }\n          else{\n              if(this.state.playOne===true) return;\n              if(this.state.moveSet[0]&&typeof(this.state.moveSet[0][0])==='string'&&this.state.moveSet[0]!==\"'\"){\n                this.setState({playOne:true,prevSet:[...this.state.prevSet,this.state.moveSet[0]]});\n              }\n          }\n        }\n        else if(this.state.currentFunc==='None'){\n          this.redo();\n        }\n        break;\n      case 'ArrowDown':\n        if(this.state.currentFunc===\"Algorithms\"){\n          this.setState({algoDown:true,resized:true});\n        }\n        break;\n      case 'ArrowUp':\n        if(this.state.currentFunc===\"Algorithms\"){\n          this.setState({algoUp:true,resized:true});\n        }\n        break;\n      default:\n    }\n  }\n\n  // Handles key press event\n  keyHandling = e => {\n    this.keyBinds(e.key);\n  }\n\n  onMouseUp( event ) {\n    this.setState({mouseDown : false});  \n  }\n\n  onSliderChange = (value) => {\n    this.setState({sliderSpeed:value})\n    switch(value){\n      case 0:\n        this.changeSpeed(1.5,1050,\"Slowest\");\n        break;\n      case 10:\n        this.changeSpeed(3,750,\"Slower\")\n        break;\n      case 20:\n        this.changeSpeed(5,500,\"Slow\")\n        break;\n      case 30:\n        this.changeSpeed(7.5,350,\"Medium\")\n        break;\n      case 40:\n        this.changeSpeed(10,250,\"Fast\")\n        break;\n      case 50:\n        this.changeSpeed(15,175,\"Faster\")\n        break;\n      case 60:\n        this.changeSpeed(30,100,\"Fastest\")\n        break;\n      case 70:\n        this.changeSpeed(90,20,\"Zoomin\")\n        break;\n      default:\n        console.log(\"unexpected behavior\");\n    }\n  }\n\n  // Functions to change speed\n  changeSpeed = (_speed,_rotationSpeed,_name,bypass) => {\n    this.state.currentFunc!==\"None\"&&!bypass ?\n      this.setState({moveSet:[[_speed,_rotationSpeed,_name],...this.state.moveSet]}):\n      this.setState({currentSpeed: _name,speed: _speed, start: _speed, end: 0, rotationSpeed: _rotationSpeed});\n  }\n\n  changeColor = (color) => {\n    this.setState({colorPicked:color});\n  }\n\n  changeFaceColor = (pos,side,color) => {\n    let tempObj = [...this.state.rubiksObject]\n    for(let i = 0; i < tempObj.length; i++){\n      let tempCube = [...tempObj[i]];\n      if(tempCube[6]===pos.x && tempCube[7]===pos.y && tempCube[8]===pos.z){\n        tempCube[side]=color;\n        tempObj[i] = [...tempCube];\n        i = tempObj.length;\n      }  \n    }\n    this.setState({rubiksObject:[...tempObj],isValidConfig:false,upDateCp:this.state.upDateCp+1,cpErrors: []},()=>{\n      this.reloadTurnedPieces('cp');\n    });\n  }\n\n  runCheckColors(){\n    let obj = ColorPickerUIFunctions.checkColors(this.state);\n    if(obj.error) this.setState({cpErrors:[...obj.error]});\n    else if(obj.success) this.setState({isValidConfig:true,cpErrors:[]});\n  }\n\n  setColorPickedCube = () => {\n    let rubiks = [...this.state.rubiksObject];\n    let size = this.state.cubeDimension;\n    let generated = cube.generateSolved(size,size,size);\n    let newGenerated = [];\n    let checked = [];\n    let otherChecked = [];\n\n    generated.tempArr.forEach(([...piece],pieceIndex) =>{\n      newGenerated.push([]);\n      rubiks.forEach(([...rubik],i) => {\n        let validPiece = 0;\n        piece.slice(0,6).sort().forEach((face,index) =>{\n          if(rubik.slice(0,6).sort()[index]===face) {validPiece++;}\n        }); \n        if(validPiece===6&&!checked.includes(pieceIndex)&&!otherChecked.includes(i)){\n          let validEdgePlacement = false;\n          let validMiddlePlacement = false;\n          if(piece.includes(\"edge\")){\n            validEdgePlacement = ColorPickerUIFunctions.checkValidMatchEdge(piece,rubik,size);\n            // A center edge cannot match with a non center edge\n            if((piece[13]===\"center\"&&rubik[13]!==\"center\")||\n              (rubik[13]===\"center\"&&piece[13]!==\"center\")){\n              validEdgePlacement = false;\n            }\n            else if (piece[13]===\"center\"&&rubik[13]===\"center\"){\n              validEdgePlacement = true;\n            }\n          }\n          else if(piece.includes(\"middle\")){\n            validMiddlePlacement = ColorPickerUIFunctions.checkValidMatchMiddle(piece,rubik,size);\n          }\n          else{\n            validEdgePlacement = true;\n            validMiddlePlacement = true;\n          }\n          if(validEdgePlacement||validMiddlePlacement){\n            checked.push(pieceIndex);\n            otherChecked.push(i);\n            newGenerated[pieceIndex]=[\n              ...rubik.slice(0,9),\n              ...piece.slice(9,15)\n            ];\n          }\n        }\n      }) \n    });\n\n    this.setState({rubiksObject:newGenerated,currentFunc : \"None\",activeMenu:\"\"},()=>{\n      this.reloadTurnedPieces('check');\n      this.setState({activeMenu:'Solver'});\n      this.beginSolve();\n    });\n  }\n\n  // Allows the user to undo a move\n  undo = () => {\n    let undoIndex = this.state.undoIndex;\n    let moveString = this.state.moveLog;\n    const moveArray = moveFuncs.moveStringToArray(moveString);\n    if(moveString === \"\") return;\n\n    else if(this.state.currentFunc !== \"None\") return;\n\n    else if(moveArray.length-1-undoIndex >= 0)\n      this.setState({blockMoveLog : true,\n                     currentFunc : \"Undo\",\n                     moveSet : [moveArray[moveArray.length-1-undoIndex]],\n                     undoIndex : undoIndex + 1});\n  }\n\n  // Allows the user to redo a move\n  redo = () => {\n    if(this.state.currentFunc !== \"None\") return;\n    let undoIndex = this.state.undoIndex;\n    let moveString = this.state.moveLog;\n    if(moveString === \"\") return;\n    \n    const moveArray = moveFuncs.moveStringToArray(moveString);\n    \n    let backwardsMove = moveArray[moveArray.length-undoIndex];\n    try{\n      backwardsMove.includes(\"'\") ? backwardsMove = backwardsMove.substring(0,3) : backwardsMove += \"'\";\n    }catch(err){\n      return;\n    }\n\n    if(undoIndex > 0)\n      this.setState({blockMoveLog : true,\n                     currentFunc : \"Redo\",\n                     moveSet : [backwardsMove],\n                     undoIndex : undoIndex - 1});\n  }\n\n  // Control when single buttons can be clicked\n  rotateOneFace = (e,vals) => {\n    if (vals.length < 4) vals.push(false);\n\n    if(this.state.currentFunc === \"None\") {\n\n      let cD = this.state.cubeDimension;\n      let rubiksObject = this.state.rubiksObject;\n      let blockMoveLog = this.state.blockMoveLog;\n      let moveLog = this.state.moveLog;\n      let solveMoves = this.state.solveMoves;\n      let solveState = this.state.solveState;\n      let end = this.state.end;\n      let obj = cube.rotateCubeFace(vals[0],vals[1],vals[2],vals[3],blockMoveLog,moveLog,solveMoves,end,solveState);\n\n      obj.currentFunc = e;\n      obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,rubiksObject);\n\n      this.setState(obj);\n    }\n  }\n\n  // Small bug, account for double turns\n  algorithm = (moveString,moveName) => {\n    if(this.state.currentFunc === \"Solving\"||this.state.currentFunc === \"Algorithms\"){\n      if(this.state.moveSet[0]){\n        if(moveFuncs.checkMoveEquivalence(moveString,this.state.moveSet[0],this.state.cubeDimension)){\n          this.playOne(this);\n        }\n      }\n      return;\n    }\n    if(this.state.currentFunc !== \"None\") return;\n    const moveArray = moveFuncs.moveStringToArray(moveString);\n    this.setState({currentFunc : moveName, moveSet : moveArray});\n  }\n\n  // Resets the cube and the move log\n  reset = () => {\n    let cD = this.state.cubeDimension;\n    let generated = cube.generateSolved(cD,cD,cD);\n    let rubiksObject = generated.tempArr;\n    this.setState({rubiksObject,moveSet: [],moveLog: \"\",currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [],cpErrors:[],activeMenu:\"none\"},()=>{\n      this.reloadTurnedPieces('all');\n    });\n  }\n\n  // Changes state active function to begin scrambling\n  beginScramble = () => {\n    \n    if(this.state.currentFunc === \"None\") {\n      let moveSet = [];\n      while (moveSet.length<25){\n        let temp = moveFuncs.generateMove(this.state.cubeDimension);\n        if(moveSet[moveSet.length-1]&&\n           moveSet[moveSet.length-1].slice(0,3)===temp.slice(0,3)&&\n           moveSet[moveSet.length-1].length!==temp.length);\n        else if(moveSet[moveSet.length-2]&&\n                moveSet[moveSet.length-1]&&\n                moveSet[moveSet.length-2]===temp&&\n                moveSet[moveSet.length-1]===temp);\n        else moveSet.push(temp);\n      }\n      this.setState({currentFunc : \"Scrambling\",moveSet});\n    }\n  }\n\n  // Starts the solve process\n  beginSolve = () => {\n    if(this.state.currentFunc !== \"None\") return;\n    this.setState({currentFunc : \"Solving\",solveState : 0,autoPlay : false, playOne : false, solveOnce : true});\n  }\n\n  stopSolve = () => {\n    this.setState({currentFunc : \"None\",solveState : -1,autoPlay : false, playOne : false, isVisible : false, hoverData : [], solveMoves : \"\", prevSet : [], moveSet : [],targetSolveIndex:-1,solvedSet:[]});\n  }\n\n  beginColorPicker = () => {\n    let cD = this.state.cubeDimension;\n    if(this.state.currentFunc !== \"None\") return;\n    const blank = [...cube.generateBlank(cD,cD,cD)];\n    this.setState({currentFunc : \"Color Picker\",rubiksObject: [...blank]},()=>{\n      this.reloadTurnedPieces('cp');\n    });\n  }\n\n  endColorPicker = () => {\n    this.reset();\n    this.setState({currentFunc : \"None\",cpErrors:[]});\n  }\n\n  playOne = props => {\n    if(!props.state.moveSet.length) return;\n    if((props.state.moveSet[0]===props.state.moveSet[1]||props.state.moveSet[1]===\"stop'\")&&!props.state.autoPlay){\n        props.setState({\n            autoPlay:true,\n            autoRewind:false,\n            targetSolveIndex:props.state.solvedSetIndex+2});\n    }\n    else{\n        if(props.state.playOne===true) return;\n        if(props.state.moveSet[0]&&typeof(props.state.moveSet[0][0])==='string'&&props.state.moveSet[0]!==\"'\"){\n            props.setState({playOne:true,prevSet:[...props.state.prevSet,props.state.moveSet[0]]});\n        }\n    }\n  }\n\n  rewindSolve = () => {\n    if(this.state.playOne) return;\n    if((this.state.prevSet[this.state.prevSet.length-1]===this.state.prevSet[this.state.prevSet.length-2]||this.state.prevSet[this.state.prevSet.length-1]===\"stop'\")&&!this.state.autoRewind){\n      this.setState({\n        autoPlay:false,autoRewind:true,targetSolveIndex:this.state.solvedSetIndex-2\n      });\n      return;\n    }\n    let newMoveSet = [];\n    let tempMoveSet = [...this.state.moveSet];\n    let tempPrev = [...this.state.prevSet];\n    let lastEl = tempPrev[tempPrev.length-1];\n    let popped = tempPrev.pop();\n    if(!popped) {\n      this.setState({autoRewind:false});\n      return;\n    }\n    popped[popped.length-1]===\"'\" ? popped=popped.slice(0,3) : popped+=\"'\";\n    newMoveSet.push(popped,lastEl,...tempMoveSet);\n    this.setState({\n      playOne:true,\n      prevSet:tempPrev,\n      moveSet:newMoveSet,\n      solvedSetIndex:this.state.solvedSetIndex-2\n    })\n  }\n\n  handleDragInput = (e, ui) => {\n    const {x, y} = this.state.deltaPositionInput;\n    this.setState({\n      deltaPositionInput: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n  };\n\n  onStartInput = () => {\n    this.setState({activeDragsInput: this.state.activeDragsInput+1});\n  };\n\n  onStopInput = () => {\n    this.setState({activeDragsInput: this.state.activeDragsInput-1});\n  };\n\n  mouseOver = (name,data,e) => {\n    if(this.state.showHints)\n      this.setState({\n        isVisible: true,\n        hoverData: data\n      });\n  }\n\n  mouseLeave = () => {\n    this.setState({\n      isVisible: false,\n      hoverData: []\n    });\n  }\n\n  /* Each piece that's rotated has its rotation disrupted on other planes.\n   *\n   * This function solves that issue by setting all piece rotations back to zero\n   * and then placing colors to look as though the piece were still rotated.\n   * \n   * Some optimizations have been added. Undersides and insides of some pieces\n   * appear white instead of black initially but does not disrupt the rest of\n   * the cube. Likely won't be changed since that optimization greatly improves\n   * run time.\n   */\n  reloadTurnedPieces = (pos) => {\n    let cubes = [...this.state.cubes];\n    \n    for(let i = 0; i<this.state.rubiksObject.length;i++){\n      \n      let tempCube = {...cubes[i]};\n      let rotation = tempCube.rotation;\n\n\n      if(pos === tempCube.position){\n        tempCube.opacity=1;\n        cubes[i] = tempCube;\n      }\n\n      else if((rotation.x !== 0 || rotation.y !== 0 ||rotation.z !== 0) || \n           (pos==='all'||pos==='cp'||pos==='check')){\n        if(pos==='all'||pos==='cp') {\n          tempCube.position.x=this.state.rubiksObject[i][9];\n          tempCube.position.y=this.state.rubiksObject[i][10];\n          tempCube.position.z=this.state.rubiksObject[i][11];\n        }\n        if(pos==='check') {\n          tempCube.position.x=this.state.rubiksObject[i][6];\n          tempCube.position.y=this.state.rubiksObject[i][7];\n          tempCube.position.z=this.state.rubiksObject[i][8];\n        }\n        tempCube.material[0].color = new THREE.Color(this.state.rubiksObject[i][2]);\n        tempCube.material[1].color = new THREE.Color(this.state.rubiksObject[i][4]);\n        tempCube.material[2].color = new THREE.Color(this.state.rubiksObject[i][3]);\n        tempCube.material[3].color = new THREE.Color(this.state.rubiksObject[i][0]);\n        tempCube.material[4].color = new THREE.Color(this.state.rubiksObject[i][1]);\n        tempCube.material[5].color = new THREE.Color(this.state.rubiksObject[i][5]);\n        \n        tempCube.rotation.x = 0; tempCube.rotation.y = 0; tempCube.rotation.z = 0;\n        cubes[i] = tempCube;\n        \n      }\n    }\n\n    this.setState({cubes,reload : false});\n  }\n\n  // Changes the settings by passing setting to change and new val for the setting\n  changeSettings (settingToChange,newVals) {\n    switch(settingToChange){\n      // case 'displayStats':\n      //   this.state.showStats ? document.body.children[9].style.display = \"none\" : document.body.children[9].style.display = \"\";\n      //   this.setState({showStats : !this.state.showStats});\n      //   break;\n      case 'displayMoveInput':\n        this.setState({showMoveInput:!this.state.showMoveInput});\n        break;\n      case 'displayControls':\n        this.setState({showControls:!this.state.showControls});\n        break;\n      case 'displayHints':\n        this.setState({showHints:!this.state.showHints});\n        break;\n      default:\n        console.log(\"Invalid Setting\");\n    }\n  }\n  \n  // Remove event listener on compenent unmount\t\n  componentWillUnmount() {    \n    window.removeEventListener(\"keydown\", this.keyHandling);\n  }\n\n  // Gets the url to be parsed\n  getSizeFromUrl(checkLocal) {\n    let limit = 75;\n    let size;\n    let parts = window.location.href.split('/');\n    let checkID = parts[parts.length-1].slice(0,4);\n\n    if(checkLocal){\n      if(parts[2].substr(0,9)==='localhost'){\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n\n    if(checkID === '#id='){\n      size = parseInt(parts[parts.length-1].substr(4));\n    }\n\n    if (size <= limit && size >= 1) return size; else return 3;\n  }\n\n  calculateTurn(current,previous,piece,pieceFace,cD){\n\n    let calculated = null;\n    let depth = null;\n    let turn = null;\n\n    // difference in initial mouse down location and current mouse down\n    const dif = { \n      x: (previous.x-current.x), \n      y: (previous.y-current.y), \n      z: (previous.z-current.z)\n    }\n\n    if(current.x===previous.x && current.y === previous.y && current.z===previous.z){\n      return null;\n    }\n\n    function calculateTurnAtFace(coord1,compare1,coord2,compare2,piece1,piece2,dir1,dir2){\n      if(Math.abs(coord1)>=Math.abs(coord2)&&(Math.abs(coord1)>.05)) \n        return {calculated : compare1?dir1:(dir1+\"'\"),depth : piece2}\n        \n      if(Math.abs(coord2)>Math.abs(coord1)&&(Math.abs(coord2)>.05)) {\n        return {calculated : compare2?dir2:(dir2+\"'\"),depth : piece1}\n      }\n      return {calculated:null,depth:null};\n    }\n\n    //determines the move based on mouse difference from click to new position\n    switch(pieceFace){\n      case 0:\n        turn = calculateTurnAtFace(dif.z,dif.z<0,dif.x,dif.x>=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 1:\n        turn = calculateTurnAtFace(dif.x,dif.x<=0,dif.y,dif.y<0,cD-piece.x,piece.y+1,\"F\",\"R\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 2:\n        turn = calculateTurnAtFace(dif.z,dif.z>0,dif.y,dif.y>0,cD-piece.z,piece.y+1,\"F\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 3:\n        turn = calculateTurnAtFace(dif.z,dif.z>0,dif.x,dif.x<=0,cD-piece.z,cD-piece.x,\"R\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 4:\n        turn = calculateTurnAtFace(dif.z,dif.z<0,dif.y,dif.y<0,cD-piece.z,piece.y+1,\"F\",\"U\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      case 5:\n        turn = calculateTurnAtFace(dif.x,dif.x>=0,dif.y,dif.y>0,cD-piece.x,piece.y+1,\"F\",\"R\");\n        calculated = turn.calculated; depth = turn.depth;\n        break;\n      default:\n    }\n\n    //console.log(\"{ turn: \" + calculated + \" } , { depth: \" + depth + \" }\");\n    return ((depth<10? \"0\" : \"\") + depth+calculated);\n  }\n\n  // Proto function for feature to be built later\n  calculateTheta(){\n\n  }\n\n  menuSetState = (obj) =>{\n    //console.log(obj);\n    this.setState(obj,()=>{\n      if(obj.activeAlgo){\n        this.reloadTurnedPieces('all');\n      }\n    });\n  }\n\n  windowResized = () => {\n    this.setState({resized:true});\n  }\n\n  // Initialization and animation functions\n  componentDidMount() {\n\n    // Initial set up variables\n    let cD = this.getSizeFromUrl();\n    let generated = cube.generateSolved(cD,cD,cD);\n    let rubiksObject = generated.tempArr;\n    let tempCubes = [];\n    \n    let previousPiece = null;\n    let previousPieceIndex = null;\n    let ignoreChange = false;\n\n    // === THREE.JS VARIABLES ===\n    let scene = new THREE.Scene();\n    let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, .1, 1000 );\n    let renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    let raycaster = new THREE.Raycaster();\n    let mouse = new THREE.Vector2();\n    let cubeGeometry = new THREE.BoxGeometry(  );\n    let loader = new THREE.TextureLoader().load('https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQW92XE-j1aJzRMI9kvvMZIf2VikZzzdEI87zl4rWgHMJBNJ9iw7A&s');\n    let moveHintImage = new THREE.TextureLoader().load('https://cdn2.iconfinder.com/data/icons/communication-language/100/Up_Arrow-01-512.png');\n    let tanFOV = Math.tan( ( ( Math.PI / 180 ) * camera.fov / 2 ) );\n    let windowHeight = window.innerHeight;\n\n    const groups = cube.generateMoveHints(moveHintImage,cD);\n\n    let calculateTurn = this.calculateTurn;\n    let algorithmFunc = this.algorithm;\n\n    function onWindowResize(resized) {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      \n      // adjust the FOV\n      camera.fov = ( 360 / Math.PI ) * Math.atan( tanFOV * ( window.innerHeight / windowHeight ) );\n      \n      camera.updateProjectionMatrix();\n      camera.lookAt( scene.position );\n\n      renderer.setSize( window.innerWidth, window.innerHeight-10 );\n      renderer.render( scene, camera );\n      resized();\n    }\n\n    function ontouchstart( event ){\n      controls.enabled = true;\n      ignoreChange = false;\n      mouse.x = ( event.touches[0].clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.touches[0].clientY / window.innerHeight ) * 2 + 1;\n\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // Calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      // Check if anything is intersected\n      if(intersects.length){\n        ignoreChange = true;\n        controls.saveState();\n        controls.enabled = false;\n        let faceInteresected = intersects[0].faceIndex;\n        let tempIndex = -1;\n        for(let i = 0; i < 6; i++){\n          if(faceInteresected===i*2 || faceInteresected=== i*2+1) {\n            tempIndex = i;\n            //this.setState({mouseFace : i});\n            break;\n          }\n        }\n        if(this.state.currentFunc===\"Color Picker\"){\n          let toFace = [2,4,3,0,1,5];\n          this.changeFaceColor({x:intersects[0].object.position.x,y:intersects[0].object.position.y,z:intersects[0].object.position.z},toFace[tempIndex],this.state.colorPicked)\n        }\n        if(intersects[0].object.material[tempIndex] && tempIndex > -1){\n          if(intersects[0].object.material[tempIndex].color){\n            previousPiece = intersects[0];\n            previousPieceIndex = tempIndex;\n            intersects[0].object.material[tempIndex].opacity=.8;\n          }\n        }\n      }\n      else{\n        controls.enabled = true;\n        previousPiece = null;\n        previousPieceIndex = null;\n      }\n    }\n\n    function onmousedown( event ){\n      controls.enabled = true;\n      ignoreChange = false;\n\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // Calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      // Check if anything is intersected\n      if(intersects.length){\n        ignoreChange = true;\n        controls.saveState();\n        controls.enabled = false;\n        let faceInteresected = intersects[0].faceIndex;\n        let tempIndex = -1;\n        for(let i = 0; i < 6; i++){\n          if(faceInteresected===i*2 || faceInteresected=== i*2+1) {\n            tempIndex = i;\n            //this.setState({mouseFace : i});\n            break;\n          }\n        }\n        if(this.state.currentFunc===\"Color Picker\"){\n          let toFace = [2,4,3,0,1,5];\n          this.changeFaceColor({x:intersects[0].object.position.x,y:intersects[0].object.position.y,z:intersects[0].object.position.z},toFace[tempIndex],this.state.colorPicked)\n        }\n        if(intersects[0].object.material[tempIndex] && tempIndex > -1){\n          if(intersects[0].object.material[tempIndex].color){\n            previousPiece = intersects[0];\n            previousPieceIndex = tempIndex;\n            intersects[0].object.material[tempIndex].opacity=.8;\n          }\n        }\n      }\n      else{\n        controls.enabled = true;\n        previousPiece = null;\n        previousPieceIndex = null;\n      }\n    }\n\n    function ontouchmove( event ){\n      \n      if(previousPiece) controls.enabled = false;\n      mouse.x = ( event.touches[0].clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.touches[0].clientY / window.innerHeight ) * 2 + 1;\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      if(previousPiece){\n        if(intersects.length){\n          let current = intersects[0].point;\n          let toFace = [2,4,3,0,1,5];\n          let tempPrev = {...previousPiece.point};\n          let tempPos = {...previousPiece.object.position};\n          let intersected = Math.floor(previousPiece.faceIndex/2);\n          let calculated = calculateTurn(current,tempPrev,tempPos,toFace[intersected],cD);\n          //console.log(calculated);\n          if(calculated!==null&&!calculated.includes(\"null\")){\n            //console.log(\"Drag turn\");\n            algorithmFunc(calculated,\"Drag Turn\");\n            previousPiece.object.material[previousPieceIndex].opacity=1;\n            previousPiece = null;\n            previousPieceIndex = null;\n          }\n        }\n      }\n    }\n\n    function onMouseMove( event ) {\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n      // Projects mouse onto scene to find intersected objects\n      raycaster.setFromCamera( mouse, camera );\n\n      // calculate objects intersecting the picking ray\n      let intersects = raycaster.intersectObjects( scene.children );\n\n      if(previousPiece){\n        if(intersects.length){\n          let current = intersects[0].point;\n          let toFace = [2,4,3,0,1,5];\n          let tempPrev = {...previousPiece.point};\n          let tempPos = {...previousPiece.object.position};\n          let intersected = Math.floor(previousPiece.faceIndex/2);\n          let calculated = calculateTurn(current,tempPrev,tempPos,toFace[intersected],cD);\n          //console.log(calculated);\n          if(calculated!==null&&!calculated.includes(\"null\")){\n\n            // if(this.state.currentFunc===\"Solving\"){\n            //   console.log(\"attempted move during solve state\");\n            // }\n\n            algorithmFunc(calculated,\"Drag Turn\");\n            previousPiece.object.material[previousPieceIndex].opacity=1;\n            previousPiece = null;\n            previousPieceIndex = null;\n          }\n        }\n      }\n    }\n\n    function ontouchend( event ){\n      if(previousPiece) previousPiece.object.material[previousPieceIndex].opacity=1;\n      if(ignoreChange) controls.reset();\n      ignoreChange = false;\n      previousPiece = null;\n      controls.enabled = true;\n    }\n\n    // Bind event listeners to window\n    window.addEventListener(\"keydown\", this.keyHandling, false);\n    window.addEventListener(\"mousemove\", onMouseMove.bind(this), false );\n    window.addEventListener(\"mousedown\", onmousedown.bind(this), false );\n    window.addEventListener(\"touchstart\", ontouchstart.bind(this), false);\n    window.addEventListener(\"touchmove\", ontouchmove.bind(this), false);\n    window.addEventListener(\"touchend\", ontouchend, false);\n    window.addEventListener(\"mouseup\", ontouchend, false );\n    window.addEventListener(\"resize\", () => onWindowResize(this.windowResized), false );\n    \n    // Set background color and size\n    renderer.setClearColor(new THREE.Color(\"black\"),0);\n    renderer.domElement.className = \"canvas\";\n    renderer.setSize( window.innerWidth, window.innerHeight);\n    document.body.children[5].appendChild( renderer.domElement );\n\n    // Prevents bluring\n    loader.anisotropy = renderer.capabilities.getMaxAnisotropy();\n    moveHintImage.anisotropy = renderer.capabilities.getMaxAnisotropy();\n\n    // generate cubes with face colors based off memory cube\n    for(let i = 0; i < rubiksObject.length; i++){\n\n      // Store x,y,z of memory cube in easier to read variables\n      let cubeX = rubiksObject[i][6];\n      let cubeY = rubiksObject[i][7];\n      let cubeZ = rubiksObject[i][8];\n\n      // Map textures to each face to look nice and then color over\n      const cubeMaterials = [\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][2], side: THREE.FrontSide}),\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][4], side: THREE.FrontSide}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][3], side: THREE.FrontSide}),\n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1,}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][1], side: THREE.FrontSide}), \n        new THREE.MeshBasicMaterial({ map: loader ,transparent: true,opacity:1, color:rubiksObject[i][5], side: THREE.FrontSide}), \n      ];\n    \n      // Add the new cube to temp cubes\n      tempCubes[i] = new THREE.Mesh(cubeGeometry, cubeMaterials);\n      //group.add( tempCubes[i] );\n      // position piece based off memory cube\n      tempCubes[i].translateX(cubeX);\n      tempCubes[i].translateY(cubeY);\n      tempCubes[i].translateZ(cubeZ); \n    }\n\n    // Translate cube so center of cube is 0,0,0\n    scene.translateX(.5-cD/2);\n    scene.translateY(.5-cD/2);\n    scene.translateZ(.5-cD/2);\n\n    // Allows for drag to rotate camera\n    let controls = new OrbitControls( camera , renderer.domElement);\n    controls.enabled = true;\n    controls.enableDamping = true;   //damping \n    controls.dampingFactor = 0.15;   //damping inertia\n    controls.enableZoom = true;      //Zooming\n    controls.autoRotate = false;     //Enable auto rotation\n    controls.minDistance = (2+cD);\n    controls.maxDistance = (2+cD)+20;\n    controls.enablePan = false;\n    controls.keys = {\n      LEFT: null, //left arrow\n      UP: null, // up arrow\n      RIGHT: null, // right arrow\n      BOTTOM: null // down arrow\n    };\n\n    controls.addEventListener(\"change\", (e) => {\n      if (renderer) renderer.render(scene, camera);\n    });\n\n    groups.forEach(group => scene.add(...group));\n\n    // add cubes to state and then render\n    this.setState({\n      cubes : tempCubes,\n      cubeDimension : cD,\n      cameraZ : -(2+cD),\n      cameraX : (2+cD),\n      cameraY : -(2+cD),\n      rubiksObject,\n      middles: generated.middles,\n      edges: generated.edges,\n      corners: generated.corners,\n      currentFunc: 'Reset',\n      generatedButtons: cube.generateButtonData(this.getSizeFromUrl())\n    }, () => {\n      //let cubeGroup = new THREE.Group();\n      // Callback required to wait for setState to finish\n      for(let i = 0; i < rubiksObject.length; i++){\n        // Logic to only render outer pieces since inside pieces aren't ever used\n        if((this.state.cubes[i].position.x === 0 || this.state.cubes[i].position.x === this.state.cubeDimension-1) ||\n            (this.state.cubes[i].position.y === 0 || this.state.cubes[i].position.y === this.state.cubeDimension-1)||\n            (this.state.cubes[i].position.z === 0 || this.state.cubes[i].position.z === this.state.cubeDimension-1)){\n          scene.add( this.state.cubes[i] );\n        } \n      }\n\n      //scene.add( cubeGroup);\n\n      camera.position.z = this.state.cameraZ;// * Math.sin( this.state.angle );\n      camera.position.y = this.state.cameraY;\n      camera.position.x = this.state.cameraX;// * Math.cos( this.state.angle );\n\n      renderer.render( scene, camera );\n      animate();\n    });\n\n    // Function runs continuously to animate cube\n    let animate = () => {\n\n      requestAnimationFrame( animate );\n\n      for(let i = 0; i < groups.length;i++){\n        groups[i].forEach(group => group.visible = false)\n      }\n      // Animate queued rotation\n      if(this.state.start<=this.state.end){\n        this.setState(cube.rotatePieces(cube.rotatePoint,tempCubes,this.state));\n      }\n\n      // Handles move queueing based on function\n      else {\n        \n\n        if(this.state.currentFunc === \"Color Picker\" || this.state.currentFunc === \"None\"|| this.state.currentFunc === \"Solving\"|| this.state.currentFunc === \"Algorithms\") {\n\n          //check here that data isn't the same as previous so not running this every time\n          // Data on move button triggers visual move hints\n          if(this.state.isVisible){\n            let [hFace,hDir,hDepth,hMulti] = this.state.hoverData;\n            if(hFace<3){\n              if(hDir === -1){\n                if(!hMulti){\n                  groups[hFace][hDepth-1].visible=true;\n                }\n                else\n                  for(let i = 0; i <= hDepth-1; i++){\n                    groups[hFace][i].visible=true;\n                  }\n              }\n              else {\n                if(!hMulti){\n                  groups[hFace+3][hDepth-1].visible=true;\n                }\n                else\n                for(let i = 0; i <= hDepth-1; i++){\n                  groups[hFace+3][i].visible=true;\n                }\n              }\n            }\n            else{\n              if(hFace===3) hFace=0;\n              if(hFace===4) hFace=2;\n              if(hFace===5) hFace=1;\n\n              if(hDir === -1){\n                if(!hMulti){\n                  groups[hFace+3][(groups[hFace+3].length-1)-(hDepth-1)].visible=true;\n                }\n                else\n                  for(let i = groups[hFace+3].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\n                    groups[hFace+3][i].visible=true;\n                  }\n              }\n              else {\n                if(!hMulti){\n                  groups[hFace][(groups[hFace].length-1)-(hDepth-1)].visible=true;\n                }\n                else\n                  for(let i = groups[hFace].length-1; i >= (groups[hFace+3].length-1)-(hDepth-1); i--){\n                    groups[hFace][i].visible=true;\n                  }\n              }\n            }\n          }\n        }\n\n        if(this.state.reload) this.reloadTurnedPieces(this.state.face);\n        if(this.state.currentFunc !== \"None\"){\n\n          // Doesn't work with !==\n          if(this.state.currentFunc === \"Undo\" ||\n             this.state.currentFunc === \"Redo\"){}\n\n          else {\n            let moveLog = this.state.moveLog;\n            let index = this.state.undoIndex;\n\n            if(index > 0){\n              let moveArray = moveFuncs.moveStringToArray(moveLog);\n\n              if(this.state.currentFunc[0]==='0' || this.state.currentFunc[0]==='1' ||\n                 this.state.currentFunc[1]==='1' || this.state.currentFunc[1]==='2' || this.state.currentFunc[1]==='3'){\n                let tempVal = moveArray[moveArray.length-1];\n                for(let i = 0; i <= index; i++){\n                  moveArray.pop();\n                }\n                moveArray.push(tempVal);\n              }\n\n              else{\n                for(let i = 0; i < index; i++){\n                  moveArray.pop();\n                }\n              }\n\n              moveLog = moveArray.join(\" \");\n              this.setState({undoIndex:0,moveLog});\n            }\n          }\n\n          // Moves based on active function\n          if (this.state.currentFunc===\"Scrambling\"){\n            if(this.state.moveSet&&this.state.moveSet.length){\n              let cD = this.state.cubeDimension;\n              let tempRubiks = this.state.rubiksObject;\n              let blockMoveLog = this.state.blockMoveLog;\n              let moveLog = this.state.moveLog;\n              let solveMoves = this.state.solveMoves;\n              let solveState = this.state.solveState;\n              let end = this.state.end;\n\n\n              if(typeof(this.state.moveSet[0][0])==='number') {\n                //console.log(\"changing speed\");\n                let moveSet=this.state.moveSet;\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                this.setState({moveSet});\n              }\n              else{\n                let moveData = moveFuncs.parseMoveArray(this.state.moveSet);\n\n\n                if(moveData){\n                  let obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n      \n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\n\n                  this.setState(obj);\n                }\n              }\n            }\n            else{\n              this.setState({currentFunc : \"None\",moves : 0});\n            }\n            \n          }\n          else if (this.state.currentFunc===\"Solving\"||this.state.currentFunc===\"Algorithms\"){\n            \n            // Place holder for full solve testing\n            if(this.state.autoTarget && !this.state.autoPlay && !this.state.autoRewind) {\n              this.setState({autoTarget:false},()=>this.reloadTurnedPieces('check'))\n            }\n\n            // If playone or autoplay is true, progress accordingly\n            else if(this.state.playOne){\n              let cD = this.state.cubeDimension;\n              let tempRubiks = this.state.rubiksObject;\n              let blockMoveLog = this.state.blockMoveLog;\n              let moveLog = this.state.moveLog;\n              let solveMoves = this.state.solveMoves;\n              let moveSet = this.state.moveSet;\n              let end = this.state.end;\n              let solveState = this.state.solveState;\n              let obj = {};\n\n              if(typeof(moveSet[0][0])==='number') {\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                obj.moveSet=moveSet;\n              }\n              else{\n\n                // generates data for next move\n                let moveData = moveFuncs.parseMoveArray(moveSet);\n\n                // takes next move data and queues changes to be made to state\n                \n                if(moveData){\n                  obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n                }\n\n                // Turn off play one so only runs once\n                if(this.state.playOne) obj.playOne = false;\n\n                // hides move the hint during the move\n                this.mouseLeave();\n                \n                // store the object here\n                if(moveData){\n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\n                  obj.solvedSetIndex = this.state.solvedSetIndex+1;\n                }\n\n                //console.log(obj);\n              }\n              this.setState(obj);\n            }\n            // Show hint over next move\n            else if(this.state.moveSet.length){\n              let moveSet = this.state.moveSet;\n              let obj = {};\n              if(typeof(moveSet[0][0])==='number') {\n                //console.log(\"changing speed\");\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                obj.moveSet=moveSet;\n              }\n              else{\n                let data = moveFuncs.convertMoveToData(moveSet[0]);\n                if(data){\n                  this.mouseOver(this.state.moveSet[0],data);\n                }\n              }\n              if(obj.length){\n                this.setState({obj});\n              }   \n            }\n          }\n\n          else if(this.state.currentFunc===\"Color Picker\"){\n            // Code here for color picker interface\n          }\n          else if(this.state.currentFunc==='Reset'){\n            this.reset();\n          }\n          else {\n            if(this.state.moveSet.length){\n              let cD = this.state.cubeDimension;\n              let tempRubiks = this.state.rubiksObject;\n              let blockMoveLog = this.state.blockMoveLog;\n              let moveLog = this.state.moveLog;\n              let solveMoves = this.state.solveMoves;\n              let solveState = this.state.solveState;\n              let end = this.state.end;\n\n\n              if(typeof(this.state.moveSet[0][0])==='number') {\n                //console.log(\"changing speed\");\n                let moveSet=this.state.moveSet;\n                this.changeSpeed(...moveSet[0],true);\n                moveSet.shift();\n                this.setState({moveSet});\n              }\n              else{\n                let moveData = moveFuncs.parseMoveArray(this.state.moveSet);\n\n\n                if(moveData){\n                  let obj = cube.rotateCubeFace(...moveData,blockMoveLog,moveLog,solveMoves,end,solveState);\n      \n                  obj.rubiksObject = cube.rotateFace(obj.face,obj.turnDirection,obj.cubeDepth,obj.isMulti,cD,tempRubiks);\n\n                  this.setState(obj);\n                }\n              }\n\n            } \n            else{\n              this.setState({currentFunc:\"None\"}); \n            }\n          }\n        }\n      }\n      \n      controls.update();\n      renderer.render( scene, camera );\n    };\n  }\n\n  // Renders html to the index.html page\n  render() {\n    \n    return (\n      <div className=\"App\" style={{width:\"max-content\"}}>\n        \n        <Navbar\n          title=\"Rubik's Cube\"\n          changeSettings={this.changeSettings.bind(this)}\n          isLocal={this.getSizeFromUrl(true)}\n          state={this.state}\n        />\n\n        {this.state.currentFunc===\"Color Picker\"?<></>:<p style={{position:\"fixed\", top: \"110px\", left: \"10px\",color: \"lightgrey\",fontSize:\"1rem\"}}>Speed: {this.state.currentSpeed}</p>}\n        <div style={{width:\"100%\",position:\"absolute\", top: \"85px\",margin:\"auto\"}}>\n          <div style={{width:\"116px\", margin:\"auto\"}}>\n          {this.state.currentFunc===\"None\"||this.state.currentFunc===\"Undo\"||this.state.currentFunc===\"Redo\"||this.state.currentFunc===\"Drag Turn\"?\n          [<button key=\"undo\" className=\"redoUndo\" style={{marginRight:\"8px\",float:\"left\", width:\"50px\",height:\"50px\",fontSize:\"1rem\",backgroundImage: \"url(https://image.flaticon.com/icons/svg/889/889590.svg)\",backgroundRepeat:\"no-repeat\"}} onClick={() => this.undo()}></button>,\n          <button key=\"redo\" className=\"redoUndo\" style={{marginLeft:\"8px\",float:\"right\", width:\"50px\",height:\"50px\",fontSize:\"1rem\",backgroundImage: \"url(https://image.flaticon.com/icons/svg/889/889578.svg)\",backgroundRepeat:\"no-repeat\"}} onClick={() => this.redo()}></button>]\n          :\"\"\n          }\n          </div>\n        </div>\n\n        {this.state.currentFunc===\"Color Picker\"?[]:<Speeds //Top left with slider\n          onSliderChange={this.onSliderChange}\n          speed={this.state.sliderSpeed}\n        />}\n        { this.state.showMoveInput? \n          <MoveInput\n            algorithm = {this.algorithm}\n            handleDrag = {this.handleDragInput}\n            onStart = {this.onStartInput}\n            onStop = {this.onStopInput}\n          /> : []\n        }\n        {this.state.currentFunc===\"Solving\"?\n            <SolverInfo\n              solvedSetLength={this.state.solvedSet.length}\n              prevSetLength={this.state.prevSet.length}\n            />:[]\n        }\n        {this.state.currentFunc===\"Color Picker\"?\n            <ColorPickerInfo\n              colorPicked={this.state.colorPicked}\n            />:[]\n        }\n\n        <Menu \n          state = {this.state}\n          setState = {this.menuSetState}\n          beginScramble = {this.beginScramble}\n          disableHover={this.state.showGuideArrows}\n\n          //Controls\n          generatedButtons={this.state.generatedButtons}\n          size={this.getSizeFromUrl()}\n          rotateOneFace={this.rotateOneFace}\n          mouseEnter= {this.mouseOver}\n          mouseLeave= {this.mouseLeave}\n\n          //Color Picker\n          beginColorPicker={this.beginColorPicker}\n          endColorPicker={this.endColorPicker}\n          colorPicked={this.state.colorPicked}\n          changeColor={this.changeColor}\n          isValidConfig={this.state.isValidConfig}\n          setColorPickedCube={this.setColorPickedCube}\n          cpErrors={this.state.cpErrors}\n          runCheckColors={this.runCheckColors}\n\n          //Solver\n          beginSolve={this.beginSolve}\n          stopSolve={this.stopSolve}\n          playOne={this.playOne}\n          rewindOne={this.rewindSolve}\n          reload={this.reloadTurnedPieces}\n        />\n  \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nconst routing = (\n    <Router>\n      <div>\n        <Route path=\"*/\" component={App} />\n      </div>\n    </Router>\n  )\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}